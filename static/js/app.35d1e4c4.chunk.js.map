{"version":3,"sources":["assets/img/activities/trophy.gif","assets/img/activities/help/question_mark.gif","assets/img/interface/profile.jpg","assets/img/activities/brain.gif","assets/img/activities/sad.gif","assets/sound/global/applause.mp3","assets/sound/global/you_lose.mp3","assets/sound/simon/green.mp3","assets/img/selection/addedUser.gif","assets/img/username/chooseusername.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/alzheimapp_logo.png","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/quiz/logo.png","assets/img/activities/quiz/success.gif","assets/img/activities/double/logo.png","assets/sound/ambiant.mp3","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","assets/img/activities/quiz/thinking.gif","assets/sound/double/ambiant.mp3","assets/sound/double/success.mp3","assets/sound/double/fail.mp3","assets/sound/double/play.mp3","assets/sound/double/next.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","language/selection/index.js","components/selection/Rows.js","components/selection/styles.js","components/utils/Lottie.js","components/selection/PersonCreation/Success.js","data/dictaphoneApi.js","data/simonApi.js","data/quizApi.js","data/doubleApi.js","utils/helpers.js","data/personApi.js","components/selection/PersonCreation/Form.js","components/selection/PersonCreation/CreatePerson.js","pages/SelectionMenu/styles.js","pages/SelectionMenu/os/android.js","pages/SelectionMenu/os/ios.js","pages/SelectionMenu/index.js","pages/ChooseUsername/styles.js","pages/ChooseUsername/index.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","language/home/index.js","pages/Home/styles.js","pages/Home/Menu.js","utils/dilacrypt.js","utils/share.js","pages/Home/ImportData.js","pages/Home/index.js","components/utils/HomeOrTutorial.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/Help.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/utils/quizFunc.js","components/activities/Quiz/Creation/QuestionList.js","components/activities/Quiz/utils/scoreFunc.js","components/activities/Quiz/QuizList.js","components/activities/Quiz/ViewQuizList.js","components/activities/Quiz/SuccessContent.js","components/activities/Quiz/Creation/FormQuizContent.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Creation/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/Help.js","components/activities/Quiz/index.js","language/activities/double/index.js","components/activities/Double/styles.js","components/activities/Double/Help.js","components/activities/Double/Menu.js","components/activities/Double/subs/helpers.js","components/activities/Double/subs/Card.js","components/activities/Double/Play.js","components/activities/Double/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/QuizScore/index.js","pages/Activities/Score/SimonScore/index.js","pages/Activities/Score/DoubleScore/index.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","OpenActivity","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","color","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","props","navigate","useNavigate","TouchableScale","Platform","OS","default","mod","index","backgroundColor","componentProps","Component","key","id","bottomDivider","containerStyle","onPress","state","source","picture","uri","DefaultProfilePicture","rounded","Content","Title","fullname","Subtitle","description","Chevron","StyleSheet","create","rightButton","minHeight","imageSuccess","width","height","leftButton","view","alignItems","alignSelf","marginVertical","btnImport","borderRadius","btnSave","profilePicture","marginBottom","successPageTitle","textAlign","fontSize","Lottie","LottieStyle","LottieSource","loop","hasOwnProperty","autoPlay","resizeMode","Image","ImageSource","ImageStyle","Success","View","SuccessImage","styles","edit","InterfaceLang","flexDirection","flexWrap","flexShrink","alignContent","flex","title","e","close","buttonStyle","marginRight","paddingHorizontal","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","createQuizContent","el","uuidv4","success","failed","includes","fileType","uploadQuizFile","path","FileSystem","from","to","updateScore","quizId","contentId","_id","quiz","contentIndex","content","findIndex","scoreIndex","getBestScore","insertScore","dailyScoreBeaten","globalScoreBeaten","pushErrors","errors","field","msg","randomNumber","min","max","Math","floor","random","person","trim","Object","keys","upd","$set","catch","log","getById","Form","useState","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","encoding","fsRead","setImage","titleStyle","icon","name","size","marginHorizontal","placeholder","leftIcon","label","errorStyle","renderErrorMessage","maxLength","errorMessage","inputStyle","value","marginTop","onChangeText","setFullname","setDescription","raised","cb","Person","setId","intermediates","image","imgName","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","container","zIndex","wrapper","topBanner","topImage","heading","boldtext","subtitle","button","overflow","buttonText","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","fontStyle","searchBar","searchInputStyle","SelectionMenuAndroid","swiper","useRef","position","marginLeft","type","setLang","LoadingBrain","SelectionMenuLang","TouchableOpacity","activeOpacity","idx","active","setActive","setBtnTxt","ActivityIndicator","current","scrollBy","btnText","SafeAreaView","isLoading","ref","showsButtons","scrollEnabled","pagingEnabled","slidePropsState","showsPagination","onIndexChanged","setIndex","setTimeout","ScrollView","inputContainerStyle","setSearch","search","printRows","SelectionMenuIOS","KeyboardAvoidingView","behavior","loadMinimal","SelectionMenu","setIsLoading","useLocation","slide","useEffect","Audio","setIsEnabledAsync","regex","RegExp","$regex","backHandler","BackHandler","addEventListener","remove","list","map","propsSelectionMenuComponent","printAccordingToOS","textInput","borderColor","shadowOpacity","shadowRadius","shadowOffset","elevation","buttonContainer","padding","viewrow","justifyContent","input","setInput","loadPage","setLoadPage","confirmed","setConfirmed","redirect","setRedirect","setUsername","res","parseUsername","insertUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","animating","Loading","LoadingImage","slideOdd","titleOdd","textOdd","aspectRatio","borderWidth","Tutorial","StepOne","StepTwo","StepThree","StepFour","StepFive","StepSixth","Config","Select","Import","Introduction","Source","License","Language","Step1","Step2","Step3","Step4","Step5","Step6","Step7","Step8","Step9","Step10","Step11","Step12","Step13","Step14","GoBack","InvalidFile","InvalidPersonFile","IncorrectPersonFile","ErrorChekingPerson","InvalidActivitiesLength","InvalidQuizData","InvalidLogData","InvalidDoubleData","InvalidSimonData","header","logo","menu","copyleft","ErrorMessage","Menu","showsVerticalScrollIndicator","HomeLang","ambiant","unloadAsync","iconContainerStyle","DocumentPicker","multiple","setImportFile","prev","Linking","openURL","encrypt","string","encryptedString","j","String","fromCharCode","charCodeAt","isValidDate","d","n","Date","isNaN","fileToBase64","formatQuiz","formatLog","scoreVerification","checkPersonInformations","checkPersonExists","personAPI","checkQuiz","quizKeys","contentKeys","k","l","answers","question","foundInScore","checkDouble","double","checkSimon","simon","checkDictaphone","dictaphone","importPerson","exists","importQuiz","filePath","quizAPI","quizFindAsync","importDouble","doubleAPI","importSimon","simonAPI","importLog","dictaphoneAPI","writeDataFile","fileUri","exportPerson","personFind","personData","simonData","doubleData","quizData","dictaphoneData","JSON","stringify","activities","replace","dilacrypt","ImportData","step","setStep","setError","importFile","parsed","parseJSON","dataImport","found","CannotCreatePerson","inputString","parse","stepStyle","clr","display","disabled","Home","setAmbiant","Sound","createAsync","isLooping","sound","playAsync","AlzheimApp","HomeOrTutorial","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","QuizScore","SimonScore","DoubleScore","NoScore","Global","BestScoreByDay","ExportedProfile","ReturnList","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","load","setLoad","deletePerson","SimonDB","removeAsync","DictaphoneDB","DoubleDB","QuizDB","deleted","ActivitiesLang","Sharing","Alert","setPerson","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","isPlaying","setIsPlaying","progress","setProgress","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","positionMillis","playableDurationMillis","variant","animation","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","getURI","folder","record","DictaphoneLang","created","deleteRecord","goBack","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","Head","RulesHead","TriesHead","Rules","TriesExplain","paddingTop","opacity","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","viewHelpPage","leaveButtonHelpPage","helpHead","helpStepHead","textTransform","helpStep","helpQuestionMark","SimonLogo","SimonLang","setTab","Game","start","setStart","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","QuestionMark","tab","pos","Create","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","GiveUpQuizTitle","GiveUpQuiz","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","EditedQuiz","QuizListRedirection","selectedQuizz","quizName","Questions","SuccessTitle","FailedTitle","join","SuccessQuizTitle","SuccessQuiz","fail","FailQuizTitle","FailQuiz","SaveContent","AddContent","SureCancelEdition","CustomHead","Custom","answersText","leaveButtonPlay","createButton","overlayDescriptionReference","paddingBottom","ScrollViewSuccess","modalTitle","modalDescription","quizTitleInputContainer","quizTitleInput","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","QuizLogo","QuizLang","printFile","clearFile","pauseSound","playSound","QuestionList","quizEdit","newContent","quizEdition","Number","isInteger","questionId","tmp","setNewContent","setQuizEdit","setReload","reload","setEditedQuiz","contentList","setContent","pickOutQuestion","setEditContent","ScoreRatio","filter","parseInt","total","toFixed","QuizList","ViewQuizList","SuccessContent","FormQuizContent","answer","setAnswer","contentContainerStyle","setFileType","setFilename","setUri","mimeType","setQuestion","toLowerCase","setAnswers","addAnswer","badgeStyle","pickOutAnswer","ViewQuiz","newQuestion","setNewQuestion","editContent","editedQuiz","saveQuiz","concat","editedFile","buttonTop","mode","saveContent","pushContent","viewPage","CreateQuiz","createQuestion","setCreateQuestion","setName","modalConfirmation","setModalConfirmation","undefined","substring","ThinkingImage","quizLength","pickRandomQuizz","ThinkingLottie","setPlay","setCurrent","setFail","arr","shuffle","TrophyLottie","SadLottie","openAlertResultQuestion","SadImage","setMediaType","answerTrimedLowercase","answerQuestion","play","setQuiz","setRandom","rand","randomArrayElement","exclude","randNumber","RemaningTries","Reinit","TitleGiveUp","SureToGiveUp","BestDayScore","ScoreHead","ScoreHelp","Remember","Dimensions","factor","hp","wp","RectoCard","PlayingCard","VersoCard","IconCard","viewGame","buttonViewPlay","playButtons","DoubleLang","DoubleLogo","ambiantEnabled","ambiantSoundPlay","soundEnabled","setSoundEnabled","generateRandomPair","colors","icons","indexColor","indexIcon","SCREEN_WIDTH","SCREEN_HEIGHT","Card","cardStyles","inPlay","inFound","show","ReturnCard","setFound","setShow","currentPlay","indexGame","playing","currentGameLength","nFound","setScore","prevScore","prevTries","endGame","bestScoreDay","failOverlay","element","newModel","giveUp","Double","setBestScoreDay","setAmbiantEnabled","bestDayScore","prevEnable","choosenSound","returnComponent","page","ActivitiesList","iconPosition","scoreRow","scoreRowSimon","scoreHeading","margin","quizScore","setQuizScore","horizontal","textStyle","valueSuffix","initialValue","delay","activeStrokeColor","radius","inActiveStrokeColor","inActiveStrokeOpacity","inActiveStrokeWidth","activeStrokeWidth","simonScore","setSimonScore","btnIndex","setBtnIndex","buttons","TotalScore","selectedIndex","global","days","item","highestToLowest","b","labels","datasets","fromZero","showValuesOnTopOfBars","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","printScore","doubleScore","setDoubleScore","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","unmountOnBlur","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","BgSource","navTheme","DefaultTheme","background","TopImage","BackgroundImage","NavigationContainer","theme","defaultProps","allowFontScaling","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact"],"mappings":"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","file":"static/js/app.35d1e4c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/question_mark.c1494184.gif\";","module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/brain.abdab59b.gif\";","module.exports = __webpack_public_path__ + \"static/media/sad.bfdab12f.gif\";","module.exports = __webpack_public_path__ + \"static/media/applause.3560ad8b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/you_lose.e1f971d7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.c4ec63da.png\";","module.exports = __webpack_public_path__ + \"static/media/2.c9afe178.png\";","module.exports = __webpack_public_path__ + \"static/media/3.95e52180.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e18a9e44.png\";","module.exports = __webpack_public_path__ + \"static/media/5.1a0c5df5.png\";","module.exports = __webpack_public_path__ + \"static/media/6.64d544d0.png\";","module.exports = __webpack_public_path__ + \"static/media/alzheimapp_logo.efbaee1c.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.42d4e3d2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.d22dea5d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.5d28b463.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.baee48bf.png\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.e46e92e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e82f415e.gif\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.af08ce07.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.d73909c9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fail.4f8cf1ae.mp3\";","module.exports = __webpack_public_path__ + \"static/media/play.25c902a7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.44546c82.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n}\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n}\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n}\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n}\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n}\n\nexport function reset() {\n    FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return AsyncStorage.clear();\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retour',\n        OpenActivity: 'Ouvrir le profil',\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n        OpenActivity: 'Open this profile',\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet\\nrequise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? Il est possible {0} la donnée d'une personne et de {1} dans un autre appareil !\",\n                boldText: [\"d'exporter\", \"l'importer\"],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can {0} a person's data and {1} it in another device!\",\n                boldText: ['export', 'import'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer {0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to achieve today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport { useNavigate } from 'react-router-native';\nimport SuccessImage from '../../../assets/img/selection/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/selection/addedUser.json');\n    const navigate = useNavigate();\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <View style={{flexDirection: 'row', flexWrap: 'wrap', flexShrink: 1, alignItems: 'center', alignContent: 'center', flex: 1, alignSelf: 'center'}}>\n                <Button\n                    title={InterfaceLang[props.lang].ReturnToForm}\n                    onPress={(e) => {\n                        props.close();\n                    }}\n                    buttonStyle={{marginRight: 20, borderRadius: 15,paddingHorizontal: 15, backgroundColor: 'red'}}\n                />\n                { props.edit == false ? <Button\n                    title={InterfaceLang[props.lang].OpenActivity}\n                    onPress={(e) => {\n                        navigate(`/activities/${props.id}`, {\n                        state: {\n                            lang: props.lang ?? 'fr',\n                            username: props.username,\n                        }\n                    });\n                    }}\n                    buttonStyle={{borderRadius: 15, paddingHorizontal: 15}}\n                /> : <></> }\n            </View>\n        </View>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nconst createQuizContent = async (personId, el) => {\n    el.id = uuidv4();\n    el.score = [{personId: personId, success: 0, failed: 0}];\n    if (['audio', 'image'].includes(el.fileType)) {\n        await uploadQuizFile(el);\n    }\n};\n\nconst uploadQuizFile = async (el) => {\n    const filename = `${uuidv4()}${el.fileType == 'audio' ? '.m4a' : '.png'}`;\n    const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n    await FileSystem.copyAsync({\n        from: el.uri,\n        to: `${path}${filename}`\n    });\n    await FileSystem.deleteAsync(el.uri);\n    el.uri = `${path}${filename}`;\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        await createQuizContent(personId, el);\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport async function updateScore(personId, quizId, contentId, success) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    const contentIndex = quiz[0].content.findIndex(el => el.id == contentId );\n    const scoreIndex = quiz[0].content[contentIndex].score.findIndex(el => el.personId = personId);\n    if (success) quiz[0].content[contentIndex].score[scoreIndex].success++\n    else quiz[0].content[contentIndex].score[scoreIndex].failed++\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function deleteId(personId, quizId) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n};\n\nexport async function deleteQuestion(quizId, questionId) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    const content = quiz[0].content;\n    const contentIndex = content.findIndex(el => el.id == questionId );\n    if (['audio', 'image'].includes(content[contentIndex]))\n        await FileSystem.deleteAsync(content.uri);\n    quiz[0].content = content.splice(0, contentIndex);\n    return db.updateAsync({_id: quizId}, {...quiz[0]})\n};\n\nexport async function getById(quizId) {\n    return db.findAsync({ _id: quizId }, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n};\n\nexport async function saveQuiz(personId, quizId, content) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    if (!quiz) return;\n    for (let i = 0; i < content.length; i++) {\n        const el = content[i];\n        if (!el.id)\n            await createQuizContent(personId, el);\n        else if (el.id && el.editedFile) {\n            await uploadQuizFile(el);\n            delete el.editedFile;\n        }\n    }\n    quiz[0].content = content;\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function reset() {\n    return db.removeAsync({}, { multi: true });\n};\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DoubleSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nexport const randomArrayElement = (exclude, min, max) => {\n    randNumber = randomNumber(min, max);\n    if (randNumber == exclude)\n        return randomArrayElement(exclude, min, max);\n    return randNumber;\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\nimport { db as QuizDB } from './quizApi'\nimport { db as DoubleDB } from './doubleApi';\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await DoubleDB.removeAsync({ personId: id });\n    await QuizDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return db.removeAsync({ _id: id });\n};\n\nexport async function reset() {\n    return FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(async res => {\n        await SimonDB.removeAsync({}, { multi: true });\n        await QuizDB.removeAsync({}, { multi: true });\n        await DictaphoneDB.removeAsync({}, { multi: true });\n        return db.removeAsync({}, { multi: true });\n    });\n};","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0)\n                personId = result._id;\n            props.setId(personId);\n            await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${personId}`, {intermediates: true});\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n    const [id, setId] = useState(0);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n\n        id: id,\n        setId: setId\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { Platform } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n        zIndex: 1,\n    },\n    wrapper: {\n        marginTop: 20,\n        textAlign: 'center',\n        alignItems: 'center',\n        zIndex: 1,\n    },\n    topBanner: {\n        backgroundColor:'#355c7d'\n    },\n    topImage: {\n        // flex: 1,\n        height: Platform.OS === 'ios' ? 50 : 70,\n        marginTop: Platform.OS === 'ios' ? 5 : 0,\n    },\n    heading: {\n        marginTop: 10,\n        fontSize: 20,\n        zIndex: 2,\n        color: 'white'\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    subtitle: {\n        textAlign: 'center',\n        color: 'white'\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: Platform.OS === 'ios' ? 0 : 10\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef } from 'react';\nimport {\n    Text,\n    View,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB } from 'react-native-elements';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as SelectionMenuLang } from '../../../language/selection';\nimport Rows from '../../../components/selection/Rows';\nimport CreatePerson from '../../../components/selection/PersonCreation/CreatePerson';\n\nimport Lottie from '../../../components/utils/Lottie';\nimport styles from '../styles';\n\nexport default function SelectionMenuAndroid(props) {\n\n    const swiper = useRef(null);\n    const navigate = useNavigate();\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - props.index, true);\n    };\n\n    const changeIndex = (idx) => {\n        props.setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                props.setBtnTxt(SelectionMenuLang[props.lang].AddAPerson);\n            } else if (idx === 1) {\n                props.setBtnTxt(SelectionMenuLang[props.lang].ReturnToList);\n            }\n            props.setActive(true);\n        }, 400);\n    };\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={props.username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={props.lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 85 + '%',\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home', {\n                    state: { username: props.username, setLang: props.setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n            <View style={styles.wrapper}>\n                <Lottie\n                    LottieSource={props.LottieSource}\n                    ImageSource={props.LoadingBrain}\n                    LottieStyle={styles.topImage}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[props.lang].Hello(props.username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[props.lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (props.active === false) {\n                            return;\n                        }\n                        props.setActive(false);\n                        props.setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(props.index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{props.btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {props.isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={props.slidePropsState || 0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={SelectionMenuLang[props.lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    props.setSearch(e);\n                                }}\n                                value={props.search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {props.persons && props.persons.length > 0 ? (\n                                props.printRows(props.persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[props.lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={props.persons}\n                                setPersons={props.setPersons}\n                                lang={props.lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import React, { useRef } from 'react';\nimport {\n    Text,\n    View,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    KeyboardAvoidingView,\n    Platform\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB, Button } from 'react-native-elements';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as SelectionMenuLang } from '../../../language/selection';\nimport CreatePerson from '../../../components/selection/PersonCreation/CreatePerson';\n\nimport Lottie from '../../../components/utils/Lottie';\n\nimport styles from '../styles';\n\nexport default function SelectionMenuIOS(props) {\n\n    const swiper = useRef(null);\n    const navigate = useNavigate();\n\n    const swipePage = (idx) => {\n        if (idx > 1) idx = 0;\n        setTimeout(() => {\n            if (idx % 2 === 0) {\n                props.setBtnTxt(SelectionMenuLang[props.lang].AddAPerson); \n            } else props.setBtnTxt(SelectionMenuLang[props.lang].ReturnToList); \n            props.setIndex(idx);\n            swiper.current.scrollBy(1, true);\n            props.setActive(true);\n        }, 250);\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 85 + '%',\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home', {\n                    state: { username: props.username, setLang: props.setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n            <View style={styles.wrapper}>\n                <Lottie\n                    LottieSource={props.LottieSource}\n                    ImageSource={props.LoadingBrain}\n                    LottieStyle={styles.topImage}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[props.lang].Hello(props.username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[props.lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <Button\n                    containerStyle={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (props.active === false)\n                            return;\n                        props.setActive(false);\n                        props.setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(props.index + 1);\n                    }}\n                    title={props.btnText}\n                    titleStyle={styles.buttonText}\n                />\n            </View>\n            </View>\n            <KeyboardAvoidingView behavior={\"height\"} style={{ flex: 1 }}>\n            <SafeAreaView style={styles.safeContainer}>\n                {props.isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        pagingEnabled={true}\n                        loadMinimal={true}\n                        loop={true}\n                        showsPagination={false}\n                    >\n                        <ScrollView >\n                            <Input\n                                placeholder={SelectionMenuLang[props.lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    props.setSearch(e);\n                                }}\n                                value={props.search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {props.persons && props.persons.length > 0 ? (\n                                props.printRows(props.persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[props.lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={props.persons}\n                                setPersons={props.setPersons}\n                                lang={props.lang}\n                            />\n                        </ScrollView>\n                    </Swiper>\n                )}\n            </SafeAreaView>\n            \n            </KeyboardAvoidingView>\n        </View>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n} from 'react-native';\nimport { Platform } from 'react-native';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport SelectionMenuAndroid from './os/android';\nimport SelectionMenuIOS from './os/ios';\n\nimport LoadingBrain from '../../assets/img/activities/brain.gif';\nimport { lang as SelectionMenuLang } from '../../language/selection';\nimport Rows from '../../components/selection/Rows';\n\nimport * as Person from '../../data/personApi';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function SelectionMenu(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        SelectionMenuLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n    const setLang = state?.setLang || props.setLang;\n    const slidePropsState = state?.slide || props?.slide;\n\n    useEffect(() => {\n        Audio.setIsEnabledAsync(false);\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    useEffect( () => {\n        setIndex(slidePropsState || 0);\n        setBtnTxt(index === 0 ? SelectionMenuLang[lang].AddAPerson : SelectionMenuLang[lang].ReturnToList);\n    }, []);\n\n    const printAccordingToOS = () => {\n        const propsSelectionMenuComponent = {\n            lang: lang,\n            username: username,\n            search: search,\n            setLang: setLang,\n            LottieSource: LottieSource,\n            LoadingBrain: LoadingBrain,\n            isLoading: isLoading,\n            index: index,\n            persons: persons,\n            btnText: btnText,\n            active: active,\n\n            setIndex: setIndex,\n            setIsLoading: setIsLoading,\n            setActive: setActive,\n            setPersons: setPersons,\n            setBtnTxt: setBtnTxt,\n            setSearch: setSearch,\n            printRows: printRows,\n\n        }\n        if (Platform.OS === 'ios')\n            return <SelectionMenuIOS {...propsSelectionMenuComponent} />\n        else\n            return <SelectionMenuAndroid {...propsSelectionMenuComponent} />\n    }\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            { printAccordingToOS() }\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 40,\n        marginTop: -40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 50,\n        borderColor: 'gray',\n        borderRadius: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        width: 180,\n        textAlign: 'center',\n        elevation: 10\n    },\n    image: {\n        flex: 1,\n        width: 100\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n        height: 50\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername as insertUsername, SawTutorial, getUsername } from '../../data/configApi';\n\nimport SelectionMenu from '../SelectionMenu';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\nimport { Button } from 'react-native-elements';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [loadPage, setLoadPage] = useState(true);\n    const [confirmed, setConfirmed] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const [username, setUsername] = useState('');\n\n    useEffect(() => {\n        getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    setUsername(res[0].username);\n                    setRedirect(true);\n                }\n                setLoadPage(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoadPage(false);\n            });\n    }, []);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            insertUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setUsername(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (redirect)\n        return <SelectionMenu username={username} lang={props.lang} setLang={props.setLang} slide={1} />\n\n    if (loadPage)\n        return <View style={styles.container}></View>\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <Button\n                        title={isLoading ? (\n                            <ActivityIndicator\n                                color=\"white\"\n                                size=\"small\"\n                                animating={true}\n                            />\n                        ) : (\n                            'OK'\n                        )}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                        buttonStyle={styles.button}\n                        titleStyle={styles.buttonText}\n                    />\n                </View>\n            </View>\n        );\n    } else {\n        return <SelectionMenu username={username} lang={props.lang} setLang={props.setLang} slide={1} />\n    }\n}\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        height: 100 + '%',\n        padding: 20,\n        alignItems: 'center'\n    },\n    slideOdd: {\n        height: 100 + '%',\n        alignItems: 'center',\n        backgroundColor: '#355c7d',\n    },\n    title: {\n        color: 'black',\n        fontSize: 22,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    titleOdd: {\n        color: 'white',\n        fontSize: 22,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    textOdd: {\n        color: 'white',\n        fontSize: 15,\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    image: {\n        height: 30 + '%',\n        marginBottom: 40,\n        marginTop: 20,\n        aspectRatio: 1\n    },\n    button: {\n        marginTop: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        borderWidth: 1,\n        height: 60\n    },\n    buttonText: {\n        color: '#355c7d'\n    },\n    buttonContainer: {\n        width: 250,\n    }\n});\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { Button } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\n\nexport default function Tutorial(props) {\n    const navigate = useNavigate();\n\n    return (\n        <>\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Button \n                            title={TutorialLang[props.lang].LastStepButton}\n                            buttonStyle={styles.button}\n                            containerStyle={styles.buttonContainer}\n                            onPress={() => {\n                                Config.SawTutorial(true);\n                                navigate('/username', {\n                                    state: { setLang: props.setLang }\n                                });\n                            }}\n                            titleStyle={styles.buttonText}\n                        />\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Select: \"Sélection des personnes\",\n        Import: \"Importer un profil\",\n        Introduction: \"Introduction\",\n        Source: \"Accès au code source\",\n        License: \"Code sous licence GPL v3.\\nCréation originale par Diyaeddine LAOUID.\",\n        Language: \"Changer la langue\",\n        Step1: \"Vérification du format ... \",\n        Step2: \"Vérification du format de l'identité ... \",\n        Step3: \"Vérification d'une personne similaire ...\",\n        Step4: \"Vérification des activités ...\",\n        Step5: \"Vérification des quiz ...\",\n        Step6: \"Vérification des jeux des pairs ...\",\n        Step7: \"Vérification du Simon ...\",\n        Step8: \"Vérification du Journal vocal ...\",\n        Step9: \"Création de la personne ...\",\n        Step10: \"Création des quiz ...\",\n        Step11: \"Création des jeux des pairs ...\",\n        Step12: \"Création du Simon ...\",\n        Step13: \"Création du Dictaphone ...\",\n        Step14: \"L'importation s'est déroulée sans encombre ! :-)\",\n        GoBack: \"Retour\",\n        InvalidFile: \"Le fichier a été supprimé du cache\",\n        InvalidPersonFile: \"Le fichier importé est invalide !\",\n        IncorrectPersonFile: \"L'identité de la personne est mal saisie !\",\n        ErrorChekingPerson: \"Une erreur est survenue au moment de la vérification de la personne dans le système ...\",\n        InvalidActivitiesLength: \"Le nombre d'activités dans le tableau du fichier est beaucoup trop grand.\",\n        InvalidQuizData: \"Les données du quiz sont incorrectes ...\",\n        InvalidLogData: \"Les données du dictaphone sont incorrectes ...\",\n        InvalidDoubleData: \"Les données du jeu des pairs sont incorrectes ...\",\n        InvalidSimonData: \"Les données du Simon sont incorrectes ...\",\n        \n    },\n    en: {\n        Select: \"Select a person\",\n        Import: \"Import a profil\",\n        Introduction: \"Introduction\",\n        Source: \"Source code on GitHub\",\n        License: \"Licensed GPL v3 source code.\\nOriginally created by Diyaeddine LAOUID.\",\n        Language: \"Change language\",\n        Step1: \"Format checking ... \",\n        Step2: \"Identity format checking ... \",\n        Step3: \"Checking if person already registered ...\",\n        Step4: \"Activities length checking ...\",\n        Step5: \"Quiz checking ...\",\n        Step6: \"Double Memory checking ...\",\n        Step7: \"Simon checking ...\",\n        Step8: \"Journal log checking ...\",\n        Step9: \"Person creation ...\",\n        Step10: \"Quiz creation ...\",\n        Step11: \"Double Memory creation ...\",\n        Step12: \"Simon Memory creation ...\",\n        Step13: \"Journal log creation ...\",\n        Step14: \"The person has been successfully imported! :-)\",\n        GoBack: \"Back\",\n        InvalidFile: \"The file has been deleted from the cache\",\n        InvalidPersonFile: \"The imported file is invalid!\",\n        IncorrectPersonFile: \"The format of the imported person is invalid!\",\n        ErrorChekingPerson: \"Error when checking if this person exists...\",\n        InvalidActivitiesLength: \"The activities length on the file array is too big\",\n        InvalidQuizData: \"The quiz datas are invalid...\",\n        InvalidLogData: \"The journal logs datas are invalid...\",\n        InvalidDoubleData: \"The double memory game datas are invalid...\",\n        InvalidSimonData: \"The Simon datas are invalid...\",\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        height: 100 + '%',\n        backgroundColor: '#355c7d',\n        alignItems: 'center'\n    },\n    header: {\n        marginTop: 10 + '%',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    logo: {\n        width: 130,\n        height: 130\n    },\n    menu: {\n        marginTop: 2 + '%',\n        flex: 1,\n        marginBottom: 20\n    },\n    button: {\n        width: 250,\n        height: 50,\n        backgroundColor: 'white',\n        color: '#355c7d',\n        justifyContent: 'flex-start',\n        borderRadius: 25\n    },\n    buttonContainer: {\n        borderRadius: 25,\n        alignItems: 'center',\n        marginBottom: 20\n    },\n    copyleft: {\n        marginTop: 10 + '%',\n        fontSize: 11,\n        color: 'white',\n        textAlign: 'center',\n        fontStyle: 'italic'\n    },\n    ErrorMessage: {\n        color: 'red',\n        fontWeight: 'bold',\n        textAlign:'center',\n        marginTop: 20,\n        marginHorizontal: 40\n    }\n});\n","import React from 'react';\nimport {\n    ScrollView,\n    Linking\n} from 'react-native';\n\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\nimport * as DocumentPicker from 'expo-document-picker';\n\nimport { lang as HomeLang } from '../../language/home';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    const navigate = useNavigate();\n\n    return (\n        <ScrollView style={styles.menu} showsVerticalScrollIndicator={false}>\n            <Button\n                title={HomeLang[props.lang].Select}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', textAlign: 'center', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                icon={\n                    <Icon\n                        name={'person-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    if (props.ambiant) await props.ambiant?.unloadAsync()\n                    navigate('/selection', {\n                        state: { username: props.username, lang: props.lang, setLang: props.setLang }\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Import}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'person-add-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => {\n                    DocumentPicker.getDocumentAsync({multiple: false}).then( e => {\n                        props.setImportFile(e.uri);\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Language}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'world-o'}\n                        type={'fontisto'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                onPress={() => props.setLang(prev => prev == 'fr' ? 'en' : 'fr')}\n                raised\n            />\n            <Button\n                title={HomeLang[props.lang].Introduction}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={[styles.buttonContainer, {marginBottom: 20}]}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    await props.ambiant.unloadAsync()\n                    navigate('/tutorial');\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Source}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'logo-github'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => Linking.openURL('https://github.com/dilaouid/AlzheimApp')}\n            />\n            <Text style={styles.copyleft} >{HomeLang[props.lang].License}</Text>\n        </ScrollView>\n    );\n}\n","export const encrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let encryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        encryptedString += String.fromCharCode( string.charCodeAt(i) - key.charCodeAt(j) - key.length );\n    }\n    return (encryptedString);\n};\n\nexport const decrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let decryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        decryptedString += String.fromCharCode( string.charCodeAt(i) + key.charCodeAt(j) + key.length );\n    }\n    return (decryptedString);\n};","/**\n * Model is like:\n * {\n *      personId: 'xxx',\n *      name: 'xxx',\n *      description: 'xxx',\n *      picture: 'b64' || null,\n *      activities: {\n *          quiz: [\n *              // all quizz contents //\n *          ],\n *          log: [\n *              // all logs contents\n *          ],\n *          double: [\n *              // all double contents\n *          ],\n *          simon: [\n *              // all simon score\n *          ]\n *      }\n * }\n */\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as dilacrypt from './dilacrypt';\n\nimport { db as personAPI } from '../data/personApi';\nimport { db as dictaphoneAPI } from '../data/dictaphoneApi';\nimport { db as simonAPI } from '../data/simonApi';\nimport { db as quizAPI } from '../data/quizApi';\nimport { db as doubleAPI } from '../data/doubleApi';\n\nconst isValidDate = (d) => {\n    let n = new Date(d);\n    return n instanceof Date && !isNaN(n);\n};\n\nconst fileToBase64 = async (uri) => {\n    return await FileSystem.readAsStringAsync(uri, {\n        encoding: 'base64',\n    });\n};\n\nconst formatQuiz = async (quiz) => {\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < el.content.length; j++) {\n            const e = el.content[j];\n            if (e.uri)\n                e.uri = await fileToBase64(e.uri);\n        }\n    }\n    return (quiz);\n};\n\nconst formatLog = async (log) => {\n    for (let i = 0; i < log.length; i++) {\n        const el = log[i];\n        el.path = await fileToBase64(el.path);\n    }\n    return (log);\n};\n\nconst scoreVerification = (el, personId) => {\n    if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n    if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    if (!el.hasOwnProperty('score') || typeof el.score !== 'number') return false;\n    if (!el.hasOwnProperty('dailyScoreBeaten') || typeof el.dailyScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('globalScoreBeaten') || typeof el.globalScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n    return true;\n};\n\n\n\nexport const checkPersonInformations = (person) => {\n    const keys = ['_id', 'description', 'fullname', 'picture', 'activities'];\n    for (let i = 0; i < keys.length; i++) {\n        const el = keys[i];\n        if (person.hasOwnProperty(el) === false)\n            return false;\n    }\n    return true;\n};\n\nexport const checkPersonInformationsLength = (person) => {\n    return person.fullname.length <= 25 && person.description.length <= 100;\n};\n\nexport const checkPersonExists = async (personId) => {\n    return await personAPI.findAsync({ _id: personId });\n}\n\nexport const checkQuiz = async (quiz, personId) => {\n    const quizKeys = ['name', 'content', 'personId', '_id'];\n    const contentKeys = ['answers', 'question', 'id', 'score']\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < quizKeys.length; j++) {\n            const k = quizKeys[j];\n            if (el.hasOwnProperty(k) === false) return false;\n        }\n        for (let d = 0; d < el.content.length; d++) {\n            const content = el.content[d];\n            if (content.hasOwnProperty('uri') || content.hasOwnProperty('filename') || content.hasOwnProperty('fileType')) {\n                if (!content.hasOwnProperty('uri')) return false;\n                else if (!content.hasOwnProperty('filename')) return false;\n                else if (!content.hasOwnProperty('fileType')) return false;\n            }\n            for (let j = 0; j < contentKeys.length; j++) {\n                const l = contentKeys[j];\n                if (content.hasOwnProperty(l) === false) return false;\n            }\n            if (typeof content.answers !== 'object' || content.answers?.length === 0) return false;\n            if (typeof content.question !== 'string' || typeof content.question?.length > 23) return false;\n            if (typeof content.score !== 'object' || content.answers?.length === 0) return false;\n            let foundInScore = false\n            for (let n = 0; n < content.score.length; n++) {\n                const score = content.score[n];\n                if (score.personId === personId) foundInScore = true;\n                if (!score.hasOwnProperty('personId')) return false;\n                if (!score.hasOwnProperty('success') || typeof score.success !== 'number') return false;\n                if (!score.hasOwnProperty('failed') || typeof score.success !== 'number') return false;\n            }\n            if (!foundInScore) return false;\n        }\n    }\n    return true;\n};\n\nexport const checkDouble = (double, personId) => {\n    if (typeof double !== 'object') return false;\n    for (let i = 0; i < double.length; i++)\n        if (!scoreVerification(double[i], personId)) return false;\n    return true;\n};\n\nexport const checkSimon = (simon, personId) => {\n    if (typeof simon !== 'object') return false;\n    for (let i = 0; i < simon.length; i++)\n        if (!scoreVerification(simon[i], personId)) return false;\n    return true;\n};\n\nexport const checkDictaphone = (dictaphone, personId) => {\n    if (typeof dictaphone !== 'object') return false;\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n        if (!el.hasOwnProperty('name') || typeof el.name !== 'string' || el.name.length < 2) return false;\n        if (!el.hasOwnProperty('path') || typeof el.path !== 'string' || el.path.length < 100) return false;\n        if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n        if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    }\n    return true;\n};\n\nexport const importPerson = async (person, exists) => {\n\n    if (exists === false) {\n        await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${person._id}`, {intermediates: true});\n    }\n\n    let picture = null;\n    if (person.picture) {\n        picture = uuidv4();\n        const path = `${FileSystem.documentDirectory}persons/${person._id}/pp`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        await FileSystem.writeAsStringAsync(path + `/${picture}.jpg`, person.picture, { encoding: 'base64' }).then(el => {\n            picture = path + `/${picture}.jpg`;\n        }).catch(err => {\n            picture = null;\n        });\n    }\n\n    if (exists === false)\n        return personAPI.insertAsync(\n            {\n                _id: person._id,\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        );\n    else\n        return personAPI.updateAsync({_id: person._id}, {\n            $set: {\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        });\n};\n\nexport const importQuiz = async (quiz) => {\n    let res = true;\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        const path = `${FileSystem.documentDirectory}persons/${el.personId}/quiz`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        for (let j = 0; j < quiz[i].content.length; j++) {\n            const e = quiz[i].content[j];\n            if (e.hasOwnProperty('uri')) {\n                // Import and write file\n                let filename = uuidv4();\n                let filePath;\n                await FileSystem.writeAsStringAsync(path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`, e.uri, { encoding: 'base64' }).then(el => {\n                    filePath = path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`;\n                    filename = filePath;\n                    e.uri = filePath;\n                }).catch(err => {\n                    filename = null;\n                    e.uri = null;\n                });\n            }\n        }\n        const quizFindAsync = await quizAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        const quizExists = quizFindAsync.length > 0;\n        if (quizExists) {\n            await quizAPI.updateAsync( {_id: el._id}, {\n                $set: {\n                    name: el.name,\n                    content: el.content\n                }\n            }).catch(err => {\n                res = false;\n            })\n        } else {\n            await quizAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importDouble = async (double) => {\n    let res = true;\n    for (let i = 0; i < double.length; i++) {\n        const el = double[i];\n        const doubleExists = await doubleAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (doubleExists.length === 0) {\n            await doubleAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importSimon = async (simon) => {\n    let res = true;\n    for (let i = 0; i < simon.length; i++) {\n        const el = simon[i];\n        const simonExists = await simonAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (simonExists.length === 0) {\n            await simonAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importLog = async (dictaphone, personId) => {\n    let res = true;\n    const path = `${FileSystem.documentDirectory}persons/${personId}/recordings`;\n    await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n        console.log('[!] Directory already exists');\n    });\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        const logExists = await dictaphoneAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (logExists.length === 0) {\n            el.date = new Date(el.date);\n            let filename = uuidv4();\n            let filePath;\n            await FileSystem.writeAsStringAsync(path + `/${filename}.m4a`, el.path, { encoding: 'base64' }).then(e => {\n                filePath = path + `/${filename}.m4a`;\n                filename = filePath;\n                el.path = filePath;\n            }).catch(err => {\n                console.log(err);\n                filename = null;\n                el.path = null;\n            });\n            await dictaphoneAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const writeDataFile = async (fullname, content) => {\n    let fileUri = FileSystem.documentDirectory + `${fullname}.alz`;\n    return await FileSystem.writeAsStringAsync(fileUri, content).catch(err => {\n        console.log(err);\n    }).then( (e) => {\n        return (fileUri);\n    });\n};\n\nexport const exportPerson = async (personId, key) => {\n    const personFind = await personAPI.findAsync({ _id: personId });\n    if (!personFind) return ('PERSON_NOT_FOUND');\n    const person = personFind[0];\n    if (!person._id || !person.fullname) return ('INVALID_PERSON');\n    const personData = {\n        _id: person._id,\n        description: person.description,\n        fullname: person.fullname,\n        picture: person.picture ? await fileToBase64(person.picture) : null\n    };\n    const simonData = await simonAPI.findAsync({ personId: personId });\n    const doubleData = await doubleAPI.findAsync({ personId: personId });\n    const quiz = await quizAPI.findAsync({ personId: personId });\n    const quizData = quiz ? await formatQuiz(quiz) : []; // converting files into base64 here\n\n    const dictaphone = await dictaphoneAPI.findAsync({ personId: personId });\n    const dictaphoneData = dictaphone ? await formatLog(dictaphone) : []; // converting files into base64 here\n\n    const result = JSON.stringify({\n        _id: personData._id,\n        description: personData.description,\n        fullname: personData.fullname,\n        picture: personData.picture,\n        activities: {\n            quiz: quizData,\n            double: doubleData,\n            simon: simonData,\n            dictaphone: dictaphoneData\n        }\n    });\n    const uri = await writeDataFile(personData.fullname.replace(' ', '_'), key ? dilacrypt.encrypt(result, key) : result);\n    return (uri);\n};","import React, { useEffect, useState } from 'react';\nimport {\n    ActivityIndicator,\n    ScrollView\n} from 'react-native';\n\nimport { Text, Button } from 'react-native-elements';\n\nimport { lang as HomeLang } from '../../language/home';\nimport * as FileSystem from 'expo-file-system';\nimport * as dataImport from '../../utils/share'\n\nimport styles from './styles';\n\nexport default function ImportData(props) {\n    const [step, setStep] = useState(1);\n    const [error, setError] = useState();\n    \n    useEffect( async () => {\n        try {\n\n            // Import and check file data\n            const content = await FileSystem.readAsStringAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidFile;\n            });\n            const parsed = parseJSON(content);\n            if (!parsed) throw HomeLang[props.lang].InvalidPersonFile;\n            if (typeof parsed !== 'object' || !parsed._id)\n                throw HomeLang[props.lang].InvalidPersonFile;\n\n            // Checking the personal infos\n            setStep(2);\n            if (dataImport.checkPersonInformations(parsed) === false)\n                throw HomeLang[props.lang].InvalidPersonFile;\n            if (dataImport.checkPersonInformationsLength(parsed) === false)\n                throw HomeLang[props.lang].IncorrectPersonFile;\n\n            // Checking if this userId is registered in the local db\n            setStep(3);\n            const found = await dataImport.checkPersonExists(parsed._id);\n            \n            // Checking activities length\n            setStep(4);\n            if (parsed.activities.length > 4) throw HomeLang[props.lang].InvalidActivitiesLength;\n\n            // Checking quiz format\n            setStep(5);\n            if (await dataImport.checkQuiz(parsed.activities.quiz, parsed._id) === false) throw HomeLang[props.lang].InvalidQuizData;\n\n            // Checking double format\n            setStep(6);\n            if (await dataImport.checkDouble(parsed.activities.double, parsed._id) === false) throw HomeLang[props.lang].InvalidDoubleData;\n\n            // Checking simon format\n            setStep(7);\n            if (await dataImport.checkSimon(parsed.activities.simon, parsed._id) === false) throw HomeLang[props.lang].InvalidSimonData;\n      \n            // Checking dictaphone format\n            setStep(8);\n            if (await dataImport.checkDictaphone(parsed.activities.dictaphone, parsed._id) === false) throw HomeLang[props.lang].InvalidLogData;\n\n            // <! -------- Creation process starts ---------- !>\n\n            // Person creation\n            setStep(9);\n            dataImport.importPerson(parsed, found.length > 0).catch( (err) => {\n                throw HomeLang[props.lang].CannotCreatePerson;\n            });\n\n            // Quiz creation\n            setStep(10);\n            dataImport.importQuiz(parsed.activities.quiz).catch(err => {\n                throw HomeLang[props.lang].InvalidQuizData;\n            });\n\n            // Double creation\n            setStep(11);\n            dataImport.importDouble(parsed.activities.double).catch(err => {\n                throw HomeLang[props.lang].InvalidDoubleData;\n            });\n\n            // Simon creation\n            setStep(12);\n            dataImport.importSimon(parsed.activities.simon).catch(err => {\n                throw HomeLang[props.lang].InvalidSimonData;\n            });\n\n            // Journal log creation\n            setStep(13);\n            dataImport.importLog(parsed.activities.dictaphone, parsed._id).catch(err => {\n                throw HomeLang[props.lang].InvalidLogData;\n            });\n\n            // SUCCESS !!\n            setStep(14);\n\n            await FileSystem.deleteAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidPersonFile;\n            });\n\n\n        } catch (e) {\n            setError(e);\n            return false;\n            // props.setImportFile(null);\n        }\n    }, [])\n\n    const parseJSON = (inputString) => {\n        if (inputString) {\n          try {\n            return JSON.parse(inputString);\n          } catch (e) {\n            return false;\n          }\n        }\n    };\n\n    const stepStyle = (idx) => {\n        let clr = idx === step ? 'white' : '#89ff91';\n        if (error && idx === step) clr = 'red';\n        if (step === 14) clr = '#89ff91';\n        return {\n            color: clr,\n            fontStyle: idx === step || error ? 'italic' : 'normal',\n            marginBottom: idx === 13 ? 30 : 0,\n            display: step >= idx ? 'flex' : 'none',\n            alignContent: 'center',\n            textAlign: 'center',\n            fontSize: idx === step ? 14 : 9\n        }\n    } \n\n    const printActivity = (idx) => {\n        if (idx === step && !error && step !== 14)\n            return <ActivityIndicator color={'white'} size={'small'} />\n        return <></>\n    };\n\n    return (\n        <ScrollView style={styles.menu}>\n            { [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14].map( (e, i) => {\n                return <Text key={i} style={ stepStyle(e) }> { HomeLang[props.lang]['Step' + e] } { printActivity(e) }</Text>\n            }) }\n            { error ? <Text style={styles.ErrorMessage}>{ error }</Text> :  <></> }\n            <Button disabled={!error && step < 14} containerStyle={{marginTop: 150, borderRadius: 15}} title={HomeLang[props.lang].GoBack} onPress={() => props.setImportFile(null)}/>\n        </ScrollView>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Image\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\n\nimport { useLocation } from 'react-router-native';\n\nimport AlzheimApp from '../../assets/img/alzheimapp_logo.png';\nimport Menu from './Menu'\nimport ImportData from './ImportData';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [importFile, setImportFile] = useState();\n    const [ambiant, setAmbiant] = useState();\n    Audio.setIsEnabledAsync(true);\n\n    useEffect( async () => {\n        if (ambiant) return;\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by MCOCHET - check his soundcloud here: https://soundcloud.com/mcochet\n            require('../../assets/sound/ambiant.mp3'),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n    }, []);\n\n    const state = useLocation()?.state;\n\n    const username = props.username || state?.username;\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Image source={AlzheimApp} style={styles.logo} resizeMode={'cover'} />\n            </View>\n            { importFile ?\n                <ImportData lang={props.lang} importFile={importFile} setImportFile={setImportFile} /> :\n                <Menu lang={props.lang} username={username} setLang={props.setLang} setImportFile={setImportFile} ambiant={ambiant} />\n            }\n        </View>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} setLang={props.setLang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} setLang={props.setLang} />;\n    }\n    return <Home lang={props.lang} username={props.username} setLang={props.setLang} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: 'white' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        Home: 'Accueil',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n        QuizScore: \"Score des quiz\",\n        SimonScore: \"Score du Simon\",\n        DoubleScore: \"Score du jeu des pairs\",\n        NoScore: \"Aucun score enregistré pour cette activité...\",\n        Success: 'réussite',\n        Global: \"Vue d'ensemble\",\n        BestScoreByDay: 'Meilleur score du jour',\n        ExportedProfile: 'Profil exporté',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        Home: 'Home',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n        QuizScore: \"Quiz Score\",\n        SimonScore: \"Simon Score\",\n        DoubleScore: \"Double Memory Score\",\n        NoScore: \"No score registered for this activity...\",\n        Success: 'success',\n        Global: \"Global view\",\n        BestScoreByDay: 'Best score by day',\n        ExportedProfile: 'Profile exported',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\n\nimport { ScrollView, Alert, View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/selection/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\nimport { exportPerson } from '../../../utils/share';\nimport * as Sharing from 'expo-sharing';\n\nimport * as FileSystem from 'expo-file-system';\n\nimport styles from './styles';\nimport Form from '../../../components/selection/PersonCreation/Form';\nimport { ActivityIndicator } from 'react-native';\n\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n    const [load, setLoad] = useState(false);\n    const [id, setId] = useState(0);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        Person.getById(props.personId).then((result) => {\n            props.setPerson(result[0])\n        });\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n\n        id: id,\n        setId: setId\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/selection', {\n                state: { username: props.username, lang: props.lang }\n            });\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.fullname),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: load ? '' : 'share-alt',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={load ? <ActivityIndicator color={'white'} size={'small'} /> : ActivitiesLang[props.lang]?.ShareProfile}\n                        onPress={async () => {\n                            setLoad(true)\n                            console.log('[~] Pressing export button');\n                            console.log('[+] Exporting person...');\n                            const uri = await exportPerson(props.personId, null);\n                            console.log('[+] Exported person! uri is: ' + uri);\n                            Sharing.shareAsync(uri).then( async (e) => {\n                                await FileSystem.deleteAsync(uri);\n                            }).catch(err => {\n                                console.log(err);\n                            });\n                            setLoad(false);\n                        }}\n                        disabled={load}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/selection', {\n                                state: { username: props.username, lang: props.lang }\n                            });\n                        }}\n                    />\n                </ScrollView>\n            ) : (\n                <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => {\n                            setFullname(props.person.fullname);\n                            setUriPreview(props.person.picture);\n                            setImage('');\n                            setDescription(props.person.description);\n                            setEdit(false)\n                        }}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </ScrollView>\n            )}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync().then( () => {\n                console.log('[+] Permission granted!');\n            })\n            .catch(e => {\n                console.error(e);\n            });            \n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const goBack = async () => {\n        if (recording) await recording?.stopAndUnloadAsync();\n        stopPlayingSounds();\n        props.setPage(0);\n    }\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            if (el) el?.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                    <Button\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'caret-back-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        buttonStyle={styles.recordButton}\n                        title={{}}\n                        titleStyle={styles.titleButton}\n                        onPress={() => goBack()}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <View style={styles.actionButtonsView}>\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n                <Button\n                    containerStyle={styles.actionButtons}\n                    icon={{\n                        name: 'caret-back-outline',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={{}}\n                    titleStyle={styles.titleButton}\n                    onPress={() => goBack()}\n                />\n                </View>\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n\n\n\n\n        // Help section\n        Head: \"Le Simon, comment ça marche ?\",\n        RulesHead: \"Les règles\",\n        TriesHead: \"Les essais\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu Simon est un {0} de forme circulaire comportant quatre gros boutons de couleurs différentes: rouge, vert, jaune et bleu.\\n\\nLe jeu {1} une des quatres couleurs et {2} toujours associé à cette couleur. Le joueur doit alors {3}.\\n\\nLe jeu {4}, puis {5} une nouvelle couleur. Le jour doit reproduire cette nouvelle séquence. Chaque fois que le joueur reproduit correctement la séquence, le jeu ajoute une nouvelle couleur.`,\n                boldText: ['jeu de mémoire', 'éclaire', 'produit un son', \"appuyer sur la touche de la couleur qui vient de s'allumer\", 'répète la même couleur et le même son', 'ajoute'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois que vous ratez une séquence, vous {0}. Au cours d'une partie, vous avez le droit à seulement {1}.\\n\\nUne fois les quatre erreurs faites, ou alors lorsque vous {2}, votre score est compatibilisé en fonction du nombre de touches dans la séquence actuelle.\\n\\nChaque jour, {3}.`,\n                boldText: ['perdez un essai', 'quatre erreurs', 'abandonnez la partie en cours', 'votre score journalier est remit à zéro'],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n\n\n\n\n        // Help section\n        Head: `The Simon, how does it works?`,\n        RulesHead: \"The rules\",\n        TriesHead: \"The tries\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The Simon is a circular shaped {0} with four different colored buttons: red, green, yellow and blue.\\n\\nThe game {1} one of the four colors and {2} always associated to this color. The player shall {3}.\\n\\nThe game {4}, then {5} another color. The player will have to reproduces this sequence. Each time the player successfully reproduces the sequence, the game adds another color in this sequence.`,\n                boldText: ['memory game', 'lighten', 'produces a sound', \"press the colored button which has just turned on\", 'repeat the same color with the same sound', 'add'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `Each time you fail a sequence, you {0}. In a game, you are allowed up to {1}.\\n\\nOnce the four fails made, or when you {2}, you will have the number of elements in the current sequence saved as your score.\\n\\nEach day, {3}.`,\n                boldText: ['lose a try', 'four maximum fails', 'give up the current game', 'your daily score is reset to zero'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        paddingTop: 20,\n        flex: 1,\n        alignItems: 'center'\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        // flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        //flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    // Help section\n    viewHelpPage: {\n        marginTop: -20,\n        backgroundColor: 'white',\n        width: 100 + '%',\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .4,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate, dailyScore < order.length - 1, bestScore < order.length - 1);\n        setCanPlay(false);\n        setSuccess(true);\n        const path = dailyScore < order.length - 1 ? require(`../../../assets/sound/global/applause.mp3`) : require(`../../../assets/sound/global/you_lose.mp3`);\n        const { sound } = await Audio.Sound.createAsync(path);\n        props.setSound(sound);\n        sound.playAsync();\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            <Overlay\n                visible={success}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => setSuccess(false)}\n                ModalComponent={Modal}\n            >\n                {scoreBeaten ? successOverlay() : failOverlay()}\n                <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            retryGame();\n                        }}\n                        title={SimonLang[props.lang].Retry}\n                        containerStyle={{\n                            borderRadius: 13,\n                            marginRight: 10,\n                        }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setTab(0);\n                        }}\n                        title={SimonLang[props.lang].Exit}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React from 'react';\nimport { View, ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView>\n                <Button\n                    title={SimonLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{SimonLang[props.lang].Head}</Text>\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].Rules()}</Text>\n\n                \n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].TriesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].TriesExplain()}</Text>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\nimport Help from './Help';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr, pos) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: i == pos ? color : '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        Cancel: 'Annuler',\n        GoBack: \"Oui, j'annule l'édition du quiz\",\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Abandonner le quiz\",\n        GiveUpQuiz: \"Êtes-vous sûr de vouloir abandonner ce quiz? Le score restera enregistré.\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        EditedQuiz: \"Quiz modifié avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Bien joué !! 😄\",\n        Success: \"Bien joué ! C'est la bonne réponse !! Vous pouvez maintenant passer à la suite !\",\n        FailedTitle: \"Dommage... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Dommage, mais ce n'était pas la bonne réponse ! Les réponses possibles étaient: ${answersText}.`\n        },\n        SuccessQuizTitle: \"Haut la main !\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Fantastique !! Vous avez réussi ce quiz ! Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Dommage... Vous avez raté ce quiz ! ... Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Sauvegarder le quiz',\n        SaveContent: \"Sauvegarder la question\",\n        AddContent: \"Ajouter la question\",\n        SureCancelEdition: \"Êtes-vous sûr de bien vouloir abandonner l'édition de ce quiz? Vous ne pourrez pas récupérer vos modifications.\",\n\n        // Help page related\n        Head: 'Le quiz, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        CustomHead: \"Personnalisation\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Les règles du quiz sont basiques: il y a des questions {0}, et le joueur doit y répondre. Il peut y avoir {1} réponses possibles, une bonne réponse et c'est un point ajouté au score.\\n\\nIl n'y a pas de perte de points suite à une mauvaise réponse.`,\n                boldText: [\"facultativement accompagnées d'une image ou d'un son\", \"plusieurs\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `Il n'y a pas de quiz par défaut. C'est à vous d'en {0} et de les {1} à votre guise !\\nPour cela, vous devez vous rendre dans la partie \"{2}\".\\n\\nVous aurez là la liste des quiz que vous avez préalablement crée. Si vous n'en avez encore créé aucun, façonnez votre premier quiz avec le bouton \"{3}\".\\n\\nIci vous pourrez ajouter des question avec le bouton \"{4}\". Il vous est demandé {5} (facultatif), qui correspond à un son ou une image pour illustrer votre question.\\n\\nEnsuite, vous devez {6}. Ce sera cette question qui sera ensuite demandée au joueur.\\n\\nEt enfin, {7}. Une fois une réponse valide renseignée, cliquez sur le symbole {8} à côté, et votre réponse est ajoutée à la liste des réponses valides à la question. Vous pouvez en avoir 10 maximum.\\n\\nSi vous avez fait une erreur sur une des réponses, {9} pour la retirer de la liste.\\n\\nUne fois tous les éléments de la question renseignées, cliquez sur \"{10}\" au dessus pour enregistrer la question et retourner à la liste des questions précédemment crées. Ajoutez-en autant que vous voulez pour un quiz.\\n\\nVous pouvez également {11}.\\n\\nUne fois le quiz complet, cliquez sur \"{12}\", et voilà ! Renseignez le nom de ce quiz et c'est terminé, le quiz est désormais jouable !`,\n                boldText: [\"créer\",\n                    \"personnaliser\",\n                    \"Voir les quiz\",\n                    \"Créer un quiz\",\n                    \"Ajouter une question\",\n                    \"d'importer un fichier de référence\",\n                    \"renseigner la question\",\n                    \"ajouter les réponses éventuelles\",\n                    \"( + )\",\n                    \"cliquez simplement dessus\",\n                    \"Valider\",\n                    \"cliquer sur une question pour la modifier\",\n                    \"Terminer la création\"\n                ],\n            });\n        }\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizzes',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        Cancel: 'Cancel',\n        GoBack: 'Yes, I want to go back',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'of success',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Submit\",\n        GiveUpQuizTitle: \"Give up\",\n        GiveUpQuiz: \"Are you sure to give up this quiz? The score will be saved.\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        EditedQuiz: \"Quiz successfuly edited!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Well played!! 😄\",\n        Success: \"Well played! That's the good answer!! You can now go to the next question!\",\n        FailedTitle: \"Oops... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Oops, that's not a valid answer... the valid answer${answers.length > 0 ? 's were' : ' was'} : ${answersText}.`\n        },\n        SuccessQuizTitle: \"Easy peasy!\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Congratulations!! You won this quiz! Your score is for {0} good answer(s) for {1} mistake!',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Better next time! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: \"It's alright... You failed this quiz!... Your score is for {0} good answer(s) for {1} mistake!\",\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Save the quiz',\n        SaveContent: \"Save the question\",\n        AddContent: \"Add the question\",\n        SureCancelEdition: \"Are you sure to cancel this quiz edition? Your modification would not be saved\",\n\n        // Help page related\n        Head: 'The quiz, how does it works?',\n        RulesHead: \"The rules\",\n        CustomHead: \"Customization\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `This is a basic quiz game: there are questions {1}, and the player must answer them. There can be {1} answers, one correct answer and it's a point added to the score.\\n\\nThere is no loss of points for a wrong answer.`,\n                boldText: [\"optionally accompanied by an image or a sound\", \"several possible\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `There are no default quizzes. It is up to you to {0} and {1} them as you wish!\\nTo do this, you must go to the \"{2}\" section.\\nThere you will see the list of quizzes that you have already created. If you haven't created any yet, create your first quiz with the \"{3}\" button.\\n\\nHere you can add questions with the \"{4}\" button. You are asked to {5} (optional), which is a sound or image file to illustrate your question.\\n\\nThen you have to {6}. This question will be asked to the player.\\n\\nAnd finally, {7}. Once you have entered a valid answer, click on the {8} symbol next to it, and your answer would be added to the list of the valid answers to the question. You can have a maximum of 10 possible answers.\\n\\nIf you made a mistake on one of the answers, {9} to remove it from the list.\\n\\nOnce you have filled in all the elements of the question, click \"{10}\" above to save the question and return to the list of questions. Add as many as you want to this quiz.\\n\\nYou can also {11}.\\n\\nOnce the quiz is completed, click \"{12}\" and that's it! Fill in the name of this quiz and it's done, the quiz is now playable!`,\n                boldText: [\"create\",\n                    \"customize\",\n                    \"View quizzes\",\n                    \"Create a quiz\",\n                    \"Add a question\",\n                    \"import a reference file\",\n                    \"fill in the question\",\n                    \"add the possible answers\",\n                    \"( + )\",\n                    \"simply click on it\",\n                    \"Submit\",\n                    \"click on a question to edit it\",\n                    \"Complete the quiz creation\"\n                ],\n            });\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginTop: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: 235,\n        marginTop: 20,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: 235,\n        marginTop: 10,\n        backgroundColor: 'blue',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: 30,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    modalDescription: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: 290,\n        marginTop: 10\n    },\n    quizTitleInput: {\n        fontSize: 15\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 50\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        width: 250\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: 250,\n        height: 250\n    },\n    gameQuestion: {\n        fontSize: 25,\n        marginTop: 10,\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey'\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15\n    },\n\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n        textAlign: 'center'\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image, ActivityIndicator } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            <Button\n                title={props.isLoading ? <ActivityIndicator color={'blue'} size={'small'} /> : QuizLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n                disabled={props.quiz.length === 0}\n            />\n\n            <Button\n                title={QuizLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import {\n    View,\n    Image\n} from 'react-native';\nimport { Icon, FAB, Avatar } from 'react-native-elements';\nimport { Audio } from 'expo-av';\n\nexport const printFile = (fileType, uri, clearFile, isPlaying, pauseSound, setIsPlaying, sound, setSound) => {\n    if (fileType === 'image') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Image source={{uri: uri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n            </View>\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 100, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Icon onPress={() => isPlaying ? pauseSound() : playSound(setIsPlaying, sound, setSound, uri) } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30, zIndex: 2}} />\n            </View>\n        );\n    }\n};\n\nexport const playSound = async (setIsPlaying, sound, setSound, uri) => {\n    setIsPlaying(true);\n    await Audio.setAudioModeAsync({\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n    });\n    const getSoundStatus = await sound?.getStatusAsync();\n    if (getSoundStatus?.isLoaded === false) {\n        await sound.loadAsync({ uri: uri });\n        setSound(sound);\n    }\n    await sound.playAsync();\n    sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n        if (playbackStatus.didJustFinish) {\n            await sound.unloadAsync();\n            setIsPlaying(false);\n        }\n    });\n};\n\nexport const pickCorrectIcon = (fileType, uri) => {\n    if (fileType === 'image') {\n        return (\n            <Avatar\n                source={{ uri: uri }}\n                rounded\n                size={'medium'}\n                containerStyle={{marginHorizontal: 8}}\n            />\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <Icon\n                raised\n                name={'musical-notes-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    } else {\n        return (\n            <Icon\n                raised\n                name={'text-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    }\n};","import React, { useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nimport { pickCorrectIcon } from '../utils/quizFunc';\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n\n    const length = props.quizEdit?.content?.length + props.newContent?.length;\n\n    const pickOutQuestion = () => {\n        if (length <= 2 && props.quizEdition) return;\n        if (props.quizEdition === true) {\n            if (Number.isInteger(props.questionId)) {\n                // if the questionId is an integer, it means it has not\n                // been added to the api yet, so it's an index of the\n                // newContent array passed in the props from the ViewQuiz Component\n\n                const index = props.questionId - props.quizEdit?.content?.length;\n                const tmp = props.newContent;\n                tmp.splice(index, 1);\n                // take out the new content from the newContent state in the\n                // parent component\n                props.setNewContent([...tmp]);\n            } else {\n                // todo not get by api but update quizedit state\n                // update api only when saving quiz\n                const index = props.quizEdit.content.findIndex(el => el.id == props.questionId );\n                const tmp = props.quizEdit;\n                tmp.content.splice(index, 1);\n                props.setQuizEdit(tmp);\n                props.setReload(!props.reload)\n                props.setEditedQuiz(true);\n            }\n        } else {\n            const tmp = props.quizEdition ? props.content : props.contentList;\n            tmp.splice(props.index, 1)\n            props.setContent([...tmp]);\n        }\n        setModal(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{ marginRight: 10 }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={{ fontWeight: 'bold' }}\n                    onPress={() => pickOutQuestion() }\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { props.setEditContent(props.questionId) }} >\n                { pickCorrectIcon(props.content.fileType, props.content.uri) }\n                <ListItem.Content>\n                    <ListItem.Title>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon disabled={props.quizEdition == true && length <= 2} reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","export function ScoreRatio (content, personId) {\n    var success = 0;\n    var fail = 0;\n    content.map( (el, i) => {\n        const score = el.score.filter( (el) => el.personId == personId );\n        score.map( (el, i) => {\n            success += parseInt(el.success);\n            fail += parseInt(el.failed);\n        });\n    });\n    const total = success + fail;\n    if (total == 0)\n        return 0;\n    const score = ((success / total) * 100).toFixed(2);\n    return score;\n};","import React from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport { ScoreRatio } from './utils/scoreFunc';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n\n    return (\n        <ListItem {...componentProps} onPress={() => {\n                props.setEdit(true);\n                props.setQuizEdit(props.quiz);\n            }}>\n            <ListItem.Content>\n                <ListItem.Title>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    { ScoreRatio(props.quiz.content, props.personId) }{'% '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Text,\n    ScrollView,\n} from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport QuizList from './QuizList';\nimport styles from './styles';\n\nimport * as API from '../../../data/quizApi';\n\nexport default function ViewQuizList(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <ScrollView>\n            {props.loading ? (\n                <ActivityIndicator\n                    color={'blue'}\n                    size={'small'}\n                    style={styles.loading}\n                />\n            ) : props.quiz?.length > 0 ? (\n                props.quiz?.map((el, i) => {\n                    return (\n                        <QuizList\n                            index={i}\n                            key={el._id}\n                            quiz={el}\n                            lang={props.lang}\n                            deleteId={deleteId}\n                            personId={props.personId}\n                            setEdit={props.setEdit}\n                            setQuizEdit={props.setQuizEdit}\n                        />\n                    );\n                })\n            ) : (\n                <Text style={styles.nothingYet}>\n                    {QuizLang[props.lang].NothingYet}\n                </Text>\n            )}\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/activities/quiz/success.gif';\n\nimport styles from './styles';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge, FAB } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContent(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <ScrollView contentContainerStyle={styles.ScrollView}>\n                { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                <Button\n                    title={QuizLang[props.lang].ImportFile}\n                    buttonStyle={{ borderRadius: 15 }}\n                    onPress={pickFile}\n                />\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].ReferenceFile}\n                </Text>\n                <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                    <Input\n                        value={props.question}\n                        inputStyle={{fontSize: 14}}\n                        containerStyle={{marginBottom: 50}}\n                        placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                        onChangeText={(e) => props.setQuestion(e)}\n                    />\n                    <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                    <Input\n                        placeholder={QuizLang[props.lang].AddAnswer}\n                        inputStyle={{fontSize: 14}}\n                        value={answer}\n                        onChangeText={(e) => setAnswer(e)}\n                    />\n                    <Button\n                        icon={\n                            <Icon\n                                name={'add-circle'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={18}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => addAnswer()}\n                        disabled={props.answers.length >= 10}\n                    />\n                    </View>\n                </View>\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].WhatIsAnswer}\n                </Text>\n                <View style={styles.badgesView}>\n                    {props.answers.map( (el, i) => {\n                        return(\n                            <Badge\n                                key={i}\n                                value={el}\n                                badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                onPress={() => pickOutAnswer(i)}\n                            />\n                        )\n                    })}\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    SafeAreaView,\n    ScrollView,\n    Alert,\n    Modal,\n    Text\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay } from 'react-native-elements';\n\nimport QuestionList from './Creation/QuestionList';\nimport ViewQuizList from './ViewQuizList';\n\nimport * as API from '../../../data/quizApi';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport FormQuizContent from './Creation/FormQuizContent';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n    // if the user is editing or not an existing quiz\n    const [edit, setEdit] = useState(false);\n\n    // if the user want to add a question to an existing quiz\n    const [newQuestion, setNewQuestion] = useState(false);\n\n    // if the user want to edit an existing question to an existing quiz\n    const [editContent, setEditContent] = useState();\n\n    // the existing quiz to edit\n    const [quizEdit, setQuizEdit] = useState();\n\n    // the new content to add in an existing quiz\n    const [newContent, setNewContent] = useState([]);\n\n    // check if something has been edited\n    const [editedQuiz, setEditedQuiz] = useState(false);\n\n    // open the modal of going back without saving confirmation\n    const [modal, setModal] = useState(false);\n\n    // the states for the quiz edition (add / edit question)\n    const [question, setQuestion] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const push = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setNewContent([...newContent, push]);\n        setEditedQuiz(true);\n        setSuccess(true);\n    };\n\n    const saveContent = () => {\n        let content;\n        let index;\n        if (Number.isInteger(editContent)) {\n            // edit newContent array\n            content = newContent[editContent - quizEdit?.content?.length];\n        } else {\n            // edit quizEdit array\n\n            // for already in api content -- think of reuploading the file\n            // if there's a new one, or to delete it\n            index = quizEdit.content.findIndex(el => el.id == editContent);\n            content = quizEdit.content[index];\n            if (fileType != content.fileType || uri != content.uri)\n                content.editedFile = true;\n        }\n        content.filename= filename;\n        content.fileType = fileType;\n        content.uri = uri;\n        content.answers = answers;\n        content.question = question;\n        setEditedQuiz(true);\n        setSuccess(true);\n        if (Number.isInteger(editContent)) {\n            if (newContent.length == 1)\n                setNewContent([content]);\n            else\n                setNewContent([...content]);\n        } else {\n            quizEdit.content[index] = content;\n            setQuizEdit(quizEdit);\n        }\n    };\n\n    // clear the states before edition or creation of a content\n    const clearState = () => {\n        setAnswers([]);\n        setQuestion();\n        setFileType();\n        setFilename();\n        setUri();\n        setSound(new Audio.Sound());\n    };\n\n    // Save the edited quiz\n    const saveQuiz = () => {\n        if (!editedQuiz) return;\n        const content = quizEdit.content.concat(newContent);\n        API.saveQuiz(props.personId, quizEdit._id, content).then((data) => {\n            return Alert.alert(\n                QuizLang[props.lang].EditedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            props.setReload(!props.reload);\n                            setNewContent([]);\n                            goBack();\n                        },\n                    }\n                ]\n            );\n        });\n    }\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const viewPage = () => {\n        if (editContent && !newQuestion) {\n            if (success) setSuccess(false);\n            let content;\n            if (Number.isInteger(editContent)) {\n                content = newContent[editContent - quizEdit?.content?.length];\n            } else {\n                const index = quizEdit.content.findIndex(el => el.id == editContent);\n                content = quizEdit.content[index];\n            }\n            if (!content) return;\n            setFilename(content.filename);\n            setFileType(content.fileType);\n            setUri(content.uri);\n            setQuestion(content.question);\n            setAnswers([...content.answers]);\n            setNewQuestion(true);\n        } else if (newQuestion) { // if the user wants to set a new question for quiz edition\n            return (<FormQuizContent\n                        lang={props.lang}\n                        setAnswers={setAnswers}\n                        setFileType={setFileType}\n                        setQuestion={setQuestion}\n                        setUri={setUri}\n                        setFilename={setFilename}\n                        setSuccess={setSuccess}\n                        setSound={setSound}\n                        setIsPlaying={setIsPlaying}\n                        pauseSound={pauseSound}\n                        uri={uri}\n                        filename={filename}\n                        answers={answers}\n                        fileType={fileType}\n                        question={question}\n                        success={success}\n                        sound={sound}\n                        isPlaying={isPlaying}\n                />);\n        } else if (edit && !newQuestion) {\n             // if the user want to see all the question for the quiz edition\n            return (quizEdit.content)?.concat(newContent)?.map((el, i) => {\n                return (<QuestionList\n                    index={i}\n                    key={i}\n                    id={quizEdit._id || 0}\n                    quizEdit={quizEdit}\n                    newContent={newContent}\n                    content={el}\n                    lang={props.lang}\n                    questionId={el.id || i}\n                    quizEdition={true}\n                    reload={props.reload}\n                    setReload={props.setReload}\n                    setEditedQuiz={setEditedQuiz}\n                    setEditContent={setEditContent}\n                    setQuizEdit={setQuizEdit}\n                    setNewContent={setNewContent}\n                />);\n            })\n        } else {\n             // if the user want to see all the existing quiz for the quiz edition\n            return (<ViewQuizList\n                quiz={props.quiz}\n                loading={props.loading}\n                lang={props.lang}\n                personId={props.personId}\n                setEdit={setEdit}\n                setQuizEdit={setQuizEdit}\n                setReload={props.setReload}\n            />);\n        }\n    };\n\n    const goBack = () => {\n\n        if (!success) setSuccess(false);\n\n        if ( (editedQuiz && !newQuestion) || newContent.length > 0) {\n            setModal(true);\n            return;\n        }\n\n        if (editContent) {\n            clearState();\n            setEditContent();\n            setNewQuestion(false);\n        } else if (newQuestion)\n            setNewQuestion(false);\n        else if (edit) {\n            setEditedQuiz(false);\n            setEdit(false);\n        } else\n            props.setTab(0);\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return saveContent();\n        } else if (newQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].AddContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return pushContent();\n        } else if (edit) {\n            // save the quiz button\n            if (mode == 'title') return QuizLang[props.lang].Save;\n            else if (mode == 'disabled') return !(editedQuiz);\n            else if (mode == 'onpress') return saveQuiz();\n        } else {\n            // create a quiz button\n            if (mode == 'title') return QuizLang[props.lang].Create;\n            else if (mode == 'disabled') false;\n            else if (mode == 'onpress') return props.setTab(4);\n        }\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => setModal(false)}\n                    ModalComponent={Modal}\n                >\n                    <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                    <View style={{ flexDirection: 'row' }}>\n                        <Button\n                            title={QuizLang[props.lang].Cancel}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{ marginRight: 10 }}\n                            onPress={() => setModal(false)}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].GoBack}\n                            buttonStyle={{ fontWeight: 'bold' }}\n                            onPress={() => {\n                                setEditedQuiz(false);\n                                setEditContent();\n                                setEdit(false);\n                                setNewContent([]);\n                                setModal(false);\n                            } }\n                        />\n                    </View>\n                </Overlay>\n\n\n                <Button\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={edit ? 'save-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        buttonTop('onpress')\n                    }}\n                    disabled={ buttonTop('disabled') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => goBack() }\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                {\n                    edit && !newQuestion && !editContent ?\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setNewQuestion(true) }\n                    /> : <></>\n                }\n                <ScrollView style={{marginBottom: 40}}>\n                { viewPage() }\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContent from './FormQuizContent';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\nimport { Audio } from 'expo-av';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n    const [modalConfirmation, setModalConfirmation] = useState(false);\n\n    const [editContent, setEditContent] = useState();\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name.substring(0, 23),\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    // Save an existing question\n    const saveContent = () => {\n        content[editContent].fileType = fileType;\n        content[editContent].filename = filename;\n        content[editContent].uri = uri;\n        content[editContent].question = question;\n        content[editContent].answers = answers;\n        setContent([...content]);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        if (isPlaying) setIsPlaying(false);\n    };\n\n    const clearState = () => {\n        setAnswers([]);\n        setFileType();\n        setFilename();\n        setUri();\n        setQuestion();\n        setSuccess(false);\n    };\n\n    const printQuestionList = () => {\n        if (content.length === 0) {\n            return (<Text style={styles.nothingYet}>\n                {QuizLang[props.lang].NoQuestionYet}\n            </Text>);\n        } else {\n            return content?.map((el, i) => {\n                return (\n                    <QuestionList\n                        index={i}\n                        key={i}\n                        id={i}\n                        content={el}\n                        lang={props.lang}\n                        setContent={setContent}\n                        setEditContent={setEditContent}\n                        questionId={i}\n                        contentList={content}\n                    />\n                );\n            });\n        }\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent !== undefined) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); return saveContent(); }\n        } else if (createQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].OK;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); setModal(false); return pushContent(); }\n        } else {\n            if (mode == 'title') return QuizLang[props.lang].Complete;\n            else if (mode == 'disabled') return !(content.length > 0);\n            else if (mode == 'onpress') { return setModal(true);  }\n        }\n    };\n\n    const printPage = () => {\n        if (editContent !== undefined && !createQuestion) {\n            if (success) setSuccess(false);\n            setAnswers(content[editContent].answers);\n            setFileType(content[editContent].fileType);\n            setFilename(content[editContent].filename);\n            setUri(content[editContent].uri);\n            setQuestion(content[editContent].question);\n            setCreateQuestion(true);\n        }\n        if (createQuestion) { // if the user is creating a new question\n            return <FormQuizContent\n                /* Form to create a quiz */\n                lang={props.lang}\n                setAnswers={setAnswers}\n                setFileType={setFileType}\n                setQuestion={setQuestion}\n                setUri={setUri}\n                setFilename={setFilename}\n                setSuccess={setSuccess}\n                setSound={setSound}\n                setIsPlaying={setIsPlaying}\n                pauseSound={pauseSound}\n                uri={uri}\n                filename={filename}\n                answers={answers}\n                fileType={fileType}\n                question={question}\n                success={success}\n                sound={sound}\n                isPlaying={isPlaying}\n            />\n        } else {\n            return <SafeAreaView style={styles.safeArea}>\n                <Button\n                    title={QuizLang[props.lang].AddQuestion}\n                    icon={\n                        <Icon\n                            name={'add-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => setCreateQuestion(true)}\n                />\n                <ScrollView style={{marginBottom: 40}}>\n                    { props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : printQuestionList() }\n                </ScrollView>    \n            </SafeAreaView>\n        }\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button containerStyle={{ marginTop: 10, width: 40 }} title={{}} icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    } disabled={name?.length < 3 || name.length > 23 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            {/* Confirmation give up quiz creation */}\n            <Overlay\n                visible={modalConfirmation}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => setModalConfirmation(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={QuizLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={() => setModalConfirmation(false)}\n                    />\n                    <Button\n                        title={QuizLang[props.lang].GoBack}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={() => {\n                            setModalConfirmation(false);\n                            props.setTab(2);\n                        } }\n                    />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ buttonTop('disabled') }\n                    onPress={ () => buttonTop('onpress') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearState();\n                        pauseSound();\n                        if (createQuestion)\n                            setCreateQuestion(!createQuestion);\n                        else if (content.length == 0) props.setTab(2);\n                        else setModalConfirmation(true)\n                    }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            { printPage() }\n        </>\n    );\n}\n","import React from 'react';\nimport { Text, Button, Icon, FAB } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif');\n    return (\n    <>\n        { props.quizLength > 1 ? <FAB\n            style={{marginTop: 140, position: 'absolute', zIndex: 10}}\n            containerStyle={{marginLeft: 120}}\n            size=\"small\"\n            icon={{name: 'repeat-sharp', type: 'ionicon', color:'white' }}\n            onPress={() => props.pickRandomQuizz()}\n        /> : <></> }\n        <Lottie LottieSource={ThinkingLottie} ImageSource={ThinkingImage} LottieStyle={{marginTop: -25, height: 250, marginBottom: -30}} />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButton}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            buttonStyle={{ backgroundColor: 'red' }}\n            containerStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, Alert, View, Modal } from 'react-native';\nimport { Text, Image, Input, Button, Icon, Overlay } from 'react-native-elements';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../../assets/img/activities/sad.gif';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport Lottie from '../../../utils/Lottie';\nimport { Audio } from 'expo-av';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n    const [modal, setModal] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const [success, setSuccess] = useState(0);\n    const [fail, setFail] = useState(0);\n    const [confetti, setConfetti] = useState(false);\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const TrophyLottie = require('../../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../../assets/lottie/sad.json');\n\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const stopSound = async () => {\n        await pauseSound();\n        setSound(new Audio.Sound());\n        await sound?.unloadAsync();\n    }\n\n    const playSound = async () => {\n        setIsPlaying(true);\n        await Audio.setAudioModeAsync({\n            staysActiveInBackground: true,\n            shouldDuckAndroid: true,\n        });\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus?.isLoaded === false) {\n            await sound.loadAsync({ uri: game[current].uri });\n            setSound(sound);\n        }\n        await sound.playAsync();\n        sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n            if (playbackStatus.didJustFinish) {\n                await sound.unloadAsync();\n                setIsPlaying(false);\n            }\n        });\n    };\n\n    const setMediaType = () => {\n        if (!game[current]) return;\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <Icon onPress={() => isPlaying ? pauseSound() : playSound() } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30}} />\n            default:\n                return <></>;\n        }\n    };\n\n    const openAlertResultQuestion = (result) => {\n        return (\n            Alert.alert(\n                result ? QuizLang[props.lang].SuccessTitle : QuizLang[props.lang].FailedTitle,\n                result ? QuizLang[props.lang].Success : QuizLang[props.lang].Failed(game[current].answers),\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: async () => {\n                            if (current + 1 <= game.length - 1)\n                                setCurrent(current + 1);\n                            else {\n                                const path = success >= fail ? require(`../../../../assets/sound/global/applause.mp3`) : require(`../../../../assets/sound/global/you_lose.mp3`);\n                                if (success >= fail) setConfetti(true);\n                                const { sound } = await Audio.Sound.createAsync(path);\n                                setSound(sound);\n                                sound.playAsync();\n                                setModal(true);\n                            }\n                        },\n                    }\n                ]\n            )\n        )\n    };\n\n    const answerQuestion = async () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        stopSound();\n        setAnswer('');\n        const result = game[current].answers.includes(answerTrimedLowercase);\n        if (result === false) {\n            // increment the fail and update the API\n            setFail(fail + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, false);\n        } else {\n            // increment the success and update the API\n            setSuccess(success + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, true)\n        }\n        openAlertResultQuestion(result);\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                {confetti && success >= fail ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n                )}\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => props.setTab(0)}\n                    ModalComponent={Modal}\n                >\n                    {success >= fail ? \n                        <>\n                            <Lottie LottieSource={TrophyLottie} ImageSource={TrophyImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} loop={false} />\n                            <Text style={{color:'blue', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].SuccessQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].SuccessQuiz(fail, success)}</Text>\n                        </>\n                    :\n                        <>\n                            <Lottie LottieSource={SadLottie} ImageSource={SadImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} />\n                            <Text style={{color:'red', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].FailQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].FailQuiz(fail, success)}</Text>\n                        </>\n                    }\n                    <Button title={QuizLang[props.lang].Leave} onPress={() => props.setTab(0)} containerStyle={styles.leaveButton} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </Overlay>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button buttonStyle={styles.buttonQuizGameOK} title={QuizLang[props.lang].OK} onPress={() => { answerQuestion() }} />\n                </View>\n            </>\n        }\n    </>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\n// This component is mounted when the user clicks on 'Play' in the main quiz menu\nexport default function Play(props) {\n    const [play, setPlay] = useState(false);\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quizId={props.quiz._id}\n                personId={props.personId}\n                quiz={props.quiz.content}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n                quizLength={props.quizLength}\n            />\n        }\n    </View>);\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{QuizLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Rules()}</Text>\n\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].CustomHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Custom()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler, Alert } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber, randomArrayElement } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Creation/CreateQuiz';\nimport Play from './Play';\nimport Help from './Help';\n\nimport * as API from '../../../data/quizApi';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1) {\n                    Alert.alert(\n                        QuizLang[props.lang].GiveUpQuizTitle,\n                        QuizLang[props.lang].GiveUpQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    setTab(0);\n                                }\n                            },\n                        ]\n                    )\n                }\n                else setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            let rand = randomArrayElement(random, 0, quiz.length - 1);\n            setRandom(rand);\n        }\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    isLoading={isLoading}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                quizLength={quiz.length}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    setReload={setReload}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return <View style={styles.view}>{printPage()}</View>;\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'green')\n        color = '#459449';\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Essai${tries > 1 ? 's' : ''} restant${tries > 1 ? 's' : ''}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Score actuel: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Commencer \",\n        GiveUp: \"Abandonner\",\n        Reinit: \"Nouveau modèle\",\n        TitleGiveUp: \"Abandonner la partie\",\n        SureToGiveUp: \"Êtes-vous sûr(e) de vouloir abandonner la partie? Votre score sera enregistré.\",\n        Congratulations: 'Félicitations !!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: \"Recommencer\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'Le jeu des pairs, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu des pairs est assez connu et classique. Lorsque vous commencerez la partie, vous aurez un {0}. Cliquez alors sur le bouton \"{1}\" sur le bas de l’écran pour retourner les cartes face verso.\\n\\nVous devrez alors {2}. Par exemple, si vous cliquez sur une carte rouge, vous devrez cliquer sur l’autre carte rouge ensuite.\\n\\nPlus vous grimpez dans le score, plus le nombre de paires s’ajoutent au schéma. Il peut y avoir jusqu’à {3} au total.`,\n                boldText: [\"schéma de plusieurs paires de cartes face recto\", \"Commencer\", \"retourner les paires l'une après l’autre\", \"6 paires\"],\n            });\n        },\n        ScoreHead: \"Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois qu’un schéma est complété (c'est-à-dire que toutes les cartes ont été retournées), {0} et passez à un schéma suivant, {1}.\\n\\nLes points peuvent vous servir à avoir un joli score, mais aussi à recréer un nouveau schéma si vous l’avez complètement oublié. A chaque re-création d’un schéma, {2}. Et vous ne pouvez pas recréer un schéma s’il ne vous reste {3}.`,\n                boldText: [\"vous gagnez un point\", \"potentiellement plus difficile\", \"vous perdez un point\", \"qu’un essai pour le schéma actuel\"],\n            });\n        },\n        Remember: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Mémorisez bien ce schéma!'],\n            }, 'green');\n        }\n    },\n    en: {\n        Play: 'Play',\n        Help: 'How does it work',\n        Leave: 'Back',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Remaning tr${tries > 1 ? 'ies' : 'y'}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Actual score: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Start \",\n        GiveUp: \"Give up\",\n        Reinit: \"New model\",\n        TitleGiveUp: \"Give up the game\",\n        SureToGiveUp: \"Are you sure to give up this party? Your score will be saved.\",\n        Congratulations: 'Congratulations!!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        SoBad: 'So sad...',\n        ScoreNotBeated: 'Your daily score has not been beaten... But you can retry!',\n        Retry: \"Retry\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Best score made today: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'The double memory, how does it works?',\n        RulesHead: \"The rules\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The game of peers (or double memory) is quite familiar and classic. When you start the game, you will have a {0}. Then click on the \"{1}\" button at the bottom of the screen to turn the cards face up.\\n\\nFor example, if you click on a red card, you will have to click on the other red card next.\\n\\nThere can be up to {3} in total.`,\n                boldText: [\"pattern of several pairs of cards face up\", \"Start\", \"turn over the pairs one after the other\", \"6 pairs\"],\n            });\n        },\n        ScoreHead: \"The score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `Each time a pattern is completed (i.e., all the cards have been turned over), {0} and move on to the next pattern, {1}.\\n\\nThe points can be used to get a nice score, but they can also be used to recreate a new pattern if you've completely forgotten about it. Each time you re-create a pattern, {2}. And you can't recreate a pattern if you don't have {3} left.`,\n                boldText: [\"you earn a point\", \"potentially more challenging\", \"you lose a point\", \"than a try for the current pattern\"],\n            });\n        },\n        Remember: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Remember this schema carefully!'],\n            }, 'green');\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { Dimensions } from 'react-native'\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nconst mode = SCREEN_WIDTH >= SCREEN_HEIGHT ? 'landscape' : 'portrait';\nconst factor = mode == 'landscape' ? hp : wp;\n\nexport default StyleSheet.create({\n    view: {\n        height: hp('100%'),\n        paddingBottom: 40,\n        flex: 1\n    },\n    logo: {\n        width: 120,\n        height: undefined,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n        resizeMode: \"center\",\n        aspectRatio: 1\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n        marginBottom: 20\n    },\n    RectoCard: {\n        width: factor('21%'),\n        height: 0,\n        backgroundColor: '#C3C3CF',\n        borderRadius: 20,\n        borderColor: '#858593',\n        borderWidth: 1,\n        aspectRatio: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    PlayingCard: {\n        width: factor('21%'),\n        height: 0,\n        borderRadius: 20,\n        aspectRatio: 1,\n        borderColor: '#68FF5C',\n        borderWidth: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    VersoCard: {\n        width: factor('21%'),\n        height: 0,\n        borderRadius: 20,\n        opacity: .8,\n        marginHorizontal: 5,\n        aspectRatio: 1,\n        marginVertical: 5\n    },\n    IconCard: {\n        marginTop: 28 + '%'\n    },\n    viewGame: {\n        marginTop: 10,\n        width: wp('95%'),\n        height: hp('55%'),\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    buttonViewPlay: {\n        flexDirection: 'row',\n        width: mode == 'portrait' ? wp('100%') : hp('100%'),\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: 10\n    },\n    playButtons: {\n        alignContent: 'center',\n        textAlign: 'center',\n        paddingHorizontal: 30,\n        borderRadius: 10,\n        marginHorizontal: 5\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        paddingTop: 20,\n        width: wp('100%'),\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={DoubleLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{DoubleLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].Rules()}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].ScoreHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].ScoreHelp()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React from 'react';\nimport { Image, View } from 'react-native';\nimport { Button, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport DoubleLogo from '../../../assets/img/activities/double/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={DoubleLogo} style={styles.logo} resizeMode={'cover'} />\n\n            <Button\n                title={DoubleLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={DoubleLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <View>\n\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: -50,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                        type: 'ionicon',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.ambiantSoundPlay() }\n            />\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 20,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.soundEnabled ? 'sound' : 'sound-mute',\n                        type: 'entypo',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.setSoundEnabled(prev => !prev) }\n            />\n            </View>\n\n            <Button\n                title={DoubleLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => {\n                    props.ambiant.unloadAsync();\n                    props.setPage(null);\n                }}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}","const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};\n\nexport const generateRandomPair = (length) => {\n    const colors = [\n        '#791414',\n        '#143479',\n        '#791462',\n        '#147920',\n        '#797714',\n        '#14AB9D'\n    ];\n    const icons = [\n        'airplane',\n        'boat',\n        'bulb',\n        'color-palette',\n        'earth',\n        'gift',\n        'happy',\n        'heart-circle',\n        'restaurant',\n        'ribbon'\n    ]\n    var arr = [];\n    for (let i = 0; i < length / 2; i++) {\n        var indexColor = Math.floor(Math.random() * colors.length);\n        var indexIcon = Math.floor(Math.random() * icons.length);\n        arr.push({ color: colors[indexColor], icon: icons[indexIcon] }, { color: colors[indexColor], icon: icons[indexIcon] });\n        colors.splice(indexColor, 1);\n        icons.splice(indexIcon, 1);\n    }\n    arr = shuffle(arr);\n    for (let i = 0; i < arr.length; i++) {\n        const el = arr[i];\n        el.idx = i\n    }\n\n    return (arr);\n};","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements';\n\nimport { Dimensions } from 'react-native'\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nimport styles from '../styles';\n\nexport default function Card(props) {\n    var cardStyles;\n    const factor = SCREEN_WIDTH >= SCREEN_HEIGHT ? SCREEN_HEIGHT : SCREEN_WIDTH;\n    if (props.inPlay) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.PlayingCard]];\n    else if (props.inFound || props.show) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.VersoCard]];\n    else cardStyles = styles.RectoCard\n\n    const icon = !props.inFound && !props.inPlay && !props.show ? 'help-circle-outline' : props.icon;\n\n    return (\n        <>\n            <TouchableOpacity style={ cardStyles } onPress={() => {\n                if (!props.inPlay && !props.inFound) props.ReturnCard(props.index);\n            }}>\n                <Icon\n                    name={icon}\n                    size={props.inFound || props.show || props.inPlay ? factor * .08 : factor * .08}\n                    color={props.inFound || props.show || props.inPlay ? 'white' : 'grey'}\n                    type=\"ionicon\"\n                    style={styles.IconCard}\n                />\n            </TouchableOpacity>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { View, Text, Modal } from 'react-native';\n\nimport { Button, Overlay, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../assets/img/activities/sad.gif';\n\nimport Lottie from '../../utils/Lottie';\n\nimport styles from './styles';\n\nimport { generateRandomPair } from './subs/helpers';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport Card from './subs/Card';\n\nexport default function Play(props) {\n    const [game, setGame] = useState([...generateRandomPair(4)]); // the current map game\n    const [found, setFound] = useState([]);\n    const [tries, setTries] = useState(3);\n    const [play, setPlay] = useState([]); // the current play of the player, an array with two values max, corresponding to the cards the player played\n    const [show, setShow] = useState(true);\n    const [confetti, setConfetti] = useState(false);\n    const [pause, setPause] = useState(false);\n\n    const TrophyLottie = require('../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../assets/lottie/sad.json');\n\n    const setLengthGame = () => {\n        if (props.score <= 8)\n            return 4;\n        else if (props.score <= 15)\n            return 6;\n        else if (props.score <= 30)\n            return 8;\n        else if (props.score <= 45)\n            return 10;\n        else\n            return 12;\n    }\n\n    // Exemple game element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null },\n            { idx: 2, color: '#ffffff', icon: null },\n            { idx: 3, color: '#ferdnc', icon: null }\n        ]\n    */\n\n        // each play, we push the current card to the play state, and check if the first element exists in the\n        // game state, and if the second element is the same as the first one, if so => success for a round, and push\n        // this pair in the found state. If fail => clear the play && found states\n\n    // Exemple play element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 2, color: '#ffffff', icon: null }\n        ] // this is a successful array\n\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null }\n        ] // this is a fail array\n    */\n\n    const failOverlay = () => {\n        if (props.modal == false) return;\n        return (\n            <>\n                <Lottie\n                    LottieSource={SadLottie}\n                    ImageSource={SadImage}\n                    autoplay={true}\n                    loop={true}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const successOverlay = () => {\n        if (!confetti) setConfetti(true);\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].BestScoreToday(props.bestScoreDay)}\n                </Text>\n                <Lottie\n                    LottieSource={TrophyLottie}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n    \n    const newModel = () => {\n        if (props.score == 0) return;\n        const currentGameLength = game.length;\n        props.setScore(prevScore => prevScore - 1);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(currentGameLength)]);\n    };\n\n    const printButton = () => {\n        return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={show ? DoubleLang[props.lang].Start : DoubleLang[props.lang].Reinit} onPress={() => { if (show) setShow(false); else newModel(); }} buttonStyle={[styles.playButtons, {backgroundColor: show ? '#208bdc' : 'green'}]} icon={\n                    <Icon\n                    name={show ? \"play\" : ''}\n                    size={18}\n                    color=\"white\"\n                    type=\"ionicon\"\n                />\n                } iconRight={true} disabled={!show && props.score === 0 || tries <= 1} />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.ambiantSoundPlay() }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.soundEnabled ? 'sound' : 'sound-mute',\n                            type: 'entypo',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.setSoundEnabled(prev => !prev) }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='red'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: 'caret-back',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.giveUp() }\n                    style={{marginHorizontal: 5}}\n                />\n            </View>);\n    };\n    \n    const ReturnCard = (key) => {\n        if (pause || show) return;\n        const currentPlay = play;\n        const indexGame = game[key];\n        const playing = [...currentPlay, indexGame];\n        if (playing.length == 2) {\n            // check if same card or return all and lose a try\n            if (playing[0].color === playing[1].color && playing[0].icon === playing[1].icon) {\n                const currentGameLength = game.length;\n                const nFound = [...found, playing[0], playing[1]];\n                if (nFound.length == currentGameLength) {\n                    props.playSound('next');\n                    props.setScore(prevScore => prevScore + 1);\n                    setShow(true);\n                    setTries(3);\n                    setGame([...generateRandomPair(setLengthGame())]);\n                    setFound([]);\n                } else {\n                    props.playSound('success');\n                    setFound(nFound);\n                }\n                setPlay([]);\n            } else {\n                setPlay(playing);\n                props.playSound('fail');\n                setPause(true);\n                setTimeout(() => {\n                    if (tries != 0) setTries(prevTries => prevTries - 1);\n                    if (tries === 0)\n                        props.endGame();\n                    else {\n                        setPlay([]);\n                        setFound([]);\n                    }\n                    setPause(false);\n                }, 1000);\n            }\n        } else {\n            setPlay(playing);\n            props.playSound('play');\n        }\n    };\n\n    const printCards = () => {\n        return game.map( (el, i) => {\n            var inFound = false;\n            var inPlay = false;\n            if (found.find(element => element.idx === i )) inFound = true;\n            else if (play.find(element => element.idx === i )) inPlay = true;\n            return (<Card show={show} key={i} index={i} inFound={inFound} inPlay={inPlay} backgroundColor={el.color} icon={el.icon} ReturnCard={ReturnCard} />);\n        });\n    };\n\n    const newGame = () => {\n        if (confetti) setConfetti(false);\n        props.setModal(false);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(4)]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n            )}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                { props.success && props.modal ? successOverlay() : failOverlay() }\n                <View style={{flexDirection: 'row', marginTop: 20}}>\n                    <Button title={DoubleLang[props.lang].Retry} onPress={() => newGame()} buttonStyle={{marginRight: 10}} icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n\n                    <Button title={DoubleLang[props.lang].Leave} onPress={() => { \n                        if (confetti) setConfetti(false);\n                        props.setModal(false);\n                        props.setTab(0);\n                    }} buttonStyle={{backgroundColor: 'red'}} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </View>\n            </Overlay>\n            <View style={styles.viewGame}>\n                { printCards() }\n            </View>\n            <View style={{alignItems: 'center', width: wp('100%'), marginTop: -10}}>\n                { show === true ? <Text>{DoubleLang[props.lang].Remember()}</Text> : <></> }\n                <Text>{DoubleLang[props.lang].Score(props.score)}</Text>\n                <Text>{DoubleLang[props.lang].BestDayScore(props.bestScoreDay)}</Text>\n                <Text>{DoubleLang[props.lang].RemaningTries(tries)}</Text>\n                { printButton() }\n            </View>\n        </>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport {\n    Text,\n    BackHandler,\n    ScrollView,\n    Alert\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport styles from './styles';\n\nimport * as API from '../../../data/doubleApi';\n\nimport Help from './Help';\nimport Menu from './Menu';\nimport Play from './Play';\n\nconst currentDate = new Date().toLocaleDateString('fr-FR');\n\nexport default function Double(props) {\n    const [tab, setTab] = useState(0);\n    const [score, setScore] = useState(0);\n    const [bestScoreDay, setBestScoreDay] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [ambiant, setAmbiant] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n    const [soundEnabled, setSoundEnabled] = useState(true);\n    const [ambiantEnabled, setAmbiantEnabled] = useState(true);\n\n    useEffect( async () => {\n        // API.clear();\n\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by kilo\n            require(`../../../assets/sound/double/ambiant.mp3`),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n\n        API.getScoreDay(props.personId, currentDate).then((data) => {\n            if (data.length > 0) setBestScoreDay(data[0].score);\n        });\n\n        API.getBestScore(props.personId).then((data) => {\n            if (data.length > 0) setBestScore(data[0].score);\n        });\n\n    }, []);\n\n    useEffect(() => {\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1 && score > 0) {  \n                    giveUp()\n                    return ;\n                }\n                setTab(0);\n            } else {\n                ambiant.unloadAsync();\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, ambiant]);\n\n    const endGame = async () => {\n        setModal(true);\n        let bestDayScore = false;\n        let bestScore = false;\n        if (score > bestScoreDay) { \n            playSound('applause');\n            setSuccess(true);\n            setBestScoreDay(score);\n            bestDayScore = true;\n            if (score > bestScore) {\n                bestScore = true;\n                setBestScore(score);\n            }\n        } else {\n            playSound('lose');\n            setSuccess(false);\n        }\n        await API.insertScore(props.personId, score, currentDate, bestDayScore, bestScore);\n        setScore(0);\n    };\n\n    const ambiantSoundPlay = () => {\n        if (ambiantEnabled) ambiant.pauseAsync();\n        else ambiant.playAsync();\n        setAmbiantEnabled(prevEnable => !prevEnable);\n    };\n    \n    const giveUp = () => {\n        if (score === 0) setTab(0);\n        else return Alert.alert(\n            DoubleLang[props.lang].TitleGiveUp,\n            DoubleLang[props.lang].SureToGiveUp,\n            [\n                {\n                    text: DoubleLang[props.lang].Leave,\n                    onPress: () => { null },\n                    style: 'cancel'\n                },\n                {\n                    text: DoubleLang[props.lang].GiveUp,\n                    onPress: () => {\n                        endGame();\n                    }\n                },\n            ]\n        )\n    };\n\n    const playSound = async (type) => {\n        if (!soundEnabled && !['applause', 'lose'].includes(type)) return;\n        if (sound) sound?.unloadAsync();\n        let choosenSound;\n        switch (type) {\n            case \"success\":\n                choosenSound = require(`../../../assets/sound/double/success.mp3`);\n                break;\n            case \"fail\":\n                choosenSound = require(`../../../assets/sound/double/fail.mp3`);\n                break;\n            case \"play\":\n                choosenSound = require(`../../../assets/sound/double/play.mp3`);\n                break;\n            case \"next\":\n                choosenSound = require(`../../../assets/sound/double/next.mp3`);\n                break;\n            case \"applause\":\n                choosenSound = require(`../../../assets/sound/global/applause.mp3`);\n                break;\n            case \"lose\":\n                choosenSound = require(`../../../assets/sound/global/you_lose.mp3`);\n                break;\n            default:\n                break;\n        }\n        const { sound } = await Audio.Sound.createAsync(choosenSound);\n        setSound(sound);\n        sound.playAsync();\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    ambiant={ambiant}\n                    setSoundEnabled={setSoundEnabled}\n                    soundEnabled={soundEnabled}\n                    ambiantEnabled={ambiantEnabled}\n                    ambiantSoundPlay={ambiantSoundPlay}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                        lang={props.lang}\n                        setTab={setTab}\n                        score={score}\n                        setScore={setScore}\n                        giveUp={giveUp}\n                        modal={modal}\n                        setModal={setModal}\n                        bestScoreDay={bestScoreDay}\n                        success={success}\n                        endGame={endGame}\n                        playSound={playSound}\n                        ambiantSoundPlay={ambiantSoundPlay}\n                        ambiantEnabled={ambiantEnabled}\n                        soundEnabled={soundEnabled}\n                        setSoundEnabled={setSoundEnabled}\n                    />;\n        } else if (tab === 2) {\n            return (<Help lang={props.lang} setTab={setTab} />);\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <ScrollView style={styles.view} contentContainerStyle={{alignItems: 'center'}}>\n            { printPage() }\n        </ScrollView>\n    );\n};","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\nimport Double from '../components/activities/Double';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return <Double lang={lang} setPage={setPage} personId={personId} />;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n        /* {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        }, */\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nimport { Audio } from 'expo-av';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n\n    useEffect( () => {\n        Audio.setIsEnabledAsync(true);\n    }, [])\n\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    scoreRow: {\n        flex: 1,\n        height: 180,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreRowSimon: {\n        flex: 1,\n        height: 250,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreHeading: {\n        fontSize: 18,\n        color: '#2089dc',\n        fontWeight: 'bold',\n        margin: 5\n    },\n    NoScore: {\n        color: 'grey',\n        fontStyle: 'italic',\n        marginTop: 45,\n        marginLeft: 45\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\nimport { Badge } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport { ScoreRatio } from '../../../../components/activities/Quiz/utils/scoreFunc';\nimport * as API from '../../../../data/quizApi';\n\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nexport default function QuizScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [quizScore, setQuizScore] = useState([]);\n\n    useEffect( () => {\n        API.get(props.personId).then((data) => {\n            const arr = [];\n            for (let i = 0; i < data.length; i++) {\n                const el = data[i];\n                arr.push({score: ScoreRatio(el.content, props.personId), name: el.name});\n            }\n            setQuizScore(arr);\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (quizScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            return quizScore.map( (el,i) => {\n                return (\n                    <View style={{marginHorizontal: 15}} key={i}>\n                        <Badge\n                            value={el.name}\n                            textStyle={{textAlign: 'center'}}\n                            badgeStyle={{position:'absolute', paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 100, zIndex: 3}}\n                        />\n                        <CircularProgress\n                            value={el.score}\n                            textStyle={{marginBottom: -10}}\n                            title={ActivitiesLang[props.lang].Success}\n                            valueSuffix={'%'}\n                            titleStyle={{marginBottom: 10}}\n                            initialValue={0}\n                            \n                            delay={500}\n                            activeStrokeColor={'#2089dc'}\n                            radius={65}\n                            inActiveStrokeColor={'#9b59b6'}\n                            inActiveStrokeOpacity={0.5}\n                            inActiveStrokeWidth={6}\n                            activeStrokeWidth={12}\n                        />\n                    </View>\n                );\n            });\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRow} horizontal={true}>\n            <View>\n                <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].QuizScore}</Text>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} /> :\n                    <ScrollView horizontal={true}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/simonApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function SimonScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [simonScore, setSimonScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setSimonScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (simonScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = simonScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].SimonScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/doubleApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function DoubleScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [doubleScore, setDoubleScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setDoubleScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (doubleScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = doubleScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].DoubleScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React from 'react';\nimport { ScrollView } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\n\nimport QuizScore from './QuizScore';\nimport SimonScore from './SimonScore';\nimport DoubleScore from './DoubleScore';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <QuizScore lang={props.lang} personId={props.personId} />\n            <DoubleScore lang={props.lang} personId={props.personId} />\n            <SimonScore lang={props.lang} personId={props.personId} />\n        </ScrollView>\n    );\n}\n","import React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport { Platform } from 'react-native';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    \n    const navigate = useNavigate();\n\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: Platform.OS == 'ios' ? 100 : 60, color: '#3B8EFF', backgroundColor: '#355c7d' }],\n                tabBarLabelStyle: [{ color: 'white', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} personId={props.personId} /> }\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        fullname={props?.fullname}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                        setPerson={props.setPerson}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { Platform } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        paddingBottom: 10,\n        width: wp('100%'),\n        height: hp('17%'),\n        backgroundColor: '#355c7d'\n    },\n    topLottie: {\n        marginTop: 13,\n        width: 60,\n        height: undefined,\n        marginBottom: Platform.OS === 'ios' ? 35 : 15,\n        backgroundColor: '#355c7d'\n    },\n    bgLottie: {\n        width: wp('100%'),\n        opacity: 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: wp('100%'),\n        height: hp('100%'),\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: '#355c7d'\n    },\n    heading: {\n        fontSize: 20,\n        color: 'white',\n        marginTop: 0,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%'\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport TopImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/selection');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/selection', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/selection', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TopImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={state?.username}\n                        fullname={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setPerson={setPerson}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\nimport React from 'react';\n\nimport { Text } from 'react-native'\nimport App from './App';\n\nText.defaultProps = Text.defaultProps || {};\nText.defaultProps.allowFontScaling = false\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig, reset } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport SelectionMenu from './pages/SelectionMenu';\nimport Activities from './pages/Activities';\nimport Home from './pages/Home';\nimport Tutorial from './pages/Tutorial';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [lang, setLang] = useState('fr');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        // reset();\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    useEffect( () => {\n        let local = Localization.locale?.split('-')[0] || 'fr';\n        setLang(['en', 'fr'].includes(local) ? local : 'fr');\n        console.log('- Imported config file -');\n    }, [config]);\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                    setLang={setLang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/tutorial\"\n                            element={\n                                <Tutorial\n                                    lang={lang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={<Home lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/selection\"\n                            element={\n                                <SelectionMenu\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}