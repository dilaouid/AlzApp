{"version":3,"sources":["assets/img/interface/profile.jpg","assets/sound/simon/green.mp3","assets/img/username/chooseusername.gif","assets/img/home/loading_brain.gif","assets/img/home/addedUser.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/tutorial/swipe-right.gif","assets/img/activities/brain.gif","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/simon/trophy.gif","assets/img/activities/quizz/logo.png","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","pages/ChooseUsername/styles.js","language/home/index.js","components/home/Rows.js","components/home/styles.js","components/utils/Lottie.js","components/home/PersonCreation/Success.js","language/activities/dictaphone/index.js","data/dictaphoneApi.js","data/simonApi.js","utils/helpers.js","data/personApi.js","components/home/PersonCreation/Form.js","components/home/PersonCreation/CreatePerson.js","pages/Home/styles.js","pages/Home/index.js","pages/ChooseUsername/index.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","components/utils/HomeOrTutorial.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/index.js","language/activities/quizz/index.js","components/activities/Quizz/styles.js","components/activities/Quizz/Menu.js","components/activities/Quizz/QuizzList.js","data/quizzApi.js","components/activities/Quizz/ViewQuizz.js","components/activities/Quizz/CreateQuizz.js","components/activities/Quizz/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","StyleSheet","create","wrapper","height","marginTop","container","flex","alignItems","alignContent","heading","fontSize","marginBottom","marginHorizontal","textAlign","color","textInput","borderColor","borderRadius","paddingHorizontal","backgroundColor","shadowOpacity","shadowRadius","shadowOffset","width","elevation","image","buttonContainer","button","marginLeft","buttonText","paddingTop","slide","padding","viewrow","flexDirection","flexWrap","justifyContent","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","props","navigate","useNavigate","TouchableScale","Platform","OS","default","mod","index","componentProps","Component","key","id","bottomDivider","containerStyle","onPress","state","source","picture","uri","DefaultProfilePicture","rounded","Content","Title","fullname","Subtitle","description","Chevron","rightButton","minHeight","imageSuccess","leftButton","view","alignSelf","marginVertical","btnImport","btnSave","profilePicture","successPageTitle","Lottie","LottieStyle","LottieSource","loop","hasOwnProperty","autoPlay","resizeMode","Image","ImageSource","ImageStyle","Success","View","SuccessImage","styles","edit","InterfaceLang","title","e","close","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","pushErrors","errors","field","msg","person","trim","Object","keys","success","upd","_id","$set","catch","log","Form","useState","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","FileSystem","encoding","fsRead","setImage","titleStyle","buttonStyle","icon","name","size","placeholder","leftIcon","label","errorStyle","renderErrorMessage","maxLength","errorMessage","inputStyle","value","onChangeText","setFullname","setDescription","raised","cb","Person","imgName","uuidv4","path","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","topImage","zIndex","boldtext","subtitle","overflow","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","fontStyle","searchBar","searchInputStyle","Home","isLoading","setIsLoading","search","setSearch","setIndex","HomeLang","btnText","setBtnTxt","active","setActive","swiper","useRef","useLocation","useEffect","regex","RegExp","$regex","backHandler","BackHandler","addEventListener","remove","list","LoadingBrain","TouchableOpacity","activeOpacity","idx","ActivityIndicator","current","scrollBy","SafeAreaView","ref","showsButtons","scrollEnabled","pagingEnabled","showsPagination","onIndexChanged","setTimeout","ScrollView","inputContainerStyle","map","el","input","setInput","confirmed","setConfirmed","parseUsername","setUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","animating","Loading","LoadingImage","slideOdd","paddingBottom","marginRight","borderWidth","Tutorial","res","SwipeImage","position","opacity","StepOne","StepTwo","StepThree","StepFour","StepFive","StepSixth","to","component","Config","HomeOrTutorial","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quizz","SuggestedActivities","Back","ReturnList","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","deletePerson","SimonDB","removeAsync","DictaphoneDB","deleted","type","iconContainerStyle","ActivitiesLang","Alert","multi","clear","isPlaying","setIsPlaying","progress","setProgress","Audio","Sound","sound","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","playAsync","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","unloadAsync","positionMillis","playableDurationMillis","variant","animation","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","record","DictaphoneLang","Untiled","Date","getURI","created","deleteRecord","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","createAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","clr","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","logo","leaveButton","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","Menu","SimonLogo","SimonLang","setTab","Game","start","setStart","failed","setFailed","canPlay","setCanPlay","setLoading","setTries","Math","round","random","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","playButtonDemo","randomNumber","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","disabled","tab","Create","SuccessfulRatio","AddQuestion","Complete","createButton","QuizzLogo","quizz","QuizzLang","QuizzList","Datastore","ContentDB","ViewQuizz","quizzId","CreateQuizz","setQuizz","returnComponent","page","ActivitiesList","iconPosition","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","setPerson","BgSource","navTheme","DefaultTheme","colors","background","BackgroundImage","NavigationContainer","theme","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","includes","useCallback","fetchData","StatusBar","hidden","LangInterface","exact","element"],"mappings":"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","file":"static/js/app.09f210c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading_brain.ef5884d9.gif\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.ede08671.png\";","module.exports = __webpack_public_path__ + \"static/media/2.b87932e3.png\";","module.exports = __webpack_public_path__ + \"static/media/3.3ed4e762.png\";","module.exports = __webpack_public_path__ + \"static/media/4.80535fcd.png\";","module.exports = __webpack_public_path__ + \"static/media/5.da0bedf3.png\";","module.exports = __webpack_public_path__ + \"static/media/6.7911d645.png\";","module.exports = __webpack_public_path__ + \"static/media/swipe-right.6dde9c7c.gif\";","module.exports = __webpack_public_path__ + \"static/media/brain.70fc8c58.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.097ce51b.png\";","module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.348cd96d.png\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage'\n\nconst Datastore = require('react-native-local-mongodb')\n\nexport const db = new Datastore({ filename: 'ConfigSchema', storage: AsyncStorage, autoload: true });\n\nexport function SawTutorial(bool) {\n    return db.updateAsync({ hasSeenTutorial: { $exists: true } }, { hasSeenTutorial: bool });\n};\n\nexport async function setUsername (input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n};\n\nexport async function getUsername() {\n    return db.findAsync({username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n}\n\nexport async function getConfig() { \n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        if (docs.length == 0) {\n            db.insertAsync({\n                username: '',\n            });\n            return null;\n        } else {\n            return docs[0].username;\n        }\n    }).then(resp => {\n        return resp[0]?.username || null;\n    });\n\n    const hasSeenTutorial = await db.findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n        if (docs.length == 0) {\n            db.insertAsync({\n                hasSeenTutorial: false\n            });\n            return false;\n        } else {\n            return docs[0].hasSeenTutorial;\n        }\n    }).then(resp => {\n        return resp[0]?.hasSeenTutorial || false;\n    });\n    return {username, hasSeenTutorial};\n};\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n};\n\nexport function reset() {\n    return AsyncStorage.clear();\n}","import { Text } from 'react-native'\n\nconst applyBoldStyle = text => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) => result.splice(++numberOfItemsAdded + i, 0, <Text key={i} style={{fontWeight: 'bold'}}>{boldText}</Text>));\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: \"Importer une image\",\n        FullName: \"Nom complet\",\n        SetFullName: \"Nom complet (2 à 25 caractères)\",\n        Description: \"Description (facultatif)\",\n        SetDescription: \"Courte description complémentaire\",\n        RequiredField: \"Ce champs doit obligatoirement être correctement rempli\",\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: \"Enregistrer\",\n        CreatedPerson: \"La personne a bien été rajoutée à votre liste !\",\n        EditedPerson: \"Le profil a été modifié avec succès !\",\n        ReturnToForm: \"Retourner sur le formulaire\",\n\n        // Modal related\n        Yes: \"Oui\",\n        No: \"Non\",\n        AreYouSure: \"En êtes vous sûr ?\",\n        DeletePerson: (username) => {\n            return (\n                `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`\n            )\n        },\n    \n    \n    \n        \n        // Loading related\n        GlobalLoading: \"Application en cours de chargement...\",\n    },\n    en: {\n        // Input related\n        YourUsername: \"Your username\",\n        ImportImage: \"Import a picture\",\n        FullName: \"Full name\",\n        SetFullName: \"Set full name (between 2-25 characters)\",\n        Description: \"Description (optional)\",\n        SetDescription: \"Short complementary description\",\n        RequiredField: \"This field is required\",\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: \"Save\",\n        CreatedPerson: \"The person has been successfully added to your list!\",\n        EditedPerson: \"The profile has been successfully edited!\",\n        ReturnToForm: \"Return to the form\",\n\n        // Modal related\n        Yes: \"Yes\",\n        No: \"No\",\n        AreYouSure: \"Are you sure?\",\n        DeletePerson: (username) => {\n            return (\n                `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`\n            )\n        },\n    \n    \n    \n        \n        // Loading related\n        GlobalLoading: \"Application loading...\",\n    }\n};","import { Text } from 'react-native'\n\nconst applyBoldStyle = text => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) => result.splice(++numberOfItemsAdded + i, 0, <Text key={i} style={{fontWeight: 'bold'}}>{boldText}</Text>));\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: \"Bienvenue sur AlzheimApp\",\n        Step1Content: () => {\n            return (applyBoldStyle({\n                sentence: \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp']\n            }))\n        },\n\n        // Second step of the tutorial\n        Step2Header: \"Aucune connexion internet requise\",\n        Step2Content: \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: \"Partagez le suivi\",\n        Step3Content: () => {\n            return (applyBoldStyle({\n                sentence: \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? C'est possible, le partage est réalisable entre deux appareils par {0} !\",\n                boldText: ['Bluetooth']\n            }))\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: \"100% gratuit\",\n        Step4Content: () => {\n            return (applyBoldStyle({\n                sentence: \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité']\n            }))\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: \"100% open source\",\n        Step5Content: \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: \"Prêt(e) à commencer ?\",\n        LastStepButton: \"PRÊT(E)\",\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: \"Welcome to AlzheimApp\",\n        Step1Content: () => {\n            return (applyBoldStyle({\n                sentence: \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp']\n            }))\n        },\n\n        // Second step of the tutorial\n        Step2Header: \"No internet connection required\",\n        Step2Content: \"Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.\",\n\n        // Third step of the tutorial\n        Step3Header: \"Share the follow-up\",\n        Step3Content: () => {\n            return (applyBoldStyle({\n                sentence: \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can share data between two devices with {0} technology!\",\n                boldText: ['Bluetooth']\n            }))\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: \"100% free\",\n        Step4Content: () => {\n            return (applyBoldStyle({\n                sentence: \"{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.\",\n                boldText: ['Completly free, without any ad']\n            }))\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: \"100% opensource\",\n        Step5Content: \"You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..\",\n        \n        // Last step of the tutorial\n        LastStepHeader: \"Ready to start?\",\n        LastStepButton: \"READY\",\n        \n        ChooseUsername: \"Choose your username\",\n    }\n};","import { StyleSheet } from 'react-native'\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    textInput: {\n        height: 40,\n        borderColor: 'gray',\n        borderRadius: 20,\n        paddingHorizontal: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        elevation: 2\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    buttonContainer: {\n        alignItems: \"stretch\",\n        width: 100\n    },\n    button: {\n        backgroundColor:'rgba(40, 30, 255, 0.8)',\n        borderRadius:10,\n        width: 80,\n        marginLeft: 10\n    },\n    buttonText: {\n        paddingTop:10,\n        color: 'white',\n        textAlign: 'center'\n    },\n    slide: {\n        flex: 1,\n        padding: 20\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100+'%',\n        flexDirection: \"row\",\n        flexWrap: \"nowrap\",\n        justifyContent: 'center'\n    }\n});\n\n","import { Text } from 'react-native'\n\nconst applyBoldStyle = text => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) => result.splice(++numberOfItemsAdded + i, 0, <Text key={i} style={{fontWeight: 'bold', color: \"#3B8EFF\"}}>{boldText}</Text>));\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return (applyBoldStyle({\n                sentence: \"Bonjour {0} !\",\n                boldText: [username]\n            }))\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: \"Ajouter une personne\",\n        Edit: \"Éditer\",\n        Delete: \"Supprimer\",\n        ReturnToList: \"Retour à la liste\",\n        NobodyYet: \"La liste est vide (pour le moment...)\",\n        WrongFullname: \"Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères\",\n        Search: \"Rechercher une personne\",\n    },\n    en: {\n        Hello: (username) => {\n            return (applyBoldStyle({\n                sentence: \"Hello {0}!\",\n                boldText: [username]\n            }))\n        },\n        WhatsUp: \"What are you about to produce today?\",\n        AddAPerson: \"Add a person\",\n        Edit: \"Edit\",\n        Delete: \"Delete\",\n        ReturnToList: \"Return to the list\",\n        NobodyYet: \"The list is empty (for the moment...)\",\n        WrongFullname: \"The full name is required and must contains between 2 and 25 characters\",\n        Search: \"Search a person\",\n    }\n};","import React from 'react'\nimport {\n    ListItem,\n    Avatar\n} from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg'\nimport { useNavigate } from 'react-router-native'\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.id, bottomDivider:true, containerStyle:mod } :\n            { key:props.id, bottomDivider:true, containerStyle:mod };\n    return(\n        <ListItem {...componentProps} onPress={() => { navigate(`/activities/${props.id}`, {state: {lang: props.lang ?? 'fr', username: props.username}}); }}>\n            <Avatar source={props?.picture ? {uri:props.picture} : DefaultProfilePicture } rounded/>\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    )\n};","import { StyleSheet } from 'react-native'\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red'\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300\n    },\n    leftButton: {\n        minHeight: '100%'\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%'\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10\n    }\n});\n\n","import React from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    { return Platform.OS != 'web' ?\n        <LottieView\n            style={props.LottieStyle}\n            source={props.LottieSource}\n            loop={props.hasOwnProperty('loop') ? props.loop : true}\n            autoPlay={props.hasOwnProperty('autoPlay') ? props.autoPlay : true}\n            resizeMode=\"cover\"\n        /> : <Image source={props.ImageSource} style={props.ImageStyle} />\n    }\n};\n\nexport default Lottie;","import React from 'react';\nimport { View, Text, Platform } from 'react-native';\nimport {\n  Button,\n  Image\n} from 'react-native-elements';\nimport Lottie from '../../../components/utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/home/addedUser.gif'\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n\n  const LottieSource = require('../../../assets/img/home/addedUser.json');\n\n  return (\n    <View>\n        <Lottie\n          LottieSource={LottieSource}\n          ImageSource={SuccessImage}\n          LottieStyle={styles.imageSuccess}\n          ImageStyle={styles.imageSuccess}\n          loop={false} autoPlay={true} />\n        <Text style={styles.successPageTitle}>{props.edit === false ? InterfaceLang[props.lang].CreatedPerson : InterfaceLang[props.lang].EditedPerson}</Text>\n        <Button title={InterfaceLang[props.lang].ReturnToForm}\n            style={{backgroundColor: 'grey'}}\n            onPress={(e) => { props.close() }}/>\n    </View>\n  );\n};","import { Text } from 'react-native'\n\nconst applyBoldStyle = text => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) => result.splice(++numberOfItemsAdded + i, 0, <Text key={i} style={{fontWeight: 'bold', color: \"#3B8EFF\"}}>{boldText}</Text>));\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: \"Enregistrer\",\n        Pause: \"Pause\",\n        Stop: \"Stop\",\n        Continue: \"Continuer\",\n        Untitled: \"Sans titre\",\n        ChooseTitle: \"Choississez un titre\",\n        PleaseChooseATitle: \"Merci de choisir un titre pour cet enregistrement\",\n        Title: \"Nom de l'enregistrement\",\n        Cancel: \"Annuler\",\n        Save: \"Sauvegarder\",\n        Placeholder: \"Le nom de votre enregistrement (facultatif)\",\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack: \"Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.\",\n        Delete: \"Supprimer\",\n        NothingYet: \"Aucun enregistrement réalisé\",\n    },\n    en: {\n        Start: \"Start recording\",\n        Pause: \"Pause recording\",\n        Stop: \"Stop recording\",\n        Continue: \"Continue recording\",\n        Untitled: \"Untitled\",\n        ChooseTitle: \"Choose a title\",\n        PleaseChooseATitle: \"Please choose a title for this record\",\n        Title: \"Record name\",\n        Cancel: \"Cancel\",\n        Save: \"Save\",\n        Placeholder: \"The name of your record (optional)\",\n        DeleteTrack: \"Delete the track\",\n        SureDeleteTrack: \"Are you sure to delete this track ? This action cannot be undone.\",\n        Delete: \"Delete\",\n        NothingYet: \"No track recorded\",\n    }\n};","import AsyncStorage from '@react-native-async-storage/async-storage'\nimport * as FileSystem from 'expo-file-system';\n\nimport { lang as DictaphoneLang } from '../language/activities/dictaphone'\n\nconst Datastore = require('react-native-local-mongodb')\n\nexport const db = new Datastore({ filename: 'DictaphoneSchema', storage: AsyncStorage, autoload: true });\n\nexport function create(record, lang) {\n    if (record?.name?.length == 0) record.name = DictaphoneLang[lang].Untiled;\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId\n    });\n};\n\nexport function get(personId) {\n    return db.find({personId: personId}).sort({date: -1}).exec( (err, datas) => {\n        return datas;\n    });\n};\n\nexport async function del(personId, id) {\n    const data = await db.find({personId: personId, _id: id}).exec( (err, res) => {\n        return res;\n    });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({_id: id, personId: personId});\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage'\n\nconst Datastore = require('react-native-local-mongodb')\n\nexport const db = new Datastore({ filename: 'SimonSchema', storage: AsyncStorage, autoload: true });\n\nexport function getBestScore(personId) {\n    return db.find({personId: personId}).sort({score: -1}).exec( (err, data) => {\n        if (err) console.error(err);\n        return (data);\n    });\n};\n\nexport function getScoreDay(personId, date) {\n    return db.find({personId: personId, date: date}).sort({score: -1}).exec( (err, data) => {\n        if (err) console.error(err);\n        return (data);\n    });\n};\n\nexport function getScore(personId) {\n    return db.find({personId: personId}).sort({date: -1}).exec( (err, data) => {\n        if (err) console.error(err);\n        return (data);\n    });\n};\n\nexport function insertScore(personId, score, date) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score\n    });\n};\n\nexport function clear(personId) {\n    return db.removeAsync({personId: personId}, { multi: true });\n};","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) errors[field] = msg;\n    else errors[field] = msg;\n    return errors;\n};","import AsyncStorage from '@react-native-async-storage/async-storage'\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb')\n\nexport const db = new Datastore({ filename: 'PersonSchema', storage: AsyncStorage, autoload: true });\n\nexport function create(person) {\n    var err = [];\n    if (!person?.fullname || person.fullname?.trim()?.length > 25 || person.fullname?.trim()?.length < 2) pushErrors(err, 'fullname', null);\n    if (person?.description && person.description?.trim()?.length > 100) pushErrors(err, 'description', null);\n    if (Object.keys(err).length > 0) return { success: false, data: err };\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null\n    }\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) return {success: false, data: {}};\n        return {\n            success: true,\n            data: result\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) data.fullname = upd.fullname?.trim();\n    if (upd.hasOwnProperty('description')) data.description = upd.description?.trim();\n    if (upd.hasOwnProperty('picture')) data.picture = upd.picture?.trim();\n    return db.updateAsync({ _id: id }, { $set: { ...data } }  ).catch(err => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i')\n    return db.findAsync({fullname: { $regex: regex } })\n};\n\nexport function getById(id) {\n    return db.findAsync({_id: id});\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({personId: id})\n    await DictaphoneDB.find({personId: id}, (err, data) => {\n        if (err) console.error(err);\n        else data.map( async (el, i) => {\n            await FileSystem.deleteAsync(el?.path)\n        });\n    });\n    await db.findAsync({_id: id}, async (err, data) => {\n        if (err) console.error(err);\n        else if (data[0].picture) await FileSystem.deleteAsync(data[0]?.picture)\n    });\n    await DictaphoneDB.removeAsync({personId: id})\n    return db.removeAsync({_id: id});\n};\n\nexport function reset() {\n    return db.removeAsync({}, { multi: true });\n};","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport {\n  Button,\n  Divider,\n  Icon,\n  Input\n} from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport {v4 as uuidv4} from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg'\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n  const confirm = async () => {\n    var personId = props.personId ?? 0;\n    const cb = props.edit === true ? Person.edit(props.personId, {fullname: props.fullname, description: props.description}) : Person.create({fullname: props.fullname, description: props.description}, props.lang) \n    const result = await cb;\n    if (result.success == false) {\n        if (result.hasOwnProperty('fullname')) setFullnameError(InterfaceLang[props?.lang].RequiredField);\n        if (result.hasOwnProperty('description')) setDescriptionError(InterfaceLang[props?.lang].LimitExceededField(100));\n        return false;\n    } else {\n        if (personId == 0) personId = result._id;\n        if (props.image?.length > 0) {\n            let imgName = uuidv4();\n            let path = `${FileSystem.documentDirectory}personProfilPicture`;\n            await FileSystem.makeDirectoryAsync(path).catch(err => {\n                console.log('Directory already exists');\n            });\n            FileSystem.writeAsStringAsync(path + `/${imgName}.jpg`, props.image, {encoding: 'base64'}).then( () => {\n                Person.edit(personId, {picture: path + `/${imgName}.jpg`}).then( (data) => {\n                    if (props.edit == false) {\n                      result.picture = path + `/${imgName}.jpg`;\n                      props.addPerson(persons => [...persons, result]);\n                    } else props.setFullnameHeader(props.fullname?.trim());\n                    props.scs();\n                }).catch(err => {\n                    console.log('mongo err', err);\n                    return false;\n                })\n            }).catch(err => {\n                console.log('filesystem err:',err);\n            })\n        } else {\n            if (props.edit == false)\n              props.addPerson(persons => [...persons, result]);\n            else {\n              props.setFullnameHeader(props.fullname?.trim());\n            }\n            props.scs();\n        }\n    }\n  }\n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [1, 1],\n      quality: 1,\n    });\n\n    if (result.cancelled === true) return;\n\n    if (Platform.OS == 'web') {\n        alert('todo');\n    } else {\n        try {\n          let uri = result.uri;\n          props.setUriPreview(uri);\n          const fsRead = await FileSystem.readAsStringAsync(uri, {encoding: 'base64'}).catch(err => {\n              console.log(err);\n          });\n          props.setImage(fsRead);\n        }  catch (err) { console.log(err); }\n    }\n  };\n\n  return (\n    <View style={styles.view}>\n      <Image source={props.uriPreview ? { uri: props.uriPreview } : defaultProfilPicture} style={styles.profilePicture} />\n      <Button title={InterfaceLang[props?.lang].ImportImage} onPress={pickImage} titleStyle={{ fontSize: 15 }} buttonStyle={styles.btnImport} icon={\n        <Icon\n          name=\"image\"\n          size={15}\n          color=\"white\"\n          style={{marginHorizontal: 5}}\n        /> }\n      />\n      <Divider style={{width: 100+'%', marginVertical: 20}} width={2} />\n      <Input\n        placeholder={InterfaceLang[props?.lang].SetFullName}\n        leftIcon={\n          <Icon\n            name=\"person\"\n            size={24}\n            color='grey'\n          />\n        }\n        label={InterfaceLang[props?.lang].FullName}\n        errorStyle={{ color: 'red' }}\n        renderErrorMessage={true}\n        maxLength={25}\n        errorMessage={fullnameError}\n        inputStyle={{fontSize: 14, marginHorizontal: 10}}\n        value={props.fullname}\n        containerStyle={{width: 300, marginTop: -10}}\n        onChangeText={ (e) => { props.setFullname(e) }}\n      />\n\n      <Input\n        placeholder={InterfaceLang[props?.lang].SetDescription}\n        leftIcon={\n          <Icon\n            name=\"info\"\n            size={24}\n            color='grey'\n          />\n        }\n        label={InterfaceLang[props?.lang].Description}\n        errorStyle={{ color: 'red' }}\n        maxLength={100}\n        renderErrorMessage={true}\n        errorMessage={descriptionError}\n        inputStyle={{fontSize: 14, marginHorizontal: 10}}\n        containerStyle={{width: 300, marginBottom: 0}}\n        value={props.description}\n        onChangeText={ (e) => { props.setDescription(e) }}\n      />\n\n      <Button\n          raised={true}\n          title={InterfaceLang[props?.lang].Save}\n          onPress={ (e) => { confirm() }}\n          titleStyle={{ fontSize: 15 }}\n          buttonStyle={styles.btnSave}\n          iconRight={true}\n          icon={\n            <Icon\n              name=\"save\"\n              size={15}\n              color=\"white\"\n              style={{marginHorizontal: 5}}\n            />\n          }\n      />\n\n    </View>\n  );\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n  const [image, setImage] = useState();\n  const [fullname, setFullname] = useState('');\n  const [uriPreview, setUriPreview] = useState();\n  const [description, setDescription] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  const good = () => {\n    setSuccess(true);\n  };\n\n  const clear = () => {\n    setFullname('');\n    setUriPreview('');\n    setImage('');\n    setDescription('');\n    setSuccess(false);\n  }\n\n  const compProps = {\n    lang:props.lang,\n\n    fullname:fullname,\n    setFullname:setFullname,\n\n    image:image,\n    setImage:setImage,\n\n    uriPreview:uriPreview,\n    setUriPreview:setUriPreview,\n\n    description:description,\n    setDescription:setDescription,\n  }\n\n  return (\n    <View style={styles.view}>\n      {success ?\n      <Success {...compProps} close={clear} edit={false} /> :\n      <Form\n        {...compProps}\n        edit={false}\n        persons={props.persons}\n        addPerson={props.setPersons}\n        \n        scs={good} />}\n    </View>\n  );\n};","import { StyleSheet } from 'react-native'\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    wrapper: {\n        marginTop: 100,\n        textAlign: 'center',\n        alignItems: 'center',\n    },\n    topImage: {\n        flex: 1,\n        width: 80,\n        marginTop: -270,\n    },\n    heading: {\n        marginTop: -190,\n        fontSize: 20,\n        zIndex: 2\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: \"#3B8EFF\"\n    },\n    subtitle: {\n        textAlign: 'center',\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: \"#3B8EFF\",\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden'\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: 10\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden'\n    },\n    safeContainer: {\n        flex: 1,\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic'\n    },\n    searchBar: {\n        marginBottom: -25\n    },\n    searchInputStyle: {\n        textAlign:'center',\n        color: '#495058',\n        fontSize: 15\n    }\n});\n\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Text, View, Image, TouchableOpacity, SafeAreaView, ScrollView, ActivityIndicator, BackHandler } from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input } from 'react-native-elements';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport LoadingBrain from '../../assets/img/home/loading_brain.gif'\nimport { lang as HomeLang } from '../../language/home';\nimport Rows from '../../components/home/Rows';\nimport CreatePerson from '../../components/home/PersonCreation/CreatePerson';\n\nimport * as Person from '../../data/personApi';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(HomeLang[props.lang || lang].AddAPerson)\n    const [active, setActive] = useState(true);\n\n    const swiper = useRef(null);\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n\n    useEffect( () => {\n        if (!username || username?.trim()?.length < 2)\n            navigate('/');\n        else {\n            Person.get(search).then(data => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n          \"hardwareBackPress\",\n          ( () => { return true; })\n        );\n        return () => backHandler.remove();\n    }, [search]);\n\n    const swipePage = (idx) => {\n        if (idx == -1) idx = 1;\n        swiper.current.scrollBy(idx - index, true);\n    };\n\n    const changeIndex = (idx) => {\n        setIndex(idx);\n        setTimeout( () => {\n            if (idx == 0) setBtnTxt(HomeLang[lang].AddAPerson)\n            else if (idx == 1) setBtnTxt(HomeLang[lang].ReturnToList)\n            setActive(true);\n        }, 400)\n    };\n\n    const printRows = (list) => {\n        return(\n            list.map( (el, i) => {\n                return(<Rows index={i} key={el._id} username={username} id={el._id} fullname={el.fullname} description={el.description} picture={el.picture} lang={lang} />)\n            })\n        );\n    };\n\n    return(\n        <View style={styles.container}>\n            <View style={styles.wrapper}>\n                <Image source={LoadingBrain} resizeMode=\"contain\" style={styles.topImage}/>\n                <Text style={styles.heading}>{HomeLang[lang].Hello(username)}</Text>\n            </View>\n            <Text style={styles.subtitle}>{HomeLang[lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity = { .4 }\n                    onPress={(e) => {\n                        if (active == false) return;\n                        setActive(false);\n                        setBtnTxt(<ActivityIndicator color={'white'} size={'small'} />)\n                        swipePage(index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {isLoading ? <ActivityIndicator color={'blue'} style={{marginTop: 70}}/> : <Swiper\n                    ref={swiper} showsButtons={false}\n                    scrollEnabled={false} loop\n                    pagingEnabled index={0}\n                    showsPagination={false} \n                    onIndexChanged={(e) => { changeIndex(e); }}>\n                    <ScrollView>\n                        <Input placeholder={HomeLang[lang].Search} inputContainerStyle={styles.searchBar} onChangeText={ (e) => { setSearch(e) }} value={search} inputStyle={styles.searchInputStyle} />\n                        {persons && persons.length > 0 ? printRows(persons) : <Text style={styles.nobodyYet}>{HomeLang[lang].NobodyYet}</Text> }\n                    </ScrollView>\n                    <ScrollView>\n                        <CreatePerson persons={persons} setPersons={setPersons} lang={lang} />\n                    </ScrollView>\n                    <ScrollView />\n                </Swiper>}\n            </SafeAreaView>\n        </View>\n    );\n};","import React, { useEffect, useState } from 'react'\nimport { Text, View, TextInput, ActivityIndicator, TouchableOpacity, Image, BackHandler } from 'react-native';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername, SawTutorial } from '../../data/configApi';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\nimport Home from '../Home';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [confirmed, setConfirmed] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect( () => {\n        const backAction = () => {\n            return SawTutorial(false).then( () => {\n                navigate('/');\n                return true;\n            }).catch(err => {\n                return false;\n            });\n        };\n        const backHandler = BackHandler.addEventListener(\n            \"hardwareBackPress\",\n            backAction\n          );\n        return () => backHandler.remove();\n    }, [])\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            setUsername(username).then(response => {\n                setIsLoading(false);\n                setInput(username);\n                setConfirmed(true);\n            }).catch(err => {\n                console.log(err);\n            });\n        }\n        else {\n            setIsLoading(false);\n        }\n    };\n\n    if (!confirmed)\n        return(\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image source={ChooseUsernameGIF} resizeMode=\"contain\" style={styles.image}/>\n                </View>\n                <Text style={styles.heading}>{TutorialLang[props.lang].ChooseUsername}</Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid='transparent'\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={ (e) => { setInput(e) }}/>\n                    <TouchableOpacity\n                        style={styles.button}\n                        activeOpacity = { .5 }\n                        onPress={(e) => { parseUsername(input) }}\n                    >\n                        <Text style={styles.buttonText}> { isLoading ?\n                            <ActivityIndicator color=\"white\" size=\"small\" animating={true} /> :\n                            'OK'\n                        }</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n    );\n    else\n        return (<Home username={input} lang={props.lang} />)\n};","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif'\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = {width: 200, marginTop: 100}\n    return (\n        <View style={props.style}>\n            <Lottie LottieSource={LottieSource} LottieStyle={styles} ImageStyle={styles} ImageSource={LoadingImage} />\n            <Text style={{marginTop: 100, color:'#56BDC1', width: 150, textAlign: 'center'}}>{props.text}</Text>\n            <Text style={{marginTop: 100}}><ActivityIndicator color={'#246364'} size={'large'} style={{marginTop: 10}} /></Text>\n        </View>\n    )\n};\n\nexport default Loading;","import { StyleSheet } from 'react-native'\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20\n    },\n    slideOdd: {\n        flex: 1,\n        padding: 20,\n        backgroundColor:'#C8EEFF'\n    },\n    title: {\n        color: 'black',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center'\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center'\n    },\n    image: {\n        flex: 3,\n        width: 100+'%',\n        height: 400,\n    },\n    buttonContainer: {\n        flex: 2,\n        marginTop: -40,\n    },\n    button: {\n        marginTop:10,\n        paddingTop:15,\n        paddingBottom:15,\n        marginLeft:30,\n        marginRight:30,\n        backgroundColor:'#00BCD4',\n        borderRadius:10,\n        borderWidth: 1,\n        borderColor: '#fff'\n    },\n    buttonText: {\n        color:'#fff',\n        textAlign: 'center'\n    }\n});","import React, { useEffect } from 'react'\nimport { Text, View, Image, TouchableOpacity } from 'react-native'\n\nimport {\n    Link\n} from \"react-router-native\";\n\nimport StepOne from '../../assets/img/tutorial/1.png'\nimport StepTwo from '../../assets/img/tutorial/2.png'\nimport StepThree from '../../assets/img/tutorial/3.png'\nimport StepFour from '../../assets/img/tutorial/4.png'\nimport StepFive from '../../assets/img/tutorial/5.png'\nimport StepSixth from '../../assets/img/tutorial/6.png'\n\nimport SwipeImage from '../../assets/img/tutorial/swipe-right.gif'\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport Lottie from '../../components/utils/Lottie';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles'\nimport * as Config from '../../data/configApi';\nimport Home from '../Home';\n\n\nexport default function Tutorial(props) {\n\n    const LottieSource = require('../../assets/lottie/swipe-right.json');\n\n    useEffect( () => {\n        Config.getUsername().then( res => {\n            if (res[0]?.username) return <Home username={res} lang={props.lang} />\n        }).catch(err => {\n            console.log(err);\n        })\n    }, []);\n\n    return(\n        <>\n        <Lottie \n            LottieSource={LottieSource} ImageSource={SwipeImage}\n            LottieStyle={{position: 'absolute', height: 80, marginTop: 280, marginLeft: 80, opacity: .8}}\n            ImageStyle={{position: 'absolute', height: 80, marginTop: 280, marginLeft: 80, opacity: .8}}\n        />\n        <Swiper style={styles.wrapper} showsButtons={false} showsPagination={true} loop={false}>\n                \n            <View style={styles.slide}>\n                <Image source={StepOne} resizeMode=\"contain\" style={styles.image}/>\n                <Text style={styles.title}>{TutorialLang[props.lang].Step1Header}</Text>\n                <Text style={styles.text}>{TutorialLang[props.lang].Step1Content()}</Text>\n            </View>\n\n            <View style={styles.slideOdd}>\n                <Image source={StepTwo} resizeMode=\"contain\" style={styles.image}/>\n                <Text style={styles.title}>{TutorialLang[props.lang].Step2Header}</Text>\n                <Text style={styles.text}>{TutorialLang[props.lang].Step2Content}</Text>\n            </View>\n\n            <View style={styles.slide}>\n                <Image source={StepThree} resizeMode=\"contain\" style={styles.image}/>\n                <Text style={styles.title}>{TutorialLang[props.lang].Step3Header}</Text>\n                <Text style={styles.text}>{TutorialLang[props.lang].Step3Content()}</Text>\n            </View>\n\n            <View style={styles.slideOdd}>\n                <Image source={StepFour} resizeMode=\"contain\" style={styles.image}/>\n                <Text style={styles.title}>{TutorialLang[props.lang].Step4Header}</Text>\n                <Text style={styles.text}>{TutorialLang[props.lang].Step4Content()}</Text>\n            </View>\n\n            <View style={styles.slide}>\n                <Image source={StepFive} resizeMode=\"contain\" style={styles.image}/>\n                <Text style={styles.title}>{TutorialLang[props.lang].Step5Header}</Text>\n                <Text style={styles.text}>{TutorialLang[props.lang].Step5Content}</Text>\n            </View>\n\n            <View style={styles.slideOdd}>\n                <Image source={StepSixth} resizeMode=\"contain\" style={styles.image}/>\n                <Text style={styles.title}>{TutorialLang[props.lang].LastStepHeader}</Text>\n                <View style={styles.buttonContainer}>\n                <Link to=\"/username\" component={TouchableOpacity}\n                        style={styles.button}\n                        onPress={(e) => {Config.SawTutorial(true) }}\n                        activeOpacity = { .5 }\n                    >\n                        <Text style={styles.buttonText}> {TutorialLang[props.lang].LastStepButton} </Text>\n                    </Link>\n                </View>\n            </View>\n\n\n        </Swiper>\n        </>\n    );\n};","import React from 'react'\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial)\n        return <Tutorial lang={props.lang} />\n    if (!props?.username || props?.username?.length < 2)\n        return <ChooseUsername lang={props.lang} />\n    return <Home lang={props.lang} username={props.username} />\n};\n\nexport default HomeOrTutorial;","import { Text } from 'react-native'\n\nconst applyBoldStyle = text => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) => result.splice(++numberOfItemsAdded + i, 0, <Text key={i} style={{fontWeight: 'bold', color: \"#3B8EFF\"}}>{boldText}</Text>));\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return (applyBoldStyle({\n                sentence: \"Bonjour {0} !\",\n                boldText: [username]\n            }))\n        },\n        Activities: \"Activités\",\n        Score: \"Score\",\n        Settings: \"Paramètres\",\n        ChangeProfile: \"Modifier le profil\",\n        ShareProfile: \"Partager le profil\",\n        DeleteProfile: \"Supprimer le profil\",\n        ResetAccount: \"(DEBUG) Reset ($[start])\",\n        Simon: \"Jouer au Simon\",\n        DoubleMemory: \"Jeu des pairs\",\n        Dictaphone: \"Journal vocal\",\n        Quizz: \"Commencer un quizz\",\n        SuggestedActivities: \"Activités suggérées\",\n        Back: \"Retour à la sélection\",\n\n        ReturnList: \"Retour\",\n    },\n    en: {\n        Hello: (username) => {\n            return (applyBoldStyle({\n                sentence: \"Hello {0}!\",\n                boldText: [username]\n            }))\n        },\n        Activities: \"Activities\",\n        Score: \"Score\",\n        Settings: \"Settings\",\n        ChangeProfile: \"Change the profile\",\n        ShareProfile: \"Share the profile\",\n        DeleteProfile: \"Delete the profile\",\n        ResetAccount: \"(DEBUG) Reset ($[start])\",\n        Simon: \"Play to Simon\",\n        Dictaphone: \"Voice log\",\n        Quizz: \"Start a quizz\",\n        DoubleMemory: \"Double Memory\",\n        SuggestedActivities: \"Suggested activities\",\n        Back: \"Return to the selection\",\n\n        ReturnList: \"Return\",\n    }\n};","import { StyleSheet } from 'react-native'\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems:'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle:{\n        width: 250,\n        height: 40,\n    },\n    buttonStyleReturn:{\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete:{\n        width: 250,\n        height: 40,\n        backgroundColor:'red'\n    },\n    buttonStyleBack:{\n        width: 250,\n        height: 40,\n        backgroundColor:'#5EA1E4'\n    },\n    buttonStyleDebug:{\n        width: 250,\n        height: 40,\n        backgroundColor:'orange'\n    },\n});\n\n","import React, { useState, useRef, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\nimport { ScrollView, Alert, SafeAreaView,View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/home/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\n\nimport styles from './styles';\nimport Form from '../../../components/home/PersonCreation/Form';\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        setSuccess(true);\n    };\n    \n    const clear = () => {\n        setFullname(props.person.fullname);\n        setUriPreview(props.person.picture);\n        setImage('');\n        setDescription(props.person.description);\n        setSuccess(false);\n    }\n\n    const compProps = {\n        lang:props.lang,\n    \n        fullname:fullname,\n        setFullname:setFullname,\n    \n        image:image,\n        setImage:setImage,\n    \n        uriPreview:uriPreview,\n        setUriPreview:setUriPreview,\n    \n        description:description,\n        setDescription:setDescription,\n      }\n\n    const debug = async () => {\n        await Person.reset();\n        await AsyncStorage.clear();\n        navigate('/home');\n        return true;\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then(deleted => {\n            navigate('/home');\n        })\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.username),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => { deletePerson(); }\n                },\n                {\n                    text: InterfaceLang[props.lang].No\n                }\n            ]\n        )\n    };\n    return (\n        <View style={{flex:1}}>\n            {edit == false ? <ScrollView style={{flex: 1}}>\n                <Button\n                    icon={{\n                        name: 'user',\n                        type: 'font-awesome',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    iconContainerStyle={{marginRight: 10}}\n                    buttonStyle={styles.buttonStyle} containerStyle={styles.containerStyle}\n                    onPress={() => {setEdit(true)}}\n                    title={ActivitiesLang[props.lang]?.ChangeProfile}\n                />\n                <Button\n                    icon={{\n                        name: 'bluetooth',\n                        type: 'font-awesome',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    iconContainerStyle={{marginRight: 10}}\n                    buttonStyle={styles.buttonStyle} containerStyle={styles.containerStyle}\n                    title={ActivitiesLang[props.lang]?.ShareProfile}\n                />\n                <Button\n                    icon={{\n                        name: 'remove',\n                        type: 'font-awesome',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    iconContainerStyle={{marginRight: 10}}\n                    buttonStyle={styles.buttonStyleDelete} containerStyle={styles.containerStyle}\n                    title={ActivitiesLang[props.lang]?.DeleteProfile}\n                    onPress={() => { openModalDeleteProfile() }}\n                />\n                <Button\n                    icon={{\n                        name: 'caret-left',\n                        type: 'font-awesome',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    iconContainerStyle={{marginRight: 10}}\n                    buttonStyle={styles.buttonStyleBack} containerStyle={styles.containerStyle}\n                    title={ActivitiesLang[props.lang]?.Back}\n                    onPress={() => { navigate('/home'); }}\n                />\n                <Button\n                    icon={{\n                        name: 'bug',\n                        type: 'font-awesome',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    iconContainerStyle={{marginRight: 10}}\n                    buttonStyle={styles.buttonStyleDebug} containerStyle={styles.containerStyle}\n                    title={ActivitiesLang[props.lang]?.ResetAccount}\n                    onPress={debug}\n                />\n            </ScrollView> :\n            <ScrollView style={{flex: 1, backgroundColor:'white'}}>\n                <Button\n                    icon={{\n                        name: 'arrow-circle-o-up',\n                        type: 'font-awesome',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    iconContainerStyle={{marginRight: 10}}\n                    buttonStyle={styles.buttonStyleReturn} containerStyle={styles.containerStyle}\n                    title={ActivitiesLang[props.lang]?.ReturnList}\n                    onPress={() => setEdit(false)}\n                />\n                {success ?\n                    <Success {...compProps} close={clear} edit={true} /> :\n                    <Form\n                        {...compProps}\n                        edit={true}\n                        persons={props.person}\n                        setFullnameHeader={props.setFullname}\n                        personId={props.personId}\n                        scs={good} />}\n            </ScrollView>\n            }\n        </View>\n    );\n};","import React, { useEffect, useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    LinearProgress\n} from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect( () => {\n        setIsPlaying(false);\n    }, [props.playingSounds])\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({staysActiveInBackground: true, shouldDuckAndroid: true});\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded == false) {\n                await sound.loadAsync(\n                    {uri: props.path}\n                );\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false)\n                } else if (playbackStatus.positionMillis / playbackStatus.playableDurationMillis < 1) {\n                    setProgress(playbackStatus.positionMillis / playbackStatus.playableDurationMillis);\n                }\n            });\n            setIsPlaying(true);\n\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props._id, bottomDivider:true, containerStyle:mod } :\n            { key: props._id, bottomDivider:true, containerStyle:mod };\n    return(\n        <ListItem {...componentProps} onPress={isPlaying ? pauseTrack : playTrack}>\n            <Icon raised name={isPlaying ? 'pause-circle' : 'play-circle-outline'} type={'ionicon'} color={'blue'} />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{duration: 0}}\n                />\n            </ListItem.Content>\n            <Icon reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { props.deleteId(props._id); }} />\n        </ListItem>\n    )\n};","import { StyleSheet } from 'react-native'\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems:'center',\n    },\n    containerStyle: {\n        width: 40+'%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold'\n    },\n    actionButtonsView: {\n        flexDirection: 'row'\n    },\n    actionButtons: {\n        marginHorizontal: 5\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height:100+'%',\n        width: 100+'%'\n    },\n    loading: {\n        alignContent:'center',\n        marginTop: 30\n    },\n    nothingYet: {\n        textAlign:'center',\n        color:'gray',\n        marginTop: 30\n    },\n    divider: {\n        width: 100+'%',\n        marginTop: 20\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center'\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign:'center',\n        fontSize: 18,\n        marginVertical: 10\n    },\n    overlayDescription: {\n        textAlign:'center',\n        marginVertical: 10,\n        width: 160\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10\n    },\n});\n\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ScrollView, SafeAreaView, ActivityIndicator, Platform, Modal } from 'react-native';\n\nimport { Button, Divider, Text, Overlay, Input, Icon } from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n  const [recording, setRecording] = useState();\n  const [records, setRecords] = useState([]);\n  const [title, setTitle] = useState('');\n  const [playingSounds, setPlayingSounds] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [deleteId, setDeleteId] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [pause, setPause] = useState(false);\n\n  useEffect(() => {\n    // API.clear();\n\n    // Load all the tracks recorded by this person\n    API.get(props.personId).then(data => {\n        setRecords(data);\n        setIsLoading(false);\n    });\n\n    // BackHandler managment\n    const backAction = () => {\n        if (recording) stopRecording();\n        if (playingSounds?.length > 0) stopPlayingSounds();\n        props.setPage(null);\n        return true;\n    };\n    const backHandler = BackHandler.addEventListener(\n      \"hardwareBackPress\",\n      backAction\n    );\n    return () => backHandler.remove();\n  }, [recording, playingSounds]);\n\n  async function startRecording() {\n    try {\n      await Audio.requestPermissionsAsync();\n      await Audio.setAudioModeAsync({\n        allowsRecordingIOS: true,\n        playsInSilentModeIOS: true,\n        staysActiveInBackground: true\n      }); \n      const { recording } = await Audio.Recording.createAsync(\n         Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n      );\n      setRecording(recording);\n    } catch (err) {\n      console.error('Failed to start recording', err);\n    }\n  };\n\n  async function stopRecording() {\n    setPause(false); \n    await recording.stopAndUnloadAsync();\n    setModal(true); // Open the confirmation modal\n  };\n\n  async function pauseRecording() {\n    setPause(true);\n    await recording.pauseAsync();\n  }\n\n  async function continueRecording() {\n    setPause(false);\n    await recording.startAsync()\n  }\n\n  const saveRecord = () => {\n    API.create({\n        name: title?.trim(),\n        path: recording.getURI(),\n        personId: props.personId\n    }, props.lang).then(created => {\n        setModal(false);\n        setTitle('');\n        setRecording(false);\n    }).catch(err => {\n        console.log(err);\n    });\n  };\n\n  // Called in children component\n  const deleteRecord = () => {\n      API.del(props.personId, deleteId).then(data => {\n        setDeleteId(0);\n        API.get(props.personId).then(data => {\n            setRecords(data);\n        }).catch(err => {\n            console.log(err);\n        })\n      }).catch(err => {\n        console.log(err);\n      });\n  };\n\n  // Unload all sounds before the backhandler\n  const stopPlayingSounds = () => {\n      playingSounds.map( (el, i) => {\n        el.unloadAsync();\n      });\n  };\n\n  // Called in children component -- used for pause all tracks before playing a new one\n  const pauseAll = async () => {\n    if (playingSounds.length > 0) {\n        playingSounds?.map( async (el, i) => {\n            await el.pauseAsync().catch(err => {\n                console.log('(-) not loaded audio');\n            });\n        });\n    }\n  }\n\n  return (\n    <View style={styles.view}>\n\n        {/* Modal confirmation creation */}\n        <Overlay visible={modal} overlayStyle={styles.overlay} onBackdropPress={() => saveRecord()} ModalComponent={Modal}>\n          <Text style={styles.overlayTitle}>{DictaphoneLang[props.lang].ChooseTitle}</Text>\n          <Text style={styles.overlayTitle}>{DictaphoneLang[props.lang].PleaseChooseATitle}</Text>\n          <Input\n            placeholder={DictaphoneLang[props.lang].Placeholder}\n            leftIcon={\n              <Icon\n                name=\"musical-note\"\n                size={24}\n                color='grey'\n                type='ionicon'\n              />\n            }\n            label={DictaphoneLang[props.lang].Title}\n            maxLength={25}\n            inputStyle={styles.overlayInput}\n            value={title}\n            onChangeText={ (e) => { setTitle(e); }} />\n            <View style={{flexDirection: 'row'}}>\n              <Button title={DictaphoneLang[props.lang].Cancel} buttonStyle={{backgroundColor: 'red'}} containerStyle={{marginRight: 10}} onPress={saveRecord} />\n              <Button title={DictaphoneLang[props.lang].Save} buttonStyle={{fontWeight:'bold'}} onPress={saveRecord} />\n            </View>\n        </Overlay>\n\n        \n        {/* Modal confirmation deletion */}\n        <Overlay visible={deleteId != 0} overlayStyle={styles.overlay} ModalComponent={Modal}>\n          <Text style={styles.overlayTitle}>{DictaphoneLang[props.lang].DeleteTrack}</Text>\n          <Text style={styles.overlayDescription}>{DictaphoneLang[props.lang].SureDeleteTrack}</Text>\n            <View style={{flexDirection: 'row'}}>\n              <Button title={DictaphoneLang[props.lang].Cancel} buttonStyle={{fontWeight:'bold'}} containerStyle={{marginRight: 10}} onPress={(e) => { setDeleteId(0) }} />\n              <Button title={DictaphoneLang[props.lang].Delete} buttonStyle={{backgroundColor: 'red'}} onPress={(e) => { deleteRecord() }} />\n            </View>\n        </Overlay>\n\n        {recording ? \n        // is recording\n        <View style={styles.actionButtonsView}>\n\n            <Button\n                title={pause ? DictaphoneLang[props.lang].Continue : DictaphoneLang[props.lang].Pause}\n                containerStyle={styles.actionButtons}\n                icon={{\n                    name: pause ? 'play-circle-outline' : 'pause-circle-outline',\n                    type: 'ionicon',\n                    size: 15,\n                    color: 'white',\n                }}\n                onPress={pause ? continueRecording : pauseRecording}\n            />\n\n            <Button\n                title={DictaphoneLang[props.lang].Stop}\n                containerStyle={styles.actionButtons}\n                icon={{\n                    name: 'stop-circle-outline',\n                    type: 'ionicon',\n                    size: 15,\n                    color: 'white',\n                }}\n                onPress={stopRecording}\n            />\n        </View> :\n        // Not recording\n        <Button\n            containerStyle={styles.containerStyle}\n            icon={{\n                name: 'mic-circle',\n                type: 'ionicon',\n                size: 15,\n                color: 'white',\n            }}\n            buttonStyle={styles.recordButton}\n            title={DictaphoneLang[props.lang].Start}\n            titleStyle={styles.titleButton}\n            onPress={startRecording}\n        />\n    }\n    <Divider style={styles.divider} width={2} />\n    <SafeAreaView style={styles.safeArea}>\n        <ScrollView>\n            {isLoading ? \n                <ActivityIndicator color={'blue'} size={'large'} style={styles.loading} /> :\n                records.length > 0 ?\n                    records.map( (el, i) => {\n                    return <Rows pauseAll={pauseAll} playingSounds={playingSounds} setPlayingSounds={setPlayingSounds} deleteId={setDeleteId} index={i} key={el._id} title={el.name} _id={el._id} date={`${el.date.toLocaleDateString('fr-FR')} ${el.date.toLocaleTimeString('fr-FR')}`} path={el.path} />\n                }) : <Text style={styles.nothingYet}>{DictaphoneLang[props.lang].NothingYet}</Text>}\n        </ScrollView>\n    </SafeAreaView>\n    </View>\n  );\n};","import { Text } from 'react-native'\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr == 'red') color = '#FF5755';\n    else if (clr == 'green') color = '#459449';\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) => result.splice(++numberOfItemsAdded + i, 0, <Text key={i} style={{fontWeight: 'bold', color: color}}>{boldText}</Text>));\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: \"Jouer\",\n        Help: \"Aide\",\n        Leave: \"Retour\",\n        AreYouSure: \"En êtes-vous sûr ?\",\n        ToGiveUp: \"Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.\",\n        BestScore: (bestScore) => {\n            return (applyBoldStyle({\n                sentence: \"Meilleur score: {0}\",\n                boldText: [bestScore]\n            }))\n        },\n        DailyScore: (dailyScore) => {\n            return (applyBoldStyle({\n                sentence: \"Meilleur score du jour: {0}\",\n                boldText: [dailyScore]\n            }))\n        },\n        YourTurn: () => {\n            return (applyBoldStyle({\n                sentence: \"{0}\",\n                boldText: ['A votre tour !']\n            }))\n        },\n        WaitNSee: () => {\n            return (applyBoldStyle({\n                sentence: \"{0}\",\n                boldText: ['Regardez attentivement...']\n            }))\n        },\n        Failed: () => {\n            return (applyBoldStyle({\n                sentence: \"{0}\",\n                boldText: ['Raté ! ...']\n            }, 'red'))\n        },\n        NiceHit: () => {\n            return (applyBoldStyle({\n                sentence: \"{0}\",\n                boldText: [\"Bien joué !!\"]\n            }, 'green'))\n        },\n        Tries: (tries) => {\n            return (applyBoldStyle({\n                sentence: \"Essai(s) restant(s): {0}\",\n                boldText: [tries]\n            }, 'red'))\n        },\n        BestScoreToday: (score) => {\n            return (applyBoldStyle({\n                sentence: \"Vous venez de battre votre record du jour : {0} !\",\n                boldText: [score]\n            }))\n        },\n        Progress: (order, game) => {\n            return (applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order]\n            }))\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: \"Dommage...\",\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: \"Quitter le Simon\",\n        GiveUp: \"Abandonner\",\n        Start: \"Commencer une partie\",\n        Cancel: \"Annuler\",\n        TimeToStop: \"Oui, je m'arrête là\",\n    },\n    en: {\n        Play: \"Play\",\n        Help: \"Help\",\n        Leave: \"Go back\",\n        AreYouSure: \"Are you sure?\",\n        ToGiveUp: \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return (applyBoldStyle({\n                sentence: \"Best score: {0}\",\n                boldText: [bestScore]\n            }))\n        },\n        DailyScore: (dailyScore) => {\n            return (applyBoldStyle({\n                sentence: \"Best score today: {0}\",\n                boldText: [dailyScore]\n            }))\n        },\n        YourTurn: () => {\n            return (applyBoldStyle({\n                sentence: \"{0}\",\n                boldText: ['Your turn!']\n            }))\n        },\n        WaitNSee: () => {\n            return (applyBoldStyle({\n                sentence: \"{0}\",\n                boldText: ['Look carefully...']\n            }))\n        },\n        Failed: () => {\n            return (applyBoldStyle({\n                sentence: \"{0}\",\n                boldText: ['Failed! ...']\n            }, 'red'))\n        },\n        Tries: (tries) => {\n            return (applyBoldStyle({\n                sentence: \"Remaining tries: {0}\",\n                boldText: [tries]\n            }, 'red'))\n        },\n        NiceHit: () => {\n            return (applyBoldStyle({\n                sentence: \"{0}\",\n                boldText: [\"Well done!!\"]\n            }, 'green'))\n        },\n        BestScoreToday: (score) => {\n            return (applyBoldStyle({\n                sentence: \"You did your day best score : {0}!\",\n                boldText: [score]\n            }))\n        },\n        Progress: (order, game) => {\n            return (applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order]\n            }))\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: \"So sad...\",\n        ScoreNotBeated: \"Your daily score has not been beaten... But you can retry!\",\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: \"Give up\",\n        Start: \"Start a game\",\n        Cancel: \"Cancel\",\n        TimeToStop: \"Yes, I want to stop\",\n    }\n};","import { StyleSheet } from 'react-native'\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems:'center',\n    },\n    logo: {\n        width: 80,\n        height:80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5\n    },\n    SimonButton: {\n        flex: 1,\n        width: 50,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c'\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024'\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400'\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec'\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems:'center'\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold'\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center'\n    }\n});\n\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n  return (\n    <>\n        <Image source={SimonLogo} style={styles.logo}  />\n        <Button title={SimonLang[props.lang].Play} containerStyle={styles.button} raised\n        onPress={(e) => props.setTab(1)}\n        icon={\n            <Icon\n            name={\"play-outline\"}\n            type={\"ionicon\"}\n            color={\"white\"}\n            size={15}\n            style={{marginHorizontal: 5}}\n            /> }\n        />\n        <Button title={SimonLang[props.lang].Help} containerStyle={styles.button} raised\n        onPress={(e) => props.setTab(2)}\n        icon={\n            <Icon\n            name={\"help-circle-outline\"}\n            type={\"ionicon\"}\n            color={\"white\"}\n            size={15}\n            style={{marginHorizontal: 5}}\n            /> }\n        />\n        <Button title={SimonLang[props.lang].Leave} buttonStyle={{backgroundColor:'red'}} containerStyle={styles.leaveButton} raised\n        onPress={() => props.setPage(null) }\n        icon={ <Icon\n            name={\"caret-back-outline\"}\n            type={\"ionicon\"}\n            color={\"white\"}\n            size={15}\n            style={{marginHorizontal: 5}}\n            />\n        }\n        />\n    </>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { View, Modal } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/simon/trophy.gif'\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4) // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    useEffect( async () => {\n        // API.clear(props.personId);\n        if (start == false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then(data => {\n                if (data.length > 0) setBestScore(data[0].score);\n            });\n            API.getScoreDay(props.personId, currentDate).then(data => {\n                if (data.length > 0) setDailyScore(data[0].score);\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) await playButtonDemo(order[i]);\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3')\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3')\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3')\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3')\n            default:\n                break;\n        };\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise( async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(pickCorrectSound(idx));\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async playBackStatus => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true)\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        })\n    };\n\n    const yourTurn = () => {\n        if (failed) return SimonLang[props.lang].Failed();\n        else if (niceHit) return SimonLang[props.lang].NiceHit()\n        else return SimonLang[props.lang].YourTurn();\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) return;\n        if (game.length >= order.length) return;\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame)\n\n            if (sound) await sound.unloadAsync();\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(pickCorrectSound(idx));\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then(data => {\n                return data.playableDurationMillis;\n            });\n            \n            // @todo manage each hit instead of just the last one\n            \n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1)\n            }, time - 320);\n            if (game[game.length - 1] != order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length == order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate);\n        setCanPlay(false);\n        setSuccess(true);\n        if (dailyScore < order.length - 1) setScoreBeaten(true);\n        else setScoreBeaten(false);\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) setConfetti(true);\n        return <>\n            <Text style={styles.headerOverlay}>{SimonLang[props.lang].Congratulations}</Text>\n            <Text style={styles.textOverlay}>{SimonLang[props.lang].BestScoreToday(order.length - 1)}</Text>\n            <Lottie \n                LottieSource={LottieSource}\n                ImageSource={TrophyImage}\n                autoplay={true} loop={false}\n                LottieStyle={{height: 60}}\n                ImageStyle={{height: 60}}\n            />\n        </>\n    };\n\n    const failOverlay = () => {\n        if (loading) return <ActivityIndicator />\n        return <>\n            <Text style={styles.headerOverlay}>{SimonLang[props.lang].SoBad}</Text>\n            <Text style={styles.textOverlay}>{SimonLang[props.lang].ScoreNotBeated}</Text>\n        </>\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n    <>\n        {confetti ? <ConfettiCannon fadeOut={true} autoStart={true} fallSpeed={6000} count={50} origin={{x: -20, y: -35}} /> : <></> }\n\n        {/* Overlay modal end of the game */}\n        {success ? <Overlay visible={success} overlayStyle={styles.overlayStyle} onBackdropPress={() => setSuccess(false)} ModalComponent={Modal}>\n            { scoreBeaten ? successOverlay() : failOverlay() }\n            <View style={{flexDirection: 'row', marginTop: 30}}>\n                <Button raised onPress={() => { retryGame() }} title={SimonLang[props.lang].Retry} containerStyle={{borderRadius: 13, marginRight: 10}}/>\n                <Button raised onPress={() => { props.setTab(0); } } title={SimonLang[props.lang].Exit} containerStyle={{borderRadius: 13}} buttonStyle={{backgroundColor: 'red'}}/>\n            </View>\n        </Overlay> : <></>}\n\n        {/* Are you sure to exit - Overlay */}\n        <Overlay visible={props.modal} overlayStyle={styles.overlayStyle} onBackdropPress={() => props.setModal(false)} ModalComponent={Modal}>\n            <Text style={styles.headerOverlay}>{SimonLang[props.lang].AreYouSure}</Text>\n            <Text style={styles.textOverlay}>{SimonLang[props.lang].ToGiveUp}</Text>\n            <View style={{flexDirection: 'row', marginTop: 15}}>\n                <Button raised onPress={() => { props.setModal(false) }} title={SimonLang[props.lang].Cancel} containerStyle={{borderRadius: 13, marginRight: 10}}/>\n                <Button raised onPress={() => { completeGame(); } } title={SimonLang[props.lang].TimeToStop} containerStyle={{borderRadius: 13}} buttonStyle={{backgroundColor: 'red'}}/>\n            </View>\n        </Overlay>\n\n        {/* The first row of the Simon */}\n        <View style={{flexDirection: 'row', marginBottom: 10}}>\n            <View style={[styles.SimonButton, styles.SimonLeftButton, styles.SimonGreen, buttonClicked == 0 ? styles.clickedButton : '']}\n                onStartShouldSetResponder={() => true}\n                onResponderGrant={() => playButton(0)}\n            />\n            <View style={[styles.SimonButton, styles.SimonRed, buttonClicked == 1 ? styles.clickedButton : '']}\n                onStartShouldSetResponder={() => true}\n                onResponderGrant={() => playButton(1)}\n            />\n        </View>\n\n        {/* The second row of the Simon */}\n        <View style={{flexDirection: 'row'}}>\n            <View style={[styles.SimonButton, styles.SimonLeftButton, styles.SimonYellow, buttonClicked == 2 ? styles.clickedButton : '']}\n                onStartShouldSetResponder={() => true}\n                onResponderGrant={() => playButton(2)}\n            />\n            <View style={[styles.SimonButton, styles.SimonBlue, buttonClicked == 3 ? styles.clickedButton : '']}\n                onStartShouldSetResponder={() => true}\n                onResponderGrant={() => playButton(3)}\n            />\n        </View>\n\n        <View style={{marginTop: 15}}>\n            <Text style={{textAlign: 'center'}}>{SimonLang[props.lang].BestScore(bestScore)}</Text>\n            <Text style={{textAlign: 'center'}}>{SimonLang[props.lang].DailyScore(dailyScore)}</Text>\n            <Text style={{textAlign: 'center', marginBottom: 15}}>{SimonLang[props.lang].Tries(tries)}</Text>\n        {start ?\n            <View style={{alignContent: 'center', alignItems:'center'}}>\n                <Text style={{textAlign: 'center', fontSize: 18}}>{canPlay|| failed ? yourTurn() : SimonLang[props.lang].WaitNSee()}</Text>\n                <Text style={{textAlign: 'center'}}>{SimonLang[props.lang].Progress(order.length, game.length)}</Text>\n                <Button disabled={!canPlay} onPress={() => props.setModal(true)} buttonStyle={{backgroundColor: 'red'}} containerStyle={{marginTop: 20, width: 150, borderRadius: 15}} raised title={SimonLang[props.lang].GiveUp} />\n            </View> : <>\n            <View flexDirection={\"row\"} style={{alignContent: 'center', alignItems:'center'}}>\n                <Button buttonStyle={{marginRight: 10, borderRadius: 13}} title={SimonLang[props.lang].Start} onPress={() => setStart(true)} />\n                <Button buttonStyle={{borderRadius: 13, backgroundColor:'red'}} title={SimonLang[props.lang].Leave} onPress={() => props.setTab(0)}/>\n            </View>\n            </>}\n        </View>\n    </>\n    );\n};","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n  const [tab, setTab] = useState(0);\n  const [sound, setSound] = useState(new Audio.Sound());\n  const [modal, setModal] = useState(false);\n\n  useEffect(() => {\n    // API.clear(props.personId);\n    // BackHandler managment\n    const backAction = () => {\n        if (sound) sound.unloadAsync();\n        if (tab > 0) {\n          if (tab != 1)\n            setTab(0);\n          else {\n            setModal(true);\n          }\n        }\n        else props.setPage(null);\n        return true;\n    };\n    const backHandler = BackHandler.addEventListener(\n      \"hardwareBackPress\",\n      backAction\n    );\n    return () => {\n      backHandler.remove();\n    }\n  }, [tab]);\n\n  const printPage = () => {\n    if (tab == 0)\n        return <Menu setTab={setTab} lang={props.lang} setPage={props.setPage} />\n    else if (tab == 1)\n        return <Game setTab={setTab} lang={props.lang} personId={props.personId} sound={sound} setSound={setSound} modal={modal} setModal={setModal} />\n    else if (tab == 2)\n        return <Text>Tab 2 (Help)</Text>\n    else \n        return <Text>Invalid tab</Text>\n  };\n\n  return (\n      <>\n        <View style={styles.view}>\n            { printPage() }\n        </View>\n    </>\n  );\n};","import { Text } from 'react-native'\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr == 'red') color = '#FF5755';\n    else if (clr == 'green') color = '#459449';\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) => result.splice(++numberOfItemsAdded + i, 0, <Text key={i} style={{fontWeight: 'bold', color: color}}>{boldText}</Text>));\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: \"Jouer\",\n        View: \"Voir les quizz\",\n        Create: \"Créer un quizz\",\n        Help: \"Comment ça marche\",\n        Leave: \"Retour\",\n        NothingYet: \"Aucun quizz crée pour le moment.\",\n        SuccessfulRatio: \"Ratio de réussite\",\n        AddQuestion: \"Ajouter une question\",\n        Complete: \"Terminer la création\",\n    },\n    en: {\n        Play: \"Play\",\n        View: \"View quizz\",\n        Create: \"Create a quizz\",\n        Help: \"How does it works\",\n        Leave: \"Leave\",\n        NothingYet: \"No quizz has been created yet.\",\n        SuccessfulRatio: \"Success ratio\",\n        AddQuestion: \"Add a question\",\n        Complete: \"Complete the quizz creation\",\n    }\n};","import { StyleSheet } from 'react-native'\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems:'center',\n    },\n    logo: {\n        width: 80,\n        height:80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height:100+'%',\n        width: 100+'%'\n    },\n    nothingYet: {\n        textAlign:'center',\n        color:'gray',\n        marginTop: 30\n    },\n    loading: {\n        marginTop: 30\n    },\n});\n\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizzLang } from '../../../language/activities/quizz';\n\nimport QuizzLogo from '../../../assets/img/activities/quizz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n  return (\n    <>\n        <Image source={QuizzLogo} style={styles.logo}  />\n\n        {props.quizz?.length > 0 ? <Button title={QuizzLang[props.lang].Play} containerStyle={styles.button} raised\n        onPress={(e) => props.setTab(1)}\n        icon={\n            <Icon\n            name={\"play-outline\"}\n            type={\"ionicon\"}\n            color={\"white\"}\n            size={15}\n            style={{marginHorizontal: 5}}\n            /> }\n        /> : <></> }\n\n        <Button title={QuizzLang[props.lang].View} containerStyle={styles.button} raised\n        onPress={(e) => props.setTab(2)}\n        icon={\n            <Icon\n            name={\"book-outline\"}\n            type={\"ionicon\"}\n            color={\"white\"}\n            size={15}\n            style={{marginHorizontal: 5}}\n            /> }\n        />\n\n        <Button title={QuizzLang[props.lang].Help} containerStyle={styles.button} raised\n        onPress={(e) => props.setTab(3)}\n        icon={\n            <Icon\n            name={\"help-circle-outline\"}\n            type={\"ionicon\"}\n            color={\"white\"}\n            size={15}\n            style={{marginHorizontal: 5}}\n            /> }\n        />\n\n        <Button title={QuizzLang[props.lang].Leave} buttonStyle={{backgroundColor:'red'}} containerStyle={styles.leaveButton} raised\n        onPress={() => props.setPage(null) }\n        icon={ <Icon\n            name={\"caret-back-outline\"}\n            type={\"ionicon\"}\n            color={\"white\"}\n            size={15}\n            style={{marginHorizontal: 5}}\n            />\n        }\n        />\n    </>\n  );\n};","import React, { useEffect, useState } from 'react'\nimport {\n    ListItem,\n    Icon\n} from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { lang as QuizzLang } from '../../../language/activities/quizz';\n\nexport default function QuizzList(props) {\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props._id, bottomDivider:true, containerStyle:mod } :\n            { key: props._id, bottomDivider:true, containerStyle:mod };\n    return(\n        <ListItem {...componentProps} >\n            <ListItem.Content>\n                <ListItem.Title>{props.name}</ListItem.Title>\n                <ListItem.Subtitle>{props.quizz?.score?.length || 1} {QuizzLang[props.lang].SuccessfulRatio}</ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { props.deleteId(props._id); }} />\n        </ListItem>\n    )\n};","import AsyncStorage from '@react-native-async-storage/async-storage'\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb')\n\nexport const db = new Datastore({ filename: 'QuizzSchema', storage: AsyncStorage, autoload: true });\nexport const ContentDB = new Datastore({ filename: 'ContentQuizzSchema', storage: AsyncStorage, autoload: true });\n\nexport function get(personId) {\n    return db.find({personId: personId}).sort({date: -1}).exec( (err, data) => {\n        if (err) console.error(err);\n        return (data);\n    });\n};\n\nexport function getContent(quizzId) {\n    return ContentDB.findAsync({ quizzId: quizzId });\n};\n\nexport function addContent(quizzId, personId, content) {\n    const data = db.find({_id: quizzId, personId: personId}, (err, data) => {\n        if (err) console.error(err);\n        else return (data);\n    });\n    if (!data) return (null);\n    if ([\"audio\", \"image\"].includes(content.type) && content.path == null) {\n        console.error('A path is required when the type is \"audio\" or \"image\".');\n        return (null);\n    }\n    else if (!content.question || content.answers?.length == 0) {\n        console.error(\"Please fill the required fields\");\n        return (null);\n    }\n    return db.insertAsync({...content}, (err, result) => {\n        if (err) {console.error(err); return (null); }\n        else return (result);\n    })\n};\n\nexport async function deleteId(personId, quizzId) {\n    // @todo remove files linked to the quizz\n    await ContentDB.removeAsync({quizzId: quizzId}, {multi: true});\n    return db.removeAsync({_id: quizzId, personId: personId});\n};\n\nexport async function reset() {\n    await ContentDB.removeAsync({}, {multi: true});\n    return db.removeAsync({}, { multi: true });\n};","import React, { useState } from 'react';\nimport { View, ActivityIndicator, Text, ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Divider } from 'react-native-elements';\n\nimport QuizzList from './QuizzList';\n\nimport { lang as QuizzLang } from '../../../language/activities/quizz';\nimport * as API from '../../../data/quizzApi';\n\nimport styles from './styles';\n\nexport default function ViewQuizz(props) {\n\n  const deleteId = (quizzId) => {\n    API.deleteId(props.personId, quizzId).then(data => {\n      // update props.quizz state\n    });\n  };\n\n  return (\n    <>\n      <View style={{flexDirection: 'row'}}>\n        <Button raised title={QuizzLang[props.lang].Create} containerStyle={styles.createButton} icon={\n              <Icon\n              name={\"construct-outline\"}\n              type={\"ionicon\"}\n              color={\"white\"}\n              size={15}\n              style={{marginHorizontal: 5}}\n              /> }\n              onPress={() => {props.setTab(4)}}\n        />\n        <Button title={{}} buttonStyle={{backgroundColor:'red'}} containerStyle={{borderRadius: 15, marginHorizontal: 10, width: 40}} icon={\n              <Icon\n              name={\"caret-back-outline\"}\n              type={\"ionicon\"}\n              color={\"white\"}\n              size={15}\n              /> }\n              onPress={() => props.setTab(0)}\n        />\n      </View>\n      <Divider color={'grey'} width={1} style={{width: 100+'%', marginTop: 20}}  />\n      <SafeAreaView style={styles.safeArea}>\n        <ScrollView>\n        {props.loading ? \n            <ActivityIndicator color={'blue'} size={'small'} style={styles.loading} /> :\n            props.quizz?.length > 0 ?\n            props.quizz?.map( (el, i) => {\n                return <QuizzList index={i} key={el._id} quizz={el} lang={props.lang} deleteId={deleteId} />\n            }) : <Text style={styles.nothingYet}>{QuizzLang[props.lang].NothingYet}</Text>}\n        </ScrollView>\n      </SafeAreaView>\n    </>\n  );\n};","import React, { useState } from 'react';\nimport { View, ActivityIndicator, Text, ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Divider } from 'react-native-elements';\n\nimport QuizzList from './QuizzList';\n\nimport { lang as QuizzLang } from '../../../language/activities/quizz';\nimport * as API from '../../../data/quizzApi';\n\nimport styles from './styles';\n\nexport default function CreateQuizz(props) {\n  return (\n    <>\n      <View style={{flexDirection: 'row'}}>\n        <Button raised title={QuizzLang[props.lang].Complete} containerStyle={styles.createButton} icon={\n              <Icon\n              name={\"construct-outline\"}\n              type={\"ionicon\"}\n              color={\"white\"}\n              size={15}\n              style={{marginHorizontal: 5}}\n              /> }/>\n        <Button title={{}} buttonStyle={{backgroundColor:'red'}} containerStyle={{borderRadius: 15, marginHorizontal: 10, width: 40}} icon={\n              <Icon\n              name={\"caret-back-outline\"}\n              type={\"ionicon\"}\n              color={\"white\"}\n              size={15}\n              /> }\n              onPress={() => props.setTab(2)}\n        />\n      </View>\n      <Divider color={'grey'} width={1} style={{width: 100+'%', marginTop: 20}}  />\n      <SafeAreaView style={styles.safeArea}>\n        <ScrollView>\n        {props.loading ? \n            <ActivityIndicator color={'blue'} size={'small'} style={styles.loading} /> :\n            props.quizz?.length > 0 ?\n            props.quizz?.map( (el, i) => {\n                return <QuizzList index={i} key={el._id} quizz={el} lang={props.lang} deleteId={deleteId} />\n            }) : <Text style={styles.nothingYet}>{QuizzLang[props.lang].NothingYet}</Text>}\n        </ScrollView>\n      </SafeAreaView>\n    </>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\n\n// Child components\nimport ViewQuizz from './ViewQuizz';\nimport CreateQuizz from './CreateQuizz';\n\nimport * as API from '../../../data/quizzApi';\n\nimport styles from './styles';\n\nexport default function Quizz(props) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [tab, setTab] = useState(0);\n  const [quizz, setQuizz] = useState([]);\n\n  useEffect(() => {\n    // API.reset();\n\n    API.get(props.personId).then(data => {\n        // setQuizz(['test'])\n        if (data.length > 0) setQuizz(data);\n        setIsLoading(false);\n    });\n\n    // BackHandler managment\n    const backAction = () => {\n        if (tab > 0) setTab(0);\n        else props.setPage(null);\n        return true;\n    };\n    const backHandler = BackHandler.addEventListener(\n      \"hardwareBackPress\",\n      backAction\n    );\n    return () => {\n      backHandler.remove();\n    }\n  }, [tab]);\n\n  const printPage = () => {\n    if (tab == 0)\n        return <Menu setTab={setTab} lang={props.lang} setPage={props.setPage} quizz={quizz} />\n    else if (tab == 1)\n        return <Text>Tab 1 (Play?)</Text>\n    else if (tab == 2)\n        return <ViewQuizz loading={isLoading} setTab={setTab} lang={props.lang} setPage={props.setPage} quizz={quizz} />\n    else if (tab == 3)\n        return <Text>Tab 3 (Help?)</Text>\n    else if (tab == 4)\n        return <CreateQuizz setTab={setTab} lang={props.lang} setPage={props.setPage} />\n    else \n        return <Text>Invalid tab</Text>\n  };\n\n  return (\n    <View style={styles.view}>\n        { printPage() }\n    </View>\n  );\n};","import { lang as ActivitiesLang } from '../language/activities'\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quizz from '../components/activities/Quizz';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return <Simon lang={lang} setPage={setPage} personId={personId} />\n            }\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return null\n            }\n        },\n        {\n            name: ActivitiesLang[lang]?.Quizz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return <Quizz lang={lang} setPage={setPage} personId={personId} />\n            }\n        },\n        {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null\n            }\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return <Dictaphone lang={lang} setPage={setPage} personId={personId} />\n            }\n        },\n    ]\n};","import { StyleSheet } from 'react-native'\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems:'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle:{\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start'\n    },\n    buttonStyleDelete:{\n        width: 250,\n        height: 40,\n        backgroundColor:'red'\n    },\n    buttonStyleDebug:{\n        width: 250,\n        height: 40,\n        backgroundColor:'orange'\n    },\n});","import React, { useState } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n    return (\n        page ? page :\n        <ScrollView style={{flex: 1}}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map( (el , i) => {\n                return <Button\n                    icon={{\n                        name: el.icon,\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    key={i}\n                    iconPosition={'left'}\n                    iconContainerStyle={{ marginRight: 50 }}\n                    buttonStyle={styles.buttonStyle} containerStyle={styles.containerStyle}\n                    title={el.name}\n                    onPress={(e) => { setPage(el.returnComponent(props.lang || 'fr', setPage)) }}\n            />\n            })}\n        </ScrollView>\n    );\n};","import { StyleSheet } from 'react-native'\n\nexport default StyleSheet.create({\n});","import React from 'react';\nimport { ScrollView, Text } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport styles from './styles';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{flex: 1}}>\n            <Text>todo</Text>\n        </ScrollView>\n    );\n};","import React from 'react';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    return(\n        <Tab.Navigator \n          screenOptions={{\n            tabBarStyle: [\n                {height: 60, color: '#5bc0de'}\n            ],\n            tabBarLabelStyle: [\n                {color: '#5bc0de', marginBottom: 10}\n            ]\n        }}>\n            <Tab.Screen options={{headerShown: false, tabBarIcon:( ({focused}) => { return <Icon type={'ionicon'} color={'#5bc0de'} name={`game-controller${focused?'':'-outline'}`} />})  }} name={ActivitiesLang[props.lang]?.Activities} children={() => <Activities lang={props.lang} personId={props.personId} />} />\n            <Tab.Screen options={{headerShown: false, tabBarIcon:( ({focused}) => { return <Icon type={'ionicon'} color={'#5bc0de'} name={`star${focused?'':'-outline'}`} />})  }} name={ActivitiesLang[props.lang]?.Score} children={() => <Score lang={props.lang} />} />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon:( ({focused}) => {\n                        return <Icon type={'ionicon'} color={'#5bc0de'} name={`settings${focused?'':'-outline'}`} />\n                    })\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => \n                    <Settings lang={props.lang} username={props?.username} person={props.person} personId={props.personId} setFullname={props.setFullname} />\n                }\n            />\n        </Tab.Navigator>\n    )\n}","import { StyleSheet } from 'react-native'\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        marginBottom: 20,\n        width: 100+'%',\n        backgroundColor:'white',\n    },\n    topLottie: {\n        marginTop: -20,\n        width: 200,\n        height: 200,\n        marginBottom: -90\n    },\n    bgLottie: {\n        width: 100+'%',\n        opacity: .4,\n    },\n    bgImage: {\n        position:'absolute',\n        width: 100+'%',\n        height: 100+'%',\n        opacity: 0.4\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor:'white',\n    },\n    heading: {\n        fontSize: 24,\n        color: '#3B8EFF',\n        marginTop: 10,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100+'%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100+'%',\n    },\n    tabText: {\n        fontSize: 10\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100+'%',\n    }\n});\n\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport SuccessImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport {\n    DefaultTheme,\n    NavigationContainer,\n} from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id).then(result => {\n            if (!result || result?.length == 0) navigate('/home');\n            setPerson(result[0]);\n            setFullname(result[0]?.fullname);\n            setIsLoading(false);\n        }).catch(err => {\n            console.log(err);\n            navigate('/home', {state: {username: state?.username, lang: lang}});\n        });\n        const backAction = () => {\n            navigate('/home', {state: {username: state?.username, lang: lang}});\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n          \"hardwareBackPress\",\n          backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n          ...DefaultTheme.colors,\n          background: 'transparent',\n        }\n      };\n\n    if (isLoading) return <ActivityIndicator color={\"blue\"} size={'large'} style={{marginTop: 250}} />\n    return (\n        <>\n        <View style={styles.container}>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.topLottie}\n                ImageStyle={styles.topImage}\n                loop={true} autoPlay={true}\n            />\n            <Text style={styles.heading}>\n                {ActivitiesLang[lang]?.Hello(fullname) || null}\n            </Text>\n        </View>\n        <Divider color={'grey'} width={1} style={styles.divider}  />\n        \n        <View style={{flex:1}}>\n            <View style={{flex:1, position:'absolute'}}>\n                <Lottie\n                    LottieSource={BgSource}\n                    ImageSource={BackgroundImage}\n                    LottieStyle={styles.bgLottie}\n                    ImageStyle={styles.bgImage}\n                    loop={true} autoPlay={true}\n                />\n            </View>\n                <NavigationContainer theme={navTheme} style={{padding: 400}}>\n                    <Tabs lang={lang} username={person?.fullname} personId={personId.id} person={person} setFullname={setFullname} />\n                </NavigationContainer>\n        </View>\n        </>\n    );\n};","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport {\n  NativeRouter,\n  Route,\n  Routes\n} from \"react-router-native\";\nimport {\n  View,\n} from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig } from './data/configApi';\nimport { lang as LangInterface } from './language/interface'\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport Home from './pages/Home';\nimport Activities from './pages/Activities';\n\nexport default function App() {\n  const [config, setConfig] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadDataCallback();\n  }, [loadDataCallback]);\n\n  let local = Localization.locale?.split('-')[0] || 'fr';\n  const lang = ['en', 'fr'].includes(local) ? local : 'fr';\n\n  const loadDataCallback = useCallback(async () => {\n      try {\n        fetchData();\n      } catch (err) {\n        console.error(err);\n      }\n  }, []);\n\n  const fetchData = async () => {\n    getConfig().then(resp => {\n      setConfig(resp);\n      setIsLoading(false)\n    });\n  };\n\n  return (\n    <View style={{flex: 1}}>\n      <StatusBar hidden={true} />\n          {isLoading ?\n          <Loading style={{flex:1, alignItems: 'center'}} text={LangInterface[lang]?.GlobalLoading} />: \n            <NativeRouter>\n              <Routes>\n                <Route exact path=\"/\" element={<HomeOrTutorial hasSeenTutorial={config?.hasSeenTutorial} lang={lang} username={config?.username} />} />\n                <Route exact path=\"/username\" element={<ChooseUsername lang={lang} />} />\n                <Route exact path=\"/home\" element={<Home hasSeenTutorial={config?.hasSeenTutorial} lang={lang} username={config?.username} />} />\n                <Route path=\"/activities/:id\" element={<Activities />} />\n              </Routes>\n            </NativeRouter>\n          }\n    </View>\n  );\n};"],"sourceRoot":""}