{"version":3,"sources":["assets/img/activities/trophy.gif","assets/img/activities/help/question_mark.gif","assets/img/activities/brain.gif","assets/img/interface/profile.jpg","assets/img/activities/sad.gif","assets/sound/global/applause.mp3","assets/sound/global/you_lose.mp3","assets/sound/simon/green.mp3","assets/img/selection/addedUser.gif","assets/img/username/chooseusername.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/alzheimapp_logo.png","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/quiz/logo.png","assets/img/activities/quiz/success.gif","assets/img/activities/double/logo.png","assets/sound/ambiant.mp3","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","assets/img/activities/quiz/thinking.gif","assets/sound/double/ambiant.mp3","assets/sound/double/success.mp3","assets/sound/double/fail.mp3","assets/sound/double/play.mp3","assets/sound/double/next.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","language/selection/index.js","components/selection/Rows.js","components/selection/styles.js","components/utils/Lottie.js","components/selection/PersonCreation/Success.js","data/dictaphoneApi.js","data/simonApi.js","data/quizApi.js","data/doubleApi.js","utils/helpers.js","data/personApi.js","components/selection/PersonCreation/Form.js","components/selection/PersonCreation/CreatePerson.js","pages/SelectionMenu/styles.js","pages/SelectionMenu/index.js","pages/ChooseUsername/styles.js","pages/ChooseUsername/index.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","language/home/index.js","pages/Home/styles.js","pages/Home/Menu.js","utils/dilacrypt.js","utils/share.js","pages/Home/ImportData.js","pages/Home/index.js","components/utils/HomeOrTutorial.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/Help.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/utils/quizFunc.js","components/activities/Quiz/Creation/QuestionList.js","components/activities/Quiz/utils/scoreFunc.js","components/activities/Quiz/QuizList.js","components/activities/Quiz/ViewQuizList.js","components/activities/Quiz/SuccessContent.js","components/activities/Quiz/Creation/FormQuizContent.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Creation/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/Help.js","components/activities/Quiz/index.js","language/activities/double/index.js","components/activities/Double/styles.js","components/activities/Double/Help.js","components/activities/Double/Menu.js","components/activities/Double/subs/helpers.js","components/activities/Double/subs/Card.js","components/activities/Double/Play.js","components/activities/Double/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/QuizScore/index.js","pages/Activities/Score/SimonScore/index.js","pages/Activities/Score/DoubleScore/index.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","color","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","props","navigate","useNavigate","TouchableScale","Platform","OS","default","mod","index","backgroundColor","componentProps","Component","key","id","bottomDivider","containerStyle","onPress","state","source","picture","uri","DefaultProfilePicture","rounded","Content","Title","fullname","Subtitle","description","Chevron","StyleSheet","create","rightButton","minHeight","imageSuccess","width","height","leftButton","view","alignItems","alignSelf","marginVertical","btnImport","borderRadius","btnSave","profilePicture","marginBottom","successPageTitle","textAlign","fontSize","Lottie","LottieStyle","LottieSource","loop","hasOwnProperty","autoPlay","resizeMode","Image","ImageSource","ImageStyle","Success","View","SuccessImage","styles","edit","InterfaceLang","title","e","close","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","createQuizContent","el","uuidv4","success","failed","includes","fileType","uploadQuizFile","path","FileSystem","from","to","updateScore","quizId","contentId","_id","quiz","contentIndex","content","findIndex","scoreIndex","getBestScore","insertScore","dailyScoreBeaten","globalScoreBeaten","pushErrors","errors","field","msg","randomNumber","min","max","Math","floor","random","person","trim","Object","keys","upd","$set","catch","log","getById","Form","useState","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","encoding","fsRead","setImage","titleStyle","buttonStyle","icon","name","size","marginHorizontal","placeholder","leftIcon","label","errorStyle","renderErrorMessage","maxLength","errorMessage","inputStyle","value","marginTop","onChangeText","setFullname","setDescription","raised","cb","Person","intermediates","image","imgName","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","container","flex","zIndex","wrapper","topBanner","topImage","heading","boldtext","subtitle","button","overflow","buttonText","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","fontStyle","searchBar","searchInputStyle","SelectionMenu","isLoading","setIsLoading","search","setSearch","setIndex","SelectionMenuLang","btnText","setBtnTxt","active","setActive","swiper","useRef","useLocation","setLang","slidePropsState","slide","useEffect","Audio","setIsEnabledAsync","regex","RegExp","$regex","backHandler","BackHandler","addEventListener","remove","list","position","marginLeft","type","LoadingBrain","TouchableOpacity","activeOpacity","idx","ActivityIndicator","current","scrollBy","SafeAreaView","ref","showsButtons","scrollEnabled","pagingEnabled","showsPagination","onIndexChanged","setTimeout","ScrollView","inputContainerStyle","map","alignContent","textInput","borderColor","shadowOpacity","shadowRadius","shadowOffset","elevation","buttonContainer","padding","viewrow","flexDirection","flexWrap","justifyContent","input","setInput","loadPage","setLoadPage","confirmed","setConfirmed","redirect","setRedirect","setUsername","res","parseUsername","insertUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","animating","Loading","LoadingImage","slideOdd","titleOdd","textOdd","aspectRatio","borderWidth","Tutorial","StepOne","StepTwo","StepThree","StepFour","StepFive","StepSixth","Config","Select","Import","Introduction","Source","License","Language","Step1","Step2","Step3","Step4","Step5","Step6","Step7","Step8","Step9","Step10","Step11","Step12","Step13","Step14","GoBack","InvalidFile","InvalidPersonFile","IncorrectPersonFile","ErrorChekingPerson","InvalidActivitiesLength","InvalidQuizData","InvalidLogData","InvalidDoubleData","InvalidSimonData","header","logo","menu","copyleft","ErrorMessage","Menu","showsVerticalScrollIndicator","HomeLang","marginRight","ambiant","unloadAsync","iconContainerStyle","DocumentPicker","multiple","setImportFile","prev","Linking","openURL","encrypt","string","encryptedString","j","String","fromCharCode","charCodeAt","isValidDate","d","n","Date","isNaN","fileToBase64","formatQuiz","formatLog","scoreVerification","checkPersonInformations","checkPersonExists","personAPI","checkQuiz","quizKeys","contentKeys","k","l","answers","question","foundInScore","checkDouble","double","checkSimon","simon","checkDictaphone","dictaphone","importPerson","exists","importQuiz","filePath","quizAPI","quizFindAsync","importDouble","doubleAPI","importSimon","simonAPI","importLog","dictaphoneAPI","writeDataFile","fileUri","exportPerson","personFind","personData","simonData","doubleData","quizData","dictaphoneData","JSON","stringify","activities","dilacrypt","ImportData","step","setStep","setError","importFile","parsed","parseJSON","dataImport","found","CannotCreatePerson","inputString","parse","stepStyle","clr","display","disabled","Home","setAmbiant","Sound","createAsync","isLooping","sound","playAsync","AlzheimApp","HomeOrTutorial","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","QuizScore","SimonScore","DoubleScore","NoScore","Global","BestScoreByDay","ExportedProfile","ReturnList","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","load","setLoad","deletePerson","SimonDB","removeAsync","DictaphoneDB","DoubleDB","QuizDB","deleted","ActivitiesLang","Sharing","Alert","setPerson","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","isPlaying","setIsPlaying","progress","setProgress","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","positionMillis","playableDurationMillis","variant","animation","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingHorizontal","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","getURI","folder","record","DictaphoneLang","created","deleteRecord","goBack","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","Head","RulesHead","TriesHead","Rules","TriesExplain","paddingTop","opacity","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","viewHelpPage","leaveButtonHelpPage","helpHead","helpStepHead","textTransform","helpStep","helpQuestionMark","SimonLogo","SimonLang","setTab","Game","start","setStart","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","QuestionMark","tab","pos","Create","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","GiveUpQuizTitle","GiveUpQuiz","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","EditedQuiz","QuizListRedirection","selectedQuizz","quizName","Questions","SuccessTitle","FailedTitle","join","SuccessQuizTitle","SuccessQuiz","fail","FailQuizTitle","FailQuiz","SaveContent","AddContent","SureCancelEdition","CustomHead","Custom","answersText","leaveButtonPlay","createButton","overlayDescriptionReference","paddingBottom","ScrollViewSuccess","modalTitle","modalDescription","quizTitleInputContainer","quizTitleInput","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","QuizLogo","QuizLang","printFile","clearFile","pauseSound","playSound","QuestionList","quizEdit","newContent","quizEdition","Number","isInteger","questionId","tmp","setNewContent","setQuizEdit","setReload","reload","setEditedQuiz","contentList","setContent","pickOutQuestion","setEditContent","ScoreRatio","filter","parseInt","total","toFixed","QuizList","ViewQuizList","SuccessContent","FormQuizContent","answer","setAnswer","contentContainerStyle","setFileType","setFilename","setUri","mimeType","flexShrink","setQuestion","toLowerCase","setAnswers","addAnswer","badgeStyle","pickOutAnswer","ViewQuiz","newQuestion","setNewQuestion","editContent","editedQuiz","saveQuiz","concat","editedFile","buttonTop","mode","saveContent","pushContent","viewPage","CreateQuiz","createQuestion","setCreateQuestion","setName","modalConfirmation","setModalConfirmation","undefined","substring","ThinkingImage","quizLength","pickRandomQuizz","ThinkingLottie","setPlay","setCurrent","setFail","arr","shuffle","TrophyLottie","SadLottie","openAlertResultQuestion","SadImage","setMediaType","answerTrimedLowercase","answerQuestion","play","setQuiz","setRandom","rand","randomArrayElement","exclude","randNumber","RemaningTries","Reinit","TitleGiveUp","SureToGiveUp","BestDayScore","ScoreHead","ScoreHelp","Dimensions","factor","hp","wp","RectoCard","PlayingCard","VersoCard","IconCard","viewGame","buttonViewPlay","playButtons","DoubleLang","DoubleLogo","ambiantEnabled","ambiantSoundPlay","soundEnabled","setSoundEnabled","generateRandomPair","colors","icons","indexColor","indexIcon","SCREEN_WIDTH","SCREEN_HEIGHT","Card","cardStyles","inPlay","inFound","show","ReturnCard","setFound","setShow","currentPlay","indexGame","playing","currentGameLength","nFound","setScore","prevScore","prevTries","endGame","bestScoreDay","failOverlay","element","newModel","giveUp","Double","setBestScoreDay","setAmbiantEnabled","bestDayScore","prevEnable","choosenSound","returnComponent","page","ActivitiesList","iconPosition","scoreRow","scoreRowSimon","scoreHeading","margin","quizScore","setQuizScore","horizontal","textStyle","valueSuffix","initialValue","delay","activeStrokeColor","radius","inActiveStrokeColor","inActiveStrokeOpacity","inActiveStrokeWidth","activeStrokeWidth","simonScore","setSimonScore","btnIndex","setBtnIndex","buttons","TotalScore","selectedIndex","global","days","item","highestToLowest","b","labels","datasets","fromZero","showValuesOnTopOfBars","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","printScore","doubleScore","setDoubleScore","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","unmountOnBlur","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","BgSource","navTheme","DefaultTheme","background","TopImage","BackgroundImage","NavigationContainer","theme","defaultProps","allowFontScaling","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact"],"mappings":"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","file":"static/js/app.9e7ec1d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/question_mark.c1494184.gif\";","module.exports = __webpack_public_path__ + \"static/media/brain.abdab59b.gif\";","module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sad.bfdab12f.gif\";","module.exports = __webpack_public_path__ + \"static/media/applause.3560ad8b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/you_lose.e1f971d7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.c4ec63da.png\";","module.exports = __webpack_public_path__ + \"static/media/2.c9afe178.png\";","module.exports = __webpack_public_path__ + \"static/media/3.95e52180.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e18a9e44.png\";","module.exports = __webpack_public_path__ + \"static/media/5.1a0c5df5.png\";","module.exports = __webpack_public_path__ + \"static/media/6.64d544d0.png\";","module.exports = __webpack_public_path__ + \"static/media/alzheimapp_logo.01f37bd0.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.42d4e3d2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.d22dea5d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.5d28b463.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.baee48bf.png\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.e46e92e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e82f415e.gif\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.af08ce07.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.d73909c9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fail.4f8cf1ae.mp3\";","module.exports = __webpack_public_path__ + \"static/media/play.25c902a7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.44546c82.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n}\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n}\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n}\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n}\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n}\n\nexport function reset() {\n    FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return AsyncStorage.clear();\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retourner sur le formulaire',\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet\\nrequise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? Il est possible {0} la donnée d'une personne et de {1} dans un autre appareil !\",\n                boldText: [\"d'exporter\", \"l'importer\"],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can {0} a person's data and {1} it in another device!\",\n                boldText: ['export', 'import'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer {0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to achieve today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text, Platform } from 'react-native';\nimport { Button, Image } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/selection/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/selection/addedUser.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <Button\n                title={InterfaceLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nconst createQuizContent = async (personId, el) => {\n    el.id = uuidv4();\n    el.score = [{personId: personId, success: 0, failed: 0}];\n    if (['audio', 'image'].includes(el.fileType)) {\n        await uploadQuizFile(el);\n    }\n};\n\nconst uploadQuizFile = async (el) => {\n    const filename = `${uuidv4()}${el.fileType == 'audio' ? '.m4a' : '.png'}`;\n    const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n    await FileSystem.copyAsync({\n        from: el.uri,\n        to: `${path}${filename}`\n    });\n    await FileSystem.deleteAsync(el.uri);\n    el.uri = `${path}${filename}`;\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        await createQuizContent(personId, el);\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport async function updateScore(personId, quizId, contentId, success) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    const contentIndex = quiz[0].content.findIndex(el => el.id == contentId );\n    const scoreIndex = quiz[0].content[contentIndex].score.findIndex(el => el.personId = personId);\n    if (success) quiz[0].content[contentIndex].score[scoreIndex].success++\n    else quiz[0].content[contentIndex].score[scoreIndex].failed++\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function deleteId(personId, quizId) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n};\n\nexport async function deleteQuestion(quizId, questionId) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    const content = quiz[0].content;\n    const contentIndex = content.findIndex(el => el.id == questionId );\n    if (['audio', 'image'].includes(content[contentIndex]))\n        await FileSystem.deleteAsync(content.uri);\n    quiz[0].content = content.splice(0, contentIndex);\n    return db.updateAsync({_id: quizId}, {...quiz[0]})\n};\n\nexport async function getById(quizId) {\n    return db.findAsync({ _id: quizId }, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n};\n\nexport async function saveQuiz(personId, quizId, content) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    if (!quiz) return;\n    for (let i = 0; i < content.length; i++) {\n        const el = content[i];\n        if (!el.id)\n            await createQuizContent(personId, el);\n        else if (el.id && el.editedFile) {\n            await uploadQuizFile(el);\n            delete el.editedFile;\n        }\n    }\n    quiz[0].content = content;\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function reset() {\n    return db.removeAsync({}, { multi: true });\n};\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DoubleSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nexport const randomArrayElement = (exclude, min, max) => {\n    randNumber = randomNumber(min, max);\n    if (randNumber == exclude)\n        return randomArrayElement(exclude, min, max);\n    return randNumber;\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\nimport { db as QuizDB } from './quizApi'\nimport { db as DoubleDB } from './doubleApi';\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await DoubleDB.removeAsync({ personId: id });\n    await QuizDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return db.removeAsync({ _id: id });\n};\n\nexport async function reset() {\n    return FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(async res => {\n        await SimonDB.removeAsync({}, { multi: true });\n        await QuizDB.removeAsync({}, { multi: true });\n        await DictaphoneDB.removeAsync({}, { multi: true });\n        return db.removeAsync({}, { multi: true });\n    });\n};","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0)\n                personId = result._id;\n            await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${personId}`, {intermediates: true});\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n        zIndex: 1,\n    },\n    wrapper: {\n        marginTop: 20,\n        textAlign: 'center',\n        alignItems: 'center',\n        zIndex: 1,\n    },\n    topBanner: {\n        backgroundColor:'#355c7d'\n    },\n    topImage: {\n        // flex: 1,\n        height: 70,\n        //marginTop: -10,\n    },\n    heading: {\n        marginTop: 10,\n        fontSize: 20,\n        zIndex: 2,\n        color: 'white'\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    subtitle: {\n        textAlign: 'center',\n        color: 'white'\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: 10,\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1,\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Text,\n    View,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    BackHandler,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB } from 'react-native-elements';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport LoadingBrain from '../../assets/img/activities/brain.gif';\nimport { lang as SelectionMenuLang } from '../../language/selection';\nimport Rows from '../../components/selection/Rows';\nimport CreatePerson from '../../components/selection/PersonCreation/CreatePerson';\n\nimport Lottie from '../../components/utils/Lottie';\n\nimport * as Person from '../../data/personApi';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function SelectionMenu(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        SelectionMenuLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const swiper = useRef(null);\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n    const setLang = state?.setLang || props.setLang;\n    const slidePropsState = state?.slide || props?.slide;\n\n    useEffect(() => {\n        Audio.setIsEnabledAsync(false);\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    useEffect( () => {\n        setBtnTxt(SelectionMenuLang[lang].ReturnToList);\n        setIndex(slidePropsState || 0);\n    }, [])\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - index, true);\n    };\n\n    const changeIndex = (idx) => {\n        setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                setBtnTxt(SelectionMenuLang[lang].AddAPerson);\n            } else if (idx === 1) {\n                setBtnTxt(SelectionMenuLang[lang].ReturnToList);\n            }\n            setActive(true);\n        }, 400);\n    };\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 85 + '%',\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home', {\n                    state: { username: username, setLang: setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n            <View style={styles.wrapper}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={LoadingBrain}\n                    LottieStyle={styles.topImage}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[lang].Hello(username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (active === false) {\n                            return;\n                        }\n                        setActive(false);\n                        setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={slidePropsState || 0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={SelectionMenuLang[lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    setSearch(e);\n                                }}\n                                value={search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {persons && persons.length > 0 ? (\n                                printRows(persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={persons}\n                                setPersons={setPersons}\n                                lang={lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 40,\n        marginTop: -40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 50,\n        borderColor: 'gray',\n        borderRadius: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        width: 180,\n        textAlign: 'center',\n        elevation: 10\n    },\n    image: {\n        flex: 1,\n        width: 100\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n        height: 50\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername as insertUsername, SawTutorial, getUsername } from '../../data/configApi';\n\nimport SelectionMenu from '../SelectionMenu';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\nimport { Button } from 'react-native-elements';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [loadPage, setLoadPage] = useState(true);\n    const [confirmed, setConfirmed] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const [username, setUsername] = useState('');\n\n    useEffect(() => {\n        getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    setUsername(res[0].username);\n                    setRedirect(true);\n                }\n                setLoadPage(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoadPage(false);\n            });\n    }, []);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            insertUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setUsername(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (redirect)\n        return <SelectionMenu username={username} lang={props.lang} setLang={props.setLang} slide={1} />\n\n    if (loadPage)\n        return <View style={styles.container}></View>\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <Button\n                        title={isLoading ? (\n                            <ActivityIndicator\n                                color=\"white\"\n                                size=\"small\"\n                                animating={true}\n                            />\n                        ) : (\n                            'OK'\n                        )}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                        buttonStyle={styles.button}\n                        titleStyle={styles.buttonText}\n                    />\n                </View>\n            </View>\n        );\n    } else {\n        return <SelectionMenu username={username} lang={props.lang} setLang={props.setLang} slide={1} />\n    }\n}\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        height: 100 + '%',\n        padding: 20,\n        alignItems: 'center'\n    },\n    slideOdd: {\n        height: 100 + '%',\n        alignItems: 'center',\n        backgroundColor: '#355c7d',\n    },\n    title: {\n        color: 'black',\n        fontSize: 22,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    titleOdd: {\n        color: 'white',\n        fontSize: 22,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    textOdd: {\n        color: 'white',\n        fontSize: 15,\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    image: {\n        height: 30 + '%',\n        marginBottom: 40,\n        marginTop: 20,\n        aspectRatio: 1\n    },\n    button: {\n        marginTop: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        borderWidth: 1,\n        height: 60\n    },\n    buttonText: {\n        color: '#355c7d'\n    },\n    buttonContainer: {\n        width: 250,\n    }\n});\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { Button } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\n\nexport default function Tutorial(props) {\n    const navigate = useNavigate();\n\n    return (\n        <>\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Button \n                            title={TutorialLang[props.lang].LastStepButton}\n                            buttonStyle={styles.button}\n                            containerStyle={styles.buttonContainer}\n                            onPress={() => {\n                                Config.SawTutorial(true);\n                                navigate('/username', {\n                                    state: { setLang: props.setLang }\n                                });\n                            }}\n                            titleStyle={styles.buttonText}\n                        />\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Select: \"Sélection des personnes\",\n        Import: \"Importer un profil\",\n        Introduction: \"Introduction\",\n        Source: \"Accès au code source\",\n        License: \"Code sous licence GPL v3.\\nCréation originale par Diyaeddine LAOUID.\",\n        Language: \"Changer la langue\",\n        Step1: \"Vérification du format ... \",\n        Step2: \"Vérification du format de l'identité ... \",\n        Step3: \"Vérification d'une personne similaire ...\",\n        Step4: \"Vérification des activités ...\",\n        Step5: \"Vérification des quiz ...\",\n        Step6: \"Vérification des jeux des pairs ...\",\n        Step7: \"Vérification du Simon ...\",\n        Step8: \"Vérification du Journal vocal ...\",\n        Step9: \"Création de la personne ...\",\n        Step10: \"Création des quiz ...\",\n        Step11: \"Création des jeux des pairs ...\",\n        Step12: \"Création du Simon ...\",\n        Step13: \"Création du Dictaphone ...\",\n        Step14: \"L'importation s'est déroulée sans encombre ! :-)\",\n        GoBack: \"Retour\",\n        InvalidFile: \"Le fichier a été supprimé du cache\",\n        InvalidPersonFile: \"Le fichier importé est invalide !\",\n        IncorrectPersonFile: \"L'identité de la personne est mal saisie !\",\n        ErrorChekingPerson: \"Une erreur est survenue au moment de la vérification de la personne dans le système ...\",\n        InvalidActivitiesLength: \"Le nombre d'activités dans le tableau du fichier est beaucoup trop grand.\",\n        InvalidQuizData: \"Les données du quiz sont incorrectes ...\",\n        InvalidLogData: \"Les données du dictaphone sont incorrectes ...\",\n        InvalidDoubleData: \"Les données du jeu des pairs sont incorrectes ...\",\n        InvalidSimonData: \"Les données du Simon sont incorrectes ...\",\n        \n    },\n    en: {\n        Select: \"Select a person\",\n        Import: \"Import a profil\",\n        Introduction: \"Introduction\",\n        Source: \"Source code on GitHub\",\n        License: \"Licensed GPL v3 source code.\\nOriginally created by Diyaeddine LAOUID.\",\n        Language: \"Change language\",\n        Step1: \"Format checking ... \",\n        Step2: \"Identity format checking ... \",\n        Step3: \"Checking if person already registered ...\",\n        Step4: \"Activities length checking ...\",\n        Step5: \"Quiz checking ...\",\n        Step6: \"Double Memory checking ...\",\n        Step7: \"Simon checking ...\",\n        Step8: \"Journal log checking ...\",\n        Step9: \"Person creation ...\",\n        Step10: \"Quiz creation ...\",\n        Step11: \"Double Memory creation ...\",\n        Step12: \"Simon Memory creation ...\",\n        Step13: \"Journal log creation ...\",\n        Step14: \"The person has been successfully imported! :-)\",\n        GoBack: \"Back\",\n        InvalidFile: \"The file has been deleted from the cache\",\n        InvalidPersonFile: \"The imported file is invalid!\",\n        IncorrectPersonFile: \"The format of the imported person is invalid!\",\n        ErrorChekingPerson: \"Error when checking if this person exists...\",\n        InvalidActivitiesLength: \"The activities length on the file array is too big\",\n        InvalidQuizData: \"The quiz datas are invalid...\",\n        InvalidLogData: \"The journal logs datas are invalid...\",\n        InvalidDoubleData: \"The double memory game datas are invalid...\",\n        InvalidSimonData: \"The Simon datas are invalid...\",\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        height: 100 + '%',\n        backgroundColor: '#355c7d',\n        alignItems: 'center'\n    },\n    header: {\n        marginTop: 10 + '%',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    logo: {\n        width: 130,\n        height: 130\n    },\n    menu: {\n        marginTop: 2 + '%',\n        flex: 1,\n        marginBottom: 20\n    },\n    button: {\n        width: 250,\n        height: 50,\n        backgroundColor: 'white',\n        color: '#355c7d',\n        justifyContent: 'flex-start'\n    },\n    buttonContainer: {\n        borderRadius: 25,\n        alignItems: 'center',\n        marginBottom: 20\n    },\n    copyleft: {\n        marginTop: 10 + '%',\n        fontSize: 11,\n        color: 'white',\n        textAlign: 'center',\n        fontStyle: 'italic'\n    },\n    ErrorMessage: {\n        color: 'red',\n        fontWeight: 'bold',\n        textAlign:'center',\n        marginTop: 20,\n        marginHorizontal: 40\n    }\n});\n","import React from 'react';\nimport {\n    ScrollView,\n    Linking\n} from 'react-native';\n\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\nimport * as DocumentPicker from 'expo-document-picker';\n\nimport { lang as HomeLang } from '../../language/home';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    const navigate = useNavigate();\n\n    return (\n        <ScrollView style={styles.menu} showsVerticalScrollIndicator={false}>\n            <Button\n                title={HomeLang[props.lang].Select}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', textAlign: 'center' }}\n                containerStyle={styles.buttonContainer}\n                icon={\n                    <Icon\n                        name={'person-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    if (props.ambiant) await props.ambiant?.unloadAsync()\n                    navigate('/selection', {\n                        state: { username: props.username, lang: props.lang, setLang: props.setLang }\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Import}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'person-add-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => {\n                    DocumentPicker.getDocumentAsync({multiple: false}).then( e => {\n                        props.setImportFile(e.uri);\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Language}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'world-o'}\n                        type={'fontisto'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                onPress={() => props.setLang(prev => prev == 'fr' ? 'en' : 'fr')}\n                raised\n            />\n            <Button\n                title={HomeLang[props.lang].Introduction}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={[styles.buttonContainer, {marginBottom: 20}]}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    await props.ambiant.unloadAsync()\n                    navigate('/tutorial');\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Source}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'logo-github'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => Linking.openURL('https://github.com/dilaouid/AlzheimApp')}\n            />\n            <Text style={styles.copyleft} >{HomeLang[props.lang].License}</Text>\n        </ScrollView>\n    );\n}\n","export const encrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let encryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        encryptedString += String.fromCharCode( string.charCodeAt(i) - key.charCodeAt(j) - key.length );\n    }\n    return (encryptedString);\n};\n\nexport const decrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let decryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        decryptedString += String.fromCharCode( string.charCodeAt(i) + key.charCodeAt(j) + key.length );\n    }\n    return (decryptedString);\n};","/**\n * Model is like:\n * {\n *      personId: 'xxx',\n *      name: 'xxx',\n *      description: 'xxx',\n *      picture: 'b64' || null,\n *      activities: {\n *          quiz: [\n *              // all quizz contents //\n *          ],\n *          log: [\n *              // all logs contents\n *          ],\n *          double: [\n *              // all double contents\n *          ],\n *          simon: [\n *              // all simon score\n *          ]\n *      }\n * }\n */\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as dilacrypt from './dilacrypt';\n\nimport { db as personAPI } from '../data/personApi';\nimport { db as dictaphoneAPI } from '../data/dictaphoneApi';\nimport { db as simonAPI } from '../data/simonApi';\nimport { db as quizAPI } from '../data/quizApi';\nimport { db as doubleAPI } from '../data/doubleApi';\n\nconst isValidDate = (d) => {\n    let n = new Date(d);\n    return n instanceof Date && !isNaN(n);\n};\n\nconst fileToBase64 = async (uri) => {\n    return await FileSystem.readAsStringAsync(uri, {\n        encoding: 'base64',\n    });\n};\n\nconst formatQuiz = async (quiz) => {\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < el.content.length; j++) {\n            const e = el.content[j];\n            if (e.uri)\n                e.uri = await fileToBase64(e.uri);\n        }\n    }\n    return (quiz);\n};\n\nconst formatLog = async (log) => {\n    for (let i = 0; i < log.length; i++) {\n        const el = log[i];\n        el.path = await fileToBase64(el.path);\n    }\n    return (log);\n};\n\nconst scoreVerification = (el, personId) => {\n    if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n    if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    if (!el.hasOwnProperty('score') || typeof el.score !== 'number') return false;\n    if (!el.hasOwnProperty('dailyScoreBeaten') || typeof el.dailyScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('globalScoreBeaten') || typeof el.globalScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n    return true;\n};\n\n\n\nexport const checkPersonInformations = (person) => {\n    const keys = ['_id', 'description', 'fullname', 'picture', 'activities'];\n    for (let i = 0; i < keys.length; i++) {\n        const el = keys[i];\n        if (person.hasOwnProperty(el) === false)\n            return false;\n    }\n    return true;\n};\n\nexport const checkPersonInformationsLength = (person) => {\n    return person.fullname.length <= 25 && person.description.length <= 100;\n};\n\nexport const checkPersonExists = async (personId) => {\n    return await personAPI.findAsync({ _id: personId });\n}\n\nexport const checkQuiz = async (quiz, personId) => {\n    const quizKeys = ['name', 'content', 'personId', '_id'];\n    const contentKeys = ['answers', 'question', 'id', 'score']\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < quizKeys.length; j++) {\n            const k = quizKeys[j];\n            if (el.hasOwnProperty(k) === false) return false;\n        }\n        for (let d = 0; d < el.content.length; d++) {\n            const content = el.content[d];\n            if (content.hasOwnProperty('uri') || content.hasOwnProperty('filename') || content.hasOwnProperty('fileType')) {\n                if (!content.hasOwnProperty('uri')) return false;\n                else if (!content.hasOwnProperty('filename')) return false;\n                else if (!content.hasOwnProperty('fileType')) return false;\n            }\n            for (let j = 0; j < contentKeys.length; j++) {\n                const l = contentKeys[j];\n                if (content.hasOwnProperty(l) === false) return false;\n            }\n            if (typeof content.answers !== 'object' || content.answers?.length === 0) return false;\n            if (typeof content.question !== 'string' || typeof content.question?.length > 23) return false;\n            if (typeof content.score !== 'object' || content.answers?.length === 0) return false;\n            let foundInScore = false\n            for (let n = 0; n < content.score.length; n++) {\n                const score = content.score[n];\n                if (score.personId === personId) foundInScore = true;\n                if (!score.hasOwnProperty('personId')) return false;\n                if (!score.hasOwnProperty('success') || typeof score.success !== 'number') return false;\n                if (!score.hasOwnProperty('failed') || typeof score.success !== 'number') return false;\n            }\n            if (!foundInScore) return false;\n        }\n    }\n    return true;\n};\n\nexport const checkDouble = (double, personId) => {\n    if (typeof double !== 'object') return false;\n    for (let i = 0; i < double.length; i++)\n        if (!scoreVerification(double[i], personId)) return false;\n    return true;\n};\n\nexport const checkSimon = (simon, personId) => {\n    if (typeof simon !== 'object') return false;\n    for (let i = 0; i < simon.length; i++)\n        if (!scoreVerification(simon[i], personId)) return false;\n    return true;\n};\n\nexport const checkDictaphone = (dictaphone, personId) => {\n    if (typeof dictaphone !== 'object') return false;\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n        if (!el.hasOwnProperty('name') || typeof el.name !== 'string' || el.name.length < 2) return false;\n        if (!el.hasOwnProperty('path') || typeof el.path !== 'string' || el.path.length < 100) return false;\n        if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n        if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    }\n    return true;\n};\n\nexport const importPerson = async (person, exists) => {\n\n    if (exists === false) {\n        await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${person._id}`, {intermediates: true});\n    }\n\n    let picture = null;\n    if (person.picture) {\n        picture = uuidv4();\n        const path = `${FileSystem.documentDirectory}persons/${person._id}/pp`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        await FileSystem.writeAsStringAsync(path + `/${picture}.jpg`, person.picture, { encoding: 'base64' }).then(el => {\n            picture = path + `/${picture}.jpg`;\n        }).catch(err => {\n            picture = null;\n        });\n    }\n\n    if (exists === false)\n        return personAPI.insertAsync(\n            {\n                _id: person._id,\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        );\n    else\n        return personAPI.updateAsync({_id: person._id}, {\n            $set: {\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        });\n};\n\nexport const importQuiz = async (quiz) => {\n    let res = true;\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        const path = `${FileSystem.documentDirectory}persons/${el.personId}/quiz`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        for (let j = 0; j < quiz[i].content.length; j++) {\n            const e = quiz[i].content[j];\n            if (e.hasOwnProperty('uri')) {\n                // Import and write file\n                let filename = uuidv4();\n                let filePath;\n                await FileSystem.writeAsStringAsync(path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`, e.uri, { encoding: 'base64' }).then(el => {\n                    filePath = path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`;\n                    filename = filePath;\n                    e.uri = filePath;\n                }).catch(err => {\n                    filename = null;\n                    e.uri = null;\n                });\n            }\n        }\n        const quizFindAsync = await quizAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        const quizExists = quizFindAsync.length > 0;\n        if (quizExists) {\n            await quizAPI.updateAsync( {_id: el._id}, {\n                $set: {\n                    name: el.name,\n                    content: el.content\n                }\n            }).catch(err => {\n                res = false;\n            })\n        } else {\n            await quizAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importDouble = async (double) => {\n    let res = true;\n    for (let i = 0; i < double.length; i++) {\n        const el = double[i];\n        const doubleExists = await doubleAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (doubleExists.length === 0) {\n            await doubleAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importSimon = async (simon) => {\n    let res = true;\n    for (let i = 0; i < simon.length; i++) {\n        const el = simon[i];\n        const simonExists = await simonAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (simonExists.length === 0) {\n            await simonAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importLog = async (dictaphone, personId) => {\n    let res = true;\n    const path = `${FileSystem.documentDirectory}persons/${personId}/recordings`;\n    await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n        console.log('[!] Directory already exists');\n    });\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        const logExists = await dictaphoneAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (logExists.length === 0) {\n            el.date = new Date(el.date);\n            let filename = uuidv4();\n            let filePath;\n            await FileSystem.writeAsStringAsync(path + `/${filename}.m4a`, el.path, { encoding: 'base64' }).then(e => {\n                filePath = path + `/${filename}.m4a`;\n                filename = filePath;\n                el.path = filePath;\n            }).catch(err => {\n                console.log(err);\n                filename = null;\n                el.path = null;\n            });\n            await dictaphoneAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const writeDataFile = async (fullname, content) => {\n    let fileUri = FileSystem.documentDirectory + `${fullname}.alz`;\n    return await FileSystem.writeAsStringAsync(fileUri, content).catch(err => {\n        console.log(err);\n    }).then( (e) => {\n        return (fileUri);\n    });\n};\n\nexport const exportPerson = async (personId, key) => {\n    const personFind = await personAPI.findAsync({ _id: personId });\n    if (!personFind) return ('PERSON_NOT_FOUND');\n    const person = personFind[0];\n    if (!person._id || !person.fullname) return ('INVALID_PERSON');\n    const personData = {\n        _id: person._id,\n        description: person.description,\n        fullname: person.fullname,\n        picture: person.picture ? await fileToBase64(person.picture) : null\n    };\n    const simonData = await simonAPI.findAsync({ personId: personId });\n    const doubleData = await doubleAPI.findAsync({ personId: personId });\n    const quiz = await quizAPI.findAsync({ personId: personId });\n    const quizData = quiz ? await formatQuiz(quiz) : []; // converting files into base64 here\n\n    const dictaphone = await dictaphoneAPI.findAsync({ personId: personId });\n    const dictaphoneData = dictaphone ? await formatLog(dictaphone) : []; // converting files into base64 here\n\n    const result = JSON.stringify({\n        _id: personData._id,\n        description: personData.description,\n        fullname: personData.fullname,\n        picture: personData.picture,\n        activities: {\n            quiz: quizData,\n            double: doubleData,\n            simon: simonData,\n            dictaphone: dictaphoneData\n        }\n    });\n    const uri = await writeDataFile(personData.fullname, key ? dilacrypt.encrypt(result, key) : result);\n    return (uri);\n};","import React, { useEffect, useState } from 'react';\nimport {\n    ActivityIndicator,\n    ScrollView\n} from 'react-native';\n\nimport { Text, Button } from 'react-native-elements';\n\nimport { lang as HomeLang } from '../../language/home';\nimport * as FileSystem from 'expo-file-system';\nimport * as dataImport from '../../utils/share'\n\nimport styles from './styles';\n\nexport default function ImportData(props) {\n    const [step, setStep] = useState(1);\n    const [error, setError] = useState();\n    \n    useEffect( async () => {\n        try {\n\n            // Import and check file data\n            const content = await FileSystem.readAsStringAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidFile;\n            });\n            const parsed = parseJSON(content);\n            if (!parsed) throw HomeLang[props.lang].InvalidPersonFile;\n            if (typeof parsed !== 'object' || !parsed._id)\n                throw HomeLang[props.lang].InvalidPersonFile;\n\n            // Checking the personal infos\n            setStep(2);\n            if (dataImport.checkPersonInformations(parsed) === false)\n                throw HomeLang[props.lang].InvalidPersonFile;\n            if (dataImport.checkPersonInformationsLength(parsed) === false)\n                throw HomeLang[props.lang].IncorrectPersonFile;\n\n            // Checking if this userId is registered in the local db\n            setStep(3);\n            const found = await dataImport.checkPersonExists(parsed._id);\n            \n            // Checking activities length\n            setStep(4);\n            if (parsed.activities.length > 4) throw HomeLang[props.lang].InvalidActivitiesLength;\n\n            // Checking quiz format\n            setStep(5);\n            if (await dataImport.checkQuiz(parsed.activities.quiz, parsed._id) === false) throw HomeLang[props.lang].InvalidQuizData;\n\n            // Checking double format\n            setStep(6);\n            if (await dataImport.checkDouble(parsed.activities.double, parsed._id) === false) throw HomeLang[props.lang].InvalidDoubleData;\n\n            // Checking simon format\n            setStep(7);\n            if (await dataImport.checkSimon(parsed.activities.simon, parsed._id) === false) throw HomeLang[props.lang].InvalidSimonData;\n      \n            // Checking dictaphone format\n            setStep(8);\n            if (await dataImport.checkDictaphone(parsed.activities.dictaphone, parsed._id) === false) throw HomeLang[props.lang].InvalidLogData;\n\n            // <! -------- Creation process starts ---------- !>\n\n            // Person creation\n            setStep(9);\n            dataImport.importPerson(parsed, found.length > 0).catch( (err) => {\n                throw HomeLang[props.lang].CannotCreatePerson;\n            });\n\n            // Quiz creation\n            setStep(10);\n            dataImport.importQuiz(parsed.activities.quiz).catch(err => {\n                throw HomeLang[props.lang].InvalidQuizData;\n            });\n\n            // Double creation\n            setStep(11);\n            dataImport.importDouble(parsed.activities.double).catch(err => {\n                throw HomeLang[props.lang].InvalidDoubleData;\n            });\n\n            // Simon creation\n            setStep(12);\n            dataImport.importSimon(parsed.activities.simon).catch(err => {\n                throw HomeLang[props.lang].InvalidSimonData;\n            });\n\n            // Journal log creation\n            setStep(13);\n            dataImport.importLog(parsed.activities.dictaphone, parsed._id).catch(err => {\n                throw HomeLang[props.lang].InvalidLogData;\n            });\n\n            // SUCCESS !!\n            setStep(14);\n\n            await FileSystem.deleteAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidPersonFile;\n            });\n\n\n        } catch (e) {\n            setError(e);\n            return false;\n            // props.setImportFile(null);\n        }\n    }, [])\n\n    const parseJSON = (inputString) => {\n        if (inputString) {\n          try {\n            return JSON.parse(inputString);\n          } catch (e) {\n            return false;\n          }\n        }\n    };\n\n    const stepStyle = (idx) => {\n        let clr = idx === step ? 'white' : '#89ff91';\n        if (error && idx === step) clr = 'red';\n        if (step === 14) clr = '#89ff91';\n        return {\n            color: clr,\n            fontStyle: idx === step || error ? 'italic' : 'normal',\n            marginBottom: idx === 13 ? 30 : 0,\n            display: step >= idx ? 'flex' : 'none',\n            alignContent: 'center',\n            textAlign: 'center',\n            fontSize: idx === step ? 14 : 9\n        }\n    } \n\n    const printActivity = (idx) => {\n        if (idx === step && !error && step !== 14)\n            return <ActivityIndicator color={'white'} size={'small'} />\n        return <></>\n    };\n\n    return (\n        <ScrollView style={styles.menu}>\n            { [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14].map( (e, i) => {\n                return <Text key={i} style={ stepStyle(e) }> { HomeLang[props.lang]['Step' + e] } { printActivity(e) }</Text>\n            }) }\n            { error ? <Text style={styles.ErrorMessage}>{ error }</Text> :  <></> }\n            <Button disabled={!error && step < 14} containerStyle={{marginTop: 150, borderRadius: 15}} title={HomeLang[props.lang].GoBack} onPress={() => props.setImportFile(null)}/>\n        </ScrollView>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Image\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\n\nimport { useLocation } from 'react-router-native';\n\nimport AlzheimApp from '../../assets/img/alzheimapp_logo.png';\nimport Menu from './Menu'\nimport ImportData from './ImportData';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [importFile, setImportFile] = useState();\n    const [ambiant, setAmbiant] = useState();\n    Audio.setIsEnabledAsync(true);\n\n    useEffect( async () => {\n        if (ambiant) return;\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by MCOCHET - check his soundcloud here: https://soundcloud.com/mcochet\n            require('../../assets/sound/ambiant.mp3'),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n    }, []);\n\n    const state = useLocation()?.state;\n\n    const username = props.username || state?.username;\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Image source={AlzheimApp} style={styles.logo} resizeMode={'cover'} />\n            </View>\n            { importFile ?\n                <ImportData lang={props.lang} importFile={importFile} setImportFile={setImportFile} /> :\n                <Menu lang={props.lang} username={username} setLang={props.setLang} setImportFile={setImportFile} ambiant={ambiant} />\n            }\n        </View>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} setLang={props.setLang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} setLang={props.setLang} />;\n    }\n    return <Home lang={props.lang} username={props.username} setLang={props.setLang} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: 'white' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        Home: 'Accueil',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n        QuizScore: \"Score des quiz\",\n        SimonScore: \"Score du Simon\",\n        DoubleScore: \"Score du jeu des pairs\",\n        NoScore: \"Aucun score enregistré pour cette activité...\",\n        Success: 'réussite',\n        Global: \"Vue d'ensemble\",\n        BestScoreByDay: 'Meilleur score du jour',\n        ExportedProfile: 'Profil exporté',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        Home: 'Home',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n        QuizScore: \"Quiz Score\",\n        SimonScore: \"Simon Score\",\n        DoubleScore: \"Double Memory Score\",\n        NoScore: \"No score registered for this activity...\",\n        Success: 'success',\n        Global: \"Global view\",\n        BestScoreByDay: 'Best score by day',\n        ExportedProfile: 'Profile exported',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\n\nimport { ScrollView, Alert, View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/selection/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\nimport { exportPerson } from '../../../utils/share';\nimport * as Sharing from 'expo-sharing';\n\nimport * as FileSystem from 'expo-file-system';\n\nimport styles from './styles';\nimport Form from '../../../components/selection/PersonCreation/Form';\nimport { ActivityIndicator } from 'react-native';\n\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n    const [load, setLoad] = useState(false);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        Person.getById(props.personId).then((result) => {\n            props.setPerson(result[0])\n        });\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/selection', {\n                state: { username: props.username, lang: props.lang }\n            });\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.fullname),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: load ? '' : 'share-alt',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={load ? <ActivityIndicator color={'white'} size={'small'} /> : ActivitiesLang[props.lang]?.ShareProfile}\n                        onPress={async () => {\n                            setLoad(true)\n                            console.log('[~] Pressing export button');\n                            console.log('[+] Exporting person...');\n                            const uri = await exportPerson(props.personId, null);\n                            console.log('[+] Exported person! uri is: ' + uri);\n                            Sharing.shareAsync(uri).then( async (e) => {\n                                await FileSystem.deleteAsync(uri);\n                                setLoad(false);\n                            });\n                        }}\n                        disabled={load}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/selection', {\n                                state: { username: props.username, lang: props.lang }\n                            });\n                        }}\n                    />\n                </ScrollView>\n            ) : (\n                <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => {\n                            setFullname(props.person.fullname);\n                            setUriPreview(props.person.picture);\n                            setImage('');\n                            setDescription(props.person.description);\n                            setEdit(false)\n                        }}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </ScrollView>\n            )}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync().then( () => {\n                console.log('[+] Permission granted!');\n            })\n            .catch(e => {\n                console.error(e);\n            });            \n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const goBack = async () => {\n        if (recording) await recording?.stopAndUnloadAsync();\n        stopPlayingSounds();\n        props.setPage(0);\n    }\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            if (el) el?.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                    <Button\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'caret-back-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        buttonStyle={styles.recordButton}\n                        title={{}}\n                        titleStyle={styles.titleButton}\n                        onPress={() => goBack()}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <View style={styles.actionButtonsView}>\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n                <Button\n                    containerStyle={styles.actionButtons}\n                    icon={{\n                        name: 'caret-back-outline',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={{}}\n                    titleStyle={styles.titleButton}\n                    onPress={() => goBack()}\n                />\n                </View>\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n\n\n\n\n        // Help section\n        Head: \"Le Simon, comment ça marche ?\",\n        RulesHead: \"Les règles\",\n        TriesHead: \"Les essais\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu Simon est un {0} de forme circulaire comportant quatre gros boutons de couleurs différentes: rouge, vert, jaune et bleu.\\n\\nLe jeu {1} une des quatres couleurs et {2} toujours associé à cette couleur. Le joueur doit alors {3}.\\n\\nLe jeu {4}, puis {5} une nouvelle couleur. Le jour doit reproduire cette nouvelle séquence. Chaque fois que le joueur reproduit correctement la séquence, le jeu ajoute une nouvelle couleur.`,\n                boldText: ['jeu de mémoire', 'éclaire', 'produit un son', \"appuyer sur la touche de la couleur qui vient de s'allumer\", 'répète la même couleur et le même son', 'ajoute'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois que vous ratez une séquence, vous {0}. Au cours d'une partie, vous avez le droit à seulement {1}.\\n\\nUne fois les quatre erreurs faites, ou alors lorsque vous {2}, votre score est compatibilisé en fonction du nombre de touches dans la séquence actuelle.\\n\\nChaque jour, {3}.`,\n                boldText: ['perdez un essai', 'quatre erreurs', 'abandonnez la partie en cours', 'votre score journalier est remit à zéro'],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n\n\n\n\n        // Help section\n        Head: `The Simon, how does it works?`,\n        RulesHead: \"The rules\",\n        TriesHead: \"The tries\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The Simon is a circular shaped {0} with four different colored buttons: red, green, yellow and blue.\\n\\nThe game {1} one of the four colors and {2} always associated to this color. The player shall {3}.\\n\\nThe game {4}, then {5} another color. The player will have to reproduces this sequence. Each time the player successfully reproduces the sequence, the game adds another color in this sequence.`,\n                boldText: ['memory game', 'lighten', 'produces a sound', \"press the colored button which has just turned on\", 'repeat the same color with the same sound', 'add'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `Each time you fail a sequence, you {0}. In a game, you are allowed up to {1}.\\n\\nOnce the four fails made, or when you {2}, you will have the number of elements in the current sequence saved as your score.\\n\\nEach day, {3}.`,\n                boldText: ['lose a try', 'four maximum fails', 'give up the current game', 'your daily score is reset to zero'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        paddingTop: 20,\n        flex: 1,\n        alignItems: 'center'\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        // flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        //flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    // Help section\n    viewHelpPage: {\n        marginTop: -20,\n        backgroundColor: 'white',\n        width: 100 + '%',\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .4,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate, dailyScore < order.length - 1, bestScore < order.length - 1);\n        setCanPlay(false);\n        setSuccess(true);\n        const path = dailyScore < order.length - 1 ? require(`../../../assets/sound/global/applause.mp3`) : require(`../../../assets/sound/global/you_lose.mp3`);\n        const { sound } = await Audio.Sound.createAsync(path);\n        props.setSound(sound);\n        sound.playAsync();\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            <Overlay\n                visible={success}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => setSuccess(false)}\n                ModalComponent={Modal}\n            >\n                {scoreBeaten ? successOverlay() : failOverlay()}\n                <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            retryGame();\n                        }}\n                        title={SimonLang[props.lang].Retry}\n                        containerStyle={{\n                            borderRadius: 13,\n                            marginRight: 10,\n                        }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setTab(0);\n                        }}\n                        title={SimonLang[props.lang].Exit}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React from 'react';\nimport { View, ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView>\n                <Button\n                    title={SimonLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{SimonLang[props.lang].Head}</Text>\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].Rules()}</Text>\n\n                \n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].TriesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].TriesExplain()}</Text>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\nimport Help from './Help';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr, pos) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: i == pos ? color : '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        Cancel: 'Annuler',\n        GoBack: \"Oui, j'annule l'édition du quiz\",\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Abandonner le quiz\",\n        GiveUpQuiz: \"Êtes-vous sûr de vouloir abandonner ce quiz? Le score restera enregistré.\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        EditedQuiz: \"Quiz modifié avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Bien joué !! 😄\",\n        Success: \"Bien joué ! C'est la bonne réponse !! Vous pouvez maintenant passer à la suite !\",\n        FailedTitle: \"Dommage... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Dommage, mais ce n'était pas la bonne réponse ! Les réponses possibles étaient: ${answersText}.`\n        },\n        SuccessQuizTitle: \"Haut la main !\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Fantastique !! Vous avez réussi ce quiz ! Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Dommage... Vous avez raté ce quiz ! ... Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Sauvegarder le quiz',\n        SaveContent: \"Sauvegarder la question\",\n        AddContent: \"Ajouter la question\",\n        SureCancelEdition: \"Êtes-vous sûr de bien vouloir abandonner l'édition de ce quiz? Vous ne pourrez pas récupérer vos modifications.\",\n\n        // Help page related\n        Head: 'Le quiz, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        CustomHead: \"Personnalisation\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Les règles du quiz sont basiques: il y a des questions {0}, et le joueur doit y répondre. Il peut y avoir {1} réponses possibles, une bonne réponse et c'est un point ajouté au score.\\n\\nIl n'y a pas de perte de points suite à une mauvaise réponse.`,\n                boldText: [\"facultativement accompagnées d'une image ou d'un son\", \"plusieurs\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `Il n'y a pas de quiz par défaut. C'est à vous d'en {0} et de les {1} à votre guise !\\nPour cela, vous devez vous rendre dans la partie \"{2}\".\\n\\nVous aurez là la liste des quiz que vous avez préalablement crée. Si vous n'en avez encore créé aucun, façonnez votre premier quiz avec le bouton \"{3}\".\\n\\nIci vous pourrez ajouter des question avec le bouton \"{4}\". Il vous est demandé {5} (facultatif), qui correspond à un son ou une image pour illustrer votre question.\\n\\nEnsuite, vous devez {6}. Ce sera cette question qui sera ensuite demandée au joueur.\\n\\nEt enfin, {7}. Une fois une réponse valide renseignée, cliquez sur le symbole {8} à côté, et votre réponse est ajoutée à la liste des réponses valides à la question. Vous pouvez en avoir 10 maximum.\\n\\nSi vous avez fait une erreur sur une des réponses, {9} pour la retirer de la liste.\\n\\nUne fois tous les éléments de la question renseignées, cliquez sur \"{10}\" au dessus pour enregistrer la question et retourner à la liste des questions précédemment crées. Ajoutez-en autant que vous voulez pour un quiz.\\n\\nVous pouvez également {11}.\\n\\nUne fois le quiz complet, cliquez sur \"{12}\", et voilà ! Renseignez le nom de ce quiz et c'est terminé, le quiz est désormais jouable !`,\n                boldText: [\"créer\",\n                    \"personnaliser\",\n                    \"Voir les quiz\",\n                    \"Créer un quiz\",\n                    \"Ajouter une question\",\n                    \"d'importer un fichier de référence\",\n                    \"renseigner la question\",\n                    \"ajouter les réponses éventuelles\",\n                    \"( + )\",\n                    \"cliquez simplement dessus\",\n                    \"Valider\",\n                    \"cliquer sur une question pour la modifier\",\n                    \"Terminer la création\"\n                ],\n            });\n        }\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizzes',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        Cancel: 'Cancel',\n        GoBack: 'Yes, I want to go back',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'of success',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Submit\",\n        GiveUpQuizTitle: \"Give up\",\n        GiveUpQuiz: \"Are you sure to give up this quiz? The score will be saved.\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        EditedQuiz: \"Quiz successfuly edited!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Well played!! 😄\",\n        Success: \"Well played! That's the good answer!! You can now go to the next question!\",\n        FailedTitle: \"Oops... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Oops, that's not a valid answer... the valid answer${answers.length > 0 ? 's were' : ' was'} : ${answersText}.`\n        },\n        SuccessQuizTitle: \"Easy peasy!\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Congratulations!! You won this quiz! Your score is for {0} good answer(s) for {1} mistake!',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Better next time! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: \"It's alright... You failed this quiz!... Your score is for {0} good answer(s) for {1} mistake!\",\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Save the quiz',\n        SaveContent: \"Save the question\",\n        AddContent: \"Add the question\",\n        SureCancelEdition: \"Are you sure to cancel this quiz edition? Your modification would not be saved\",\n\n        // Help page related\n        Head: 'The quiz, how does it works?',\n        RulesHead: \"The rules\",\n        CustomHead: \"Customization\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `This is a basic quiz game: there are questions {1}, and the player must answer them. There can be {1} answers, one correct answer and it's a point added to the score.\\n\\nThere is no loss of points for a wrong answer.`,\n                boldText: [\"optionally accompanied by an image or a sound\", \"several possible\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `There are no default quizzes. It is up to you to {0} and {1} them as you wish!\\nTo do this, you must go to the \"{2}\" section.\\nThere you will see the list of quizzes that you have already created. If you haven't created any yet, create your first quiz with the \"{3}\" button.\\n\\nHere you can add questions with the \"{4}\" button. You are asked to {5} (optional), which is a sound or image file to illustrate your question.\\n\\nThen you have to {6}. This question will be asked to the player.\\n\\nAnd finally, {7}. Once you have entered a valid answer, click on the {8} symbol next to it, and your answer would be added to the list of the valid answers to the question. You can have a maximum of 10 possible answers.\\n\\nIf you made a mistake on one of the answers, {9} to remove it from the list.\\n\\nOnce you have filled in all the elements of the question, click \"{10}\" above to save the question and return to the list of questions. Add as many as you want to this quiz.\\n\\nYou can also {11}.\\n\\nOnce the quiz is completed, click \"{12}\" and that's it! Fill in the name of this quiz and it's done, the quiz is now playable!`,\n                boldText: [\"create\",\n                    \"customize\",\n                    \"View quizzes\",\n                    \"Create a quiz\",\n                    \"Add a question\",\n                    \"import a reference file\",\n                    \"fill in the question\",\n                    \"add the possible answers\",\n                    \"( + )\",\n                    \"simply click on it\",\n                    \"Submit\",\n                    \"click on a question to edit it\",\n                    \"Complete the quiz creation\"\n                ],\n            });\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginTop: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: 235,\n        marginTop: 20,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: 235,\n        marginTop: 10,\n        backgroundColor: 'blue',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: 30,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    modalDescription: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: 290,\n        marginTop: 10\n    },\n    quizTitleInput: {\n        fontSize: 15\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 50\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        width: 250\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: 250,\n        height: 250\n    },\n    gameQuestion: {\n        fontSize: 25,\n        marginTop: 10,\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey'\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15\n    },\n\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n        textAlign: 'center'\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image, ActivityIndicator } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            <Button\n                title={props.isLoading ? <ActivityIndicator color={'blue'} size={'small'} /> : QuizLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n                disabled={props.quiz.length === 0}\n            />\n\n            <Button\n                title={QuizLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import {\n    View,\n    Image\n} from 'react-native';\nimport { Icon, FAB, Avatar } from 'react-native-elements';\nimport { Audio } from 'expo-av';\n\nexport const printFile = (fileType, uri, clearFile, isPlaying, pauseSound, setIsPlaying, sound, setSound) => {\n    if (fileType === 'image') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Image source={{uri: uri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n            </View>\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 100, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Icon onPress={() => isPlaying ? pauseSound() : playSound(setIsPlaying, sound, setSound, uri) } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30, zIndex: 2}} />\n            </View>\n        );\n    }\n};\n\nexport const playSound = async (setIsPlaying, sound, setSound, uri) => {\n    setIsPlaying(true);\n    await Audio.setAudioModeAsync({\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n    });\n    const getSoundStatus = await sound?.getStatusAsync();\n    if (getSoundStatus?.isLoaded === false) {\n        await sound.loadAsync({ uri: uri });\n        setSound(sound);\n    }\n    await sound.playAsync();\n    sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n        if (playbackStatus.didJustFinish) {\n            await sound.unloadAsync();\n            setIsPlaying(false);\n        }\n    });\n};\n\nexport const pickCorrectIcon = (fileType, uri) => {\n    if (fileType === 'image') {\n        return (\n            <Avatar\n                source={{ uri: uri }}\n                rounded\n                size={'medium'}\n                containerStyle={{marginHorizontal: 8}}\n            />\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <Icon\n                raised\n                name={'musical-notes-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    } else {\n        return (\n            <Icon\n                raised\n                name={'text-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    }\n};","import React, { useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nimport { pickCorrectIcon } from '../utils/quizFunc';\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n\n    const length = props.quizEdit?.content?.length + props.newContent?.length;\n\n    const pickOutQuestion = () => {\n        if (length <= 2 && props.quizEdition) return;\n        if (props.quizEdition === true) {\n            if (Number.isInteger(props.questionId)) {\n                // if the questionId is an integer, it means it has not\n                // been added to the api yet, so it's an index of the\n                // newContent array passed in the props from the ViewQuiz Component\n\n                const index = props.questionId - props.quizEdit?.content?.length;\n                const tmp = props.newContent;\n                tmp.splice(index, 1);\n                // take out the new content from the newContent state in the\n                // parent component\n                props.setNewContent([...tmp]);\n            } else {\n                // todo not get by api but update quizedit state\n                // update api only when saving quiz\n                const index = props.quizEdit.content.findIndex(el => el.id == props.questionId );\n                const tmp = props.quizEdit;\n                tmp.content.splice(index, 1);\n                props.setQuizEdit(tmp);\n                props.setReload(!props.reload)\n                props.setEditedQuiz(true);\n            }\n        } else {\n            const tmp = props.quizEdition ? props.content : props.contentList;\n            tmp.splice(props.index, 1)\n            props.setContent([...tmp]);\n        }\n        setModal(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{ marginRight: 10 }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={{ fontWeight: 'bold' }}\n                    onPress={() => pickOutQuestion() }\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { props.setEditContent(props.questionId) }} >\n                { pickCorrectIcon(props.content.fileType, props.content.uri) }\n                <ListItem.Content>\n                    <ListItem.Title>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon disabled={props.quizEdition == true && length <= 2} reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","export function ScoreRatio (content, personId) {\n    var success = 0;\n    var fail = 0;\n    content.map( (el, i) => {\n        const score = el.score.filter( (el) => el.personId == personId );\n        score.map( (el, i) => {\n            success += parseInt(el.success);\n            fail += parseInt(el.failed);\n        });\n    });\n    const total = success + fail;\n    if (total == 0)\n        return 0;\n    const score = ((success / total) * 100).toFixed(2);\n    return score;\n};","import React from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport { ScoreRatio } from './utils/scoreFunc';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n\n    return (\n        <ListItem {...componentProps} onPress={() => {\n                props.setEdit(true);\n                props.setQuizEdit(props.quiz);\n            }}>\n            <ListItem.Content>\n                <ListItem.Title>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    { ScoreRatio(props.quiz.content, props.personId) }{'% '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Text,\n    ScrollView,\n} from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport QuizList from './QuizList';\nimport styles from './styles';\n\nimport * as API from '../../../data/quizApi';\n\nexport default function ViewQuizList(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <ScrollView>\n            {props.loading ? (\n                <ActivityIndicator\n                    color={'blue'}\n                    size={'small'}\n                    style={styles.loading}\n                />\n            ) : props.quiz?.length > 0 ? (\n                props.quiz?.map((el, i) => {\n                    return (\n                        <QuizList\n                            index={i}\n                            key={el._id}\n                            quiz={el}\n                            lang={props.lang}\n                            deleteId={deleteId}\n                            personId={props.personId}\n                            setEdit={props.setEdit}\n                            setQuizEdit={props.setQuizEdit}\n                        />\n                    );\n                })\n            ) : (\n                <Text style={styles.nothingYet}>\n                    {QuizLang[props.lang].NothingYet}\n                </Text>\n            )}\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/activities/quiz/success.gif';\n\nimport styles from './styles';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge, FAB } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContent(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <ScrollView contentContainerStyle={styles.ScrollView}>\n                { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                <Button\n                    title={QuizLang[props.lang].ImportFile}\n                    buttonStyle={{ borderRadius: 15 }}\n                    onPress={pickFile}\n                />\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].ReferenceFile}\n                </Text>\n                <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                    <Input\n                        value={props.question}\n                        inputStyle={{fontSize: 14}}\n                        containerStyle={{marginBottom: 50}}\n                        placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                        onChangeText={(e) => props.setQuestion(e)}\n                    />\n                    <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                    <Input\n                        placeholder={QuizLang[props.lang].AddAnswer}\n                        inputStyle={{fontSize: 14}}\n                        value={answer}\n                        onChangeText={(e) => setAnswer(e)}\n                    />\n                    <Button\n                        icon={\n                            <Icon\n                                name={'add-circle'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={18}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => addAnswer()}\n                        disabled={props.answers.length >= 10}\n                    />\n                    </View>\n                </View>\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].WhatIsAnswer}\n                </Text>\n                <View style={styles.badgesView}>\n                    {props.answers.map( (el, i) => {\n                        return(\n                            <Badge\n                                key={i}\n                                value={el}\n                                badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                onPress={() => pickOutAnswer(i)}\n                            />\n                        )\n                    })}\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    SafeAreaView,\n    ScrollView,\n    Alert,\n    Modal,\n    Text\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay } from 'react-native-elements';\n\nimport QuestionList from './Creation/QuestionList';\nimport ViewQuizList from './ViewQuizList';\n\nimport * as API from '../../../data/quizApi';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport FormQuizContent from './Creation/FormQuizContent';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n    // if the user is editing or not an existing quiz\n    const [edit, setEdit] = useState(false);\n\n    // if the user want to add a question to an existing quiz\n    const [newQuestion, setNewQuestion] = useState(false);\n\n    // if the user want to edit an existing question to an existing quiz\n    const [editContent, setEditContent] = useState();\n\n    // the existing quiz to edit\n    const [quizEdit, setQuizEdit] = useState();\n\n    // the new content to add in an existing quiz\n    const [newContent, setNewContent] = useState([]);\n\n    // check if something has been edited\n    const [editedQuiz, setEditedQuiz] = useState(false);\n\n    // open the modal of going back without saving confirmation\n    const [modal, setModal] = useState(false);\n\n    // the states for the quiz edition (add / edit question)\n    const [question, setQuestion] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const push = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setNewContent([...newContent, push]);\n        setEditedQuiz(true);\n        setSuccess(true);\n    };\n\n    const saveContent = () => {\n        let content;\n        let index;\n        if (Number.isInteger(editContent)) {\n            // edit newContent array\n            content = newContent[editContent - quizEdit?.content?.length];\n        } else {\n            // edit quizEdit array\n\n            // for already in api content -- think of reuploading the file\n            // if there's a new one, or to delete it\n            index = quizEdit.content.findIndex(el => el.id == editContent);\n            content = quizEdit.content[index];\n            if (fileType != content.fileType || uri != content.uri)\n                content.editedFile = true;\n        }\n        content.filename= filename;\n        content.fileType = fileType;\n        content.uri = uri;\n        content.answers = answers;\n        content.question = question;\n        setEditedQuiz(true);\n        setSuccess(true);\n        if (Number.isInteger(editContent)) {\n            if (newContent.length == 1)\n                setNewContent([content]);\n            else\n                setNewContent([...content]);\n        } else {\n            quizEdit.content[index] = content;\n            setQuizEdit(quizEdit);\n        }\n    };\n\n    // clear the states before edition or creation of a content\n    const clearState = () => {\n        setAnswers([]);\n        setQuestion();\n        setFileType();\n        setFilename();\n        setUri();\n        setSound(new Audio.Sound());\n    };\n\n    // Save the edited quiz\n    const saveQuiz = () => {\n        if (!editedQuiz) return;\n        const content = quizEdit.content.concat(newContent);\n        API.saveQuiz(props.personId, quizEdit._id, content).then((data) => {\n            return Alert.alert(\n                QuizLang[props.lang].EditedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            props.setReload(!props.reload);\n                            setNewContent([]);\n                            goBack();\n                        },\n                    }\n                ]\n            );\n        });\n    }\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const viewPage = () => {\n        if (editContent && !newQuestion) {\n            if (success) setSuccess(false);\n            let content;\n            if (Number.isInteger(editContent)) {\n                content = newContent[editContent - quizEdit?.content?.length];\n            } else {\n                const index = quizEdit.content.findIndex(el => el.id == editContent);\n                content = quizEdit.content[index];\n            }\n            if (!content) return;\n            setFilename(content.filename);\n            setFileType(content.fileType);\n            setUri(content.uri);\n            setQuestion(content.question);\n            setAnswers([...content.answers]);\n            setNewQuestion(true);\n        } else if (newQuestion) { // if the user wants to set a new question for quiz edition\n            return (<FormQuizContent\n                        lang={props.lang}\n                        setAnswers={setAnswers}\n                        setFileType={setFileType}\n                        setQuestion={setQuestion}\n                        setUri={setUri}\n                        setFilename={setFilename}\n                        setSuccess={setSuccess}\n                        setSound={setSound}\n                        setIsPlaying={setIsPlaying}\n                        pauseSound={pauseSound}\n                        uri={uri}\n                        filename={filename}\n                        answers={answers}\n                        fileType={fileType}\n                        question={question}\n                        success={success}\n                        sound={sound}\n                        isPlaying={isPlaying}\n                />);\n        } else if (edit && !newQuestion) {\n             // if the user want to see all the question for the quiz edition\n            return (quizEdit.content)?.concat(newContent)?.map((el, i) => {\n                return (<QuestionList\n                    index={i}\n                    key={i}\n                    id={quizEdit._id || 0}\n                    quizEdit={quizEdit}\n                    newContent={newContent}\n                    content={el}\n                    lang={props.lang}\n                    questionId={el.id || i}\n                    quizEdition={true}\n                    reload={props.reload}\n                    setReload={props.setReload}\n                    setEditedQuiz={setEditedQuiz}\n                    setEditContent={setEditContent}\n                    setQuizEdit={setQuizEdit}\n                    setNewContent={setNewContent}\n                />);\n            })\n        } else {\n             // if the user want to see all the existing quiz for the quiz edition\n            return (<ViewQuizList\n                quiz={props.quiz}\n                loading={props.loading}\n                lang={props.lang}\n                personId={props.personId}\n                setEdit={setEdit}\n                setQuizEdit={setQuizEdit}\n                setReload={props.setReload}\n            />);\n        }\n    };\n\n    const goBack = () => {\n\n        if (!success) setSuccess(false);\n\n        if ( (editedQuiz && !newQuestion) || newContent.length > 0) {\n            setModal(true);\n            return;\n        }\n\n        if (editContent) {\n            clearState();\n            setEditContent();\n            setNewQuestion(false);\n        } else if (newQuestion)\n            setNewQuestion(false);\n        else if (edit) {\n            setEditedQuiz(false);\n            setEdit(false);\n        } else\n            props.setTab(0);\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return saveContent();\n        } else if (newQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].AddContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return pushContent();\n        } else if (edit) {\n            // save the quiz button\n            if (mode == 'title') return QuizLang[props.lang].Save;\n            else if (mode == 'disabled') return !(editedQuiz);\n            else if (mode == 'onpress') return saveQuiz();\n        } else {\n            // create a quiz button\n            if (mode == 'title') return QuizLang[props.lang].Create;\n            else if (mode == 'disabled') false;\n            else if (mode == 'onpress') return props.setTab(4);\n        }\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => setModal(false)}\n                    ModalComponent={Modal}\n                >\n                    <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                    <View style={{ flexDirection: 'row' }}>\n                        <Button\n                            title={QuizLang[props.lang].Cancel}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{ marginRight: 10 }}\n                            onPress={() => setModal(false)}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].GoBack}\n                            buttonStyle={{ fontWeight: 'bold' }}\n                            onPress={() => {\n                                setEditedQuiz(false);\n                                setEditContent();\n                                setEdit(false);\n                                setNewContent([]);\n                                setModal(false);\n                            } }\n                        />\n                    </View>\n                </Overlay>\n\n\n                <Button\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={edit ? 'save-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        buttonTop('onpress')\n                    }}\n                    disabled={ buttonTop('disabled') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => goBack() }\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                {\n                    edit && !newQuestion && !editContent ?\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setNewQuestion(true) }\n                    /> : <></>\n                }\n                <ScrollView style={{marginBottom: 40}}>\n                { viewPage() }\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContent from './FormQuizContent';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\nimport { Audio } from 'expo-av';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n    const [modalConfirmation, setModalConfirmation] = useState(false);\n\n    const [editContent, setEditContent] = useState();\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name.substring(0, 23),\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    // Save an existing question\n    const saveContent = () => {\n        content[editContent].fileType = fileType;\n        content[editContent].filename = filename;\n        content[editContent].uri = uri;\n        content[editContent].question = question;\n        content[editContent].answers = answers;\n        setContent([...content]);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        if (isPlaying) setIsPlaying(false);\n    };\n\n    const clearState = () => {\n        setAnswers([]);\n        setFileType();\n        setFilename();\n        setUri();\n        setQuestion();\n        setSuccess(false);\n    };\n\n    const printQuestionList = () => {\n        if (content.length === 0) {\n            return (<Text style={styles.nothingYet}>\n                {QuizLang[props.lang].NoQuestionYet}\n            </Text>);\n        } else {\n            return content?.map((el, i) => {\n                return (\n                    <QuestionList\n                        index={i}\n                        key={i}\n                        id={i}\n                        content={el}\n                        lang={props.lang}\n                        setContent={setContent}\n                        setEditContent={setEditContent}\n                        questionId={i}\n                        contentList={content}\n                    />\n                );\n            });\n        }\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent !== undefined) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); return saveContent(); }\n        } else if (createQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].OK;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); setModal(false); return pushContent(); }\n        } else {\n            if (mode == 'title') return QuizLang[props.lang].Complete;\n            else if (mode == 'disabled') return !(content.length > 0);\n            else if (mode == 'onpress') { return setModal(true);  }\n        }\n    };\n\n    const printPage = () => {\n        if (editContent !== undefined && !createQuestion) {\n            if (success) setSuccess(false);\n            setAnswers(content[editContent].answers);\n            setFileType(content[editContent].fileType);\n            setFilename(content[editContent].filename);\n            setUri(content[editContent].uri);\n            setQuestion(content[editContent].question);\n            setCreateQuestion(true);\n        }\n        if (createQuestion) { // if the user is creating a new question\n            return <FormQuizContent\n                /* Form to create a quiz */\n                lang={props.lang}\n                setAnswers={setAnswers}\n                setFileType={setFileType}\n                setQuestion={setQuestion}\n                setUri={setUri}\n                setFilename={setFilename}\n                setSuccess={setSuccess}\n                setSound={setSound}\n                setIsPlaying={setIsPlaying}\n                pauseSound={pauseSound}\n                uri={uri}\n                filename={filename}\n                answers={answers}\n                fileType={fileType}\n                question={question}\n                success={success}\n                sound={sound}\n                isPlaying={isPlaying}\n            />\n        } else {\n            return <SafeAreaView style={styles.safeArea}>\n                <Button\n                    title={QuizLang[props.lang].AddQuestion}\n                    icon={\n                        <Icon\n                            name={'add-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => setCreateQuestion(true)}\n                />\n                <ScrollView style={{marginBottom: 40}}>\n                    { props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : printQuestionList() }\n                </ScrollView>    \n            </SafeAreaView>\n        }\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button containerStyle={{ marginTop: 10, width: 40 }} title={{}} icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    } disabled={name?.length < 3 || name.length > 23 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            {/* Confirmation give up quiz creation */}\n            <Overlay\n                visible={modalConfirmation}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => setModalConfirmation(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={QuizLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={() => setModalConfirmation(false)}\n                    />\n                    <Button\n                        title={QuizLang[props.lang].GoBack}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={() => {\n                            setModalConfirmation(false);\n                            props.setTab(2);\n                        } }\n                    />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ buttonTop('disabled') }\n                    onPress={ () => buttonTop('onpress') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearState();\n                        pauseSound();\n                        if (createQuestion)\n                            setCreateQuestion(!createQuestion);\n                        else if (content.length == 0) props.setTab(2);\n                        else setModalConfirmation(true)\n                    }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            { printPage() }\n        </>\n    );\n}\n","import React from 'react';\nimport { Text, Button, Icon, FAB } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif');\n    return (\n    <>\n        { props.quizLength > 1 ? <FAB\n            style={{marginTop: 140, position: 'absolute', zIndex: 10}}\n            containerStyle={{marginLeft: 120}}\n            size=\"small\"\n            icon={{name: 'repeat-sharp', type: 'ionicon', color:'white' }}\n            onPress={() => props.pickRandomQuizz()}\n        /> : <></> }\n        <Lottie LottieSource={ThinkingLottie} ImageSource={ThinkingImage} LottieStyle={{marginTop: -25, height: 250, marginBottom: -30}} />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButton}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            buttonStyle={{ backgroundColor: 'red' }}\n            containerStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, Alert, View, Modal } from 'react-native';\nimport { Text, Image, Input, Button, Icon, Overlay } from 'react-native-elements';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../../assets/img/activities/sad.gif';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport Lottie from '../../../utils/Lottie';\nimport { Audio } from 'expo-av';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n    const [modal, setModal] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const [success, setSuccess] = useState(0);\n    const [fail, setFail] = useState(0);\n    const [confetti, setConfetti] = useState(false);\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const TrophyLottie = require('../../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../../assets/lottie/sad.json');\n\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const stopSound = async () => {\n        await pauseSound();\n        setSound(new Audio.Sound());\n        await sound?.unloadAsync();\n    }\n\n    const playSound = async () => {\n        setIsPlaying(true);\n        await Audio.setAudioModeAsync({\n            staysActiveInBackground: true,\n            shouldDuckAndroid: true,\n        });\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus?.isLoaded === false) {\n            await sound.loadAsync({ uri: game[current].uri });\n            setSound(sound);\n        }\n        await sound.playAsync();\n        sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n            if (playbackStatus.didJustFinish) {\n                await sound.unloadAsync();\n                setIsPlaying(false);\n            }\n        });\n    };\n\n    const setMediaType = () => {\n        if (!game[current]) return;\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <Icon onPress={() => isPlaying ? pauseSound() : playSound() } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30}} />\n            default:\n                return <></>;\n        }\n    };\n\n    const openAlertResultQuestion = (result) => {\n        return (\n            Alert.alert(\n                result ? QuizLang[props.lang].SuccessTitle : QuizLang[props.lang].FailedTitle,\n                result ? QuizLang[props.lang].Success : QuizLang[props.lang].Failed(game[current].answers),\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: async () => {\n                            if (current + 1 <= game.length - 1)\n                                setCurrent(current + 1);\n                            else {\n                                const path = success >= fail ? require(`../../../../assets/sound/global/applause.mp3`) : require(`../../../../assets/sound/global/you_lose.mp3`);\n                                if (success >= fail) setConfetti(true);\n                                const { sound } = await Audio.Sound.createAsync(path);\n                                setSound(sound);\n                                sound.playAsync();\n                                setModal(true);\n                            }\n                        },\n                    }\n                ]\n            )\n        )\n    };\n\n    const answerQuestion = async () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        stopSound();\n        setAnswer('');\n        const result = game[current].answers.includes(answerTrimedLowercase);\n        if (result === false) {\n            // increment the fail and update the API\n            setFail(fail + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, false);\n        } else {\n            // increment the success and update the API\n            setSuccess(success + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, true)\n        }\n        openAlertResultQuestion(result);\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                {confetti && success >= fail ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n                )}\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => props.setTab(0)}\n                    ModalComponent={Modal}\n                >\n                    {success >= fail ? \n                        <>\n                            <Lottie LottieSource={TrophyLottie} ImageSource={TrophyImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} loop={false} />\n                            <Text style={{color:'blue', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].SuccessQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].SuccessQuiz(fail, success)}</Text>\n                        </>\n                    :\n                        <>\n                            <Lottie LottieSource={SadLottie} ImageSource={SadImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} />\n                            <Text style={{color:'red', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].FailQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].FailQuiz(fail, success)}</Text>\n                        </>\n                    }\n                    <Button title={QuizLang[props.lang].Leave} onPress={() => props.setTab(0)} containerStyle={styles.leaveButton} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </Overlay>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button buttonStyle={styles.buttonQuizGameOK} title={QuizLang[props.lang].OK} onPress={() => { answerQuestion() }} />\n                </View>\n            </>\n        }\n    </>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\n// This component is mounted when the user clicks on 'Play' in the main quiz menu\nexport default function Play(props) {\n    const [play, setPlay] = useState(false);\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quizId={props.quiz._id}\n                personId={props.personId}\n                quiz={props.quiz.content}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n                quizLength={props.quizLength}\n            />\n        }\n    </View>);\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{QuizLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Rules()}</Text>\n\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].CustomHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Custom()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler, Alert } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber, randomArrayElement } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Creation/CreateQuiz';\nimport Play from './Play';\nimport Help from './Help';\n\nimport * as API from '../../../data/quizApi';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1) {\n                    Alert.alert(\n                        QuizLang[props.lang].GiveUpQuizTitle,\n                        QuizLang[props.lang].GiveUpQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    setTab(0);\n                                }\n                            },\n                        ]\n                    )\n                }\n                else setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            let rand = randomArrayElement(random, 0, quiz.length - 1);\n            setRandom(rand);\n        }\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    isLoading={isLoading}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                quizLength={quiz.length}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    setReload={setReload}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return <View style={styles.view}>{printPage()}</View>;\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Essai${tries > 1 ? 's' : ''} restant${tries > 1 ? 's' : ''}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Score actuel: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Commencer \",\n        GiveUp: \"Abandonner\",\n        Reinit: \"Nouveau modèle\",\n        TitleGiveUp: \"Abandonner la partie\",\n        SureToGiveUp: \"Êtes-vous sûr(e) de vouloir abandonner la partie? Votre score sera enregistré.\",\n        Congratulations: 'Félicitations !!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: \"Recommencer\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'Le jeu des pairs, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu des pairs est assez connu et classique. Lorsque vous commencerez la partie, vous aurez un {0}. Cliquez alors sur le bouton \"{1}\" sur le bas de l’écran pour retourner les cartes face verso.\\n\\nVous devrez alors {2}. Par exemple, si vous cliquez sur une carte rouge, vous devrez cliquer sur l’autre carte rouge ensuite.\\n\\nPlus vous grimpez dans le score, plus le nombre de paires s’ajoutent au schéma. Il peut y avoir jusqu’à {3} au total.`,\n                boldText: [\"schéma de plusieurs paires de cartes face recto\", \"Commencer\", \"retourner les paires l'une après l’autre\", \"6 paires\"],\n            });\n        },\n        ScoreHead: \"Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois qu’un schéma est complété (c'est-à-dire que toutes les cartes ont été retournées), {0} et passez à un schéma suivant, {1}.\\n\\nLes points peuvent vous servir à avoir un joli score, mais aussi à recréer un nouveau schéma si vous l’avez complètement oublié. A chaque re-création d’un schéma, {2}. Et vous ne pouvez pas recréer un schéma s’il ne vous reste {3}.`,\n                boldText: [\"vous gagnez un point\", \"potentiellement plus difficile\", \"vous perdez un point\", \"qu’un essai pour le schéma actuel\"],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'How does it work',\n        Leave: 'Back',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Remaning tr${tries > 1 ? 'ies' : 'y'}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Actual score: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Start \",\n        GiveUp: \"Give up\",\n        Reinit: \"New model\",\n        TitleGiveUp: \"Give up the game\",\n        SureToGiveUp: \"Are you sure to give up this party? Your score will be saved.\",\n        Congratulations: 'Congratulations!!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        SoBad: 'So sad...',\n        ScoreNotBeated: 'Your daily score has not been beaten... But you can retry!',\n        Retry: \"Retry\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Best score made today: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'The double memory, how does it works?',\n        RulesHead: \"The rules\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The game of peers (or double memory) is quite familiar and classic. When you start the game, you will have a {0}. Then click on the \"{1}\" button at the bottom of the screen to turn the cards face up.\\n\\nFor example, if you click on a red card, you will have to click on the other red card next.\\n\\nThere can be up to {3} in total.`,\n                boldText: [\"pattern of several pairs of cards face up\", \"Start\", \"turn over the pairs one after the other\", \"6 pairs\"],\n            });\n        },\n        ScoreHead: \"The score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `Each time a pattern is completed (i.e., all the cards have been turned over), {0} and move on to the next pattern, {1}.\\n\\nThe points can be used to get a nice score, but they can also be used to recreate a new pattern if you've completely forgotten about it. Each time you re-create a pattern, {2}. And you can't recreate a pattern if you don't have {3} left.`,\n                boldText: [\"you earn a point\", \"potentially more challenging\", \"you lose a point\", \"than a try for the current pattern\"],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { Dimensions } from 'react-native'\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nconst mode = SCREEN_WIDTH >= SCREEN_HEIGHT ? 'landscape' : 'portrait';\nconst factor = mode == 'landscape' ? hp : wp;\n\nexport default StyleSheet.create({\n    view: {\n        height: hp('100%'),\n        paddingBottom: 40,\n        flex: 1\n    },\n    logo: {\n        width: 120,\n        height: undefined,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n        resizeMode: \"center\",\n        aspectRatio: 1\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n        marginBottom: 20\n    },\n    RectoCard: {\n        width: factor('21%'),\n        height: 0,\n        backgroundColor: '#C3C3CF',\n        borderRadius: 20,\n        borderColor: '#858593',\n        borderWidth: 1,\n        aspectRatio: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    PlayingCard: {\n        width: factor('21%'),\n        height: 0,\n        borderRadius: 20,\n        aspectRatio: 1,\n        borderColor: '#68FF5C',\n        borderWidth: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    VersoCard: {\n        width: factor('21%'),\n        height: 0,\n        borderRadius: 20,\n        opacity: .8,\n        marginHorizontal: 5,\n        aspectRatio: 1,\n        marginVertical: 5\n    },\n    IconCard: {\n        marginTop: 28 + '%'\n    },\n    viewGame: {\n        marginTop: 10,\n        width: wp('95%'),\n        height: hp('55%'),\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    buttonViewPlay: {\n        flexDirection: 'row',\n        width: mode == 'portrait' ? wp('100%') : hp('100%'),\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: 10\n    },\n    playButtons: {\n        alignContent: 'center',\n        textAlign: 'center',\n        paddingHorizontal: 30,\n        borderRadius: 10,\n        marginHorizontal: 5\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        paddingTop: 20,\n        width: wp('100%'),\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={DoubleLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{DoubleLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].Rules()}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].ScoreHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].ScoreHelp()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React from 'react';\nimport { Image, View } from 'react-native';\nimport { Button, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport DoubleLogo from '../../../assets/img/activities/double/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={DoubleLogo} style={styles.logo} resizeMode={'cover'} />\n\n            <Button\n                title={DoubleLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={DoubleLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <View>\n\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: -50,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                        type: 'ionicon',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.ambiantSoundPlay() }\n            />\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 20,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.soundEnabled ? 'sound' : 'sound-mute',\n                        type: 'entypo',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.setSoundEnabled(prev => !prev) }\n            />\n            </View>\n\n            <Button\n                title={DoubleLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => {\n                    props.ambiant.unloadAsync();\n                    props.setPage(null);\n                }}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}","const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};\n\nexport const generateRandomPair = (length) => {\n    const colors = [\n        '#791414',\n        '#143479',\n        '#791462',\n        '#147920',\n        '#797714',\n        '#14AB9D'\n    ];\n    const icons = [\n        'airplane',\n        'boat',\n        'bulb',\n        'color-palette',\n        'earth',\n        'gift',\n        'happy',\n        'heart-circle',\n        'restaurant',\n        'ribbon'\n    ]\n    var arr = [];\n    for (let i = 0; i < length / 2; i++) {\n        var indexColor = Math.floor(Math.random() * colors.length);\n        var indexIcon = Math.floor(Math.random() * icons.length);\n        arr.push({ color: colors[indexColor], icon: icons[indexIcon] }, { color: colors[indexColor], icon: icons[indexIcon] });\n        colors.splice(indexColor, 1);\n        icons.splice(indexIcon, 1);\n    }\n    arr = shuffle(arr);\n    for (let i = 0; i < arr.length; i++) {\n        const el = arr[i];\n        el.idx = i\n    }\n\n    return (arr);\n};","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements';\n\nimport { Dimensions } from 'react-native'\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nimport styles from '../styles';\n\nexport default function Card(props) {\n    var cardStyles;\n    const factor = SCREEN_WIDTH >= SCREEN_HEIGHT ? SCREEN_HEIGHT : SCREEN_WIDTH;\n    if (props.inPlay) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.PlayingCard]];\n    else if (props.inFound || props.show) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.VersoCard]];\n    else cardStyles = styles.RectoCard\n\n    const icon = !props.inFound && !props.inPlay && !props.show ? 'help-circle-outline' : props.icon;\n\n    return (\n        <>\n            <TouchableOpacity style={ cardStyles } onPress={() => {\n                if (!props.inPlay && !props.inFound) props.ReturnCard(props.index);\n            }}>\n                <Icon\n                    name={icon}\n                    size={props.inFound || props.show || props.inPlay ? factor * .08 : factor * .08}\n                    color={props.inFound || props.show || props.inPlay ? 'white' : 'grey'}\n                    type=\"ionicon\"\n                    style={styles.IconCard}\n                />\n            </TouchableOpacity>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { View, Text, Modal } from 'react-native';\n\nimport { Button, Overlay, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../assets/img/activities/sad.gif';\n\nimport Lottie from '../../utils/Lottie';\n\nimport styles from './styles';\n\nimport { generateRandomPair } from './subs/helpers';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport Card from './subs/Card';\n\nexport default function Play(props) {\n    const [game, setGame] = useState([...generateRandomPair(4)]); // the current map game\n    const [found, setFound] = useState([]);\n    const [tries, setTries] = useState(3);\n    const [play, setPlay] = useState([]); // the current play of the player, an array with two values max, corresponding to the cards the player played\n    const [show, setShow] = useState(true);\n    const [confetti, setConfetti] = useState(false);\n    const [pause, setPause] = useState(false);\n\n    const TrophyLottie = require('../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../assets/lottie/sad.json');\n\n    const setLengthGame = () => {\n        if (props.score <= 8)\n            return 4;\n        else if (props.score <= 15)\n            return 6;\n        else if (props.score <= 30)\n            return 8;\n        else if (props.score <= 45)\n            return 10;\n        else\n            return 12;\n    }\n\n    // Exemple game element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null },\n            { idx: 2, color: '#ffffff', icon: null },\n            { idx: 3, color: '#ferdnc', icon: null }\n        ]\n    */\n\n        // each play, we push the current card to the play state, and check if the first element exists in the\n        // game state, and if the second element is the same as the first one, if so => success for a round, and push\n        // this pair in the found state. If fail => clear the play && found states\n\n    // Exemple play element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 2, color: '#ffffff', icon: null }\n        ] // this is a successful array\n\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null }\n        ] // this is a fail array\n    */\n\n    const failOverlay = () => {\n        if (props.modal == false) return;\n        return (\n            <>\n                <Lottie\n                    LottieSource={SadLottie}\n                    ImageSource={SadImage}\n                    autoplay={true}\n                    loop={true}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const successOverlay = () => {\n        if (!confetti) setConfetti(true);\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].BestScoreToday(props.bestScoreDay)}\n                </Text>\n                <Lottie\n                    LottieSource={TrophyLottie}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n    \n    const newModel = () => {\n        if (props.score == 0) return;\n        const currentGameLength = game.length;\n        props.setScore(prevScore => prevScore - 1);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(currentGameLength)]);\n    };\n\n    const printButton = () => {\n        return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={show ? DoubleLang[props.lang].Start : DoubleLang[props.lang].Reinit} onPress={() => { if (show) setShow(false); else newModel(); }} buttonStyle={[styles.playButtons, {backgroundColor: show ? '#208bdc' : 'green'}]} icon={\n                    <Icon\n                    name={show ? \"play\" : ''}\n                    size={18}\n                    color=\"white\"\n                    type=\"ionicon\"\n                />\n                } iconRight={true} disabled={!show && props.score === 0 || tries <= 1} />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.ambiantSoundPlay() }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.soundEnabled ? 'sound' : 'sound-mute',\n                            type: 'entypo',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.setSoundEnabled(prev => !prev) }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='red'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: 'caret-back',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.giveUp() }\n                    style={{marginHorizontal: 5}}\n                />\n            </View>);\n    };\n    \n    const ReturnCard = (key) => {\n        if (pause || show) return;\n        const currentPlay = play;\n        const indexGame = game[key];\n        const playing = [...currentPlay, indexGame];\n        if (playing.length == 2) {\n            // check if same card or return all and lose a try\n            if (playing[0].color === playing[1].color && playing[0].icon === playing[1].icon) {\n                const currentGameLength = game.length;\n                const nFound = [...found, playing[0], playing[1]];\n                if (nFound.length == currentGameLength) {\n                    props.playSound('next');\n                    props.setScore(prevScore => prevScore + 1);\n                    setShow(true);\n                    setTries(3);\n                    setGame([...generateRandomPair(setLengthGame())]);\n                    setFound([]);\n                } else {\n                    props.playSound('success');\n                    setFound(nFound);\n                }\n                setPlay([]);\n            } else {\n                setPlay(playing);\n                props.playSound('fail');\n                setPause(true);\n                setTimeout(() => {\n                    if (tries != 0) setTries(prevTries => prevTries - 1);\n                    if (tries === 0)\n                        props.endGame();\n                    else {\n                        setPlay([]);\n                        setFound([]);\n                    }\n                    setPause(false);\n                }, 1000);\n            }\n        } else {\n            setPlay(playing);\n            props.playSound('play');\n        }\n    };\n\n    const printCards = () => {\n        return game.map( (el, i) => {\n            var inFound = false;\n            var inPlay = false;\n            if (found.find(element => element.idx === i )) inFound = true;\n            else if (play.find(element => element.idx === i )) inPlay = true;\n            return (<Card show={show} key={i} index={i} inFound={inFound} inPlay={inPlay} backgroundColor={el.color} icon={el.icon} ReturnCard={ReturnCard} />);\n        });\n    };\n\n    const newGame = () => {\n        if (confetti) setConfetti(false);\n        props.setModal(false);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(4)]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n            )}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                { props.success && props.modal ? successOverlay() : failOverlay() }\n                <View style={{flexDirection: 'row', marginTop: 20}}>\n                    <Button title={DoubleLang[props.lang].Retry} onPress={() => newGame()} buttonStyle={{marginRight: 10}} icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n\n                    <Button title={DoubleLang[props.lang].Leave} onPress={() => { \n                        if (confetti) setConfetti(false);\n                        props.setModal(false);\n                        props.setTab(0);\n                    }} buttonStyle={{backgroundColor: 'red'}} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </View>\n            </Overlay>\n            <View style={styles.viewGame}>\n                { printCards() }\n            </View>\n            <View style={{alignItems: 'center', width: wp('100%'), marginTop: -10}}>\n                <Text>{DoubleLang[props.lang].Score(props.score)}</Text>\n                <Text>{DoubleLang[props.lang].BestDayScore(props.bestScoreDay)}</Text>\n                <Text>{DoubleLang[props.lang].RemaningTries(tries)}</Text>\n                { printButton() }\n            </View>\n        </>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport {\n    Text,\n    BackHandler,\n    ScrollView,\n    Alert\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport styles from './styles';\n\nimport * as API from '../../../data/doubleApi';\n\nimport Help from './Help';\nimport Menu from './Menu';\nimport Play from './Play';\n\nconst currentDate = new Date().toLocaleDateString('fr-FR');\n\nexport default function Double(props) {\n    const [tab, setTab] = useState(0);\n    const [score, setScore] = useState(0);\n    const [bestScoreDay, setBestScoreDay] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [ambiant, setAmbiant] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n    const [soundEnabled, setSoundEnabled] = useState(true);\n    const [ambiantEnabled, setAmbiantEnabled] = useState(true);\n\n    useEffect( async () => {\n        // API.clear();\n\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by kilo\n            require(`../../../assets/sound/double/ambiant.mp3`),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n\n        API.getScoreDay(props.personId, currentDate).then((data) => {\n            if (data.length > 0) setBestScoreDay(data[0].score);\n        });\n\n        API.getBestScore(props.personId).then((data) => {\n            if (data.length > 0) setBestScore(data[0].score);\n        });\n\n    }, []);\n\n    useEffect(() => {\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1 && score > 0) {  \n                    giveUp()\n                    return ;\n                }\n                setTab(0);\n            } else {\n                ambiant.unloadAsync();\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, ambiant]);\n\n    const endGame = async () => {\n        setModal(true);\n        let bestDayScore = false;\n        let bestScore = false;\n        if (score > bestScoreDay) { \n            playSound('applause');\n            setSuccess(true);\n            setBestScoreDay(score);\n            bestDayScore = true;\n            if (score > bestScore) {\n                bestScore = true;\n                setBestScore(score);\n            }\n        } else {\n            playSound('lose');\n            setSuccess(false);\n        }\n        await API.insertScore(props.personId, score, currentDate, bestDayScore, bestScore);\n        setScore(0);\n    };\n\n    const ambiantSoundPlay = () => {\n        if (ambiantEnabled) ambiant.pauseAsync();\n        else ambiant.playAsync();\n        setAmbiantEnabled(prevEnable => !prevEnable);\n    };\n    \n    const giveUp = () => {\n        if (score === 0) setTab(0);\n        else return Alert.alert(\n            DoubleLang[props.lang].TitleGiveUp,\n            DoubleLang[props.lang].SureToGiveUp,\n            [\n                {\n                    text: DoubleLang[props.lang].Leave,\n                    onPress: () => { null },\n                    style: 'cancel'\n                },\n                {\n                    text: DoubleLang[props.lang].GiveUp,\n                    onPress: () => {\n                        endGame();\n                    }\n                },\n            ]\n        )\n    };\n\n    const playSound = async (type) => {\n        if (!soundEnabled && !['applause', 'lose'].includes(type)) return;\n        if (sound) sound?.unloadAsync();\n        let choosenSound;\n        switch (type) {\n            case \"success\":\n                choosenSound = require(`../../../assets/sound/double/success.mp3`);\n                break;\n            case \"fail\":\n                choosenSound = require(`../../../assets/sound/double/fail.mp3`);\n                break;\n            case \"play\":\n                choosenSound = require(`../../../assets/sound/double/play.mp3`);\n                break;\n            case \"next\":\n                choosenSound = require(`../../../assets/sound/double/next.mp3`);\n                break;\n            case \"applause\":\n                choosenSound = require(`../../../assets/sound/global/applause.mp3`);\n                break;\n            case \"lose\":\n                choosenSound = require(`../../../assets/sound/global/you_lose.mp3`);\n                break;\n            default:\n                break;\n        }\n        const { sound } = await Audio.Sound.createAsync(choosenSound);\n        setSound(sound);\n        sound.playAsync();\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    ambiant={ambiant}\n                    setSoundEnabled={setSoundEnabled}\n                    soundEnabled={soundEnabled}\n                    ambiantEnabled={ambiantEnabled}\n                    ambiantSoundPlay={ambiantSoundPlay}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                        lang={props.lang}\n                        setTab={setTab}\n                        score={score}\n                        setScore={setScore}\n                        giveUp={giveUp}\n                        modal={modal}\n                        setModal={setModal}\n                        bestScoreDay={bestScoreDay}\n                        success={success}\n                        endGame={endGame}\n                        playSound={playSound}\n                        ambiantSoundPlay={ambiantSoundPlay}\n                        ambiantEnabled={ambiantEnabled}\n                        soundEnabled={soundEnabled}\n                        setSoundEnabled={setSoundEnabled}\n                    />;\n        } else if (tab === 2) {\n            return (<Help lang={props.lang} setTab={setTab} />);\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <ScrollView style={styles.view} contentContainerStyle={{alignItems: 'center'}}>\n            { printPage() }\n        </ScrollView>\n    );\n};","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\nimport Double from '../components/activities/Double';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return <Double lang={lang} setPage={setPage} personId={personId} />;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n        /* {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        }, */\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nimport { Audio } from 'expo-av';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n\n    useEffect( () => {\n        Audio.setIsEnabledAsync(true);\n    }, [])\n\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    scoreRow: {\n        flex: 1,\n        height: 180,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreRowSimon: {\n        flex: 1,\n        height: 250,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreHeading: {\n        fontSize: 18,\n        color: '#2089dc',\n        fontWeight: 'bold',\n        margin: 5\n    },\n    NoScore: {\n        color: 'grey',\n        fontStyle: 'italic',\n        marginTop: 45,\n        marginLeft: 45\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\nimport { Badge } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport { ScoreRatio } from '../../../../components/activities/Quiz/utils/scoreFunc';\nimport * as API from '../../../../data/quizApi';\n\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nexport default function QuizScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [quizScore, setQuizScore] = useState([]);\n\n    useEffect( () => {\n        API.get(props.personId).then((data) => {\n            const arr = [];\n            for (let i = 0; i < data.length; i++) {\n                const el = data[i];\n                arr.push({score: ScoreRatio(el.content, props.personId), name: el.name});\n            }\n            setQuizScore(arr);\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (quizScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            return quizScore.map( (el,i) => {\n                return (\n                    <View style={{marginHorizontal: 15}} key={i}>\n                        <Badge\n                            value={el.name}\n                            textStyle={{textAlign: 'center'}}\n                            badgeStyle={{position:'absolute', paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 100, zIndex: 3}}\n                        />\n                        <CircularProgress\n                            value={el.score}\n                            textStyle={{marginBottom: -10}}\n                            title={ActivitiesLang[props.lang].Success}\n                            valueSuffix={'%'}\n                            titleStyle={{marginBottom: 10}}\n                            initialValue={0}\n                            \n                            delay={500}\n                            activeStrokeColor={'#2089dc'}\n                            radius={65}\n                            inActiveStrokeColor={'#9b59b6'}\n                            inActiveStrokeOpacity={0.5}\n                            inActiveStrokeWidth={6}\n                            activeStrokeWidth={12}\n                        />\n                    </View>\n                );\n            });\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRow} horizontal={true}>\n            <View>\n                <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].QuizScore}</Text>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} /> :\n                    <ScrollView horizontal={true}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/simonApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function SimonScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [simonScore, setSimonScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setSimonScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (simonScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = simonScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].SimonScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/doubleApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function DoubleScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [doubleScore, setDoubleScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setDoubleScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (doubleScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = doubleScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].DoubleScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React from 'react';\nimport { ScrollView } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\n\nimport QuizScore from './QuizScore';\nimport SimonScore from './SimonScore';\nimport DoubleScore from './DoubleScore';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <QuizScore lang={props.lang} personId={props.personId} />\n            <DoubleScore lang={props.lang} personId={props.personId} />\n            <SimonScore lang={props.lang} personId={props.personId} />\n        </ScrollView>\n    );\n}\n","import React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    \n    const navigate = useNavigate();\n\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: 60, color: '#3B8EFF', backgroundColor: '#355c7d' }],\n                tabBarLabelStyle: [{ color: 'white', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} personId={props.personId} /> }\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        fullname={props?.fullname}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                        setPerson={props.setPerson}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        paddingBottom: 10,\n        width: wp('100%'),\n        backgroundColor: '#355c7d'\n    },\n    topLottie: {\n        marginTop: 10,\n        width: 60,\n        height: undefined,\n        marginBottom: 15,\n        backgroundColor: '#355c7d'\n    },\n    bgLottie: {\n        width: wp('100%'),\n        opacity: 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: wp('100%'),\n        height: hp('100%'),\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: '#355c7d'\n    },\n    heading: {\n        fontSize: 20,\n        color: 'white',\n        marginTop: 0,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%'\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport TopImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/selection');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/selection', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/selection', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TopImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={state?.username}\n                        fullname={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setPerson={setPerson}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\nimport React from 'react';\n\nimport { Text } from 'react-native'\nimport App from './App';\n\nText.defaultProps = Text.defaultProps || {};\nText.defaultProps.allowFontScaling = false\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig, reset } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport SelectionMenu from './pages/SelectionMenu';\nimport Activities from './pages/Activities';\nimport Home from './pages/Home';\nimport Tutorial from './pages/Tutorial';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [lang, setLang] = useState('fr');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        // reset();\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    useEffect( () => {\n        let local = Localization.locale?.split('-')[0] || 'fr';\n        setLang(['en', 'fr'].includes(local) ? local : 'fr');\n        console.log('- Imported config file -');\n    }, [config]);\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                    setLang={setLang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/tutorial\"\n                            element={\n                                <Tutorial\n                                    lang={lang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={<Home lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/selection\"\n                            element={\n                                <SelectionMenu\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}