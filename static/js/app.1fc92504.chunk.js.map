{"version":3,"sources":["assets/img/activities/trophy.gif","assets/img/activities/help/question_mark.gif","assets/img/interface/profile.jpg","assets/img/activities/brain.gif","assets/img/activities/sad.gif","assets/sound/global/applause.mp3","assets/sound/global/you_lose.mp3","assets/sound/simon/green.mp3","assets/img/selection/addedUser.gif","assets/img/username/chooseusername.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/alzheimapp_logo.png","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/quiz/logo.png","assets/img/activities/quiz/success.gif","assets/img/activities/double/logo.png","assets/sound/ambiant.mp3","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","assets/img/activities/quiz/thinking.gif","assets/sound/double/ambiant.mp3","assets/sound/double/success.mp3","assets/sound/double/fail.mp3","assets/sound/double/play.mp3","assets/sound/double/next.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","language/selection/index.js","components/selection/styles.js","components/utils/Lottie.js","components/selection/PersonCreation/Success.js","data/dictaphoneApi.js","data/simonApi.js","data/quizApi.js","data/doubleApi.js","utils/helpers.js","data/personApi.js","components/selection/PersonCreation/Form.js","components/selection/PersonCreation/CreatePerson.js","pages/SelectionMenu/styles.js","pages/SelectionMenu/os/android.js","pages/SelectionMenu/os/ios.js","components/selection/Rows.js","pages/SelectionMenu/index.js","pages/ChooseUsername/styles.js","pages/ChooseUsername/index.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","language/home/index.js","pages/Home/styles.js","pages/Home/Menu.js","utils/dilacrypt.js","utils/share.js","pages/Home/ImportData.js","pages/Home/index.js","components/utils/HomeOrTutorial.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/Help.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/utils/quizFunc.js","components/activities/Quiz/Creation/QuestionList.js","components/activities/Quiz/utils/scoreFunc.js","components/activities/Quiz/QuizList.js","components/activities/Quiz/ViewQuizList.js","components/activities/Quiz/SuccessContent.js","components/activities/Quiz/Creation/FormQuizContentAndroid.js","components/activities/Quiz/Creation/FormQuizContentIOS.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Creation/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/Help.js","components/activities/Quiz/index.js","language/activities/double/index.js","components/activities/Double/styles.js","components/activities/Double/Help.js","components/activities/Double/Menu.js","components/activities/Double/subs/helpers.js","components/activities/Double/subs/Card.js","components/activities/Double/Play.js","components/activities/Double/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/QuizScore/index.js","pages/Activities/Score/SimonScore/index.js","pages/Activities/Score/DoubleScore/index.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","OpenActivity","ReturnList","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","color","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","StyleSheet","create","rightButton","minHeight","backgroundColor","imageSuccess","width","wp","height","undefined","alignSelf","leftButton","view","alignItems","marginVertical","btnImport","borderRadius","hp","btnSave","input","fontSize","marginHorizontal","icon","marginTop","inputContainer","label","profilePicture","marginBottom","aspectRatio","successPageTitle","textAlign","edit","marginRight","openActivity","paddingHorizontal","title","Lottie","props","animationRef","useRef","LottieView","useEffect","current","play","Platform","OS","ref","animation","LottieStyle","source","LottieSource","loop","hasOwnProperty","autoPlay","resizeMode","Image","ImageSource","ImageStyle","Success","navigate","useNavigate","View","SuccessImage","styles","InterfaceLang","flexDirection","alignContent","onPress","e","close","buttonStyle","titleStyle","id","state","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","createQuizContent","el","uuidv4","success","failed","includes","fileType","uploadQuizFile","path","FileSystem","uri","log","from","to","catch","updateScore","quizId","contentId","_id","quiz","contentIndex","content","findIndex","scoreIndex","getBestScore","insertScore","dailyScoreBeaten","globalScoreBeaten","pushErrors","errors","field","msg","randomNumber","min","max","Math","floor","random","person","fullname","trim","description","Object","keys","picture","upd","$set","getById","Form","useState","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","encoding","fsRead","setImage","name","size","placeholder","leftIcon","containerStyle","labelStyle","errorStyle","renderErrorMessage","maxLength","errorMessage","inputStyle","value","onChangeText","setFullname","setDescription","raised","cb","Person","setId","intermediates","image","imgName","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","container","flex","zIndex","fab","position","marginLeft","wrapper","topBanner","topImage","heading","boldtext","subtitle","button","overflow","buttonContainer","buttonText","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","fontStyle","searchBar","searchInputStyle","SelectionMenuAndroid","swiper","type","setLang","LoadingBrain","SelectionMenuLang","activeOpacity","idx","active","setActive","setBtnTxt","ActivityIndicator","index","scrollBy","btnText","SafeAreaView","isLoading","showsButtons","scrollEnabled","pagingEnabled","slidePropsState","showsPagination","onIndexChanged","setIndex","setTimeout","ScrollView","inputContainerStyle","setSearch","search","printRows","SelectionMenuIOS","parseInt","setIdx","iconContainerStyle","redirected","KeyboardAvoidingView","behavior","loadMinimal","Rows","TouchableScale","default","mod","paddingVertical","componentProps","Component","key","bottomDivider","DefaultProfilePicture","rounded","Content","Title","Subtitle","Chevron","SelectionMenu","setIsLoading","useLocation","slide","Audio","setIsEnabledAsync","regex","RegExp","$regex","backHandler","BackHandler","addEventListener","remove","list","map","propsSelectionMenuComponent","printAccordingToOS","textInput","borderColor","shadowOpacity","shadowRadius","shadowOffset","elevation","padding","viewrow","flexWrap","justifyContent","setInput","loadPage","setLoadPage","confirmed","setConfirmed","redirect","setRedirect","setUsername","res","parseUsername","insertUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","animating","Loading","LoadingImage","slideOdd","titleOdd","textOdd","borderWidth","Tutorial","StepOne","StepTwo","StepThree","StepFour","StepFive","StepSixth","Config","Select","Import","Introduction","Source","License","Language","Step1","Step2","Step3","Step4","Step5","Step6","Step7","Step8","Step9","Step10","Step11","Step12","Step13","Step14","GoBack","InvalidFile","InvalidPersonFile","IncorrectPersonFile","ErrorChekingPerson","InvalidActivitiesLength","InvalidQuizData","InvalidLogData","InvalidDoubleData","InvalidSimonData","header","logo","menu","copyleft","ErrorMessage","Menu","showsVerticalScrollIndicator","HomeLang","ambiant","unloadAsync","DocumentPicker","multiple","copyToCacheDirectory","setImportFile","prev","Linking","openURL","encrypt","string","encryptedString","j","String","fromCharCode","charCodeAt","isValidDate","d","currentDate","Date","getFullYear","tmp","join","n","isNaN","fileToBase64","formatQuiz","formatLog","scoreVerification","checkPersonInformations","checkPersonExists","personAPI","checkQuiz","quizKeys","contentKeys","k","l","answers","question","foundInScore","checkDouble","double","checkSimon","simon","checkDictaphone","dictaphone","importPerson","exists","importQuiz","filePath","quizAPI","quizFindAsync","importDouble","doubleAPI","importSimon","simonAPI","importLog","dictaphoneAPI","writeDataFile","fileUri","replace","exportPerson","personFind","personData","simonData","doubleData","quizData","dictaphoneData","JSON","stringify","activities","dilacrypt","ImportData","step","setStep","setError","importFile","parsed","parseJSON","dataImport","found","CannotCreatePerson","inputString","parse","stepStyle","clr","display","disabled","Home","setAmbiant","Sound","createAsync","isLooping","sound","playAsync","AlzheimApp","HomeOrTutorial","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","QuizScore","SimonScore","DoubleScore","NoScore","Global","BestScoreByDay","ExportedProfile","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","load","setLoad","deletePerson","SimonDB","removeAsync","DictaphoneDB","DoubleDB","QuizDB","deleted","ActivitiesLang","Sharing","isAvailable","iconPosition","Alert","setPerson","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","isPlaying","setIsPlaying","progress","setProgress","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","positionMillis","playableDurationMillis","variant","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","getURI","folder","record","DictaphoneLang","created","deleteRecord","goBack","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","Head","RulesHead","TriesHead","Rules","TriesExplain","paddingTop","opacity","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","viewHelpPage","leaveButtonHelpPage","helpHead","helpStepHead","textTransform","helpStep","helpQuestionMark","SimonLogo","SimonLang","setTab","Game","start","setStart","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","QuestionMark","tab","pos","Create","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","GiveUpQuizTitle","GiveUpQuiz","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","EditedQuiz","QuizListRedirection","selectedQuizz","quizName","Questions","SuccessTitle","FailedTitle","SuccessQuizTitle","SuccessQuiz","fail","FailQuizTitle","FailQuiz","SaveContent","AddContent","SureCancelEdition","ImportSound","CustomHead","Custom","answersText","leaveButtonPlay","createButton","overlayDescriptionReference","overlayDescriptionAnswers","paddingBottom","ScrollViewSuccess","modalTitle","modalDescription","quizTitleInputContainer","quizTitleInput","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","QuizLogo","QuizLang","printFile","clearFile","pauseSound","playSound","QuestionList","quizEdit","newContent","quizEdition","Number","isInteger","questionId","setNewContent","setQuizEdit","setReload","reload","setEditedQuiz","contentList","setContent","pickOutQuestion","setEditContent","ScoreRatio","filter","total","toFixed","QuizList","ViewQuizList","SuccessContent","FormQuizContentAndroid","answer","setAnswer","contentContainerStyle","setFileType","setFilename","setUri","mimeType","flexShrink","setQuestion","toLowerCase","setAnswers","addAnswer","badgeStyle","pickOutAnswer","FormQuizContentIOS","ViewQuiz","newQuestion","setNewQuestion","editContent","editedQuiz","saveQuiz","concat","editedFile","buttonTop","mode","saveContent","pushContent","propsFormQuizContent","viewPage","CreateQuiz","createQuestion","setCreateQuestion","setName","modalConfirmation","setModalConfirmation","substring","printPage","ThinkingImage","quizLength","pickRandomQuizz","ThinkingLottie","setPlay","setCurrent","setFail","arr","shuffle","TrophyLottie","SadLottie","openAlertResultQuestion","SadImage","setMediaType","answerTrimedLowercase","answerQuestion","setQuiz","setRandom","rand","randomArrayElement","exclude","randNumber","RemaningTries","Reinit","TitleGiveUp","SureToGiveUp","BestDayScore","ScoreHead","ScoreHelp","Remember","Dimensions","factor","RectoCard","PlayingCard","VersoCard","IconCard","viewGame","buttonViewPlay","playButtons","DoubleLang","DoubleLogo","ambiantEnabled","ambiantSoundPlay","soundEnabled","setSoundEnabled","generateRandomPair","colors","icons","indexColor","indexIcon","SCREEN_WIDTH","SCREEN_HEIGHT","Card","cardStyles","inPlay","inFound","show","TouchableOpacity","ReturnCard","setFound","setShow","currentPlay","indexGame","playing","currentGameLength","nFound","setScore","prevScore","prevTries","endGame","bestScoreDay","failOverlay","element","newModel","giveUp","Double","setBestScoreDay","setAmbiantEnabled","bestDayScore","prevEnable","choosenSound","returnComponent","page","ActivitiesList","scoreRow","scoreRowSimon","scoreHeading","margin","quizScore","setQuizScore","horizontal","textStyle","valueSuffix","initialValue","delay","activeStrokeColor","radius","inActiveStrokeColor","inActiveStrokeOpacity","inActiveStrokeWidth","activeStrokeWidth","simonScore","setSimonScore","btnIndex","setBtnIndex","buttons","TotalScore","selectedIndex","global","days","item","highestToLowest","b","labels","datasets","fromZero","showValuesOnTopOfBars","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","printScore","doubleScore","setDoubleScore","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","unmountOnBlur","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","BgSource","navTheme","DefaultTheme","background","TopImage","BackgroundImage","NavigationContainer","theme","defaultProps","allowFontScaling","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact"],"mappings":"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","file":"static/js/app.1fc92504.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/question_mark.c1494184.gif\";","module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/brain.abdab59b.gif\";","module.exports = __webpack_public_path__ + \"static/media/sad.bfdab12f.gif\";","module.exports = __webpack_public_path__ + \"static/media/applause.3560ad8b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/you_lose.e1f971d7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.c4ec63da.png\";","module.exports = __webpack_public_path__ + \"static/media/2.c9afe178.png\";","module.exports = __webpack_public_path__ + \"static/media/3.95e52180.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e18a9e44.png\";","module.exports = __webpack_public_path__ + \"static/media/5.1a0c5df5.png\";","module.exports = __webpack_public_path__ + \"static/media/6.64d544d0.png\";","module.exports = __webpack_public_path__ + \"static/media/alzheimapp_logo.efbaee1c.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.42d4e3d2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.d22dea5d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.5d28b463.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.baee48bf.png\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.e46e92e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e82f415e.gif\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.af08ce07.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.d73909c9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fail.4f8cf1ae.mp3\";","module.exports = __webpack_public_path__ + \"static/media/play.25c902a7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.44546c82.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n};\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n};\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n};\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n};\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n};\n\nexport async function reset() {\n    const path = `${FileSystem.documentDirectory}persons`;\n    const folder = await FileSystem.getInfoAsync(path);\n    if (folder.exists) {\n        FileSystem.deleteAsync(path).catch(err => {\n            console.error('folder delete err:',err);\n        });\n    }\n    return AsyncStorage.clear();\n};","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retour au formulaire',\n        OpenActivity: 'Ouvrir le profil',\n        ReturnList: \"Retour aux paramètres\",\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n        OpenActivity: 'Open this profile',\n        ReturnList: \"Return to the settings\",\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet\\nrequise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? Il est possible {0} la donnée d'une personne et de {1} dans un autre appareil !\",\n                boldText: [\"d'exporter\", \"l'importer\"],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can {0} a person's data and {1} it in another device!\",\n                boldText: ['export', 'import'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer {0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to achieve today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: wp('65%'),\n        height: undefined,\n        alignSelf: 'center',\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: wp('45%'),\n        height: hp('5%')\n    },\n    btnSave: {\n        width: wp('45%'),\n        height: hp('5%')\n    },\n    input: {\n        fontSize: wp('4%'),\n        marginHorizontal: 10,\n        height: hp('6%')\n    },\n    icon: {\n        height:hp('6%'),\n        marginTop: 15\n    },\n    inputContainer: {\n        width: wp('72%'),\n        marginTop: 10\n    },\n    label: {\n        fontSize: wp('4%')\n    },\n    profilePicture: {\n        width: wp('25%'),\n        height: undefined,\n        borderRadius: 100,\n        marginBottom: hp('2%'),\n        aspectRatio: 1\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: wp('60%'),\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: wp('5%'),\n        color: '#788bff',\n        marginBottom: hp('3%'),\n    },\n    ReturnToForm: (edit) => {\n        return {\n            //marginHorizontal: edit ? 20 : 0,\n            marginRight: edit ? 0 : 20,\n            borderRadius: 15,\n            backgroundColor: 'red',\n            height: hp('6%'),\n            width: wp('45%')\n        }\n    },\n    openActivity: {\n        borderRadius: 15,\n        paddingHorizontal: 15,\n        height: hp('6%'),\n        width: wp('40%')\n    },\n    title: {\n        fontSize: wp('4%')\n    }\n});\n","import React, { useEffect, useRef } from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    const animationRef = useRef(LottieView);\n\n    useEffect( () => {\n        animationRef?.current?.play();\n    }, []);\n    \n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                ref={animation => {\n                    animationRef.current = animation\n                }}\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport { useNavigate } from 'react-router-native';\nimport SuccessImage from '../../../assets/img/selection/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/selection/addedUser.json');\n    const navigate = useNavigate();\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <View style={{flexDirection: 'row', alignItems: 'center', alignContent: 'center', alignSelf: 'center'}}>\n                <Button\n                    title={InterfaceLang[props.lang].ReturnToForm}\n                    onPress={(e) => {\n                        props.close();\n                    }}\n                    buttonStyle={ styles.ReturnToForm(props.edit) }\n                    titleStyle= { styles.title }\n                />\n                { props.edit == false ? <Button\n                    title={InterfaceLang[props.lang].OpenActivity}\n                    onPress={(e) => {\n                        navigate(`/activities/${props.id}`, {\n                        state: {\n                            lang: props.lang ?? 'fr',\n                            username: props.username,\n                        }\n                    });\n                    }}\n                    buttonStyle={ styles.openActivity }\n                    titleStyle={ styles.title }\n                /> : <></> }\n            </View>\n        </View>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nconst createQuizContent = async (personId, el) => {\n    el.id = uuidv4();\n    el.score = [{personId: personId, success: 0, failed: 0}];\n    if (['audio', 'image'].includes(el.fileType)) {\n        await uploadQuizFile(el);\n    }\n};\n\nconst uploadQuizFile = async (el) => {\n    const filename = `${uuidv4()}${el.fileType == 'audio' ? '.m4a' : '.jpg'}`;\n    const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n    await FileSystem.getInfoAsync(el.uri).then(e => {\n        console.log(e);\n    })\n    await FileSystem.copyAsync({\n        from: el.uri,\n        to: `${path}${filename}`\n    }).then(async e => {\n        await FileSystem.deleteAsync(el.uri);\n        el.uri = `${path}${filename}`;\n    }).catch(err => {\n        console.log(err);\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        await createQuizContent(personId, el);\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport async function updateScore(personId, quizId, contentId, success) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    const contentIndex = quiz[0].content.findIndex(el => el.id == contentId );\n    const scoreIndex = quiz[0].content[contentIndex].score.findIndex(el => el.personId = personId);\n    if (success) quiz[0].content[contentIndex].score[scoreIndex].success++\n    else quiz[0].content[contentIndex].score[scoreIndex].failed++\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function deleteId(personId, quizId) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n};\n\nexport async function deleteQuestion(quizId, questionId) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    const content = quiz[0].content;\n    const contentIndex = content.findIndex(el => el.id == questionId );\n    if (['audio', 'image'].includes(content[contentIndex]))\n        await FileSystem.deleteAsync(content.uri);\n    quiz[0].content = content.splice(0, contentIndex);\n    return db.updateAsync({_id: quizId}, {...quiz[0]})\n};\n\nexport async function getById(quizId) {\n    return db.findAsync({ _id: quizId }, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n};\n\nexport async function saveQuiz(personId, quizId, content) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    if (!quiz) return;\n    for (let i = 0; i < content.length; i++) {\n        const el = content[i];\n        if (!el.id)\n            await createQuizContent(personId, el);\n        else if (el.id && el.editedFile) {\n            await uploadQuizFile(el);\n            delete el.editedFile;\n        }\n    }\n    quiz[0].content = content;\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function reset() {\n    return db.removeAsync({}, { multi: true });\n};\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DoubleSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nexport const randomArrayElement = (exclude, min, max) => {\n    randNumber = randomNumber(min, max);\n    if (randNumber == exclude)\n        return randomArrayElement(exclude, min, max);\n    return randNumber;\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\nimport { db as QuizDB } from './quizApi'\nimport { db as DoubleDB } from './doubleApi';\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await DoubleDB.removeAsync({ personId: id });\n    await QuizDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return db.removeAsync({ _id: id });\n};\n\nexport async function reset() {\n    const path = `${FileSystem.documentDirectory}persons`;\n    const file = await FileSystem.getInfoAsync(path);\n    if (file.exists) {\n        FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(async res => {\n            await SimonDB.removeAsync({}, { multi: true });\n            await QuizDB.removeAsync({}, { multi: true });\n            await DictaphoneDB.removeAsync({}, { multi: true });\n        }).catch(err => {\n            console.log('[!] Directory does not exists');\n        });\n    }\n    return db.removeAsync({}, { multi: true });\n};","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0)\n                personId = result._id;\n            props.setId(personId);\n            await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${personId}`, {intermediates: true});\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: wp('3%') }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={wp('4%')}\n                        color=\"white\"\n                        style={{ marginHorizontal: wp('2%') }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={wp('6%')} color=\"grey\" containerStyle={styles.icon}  />}\n                label={InterfaceLang[props?.lang].FullName}\n                labelStyle={ styles.label }\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={styles.input}\n                value={props.fullname}\n                containerStyle={ styles.inputContainer }\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={wp('6%')} color=\"grey\" containerStyle={styles.icon} />}\n                label={InterfaceLang[props?.lang].Description}\n                labelStyle={styles.label}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={ styles.input }\n                containerStyle={ styles.inputContainer }\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: wp('3%') }}\n                buttonStyle={styles.btnSave}\n                containerStyle={{ marginTop: hp('1%')}}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={wp('4%')}\n                        color=\"white\"\n                        style={{ marginHorizontal: wp('2%') }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n    const [id, setId] = useState(0);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n\n        id: id,\n        setId: setId\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { Platform } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n        zIndex: 1,\n    },\n    fab: {\n        position: 'absolute',\n        marginLeft: wp('88%'),\n        marginTop: hp('2%'),\n        zIndex: 3 \n    },\n    wrapper: {\n        marginTop: 20,\n        textAlign: 'center',\n        alignItems: 'center',\n        zIndex: 1,\n    },\n    topBanner: {\n        backgroundColor:'#355c7d'\n    },\n    topImage: {\n        // flex: 1,\n        marginTop: hp('1%'),\n        width: wp('15%'),\n        height: undefined,\n        marginBottom: hp('2%'),\n        backgroundColor: '#355c7d'\n    },\n    heading: {\n        marginTop: 10,\n        fontSize: hp('3%'),\n        zIndex: 2,\n        color: 'white'\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    subtitle: {\n        textAlign: 'center',\n        fontSize: hp('2%'),\n        color: 'white'\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        borderRadius: 20,\n        height: hp('5%'),\n        overflow: 'hidden',\n    },\n    buttonContainer: {\n        marginVertical: 25,\n        width: wp('120%'),\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        fontSize: hp('2%')\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: hp('2%')\n    },\n});\n","import React, { useRef } from 'react';\nimport {\n    Text,\n    View,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB, Button } from 'react-native-elements';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as SelectionMenuLang } from '../../../language/selection';\nimport CreatePerson from '../../../components/selection/PersonCreation/CreatePerson';\n\nimport Lottie from '../../../components/utils/Lottie';\nimport styles from '../styles';\n\nexport default function SelectionMenuAndroid(props) {\n\n    const swiper = useRef(null);\n    const navigate = useNavigate();\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - props.index, true);\n    };\n\n    const changeIndex = (idx) => {\n        props.setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                props.setBtnTxt(SelectionMenuLang[props.lang].AddAPerson);\n            } else if (idx === 1) {\n                props.setBtnTxt(SelectionMenuLang[props.lang].ReturnToList);\n            }\n            props.setActive(true);\n        }, 400);\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 85 + '%',\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home', {\n                    state: { username: props.username, setLang: props.setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n            <View style={styles.wrapper}>\n                <Lottie\n                    LottieSource={props.LottieSource}\n                    ImageSource={props.LoadingBrain}\n                    LottieStyle={styles.topImage}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[props.lang].Hello(props.username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[props.lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <Button\n                    style={styles.button}\n                    containerStyle={styles.buttonContainer}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (props.active === false) {\n                            return;\n                        }\n                        props.setActive(false);\n                        props.setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(props.index - 1);\n                    }}\n                    title={props.btnText}\n                    titleStyle={styles.buttonText}\n                />\n            </View>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {props.isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={props.slidePropsState || 0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={SelectionMenuLang[props.lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    props.setSearch(e);\n                                }}\n                                value={props.search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {props.persons && props.persons.length > 0 ? (\n                                props.printRows(props.persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[props.lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={props.persons}\n                                setPersons={props.setPersons}\n                                lang={props.lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import React, { useRef, useState } from 'react';\nimport {\n    Text,\n    View,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    KeyboardAvoidingView\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB, Button } from 'react-native-elements';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as SelectionMenuLang } from '../../../language/selection';\nimport CreatePerson from '../../../components/selection/PersonCreation/CreatePerson';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport Lottie from '../../../components/utils/Lottie';\n\nimport styles from '../styles';\n\nexport default function SelectionMenuIOS(props) {\n\n    const [idx, setIdx] = useState(parseInt(props.index));\n\n    const swiper = useRef(null);\n    const navigate = useNavigate();\n\n    const swipePage = () => {\n        setTimeout(() => {\n            if (idx === 1) {\n                props.setBtnTxt(props.redirected ? SelectionMenuLang[props.lang].ReturnToList : SelectionMenuLang[props.lang].AddAPerson); \n            } else {\n                props.setBtnTxt(props.redirected ? SelectionMenuLang[props.lang].AddAPerson : SelectionMenuLang[props.lang].ReturnToList);\n            }\n            swiper.current.scrollBy(1, true);\n            props.setActive(true);\n            if (idx == 1) setIdx(parseInt(0));\n            else setIdx(1);\n        }, 250);\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={ styles.fab }\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: wp('4%'),\n                        //style: {marginTop: 4}\n                    }\n                }\n                buttonStyle={{width: wp('9%'), height:hp('6%')}}\n                iconContainerStyle={{width: wp('9%'), height:hp('5%')}}\n                onPress={() => navigate('/home', {\n                    state: { username: props.username, setLang: props.setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n                <View style={styles.wrapper}>\n                    <Lottie\n                        LottieSource={props.LottieSource}\n                        ImageSource={props.LoadingBrain}\n                        LottieStyle={styles.topImage}\n                        ImageStyle={styles.topImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                    <Text style={styles.heading}>\n                        {SelectionMenuLang[props.lang].Hello(props.username)}\n                    </Text>\n                </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[props.lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <Button\n                    containerStyle={styles.buttonContainer}\n                    buttonStyle={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (props.active === false)\n                            return;\n                        props.setActive(false);\n                        props.setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(idx + 1);\n                    }}\n                    title={props.btnText}\n                    titleStyle={styles.buttonText}\n                />\n            </View>\n            </View>\n            <KeyboardAvoidingView behavior={\"height\"} style={{ flex: 1 }}>\n            <SafeAreaView style={styles.safeContainer}>\n                {props.isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        pagingEnabled={true}\n                        loadMinimal={true}\n                        loop={true}\n                        showsPagination={false}\n                        index={props.index}\n                    >\n                        <ScrollView >\n                            <Input\n                                placeholder={SelectionMenuLang[props.lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    props.setSearch(e);\n                                }}\n                                value={props.search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {props.persons && props.persons.length > 0 ? (\n                                props.printRows(props.persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[props.lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={props.persons}\n                                setPersons={props.setPersons}\n                                lang={props.lang}\n                            />\n                        </ScrollView>\n                    </Swiper>\n                )}\n            </SafeAreaView>\n            \n            </KeyboardAvoidingView>\n        </View>\n    );\n}\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white', paddingVertical: hp('3%') }\n            : { backgroundColor: '#f3f3f3', paddingVertical: hp('3%') };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n                containerStyle={{width: wp('10%'), height: undefined, borderRadius: 300, aspectRatio: 1}}\n            />\n            <ListItem.Content>\n                <ListItem.Title style={{fontSize: hp('2%')}}>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle style={{fontSize: hp('2%'), color:'gray'}}>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n} from 'react-native';\nimport { Platform } from 'react-native';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport SelectionMenuAndroid from './os/android';\nimport SelectionMenuIOS from './os/ios';\n\nimport LoadingBrain from '../../assets/img/activities/brain.gif';\nimport { lang as SelectionMenuLang } from '../../language/selection';\nimport Rows from '../../components/selection/Rows';\n\nimport * as Person from '../../data/personApi';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function SelectionMenu(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        props.redirected == 1 ? SelectionMenuLang[props.lang || lang].ReturnToList : SelectionMenuLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n    const setLang = state?.setLang || props.setLang;\n    const slidePropsState = state?.slide || props?.slide;\n\n    useEffect( () => {\n        setIndex(slidePropsState || 0);\n        setBtnTxt(index === 0 && props?.redirected != 1 ? SelectionMenuLang[lang].AddAPerson : SelectionMenuLang[lang].ReturnToList);\n    }, []);\n\n    useEffect(() => {\n        Audio.setIsEnabledAsync(false);\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    const printAccordingToOS = () => {\n        const propsSelectionMenuComponent = {\n            lang: lang,\n            username: username,\n            search: search,\n            setLang: setLang,\n            LottieSource: LottieSource,\n            LoadingBrain: LoadingBrain,\n            isLoading: isLoading,\n            index: index,\n            persons: persons,\n            btnText: btnText,\n            active: active,\n            redirected: props.redirected,\n\n            setIndex: setIndex,\n            setIsLoading: setIsLoading,\n            setActive: setActive,\n            setPersons: setPersons,\n            setBtnTxt: setBtnTxt,\n            setSearch: setSearch,\n            printRows: printRows,\n\n        }\n        if (Platform.OS === 'ios')\n            return <SelectionMenuIOS {...propsSelectionMenuComponent} />\n        else\n            return <SelectionMenuAndroid {...propsSelectionMenuComponent} />\n    }\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            { printAccordingToOS() }\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 40,\n        marginTop: -40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 50,\n        borderColor: 'gray',\n        borderRadius: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        width: 180,\n        textAlign: 'center',\n        elevation: 10\n    },\n    image: {\n        flex: 1,\n        width: 100\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n        height: 50\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername as insertUsername, SawTutorial, getUsername } from '../../data/configApi';\n\nimport SelectionMenu from '../SelectionMenu';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\nimport { Button } from 'react-native-elements';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [loadPage, setLoadPage] = useState(true);\n    const [confirmed, setConfirmed] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const [username, setUsername] = useState('');\n\n    useEffect(() => {\n        getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    setUsername(res[0].username);\n                    setRedirect(true);\n                }\n                setLoadPage(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoadPage(false);\n            });\n    }, []);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            insertUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setUsername(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (redirect)\n        return <SelectionMenu username={username} lang={props.lang} setLang={props.setLang} slide={1} />\n\n    if (loadPage)\n        return <View style={styles.container}></View>\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <Button\n                        title={isLoading ? (\n                            <ActivityIndicator\n                                color=\"white\"\n                                size=\"small\"\n                                animating={true}\n                            />\n                        ) : (\n                            'OK'\n                        )}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                        buttonStyle={styles.button}\n                        titleStyle={styles.buttonText}\n                    />\n                </View>\n            </View>\n        );\n    } else {\n        return <SelectionMenu username={username} lang={props.lang} setLang={props.setLang} slide={1} redirected={1} />\n    }\n}\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet, Platform } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        height: 100 + '%',\n        padding: 20,\n        alignItems: 'center'\n    },\n    slideOdd: {\n        height: 100 + '%',\n        alignItems: 'center',\n        backgroundColor: '#355c7d',\n    },\n    title: {\n        color: 'black',\n        fontSize: 22,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    titleOdd: {\n        color: 'white',\n        fontSize: 22,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    textOdd: {\n        color: 'white',\n        fontSize: 15,\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    image: {\n        height: Platform.OS === 'ios' ? 20 + '%' : 30 + '%',\n        marginBottom: 40,\n        marginTop: Platform.OS === 'ios' ? 60 : 20,\n        aspectRatio: 1\n    },\n    button: {\n        marginTop: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        borderWidth: 1,\n        height: 60\n    },\n    buttonText: {\n        color: '#355c7d'\n    },\n    buttonContainer: {\n        width: 250,\n    }\n});\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { Button } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\n\nexport default function Tutorial(props) {\n    const navigate = useNavigate();\n\n    return (\n        <>\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Button \n                            title={TutorialLang[props.lang].LastStepButton}\n                            buttonStyle={styles.button}\n                            containerStyle={styles.buttonContainer}\n                            onPress={() => {\n                                Config.SawTutorial(true);\n                                navigate('/username', {\n                                    state: { setLang: props.setLang }\n                                });\n                            }}\n                            titleStyle={styles.buttonText}\n                        />\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Select: \"Sélection des personnes\",\n        Import: \"Importer un profil\",\n        Introduction: \"Introduction\",\n        Source: \"Accès au code source\",\n        License: \"Code sous licence GPL v3.\\nCréation originale par Diyaeddine LAOUID.\",\n        Language: \"Changer la langue\",\n        Step1: \"Vérification du format ... \",\n        Step2: \"Vérification du format de l'identité ... \",\n        Step3: \"Vérification d'une personne similaire ...\",\n        Step4: \"Vérification des activités ...\",\n        Step5: \"Vérification des quiz ...\",\n        Step6: \"Vérification des jeux des pairs ...\",\n        Step7: \"Vérification du Simon ...\",\n        Step8: \"Vérification du Journal vocal ...\",\n        Step9: \"Création de la personne ...\",\n        Step10: \"Création des quiz ...\",\n        Step11: \"Création des jeux des pairs ...\",\n        Step12: \"Création du Simon ...\",\n        Step13: \"Création du Dictaphone ...\",\n        Step14: \"L'importation s'est déroulée sans encombre ! :-)\",\n        GoBack: \"Retour\",\n        InvalidFile: \"Le fichier a été supprimé du cache\",\n        InvalidPersonFile: \"Le fichier importé est invalide !\",\n        IncorrectPersonFile: \"L'identité de la personne est mal saisie !\",\n        ErrorChekingPerson: \"Une erreur est survenue au moment de la vérification de la personne dans le système ...\",\n        InvalidActivitiesLength: \"Le nombre d'activités dans le tableau du fichier est beaucoup trop grand.\",\n        InvalidQuizData: \"Les données du quiz sont incorrectes ...\",\n        InvalidLogData: \"Les données du dictaphone sont incorrectes ...\",\n        InvalidDoubleData: \"Les données du jeu des pairs sont incorrectes ...\",\n        InvalidSimonData: \"Les données du Simon sont incorrectes ...\",\n        \n    },\n    en: {\n        Select: \"Select a person\",\n        Import: \"Import a profil\",\n        Introduction: \"Introduction\",\n        Source: \"Source code on GitHub\",\n        License: \"Licensed GPL v3 source code.\\nOriginally created by Diyaeddine LAOUID.\",\n        Language: \"Change language\",\n        Step1: \"Format checking ... \",\n        Step2: \"Identity format checking ... \",\n        Step3: \"Checking if person already registered ...\",\n        Step4: \"Activities length checking ...\",\n        Step5: \"Quiz checking ...\",\n        Step6: \"Double Memory checking ...\",\n        Step7: \"Simon checking ...\",\n        Step8: \"Journal log checking ...\",\n        Step9: \"Person creation ...\",\n        Step10: \"Quiz creation ...\",\n        Step11: \"Double Memory creation ...\",\n        Step12: \"Simon Memory creation ...\",\n        Step13: \"Journal log creation ...\",\n        Step14: \"The person has been successfully imported! :-)\",\n        GoBack: \"Back\",\n        InvalidFile: \"The file has been deleted from the cache\",\n        InvalidPersonFile: \"The imported file is invalid!\",\n        IncorrectPersonFile: \"The format of the imported person is invalid!\",\n        ErrorChekingPerson: \"Error when checking if this person exists...\",\n        InvalidActivitiesLength: \"The activities length on the file array is too big\",\n        InvalidQuizData: \"The quiz datas are invalid...\",\n        InvalidLogData: \"The journal logs datas are invalid...\",\n        InvalidDoubleData: \"The double memory game datas are invalid...\",\n        InvalidSimonData: \"The Simon datas are invalid...\",\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        height: 100 + '%',\n        backgroundColor: '#355c7d',\n        alignItems: 'center'\n    },\n    header: {\n        marginTop: 10 + '%',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    logo: {\n        width: 130,\n        height: 130\n    },\n    menu: {\n        marginTop: 2 + '%',\n        flex: 1,\n        marginBottom: 20\n    },\n    button: {\n        width: 250,\n        height: 50,\n        backgroundColor: 'white',\n        color: '#355c7d',\n        justifyContent: 'flex-start',\n        borderRadius: 25\n    },\n    buttonContainer: {\n        borderRadius: 25,\n        alignItems: 'center',\n        marginBottom: 20\n    },\n    copyleft: {\n        marginTop: 10 + '%',\n        fontSize: 11,\n        color: 'white',\n        textAlign: 'center',\n        fontStyle: 'italic'\n    },\n    ErrorMessage: {\n        color: 'red',\n        fontWeight: 'bold',\n        textAlign:'center',\n        marginTop: 20,\n        marginHorizontal: 40\n    }\n});\n","import React from 'react';\nimport {\n    ScrollView,\n    Linking\n} from 'react-native';\n\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\nimport * as DocumentPicker from 'expo-document-picker';\n\nimport { lang as HomeLang } from '../../language/home';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    const navigate = useNavigate();\n\n    return (\n        <ScrollView style={styles.menu} showsVerticalScrollIndicator={false}>\n            <Button\n                title={HomeLang[props.lang].Select}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', textAlign: 'center', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                icon={\n                    <Icon\n                        name={'person-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    if (props.ambiant) await props.ambiant?.unloadAsync()\n                    navigate('/selection', {\n                        state: { username: props.username, lang: props.lang, setLang: props.setLang }\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Import}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'person-add-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => {\n                    DocumentPicker.getDocumentAsync({multiple: false, type: '*/*', copyToCacheDirectory: true}).then( e => {\n                        props.setImportFile(e.uri);\n                    }).catch(e => {\n                        console.log(e);\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Language}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'world-o'}\n                        type={'fontisto'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                onPress={() => props.setLang(prev => prev == 'fr' ? 'en' : 'fr')}\n                raised\n            />\n            <Button\n                title={HomeLang[props.lang].Introduction}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={[styles.buttonContainer, {marginBottom: 20}]}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    await props.ambiant.unloadAsync()\n                    navigate('/tutorial');\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Source}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'logo-github'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => Linking.openURL('https://github.com/dilaouid/AlzheimApp')}\n            />\n            <Text style={styles.copyleft} >{HomeLang[props.lang].License}</Text>\n        </ScrollView>\n    );\n}\n","export const encrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let encryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        encryptedString += String.fromCharCode( string.charCodeAt(i) - key.charCodeAt(j) - key.length );\n    }\n    return (encryptedString);\n};\n\nexport const decrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let decryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        decryptedString += String.fromCharCode( string.charCodeAt(i) + key.charCodeAt(j) + key.length );\n    }\n    return (decryptedString);\n};","/**\n * Model is like:\n * {\n *      personId: 'xxx',\n *      name: 'xxx',\n *      description: 'xxx',\n *      picture: 'b64' || null,\n *      activities: {\n *          quiz: [\n *              // all quizz contents //\n *          ],\n *          log: [\n *              // all logs contents\n *          ],\n *          double: [\n *              // all double contents\n *          ],\n *          simon: [\n *              // all simon score\n *          ]\n *      }\n * }\n */\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as dilacrypt from './dilacrypt';\n\nimport { db as personAPI } from '../data/personApi';\nimport { db as dictaphoneAPI } from '../data/dictaphoneApi';\nimport { db as simonAPI } from '../data/simonApi';\nimport { db as quizAPI } from '../data/quizApi';\nimport { db as doubleAPI } from '../data/doubleApi';\n\nconst isValidDate = (d) => {\n    let split = d.split('/');\n    const currentDate = new Date();\n    if (split.length != 3) return false;\n    if (split[2] > currentDate.getFullYear()) return false;\n    if (split[0] > 12) {\n        let tmp = split[1];\n        split[1] = split[0];\n        split[0] = tmp;\n    }\n    d = split.join('/');\n    let n = new Date(d);\n    return n instanceof Date && !isNaN(n);\n};\n\nconst fileToBase64 = async (uri) => {\n    return await FileSystem.readAsStringAsync(uri, {\n        encoding: 'base64',\n    });\n};\n\nconst formatQuiz = async (quiz) => {\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < el.content.length; j++) {\n            const e = el.content[j];\n            if (e.uri)\n                e.uri = await fileToBase64(e.uri);\n        }\n    }\n    return (quiz);\n};\n\nconst formatLog = async (log) => {\n    for (let i = 0; i < log.length; i++) {\n        const el = log[i];\n        el.path = await fileToBase64(el.path);\n    }\n    return (log);\n};\n\nconst scoreVerification = (el, personId) => {\n    if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n    if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    if (!el.hasOwnProperty('score') || typeof el.score !== 'number') return false;\n    if (!el.hasOwnProperty('dailyScoreBeaten') || typeof el.dailyScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('globalScoreBeaten') || typeof el.globalScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n    return true;\n};\n\n\n\nexport const checkPersonInformations = (person) => {\n    const keys = ['_id', 'description', 'fullname', 'picture', 'activities'];\n    for (let i = 0; i < keys.length; i++) {\n        const el = keys[i];\n        if (person.hasOwnProperty(el) === false)\n            return false;\n    }\n    return true;\n};\n\nexport const checkPersonInformationsLength = (person) => {\n    return person.fullname.length <= 25 && person.description.length <= 100;\n};\n\nexport const checkPersonExists = async (personId) => {\n    return await personAPI.findAsync({ _id: personId });\n}\n\nexport const checkQuiz = async (quiz, personId) => {\n    const quizKeys = ['name', 'content', 'personId', '_id'];\n    const contentKeys = ['answers', 'question', 'id', 'score']\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < quizKeys.length; j++) {\n            const k = quizKeys[j];\n            if (el.hasOwnProperty(k) === false) return false;\n        }\n        for (let d = 0; d < el.content.length; d++) {\n            const content = el.content[d];\n            if (content.hasOwnProperty('uri') || content.hasOwnProperty('filename') || content.hasOwnProperty('fileType')) {\n                if (!content.hasOwnProperty('uri')) return false;\n                else if (!content.hasOwnProperty('filename')) return false;\n                else if (!content.hasOwnProperty('fileType')) return false;\n            }\n            for (let j = 0; j < contentKeys.length; j++) {\n                const l = contentKeys[j];\n                if (content.hasOwnProperty(l) === false) return false;\n            }\n            if (typeof content.answers !== 'object' || content.answers?.length === 0) return false;\n            if (typeof content.question !== 'string' || typeof content.question?.length > 23) return false;\n            if (typeof content.score !== 'object' || content.answers?.length === 0) return false;\n            let foundInScore = false\n            for (let n = 0; n < content.score.length; n++) {\n                const score = content.score[n];\n                if (score.personId === personId) foundInScore = true;\n                if (!score.hasOwnProperty('personId')) return false;\n                if (!score.hasOwnProperty('success') || typeof score.success !== 'number') return false;\n                if (!score.hasOwnProperty('failed') || typeof score.success !== 'number') return false;\n            }\n            if (!foundInScore) return false;\n        }\n    }\n    return true;\n};\n\nexport const checkDouble = (double, personId) => {\n    if (typeof double !== 'object') return false;\n    for (let i = 0; i < double.length; i++)\n        if (!scoreVerification(double[i], personId)) return false;\n    return true;\n};\n\nexport const checkSimon = (simon, personId) => {\n    if (typeof simon !== 'object') return false;\n    for (let i = 0; i < simon.length; i++)\n        if (!scoreVerification(simon[i], personId)) return false;\n    return true;\n};\n\nexport const checkDictaphone = (dictaphone, personId) => {\n    if (typeof dictaphone !== 'object') return false;\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n        if (!el.hasOwnProperty('name') || typeof el.name !== 'string' || el.name.length < 2) return false;\n        if (!el.hasOwnProperty('path') || typeof el.path !== 'string' || el.path.length < 100) return false;\n        if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n        if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    }\n    return true;\n};\n\nexport const importPerson = async (person, exists) => {\n\n    if (exists === false) {\n        await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${person._id}`, {intermediates: true});\n    }\n\n    let picture = null;\n    if (person.picture) {\n        picture = uuidv4();\n        const path = `${FileSystem.documentDirectory}persons/${person._id}/pp`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        await FileSystem.writeAsStringAsync(path + `/${picture}.jpg`, person.picture, { encoding: 'base64' }).then(el => {\n            picture = path + `/${picture}.jpg`;\n        }).catch(err => {\n            picture = null;\n        });\n    }\n\n    if (exists === false)\n        return personAPI.insertAsync(\n            {\n                _id: person._id,\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        );\n    else\n        return personAPI.updateAsync({_id: person._id}, {\n            $set: {\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        });\n};\n\nexport const importQuiz = async (quiz) => {\n    let res = true;\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        const path = `${FileSystem.documentDirectory}persons/${el.personId}/quiz`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        for (let j = 0; j < quiz[i].content.length; j++) {\n            const e = quiz[i].content[j];\n            if (e.hasOwnProperty('uri')) {\n                // Import and write file\n                let filename = uuidv4();\n                let filePath;\n                await FileSystem.writeAsStringAsync(path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`, e.uri, { encoding: 'base64' }).then(el => {\n                    filePath = path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`;\n                    filename = filePath;\n                    e.uri = filePath;\n                }).catch(err => {\n                    filename = null;\n                    e.uri = null;\n                });\n            }\n        }\n        const quizFindAsync = await quizAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        const quizExists = quizFindAsync.length > 0;\n        if (quizExists) {\n            await quizAPI.updateAsync( {_id: el._id}, {\n                $set: {\n                    name: el.name,\n                    content: el.content\n                }\n            }).catch(err => {\n                res = false;\n            })\n        } else {\n            await quizAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importDouble = async (double) => {\n    let res = true;\n    for (let i = 0; i < double.length; i++) {\n        const el = double[i];\n        const doubleExists = await doubleAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (doubleExists.length === 0) {\n            await doubleAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importSimon = async (simon) => {\n    let res = true;\n    for (let i = 0; i < simon.length; i++) {\n        const el = simon[i];\n        const simonExists = await simonAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (simonExists.length === 0) {\n            await simonAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importLog = async (dictaphone, personId) => {\n    let res = true;\n    const path = `${FileSystem.documentDirectory}persons/${personId}/recordings`;\n    await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n        console.log('[!] Directory already exists');\n    });\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        const logExists = await dictaphoneAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (logExists.length === 0) {\n            el.date = new Date(el.date);\n            let filename = uuidv4();\n            let filePath;\n            await FileSystem.writeAsStringAsync(path + `/${filename}.m4a`, el.path, { encoding: 'base64' }).then(e => {\n                filePath = path + `/${filename}.m4a`;\n                filename = filePath;\n                el.path = filePath;\n            }).catch(err => {\n                console.log(err);\n                filename = null;\n                el.path = null;\n            });\n            await dictaphoneAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const writeDataFile = async (fullname, content) => {\n    let fileUri = FileSystem.documentDirectory + `${fullname.replace(/\\s/g, '_')}.json`;\n    return await FileSystem.writeAsStringAsync(fileUri, content).catch(err => {\n        console.log(err);\n    }).then( (e) => {\n        return (fileUri);\n    });\n};\n\nexport const exportPerson = async (personId, key) => {\n    const personFind = await personAPI.findAsync({ _id: personId });\n    if (!personFind) return ('PERSON_NOT_FOUND');\n    const person = personFind[0];\n    if (!person._id || !person.fullname) return ('INVALID_PERSON');\n    const personData = {\n        _id: person._id,\n        description: person.description,\n        fullname: person.fullname,\n        picture: person.picture ? await fileToBase64(person.picture) : null\n    };\n    const simonData = await simonAPI.findAsync({ personId: personId });\n    const doubleData = await doubleAPI.findAsync({ personId: personId });\n    const quiz = await quizAPI.findAsync({ personId: personId });\n    const quizData = quiz ? await formatQuiz(quiz) : []; // converting files into base64 here\n\n    const dictaphone = await dictaphoneAPI.findAsync({ personId: personId });\n    const dictaphoneData = dictaphone ? await formatLog(dictaphone) : []; // converting files into base64 here\n\n    const result = JSON.stringify({\n        _id: personData._id,\n        description: personData.description,\n        fullname: personData.fullname,\n        picture: personData.picture,\n        activities: {\n            quiz: quizData,\n            double: doubleData,\n            simon: simonData,\n            dictaphone: dictaphoneData\n        }\n    });\n    const uri = await writeDataFile(personData.fullname, key ? dilacrypt.encrypt(result, key) : result);\n    return (uri);\n};","import React, { useEffect, useState } from 'react';\nimport {\n    ActivityIndicator,\n    ScrollView\n} from 'react-native';\n\nimport { Text, Button } from 'react-native-elements';\n\nimport { lang as HomeLang } from '../../language/home';\nimport * as FileSystem from 'expo-file-system';\nimport * as dataImport from '../../utils/share'\n\nimport styles from './styles';\n\nexport default function ImportData(props) {\n    const [step, setStep] = useState(1);\n    const [error, setError] = useState();\n    \n    useEffect( async () => {\n        try {\n\n            // Import and check file data\n            const content = await FileSystem.readAsStringAsync(props.importFile).catch(e => {\n                console.log(e);\n                throw HomeLang[props.lang].InvalidFile;\n            });\n            const parsed = parseJSON(content);\n            if (!parsed) throw HomeLang[props.lang].InvalidPersonFile;\n            if (typeof parsed !== 'object' || !parsed._id)\n                throw HomeLang[props.lang].InvalidPersonFile;\n\n            // Checking the personal infos\n            setStep(2);\n            if (dataImport.checkPersonInformations(parsed) === false)\n                throw HomeLang[props.lang].InvalidPersonFile;\n            if (dataImport.checkPersonInformationsLength(parsed) === false)\n                throw HomeLang[props.lang].IncorrectPersonFile;\n\n            // Checking if this userId is registered in the local db\n            setStep(3);\n            const found = await dataImport.checkPersonExists(parsed._id);\n            \n            // Checking activities length\n            setStep(4);\n            if (parsed.activities.length > 4) throw HomeLang[props.lang].InvalidActivitiesLength;\n\n            // Checking quiz format\n            setStep(5);\n            if (await dataImport.checkQuiz(parsed.activities.quiz, parsed._id) === false) throw HomeLang[props.lang].InvalidQuizData;\n\n            // Checking double format\n            setStep(6);\n            if (await dataImport.checkDouble(parsed.activities.double, parsed._id) === false) throw HomeLang[props.lang].InvalidDoubleData;\n\n            // Checking simon format\n            setStep(7);\n            if (await dataImport.checkSimon(parsed.activities.simon, parsed._id) === false) throw HomeLang[props.lang].InvalidSimonData;\n      \n            // Checking dictaphone format\n            setStep(8);\n            if (await dataImport.checkDictaphone(parsed.activities.dictaphone, parsed._id) === false) throw HomeLang[props.lang].InvalidLogData;\n\n            // <! -------- Creation process starts ---------- !>\n\n            // Person creation\n            setStep(9);\n            dataImport.importPerson(parsed, found.length > 0).catch( (err) => {\n                throw HomeLang[props.lang].CannotCreatePerson;\n            });\n\n            // Quiz creation\n            setStep(10);\n            dataImport.importQuiz(parsed.activities.quiz).catch(err => {\n                throw HomeLang[props.lang].InvalidQuizData;\n            });\n\n            // Double creation\n            setStep(11);\n            dataImport.importDouble(parsed.activities.double).catch(err => {\n                throw HomeLang[props.lang].InvalidDoubleData;\n            });\n\n            // Simon creation\n            setStep(12);\n            dataImport.importSimon(parsed.activities.simon).catch(err => {\n                throw HomeLang[props.lang].InvalidSimonData;\n            });\n\n            // Journal log creation\n            setStep(13);\n            dataImport.importLog(parsed.activities.dictaphone, parsed._id).catch(err => {\n                throw HomeLang[props.lang].InvalidLogData;\n            });\n\n            // SUCCESS !!\n            setStep(14);\n\n            await FileSystem.deleteAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidPersonFile;\n            });\n\n\n        } catch (e) {\n            setError(e);\n            return false;\n            // props.setImportFile(null);\n        }\n    }, [])\n\n    const parseJSON = (inputString) => {\n        if (inputString) {\n          try {\n            return JSON.parse(inputString);\n          } catch (e) {\n            return false;\n          }\n        }\n    };\n\n    const stepStyle = (idx) => {\n        let clr = idx === step ? 'white' : '#89ff91';\n        if (error && idx === step) clr = 'red';\n        if (step === 14) clr = '#89ff91';\n        return {\n            color: clr,\n            fontStyle: idx === step || error ? 'italic' : 'normal',\n            marginBottom: idx === 13 ? 30 : 0,\n            display: step >= idx ? 'flex' : 'none',\n            alignContent: 'center',\n            textAlign: 'center',\n            fontSize: idx === step ? 14 : 9\n        }\n    } \n\n    const printActivity = (idx) => {\n        if (idx === step && !error && step !== 14)\n            return <ActivityIndicator color={'white'} size={'small'} />\n        return <></>\n    };\n\n    return (\n        <ScrollView style={styles.menu}>\n            { [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14].map( (e, i) => {\n                return <Text key={i} style={ stepStyle(e) }> { HomeLang[props.lang]['Step' + e] } { printActivity(e) }</Text>\n            }) }\n            { error ? <Text style={styles.ErrorMessage}>{ error }</Text> :  <></> }\n            <Button disabled={!error && step < 14} containerStyle={{marginTop: 150, borderRadius: 15}} title={HomeLang[props.lang].GoBack} onPress={() => props.setImportFile(null)}/>\n        </ScrollView>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Image\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\n\nimport { useLocation } from 'react-router-native';\n\nimport AlzheimApp from '../../assets/img/alzheimapp_logo.png';\nimport Menu from './Menu'\nimport ImportData from './ImportData';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [importFile, setImportFile] = useState();\n    const [ambiant, setAmbiant] = useState();\n    Audio.setIsEnabledAsync(true);\n\n    useEffect( async () => {\n        if (ambiant) return;\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by MCOCHET - check his soundcloud here: https://soundcloud.com/mcochet\n            require('../../assets/sound/ambiant.mp3'),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n    }, []);\n\n    const state = useLocation()?.state;\n\n    const username = props.username || state?.username;\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Image source={AlzheimApp} style={styles.logo} resizeMode={'cover'} />\n            </View>\n            { importFile ?\n                <ImportData lang={props.lang} importFile={importFile} setImportFile={setImportFile} /> :\n                <Menu lang={props.lang} username={username} setLang={props.setLang} setImportFile={setImportFile} ambiant={ambiant} />\n            }\n        </View>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} setLang={props.setLang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} setLang={props.setLang} />;\n    }\n    return <Home lang={props.lang} username={props.username} setLang={props.setLang} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: 'white' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        Home: 'Accueil',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n        QuizScore: \"Score des quiz\",\n        SimonScore: \"Score du Simon\",\n        DoubleScore: \"Score du jeu des pairs\",\n        NoScore: \"Aucun score enregistré pour cette activité...\",\n        Success: 'réussite',\n        Global: \"Vue d'ensemble\",\n        BestScoreByDay: 'Meilleur score du jour',\n        ExportedProfile: 'Profil exporté',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        Home: 'Home',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n        QuizScore: \"Quiz Score\",\n        SimonScore: \"Simon Score\",\n        DoubleScore: \"Double Memory Score\",\n        NoScore: \"No score registered for this activity...\",\n        Success: 'success',\n        Global: \"Global view\",\n        BestScoreByDay: 'Best score by day',\n        ExportedProfile: 'Profile exported',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: wp('80%'),\n        height: hp('7%'),\n        justifyContent: 'flex-start',\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleReturn: {\n        width: wp('80%'),\n        height: hp('7%'),\n        justifyContent: 'flex-start',\n    },\n    buttonStyleDelete: {\n        width: wp('80%'),\n        height: hp('7%'),\n        justifyContent: 'flex-start',\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: wp('80%'),\n        height: hp('7%'),\n        justifyContent: 'flex-start',\n    },\n    buttonStyleDebug: {\n        width: wp('80%'),\n        height: hp('7%'),\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\n\nimport { ScrollView, Alert, View, KeyboardAvoidingView, ActivityIndicator } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/selection/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\nimport { exportPerson } from '../../../utils/share';\nimport * as Sharing from 'expo-sharing';\n\nimport * as FileSystem from 'expo-file-system';\n\nimport styles from './styles';\nimport Form from '../../../components/selection/PersonCreation/Form';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n    const [load, setLoad] = useState(false);\n    const [id, setId] = useState(0);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        Person.getById(props.personId).then((result) => {\n            props.setPerson(result[0])\n        });\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n\n        id: id,\n        setId: setId\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/selection', {\n                state: { username: props.username, lang: props.lang }\n            });\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.fullname),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: wp('6%'),\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: wp('15%'), marginLeft: wp('5%') }}\n                        buttonStyle={styles.buttonStyle}\n                        titleStyle={{fontSize: wp('4%')}}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: load ? '' : 'share-alt',\n                            type: 'font-awesome',\n                            size: wp('6%'),\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: wp('15%'), marginLeft: wp('5%') }}\n                        buttonStyle={styles.buttonStyle}\n                        titleStyle={{fontSize: wp('4%')}}\n                        containerStyle={styles.containerStyle}\n                        title={load ? <ActivityIndicator color={'white'} size={'small'} /> : ActivitiesLang[props.lang]?.ShareProfile}\n                        onPress={async () => {\n                            setLoad(true);\n                            Sharing.isAvailableAsync().then(async isAvailable => {\n                                if (!isAvailable) {\n                                    alert('Sharing is not available');\n                                    return;\n                                }\n                                console.log('[~] Pressing export button');\n                                console.log('[+] Exporting person...');\n                                const uri = await exportPerson(props.personId, null);\n                                console.log('[+] Exported person! uri is: ' + uri);\n                                Sharing.shareAsync(uri).then( async (e) => {\n                                    await FileSystem.deleteAsync(uri);\n                                }).catch(err => {\n                                    console.log(err);\n                                });\n                                setLoad(false);\n                            });\n                        }}\n                        disabled={load}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: wp('6%'),\n                            color: 'white',\n                        }}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: wp('15%'), marginLeft: wp('5%') }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        titleStyle={{fontSize: wp('4%')}}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: wp('6%'),\n                            color: 'white',\n                        }}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: wp('18%'), marginLeft: wp('5%') }}\n                        buttonStyle={styles.buttonStyleBack}\n                        titleStyle={{fontSize: wp('4%')}}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/selection', {\n                                state: { username: props.username, lang: props.lang }\n                            });\n                        }}\n                    />\n                </ScrollView>\n            ) : (\n                <KeyboardAvoidingView behavior='height' style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: wp('6%'),\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: wp('23%'), marginLeft: wp('5%') }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        titleStyle={{fontSize: wp('4%')}}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => { \n                            setFullname(props.person.fullname);\n                            setUriPreview(props.person.picture);\n                            setImage('');\n                            setDescription(props.person.description);\n                            setEdit(false);\n                            setSuccess(false);\n                        }}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </KeyboardAvoidingView>\n            )}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync().then( () => {\n                console.log('[+] Permission granted!');\n            })\n            .catch(e => {\n                console.error(e);\n            });            \n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const goBack = async () => {\n        if (recording) await recording?.stopAndUnloadAsync();\n        stopPlayingSounds();\n        props.setPage(0);\n    }\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            if (el) el?.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                    <Button\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'caret-back-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        buttonStyle={styles.recordButton}\n                        title={{}}\n                        titleStyle={styles.titleButton}\n                        onPress={() => goBack()}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <View style={styles.actionButtonsView}>\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n                <Button\n                    containerStyle={styles.actionButtons}\n                    icon={{\n                        name: 'caret-back-outline',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={{}}\n                    titleStyle={styles.titleButton}\n                    onPress={() => goBack()}\n                />\n                </View>\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n\n\n\n\n        // Help section\n        Head: \"Le Simon, comment ça\\nmarche ?\",\n        RulesHead: \"Les règles\",\n        TriesHead: \"Les essais\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu Simon est un {0} de forme circulaire comportant quatre gros boutons de couleurs différentes: rouge, vert, jaune et bleu.\\n\\nLe jeu {1} une des quatres couleurs et {2} toujours associé à cette couleur. Le joueur doit alors {3}.\\n\\nLe jeu {4}, puis {5} une nouvelle couleur. Le jour doit reproduire cette nouvelle séquence. Chaque fois que le joueur reproduit correctement la séquence, le jeu ajoute une nouvelle couleur.`,\n                boldText: ['jeu de mémoire', 'éclaire', 'produit un son', \"appuyer sur la touche de la couleur qui vient de s'allumer\", 'répète la même couleur et le même son', 'ajoute'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois que vous ratez une séquence, vous {0}. Au cours d'une partie, vous avez le droit à seulement {1}.\\n\\nUne fois les quatre erreurs faites, ou alors lorsque vous {2}, votre score est compatibilisé en fonction du nombre de touches dans la séquence actuelle.\\n\\nChaque jour, {3}.`,\n                boldText: ['perdez un essai', 'quatre erreurs', 'abandonnez la partie en cours', 'votre score journalier est remit à zéro'],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n\n\n\n\n        // Help section\n        Head: `The Simon, how does it works?`,\n        RulesHead: \"The rules\",\n        TriesHead: \"The tries\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The Simon is a circular shaped {0} with four different colored buttons: red, green, yellow and blue.\\n\\nThe game {1} one of the four colors and {2} always associated to this color. The player shall {3}.\\n\\nThe game {4}, then {5} another color. The player will have to reproduces this sequence. Each time the player successfully reproduces the sequence, the game adds another color in this sequence.`,\n                boldText: ['memory game', 'lighten', 'produces a sound', \"press the colored button which has just turned on\", 'repeat the same color with the same sound', 'add'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `Each time you fail a sequence, you {0}. In a game, you are allowed up to {1}.\\n\\nOnce the four fails made, or when you {2}, you will have the number of elements in the current sequence saved as your score.\\n\\nEach day, {3}.`,\n                boldText: ['lose a try', 'four maximum fails', 'give up the current game', 'your daily score is reset to zero'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        paddingTop: 20,\n        flex: 1,\n        alignItems: 'center'\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        // flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        //flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    // Help section\n    viewHelpPage: {\n        marginTop: -20,\n        backgroundColor: 'white',\n        width: 100 + '%',\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .4,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate, dailyScore < order.length - 1, bestScore < order.length - 1);\n        setCanPlay(false);\n        setSuccess(true);\n        const path = dailyScore < order.length - 1 ? require(`../../../assets/sound/global/applause.mp3`) : require(`../../../assets/sound/global/you_lose.mp3`);\n        const { sound } = await Audio.Sound.createAsync(path);\n        props.setSound(sound);\n        sound.playAsync();\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            <Overlay\n                visible={success}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => setSuccess(false)}\n                ModalComponent={Modal}\n            >\n                {scoreBeaten ? successOverlay() : failOverlay()}\n                <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            retryGame();\n                        }}\n                        title={SimonLang[props.lang].Retry}\n                        containerStyle={{\n                            borderRadius: 13,\n                            marginRight: 10,\n                        }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setTab(0);\n                        }}\n                        title={SimonLang[props.lang].Exit}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React from 'react';\nimport { View, ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView>\n                <Button\n                    title={SimonLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{SimonLang[props.lang].Head}</Text>\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].Rules()}</Text>\n\n                \n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].TriesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].TriesExplain()}</Text>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\nimport Help from './Help';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr, pos) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: i == pos ? color : '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        Cancel: 'Annuler',\n        GoBack: \"Oui, j'annule l'édition du quiz\",\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Abandonner le quiz\",\n        GiveUpQuiz: \"Êtes-vous sûr de vouloir abandonner ce quiz? Le score restera enregistré.\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        EditedQuiz: \"Quiz modifié avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Bien joué !! 😄\",\n        Success: \"Bien joué ! C'est la bonne réponse !! Vous pouvez maintenant passer à la suite !\",\n        FailedTitle: \"Dommage... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Dommage, mais ce n'était pas la bonne réponse ! Les réponses possibles étaient: ${answersText}.`\n        },\n        SuccessQuizTitle: \"Haut la main !\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Fantastique !! Vous avez réussi ce quiz ! Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Dommage... Vous avez raté ce quiz ! ... Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Sauvegarder le quiz',\n        SaveContent: \"Sauvegarder la question\",\n        AddContent: \"Ajouter la question\",\n        SureCancelEdition: \"Êtes-vous sûr de bien vouloir abandonner l'édition de ce quiz? Vous ne pourrez pas récupérer vos modifications.\",\n        ImportImage: \"Importer une image\",\n        ImportSound: \"Importer un son\",\n\n        // Help page related\n        Head: 'Le quiz, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        CustomHead: \"Personnalisation\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Les règles du quiz sont basiques: il y a des questions {0}, et le joueur doit y répondre. Il peut y avoir {1} réponses possibles, une bonne réponse et c'est un point ajouté au score.\\n\\nIl n'y a pas de perte de points suite à une mauvaise réponse.`,\n                boldText: [\"facultativement accompagnées d'une image ou d'un son\", \"plusieurs\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `Il n'y a pas de quiz par défaut. C'est à vous d'en {0} et de les {1} à votre guise !\\nPour cela, vous devez vous rendre dans la partie \"{2}\".\\n\\nVous aurez là la liste des quiz que vous avez préalablement crée. Si vous n'en avez encore créé aucun, façonnez votre premier quiz avec le bouton \"{3}\".\\n\\nIci vous pourrez ajouter des question avec le bouton \"{4}\". Il vous est demandé {5} (facultatif), qui correspond à un son ou une image pour illustrer votre question.\\n\\nEnsuite, vous devez {6}. Ce sera cette question qui sera ensuite demandée au joueur.\\n\\nEt enfin, {7}. Une fois une réponse valide renseignée, cliquez sur le symbole {8} à côté, et votre réponse est ajoutée à la liste des réponses valides à la question. Vous pouvez en avoir 10 maximum.\\n\\nSi vous avez fait une erreur sur une des réponses, {9} pour la retirer de la liste.\\n\\nUne fois tous les éléments de la question renseignées, cliquez sur \"{10}\" au dessus pour enregistrer la question et retourner à la liste des questions précédemment crées. Ajoutez-en autant que vous voulez pour un quiz.\\n\\nVous pouvez également {11}.\\n\\nUne fois le quiz complet, cliquez sur \"{12}\", et voilà ! Renseignez le nom de ce quiz et c'est terminé, le quiz est désormais jouable !`,\n                boldText: [\"créer\",\n                    \"personnaliser\",\n                    \"Voir les quiz\",\n                    \"Créer un quiz\",\n                    \"Ajouter une question\",\n                    \"d'importer un fichier de référence\",\n                    \"renseigner la question\",\n                    \"ajouter les réponses éventuelles\",\n                    \"( + )\",\n                    \"cliquez simplement dessus\",\n                    \"Valider\",\n                    \"cliquer sur une question pour la modifier\",\n                    \"Terminer la création\"\n                ],\n            });\n        }\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizzes',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        Cancel: 'Cancel',\n        GoBack: 'Yes, I want to go back',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'of success',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Submit\",\n        GiveUpQuizTitle: \"Give up\",\n        GiveUpQuiz: \"Are you sure to give up this quiz? The score will be saved.\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        EditedQuiz: \"Quiz successfuly edited!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Well played!! 😄\",\n        Success: \"Well played! That's the good answer!! You can now go to the next question!\",\n        FailedTitle: \"Oops... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Oops, that's not a valid answer... the valid answer${answers.length > 0 ? 's were' : ' was'} : ${answersText}.`\n        },\n        SuccessQuizTitle: \"Easy peasy!\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Congratulations!! You won this quiz! Your score is for {0} good answer(s) for {1} mistake!',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Better next time! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: \"It's alright... You failed this quiz!... Your score is for {0} good answer(s) for {1} mistake!\",\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Save the quiz',\n        SaveContent: \"Save the question\",\n        AddContent: \"Add the question\",\n        SureCancelEdition: \"Are you sure to cancel this quiz edition? Your modification would not be saved\",\n        ImportImage: \"Import a picture\",\n        ImportSound: \"Import a sound\",\n        \n        // Help page related\n        Head: 'The quiz, how does it works?',\n        RulesHead: \"The rules\",\n        CustomHead: \"Customization\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `This is a basic quiz game: there are questions {1}, and the player must answer them. There can be {1} answers, one correct answer and it's a point added to the score.\\n\\nThere is no loss of points for a wrong answer.`,\n                boldText: [\"optionally accompanied by an image or a sound\", \"several possible\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `There are no default quizzes. It is up to you to {0} and {1} them as you wish!\\nTo do this, you must go to the \"{2}\" section.\\nThere you will see the list of quizzes that you have already created. If you haven't created any yet, create your first quiz with the \"{3}\" button.\\n\\nHere you can add questions with the \"{4}\" button. You are asked to {5} (optional), which is a sound or image file to illustrate your question.\\n\\nThen you have to {6}. This question will be asked to the player.\\n\\nAnd finally, {7}. Once you have entered a valid answer, click on the {8} symbol next to it, and your answer would be added to the list of the valid answers to the question. You can have a maximum of 10 possible answers.\\n\\nIf you made a mistake on one of the answers, {9} to remove it from the list.\\n\\nOnce you have filled in all the elements of the question, click \"{10}\" above to save the question and return to the list of questions. Add as many as you want to this quiz.\\n\\nYou can also {11}.\\n\\nOnce the quiz is completed, click \"{12}\" and that's it! Fill in the name of this quiz and it's done, the quiz is now playable!`,\n                boldText: [\"create\",\n                    \"customize\",\n                    \"View quizzes\",\n                    \"Create a quiz\",\n                    \"Add a question\",\n                    \"import a reference file\",\n                    \"fill in the question\",\n                    \"add the possible answers\",\n                    \"( + )\",\n                    \"simply click on it\",\n                    \"Submit\",\n                    \"click on a question to edit it\",\n                    \"Complete the quiz creation\"\n                ],\n            });\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginTop: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: 235,\n        marginTop: 20,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: 235,\n        marginTop: 10,\n        backgroundColor: 'blue',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    overlayDescriptionAnswers: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15,\n        marginBottom: 150\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: 30,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    modalDescription: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: 290,\n        marginTop: 10\n    },\n    quizTitleInput: {\n        fontSize: 15\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 10\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        width: 250\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: 250,\n        height: 250\n    },\n    gameQuestion: {\n        fontSize: 25,\n        marginTop: 10,\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey'\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15\n    },\n\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n        textAlign: 'center'\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image, ActivityIndicator } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            <Button\n                title={props.isLoading ? <ActivityIndicator color={'blue'} size={'small'} /> : QuizLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n                disabled={props.quiz.length === 0}\n            />\n\n            <Button\n                title={QuizLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import {\n    View,\n    Image\n} from 'react-native';\nimport { Icon, FAB, Avatar } from 'react-native-elements';\nimport { Audio } from 'expo-av';\n\nexport const printFile = (fileType, uri, clearFile, isPlaying, pauseSound, setIsPlaying, sound, setSound) => {\n    if (fileType === 'image') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Image source={{uri: uri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n            </View>\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 100, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Icon onPress={() => isPlaying ? pauseSound() : playSound(setIsPlaying, sound, setSound, uri) } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30, zIndex: 2}} />\n            </View>\n        );\n    }\n};\n\nexport const playSound = async (setIsPlaying, sound, setSound, uri) => {\n    setIsPlaying(true);\n    await Audio.setAudioModeAsync({\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n    });\n    const getSoundStatus = await sound?.getStatusAsync();\n    if (getSoundStatus?.isLoaded === false) {\n        await sound.loadAsync({ uri: uri });\n        setSound(sound);\n    }\n    await sound.playAsync();\n    sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n        if (playbackStatus.didJustFinish) {\n            await sound.unloadAsync();\n            setIsPlaying(false);\n        }\n    });\n};\n\nexport const pickCorrectIcon = (fileType, uri) => {\n    if (fileType === 'image') {\n        return (\n            <Avatar\n                source={{ uri: uri }}\n                rounded\n                size={'medium'}\n                containerStyle={{marginHorizontal: 8}}\n            />\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <Icon\n                raised\n                name={'musical-notes-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    } else {\n        return (\n            <Icon\n                raised\n                name={'text-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    }\n};","import React, { useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nimport { pickCorrectIcon } from '../utils/quizFunc';\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n\n    const length = props.quizEdit?.content?.length + props.newContent?.length;\n\n    const pickOutQuestion = () => {\n        if (length <= 2 && props.quizEdition) return;\n        if (props.quizEdition === true) {\n            if (Number.isInteger(props.questionId)) {\n                // if the questionId is an integer, it means it has not\n                // been added to the api yet, so it's an index of the\n                // newContent array passed in the props from the ViewQuiz Component\n\n                const index = props.questionId - props.quizEdit?.content?.length;\n                const tmp = props.newContent;\n                tmp.splice(index, 1);\n                // take out the new content from the newContent state in the\n                // parent component\n                props.setNewContent([...tmp]);\n            } else {\n                // todo not get by api but update quizedit state\n                // update api only when saving quiz\n                const index = props.quizEdit.content.findIndex(el => el.id == props.questionId );\n                const tmp = props.quizEdit;\n                tmp.content.splice(index, 1);\n                props.setQuizEdit(tmp);\n                props.setReload(!props.reload)\n                props.setEditedQuiz(true);\n            }\n        } else {\n            const tmp = props.quizEdition ? props.content : props.contentList;\n            tmp.splice(props.index, 1)\n            props.setContent([...tmp]);\n        }\n        setModal(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{ marginRight: 10 }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={{ fontWeight: 'bold' }}\n                    onPress={() => pickOutQuestion() }\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { props.setEditContent(props.questionId) }} >\n                { pickCorrectIcon(props.content.fileType, props.content.uri) }\n                <ListItem.Content>\n                    <ListItem.Title>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon disabled={props.quizEdition == true && length <= 2} reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","export function ScoreRatio (content, personId) {\n    var success = 0;\n    var fail = 0;\n    content.map( (el, i) => {\n        const score = el.score.filter( (el) => el.personId == personId );\n        score.map( (el, i) => {\n            success += parseInt(el.success);\n            fail += parseInt(el.failed);\n        });\n    });\n    const total = success + fail;\n    if (total == 0)\n        return 0;\n    const score = ((success / total) * 100).toFixed(2);\n    return score;\n};","import React from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport { ScoreRatio } from './utils/scoreFunc';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n\n    return (\n        <ListItem {...componentProps} onPress={() => {\n                props.setEdit(true);\n                props.setQuizEdit(props.quiz);\n            }}>\n            <ListItem.Content>\n                <ListItem.Title>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    { ScoreRatio(props.quiz.content, props.personId) }{'% '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Text,\n    ScrollView,\n} from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport QuizList from './QuizList';\nimport styles from './styles';\n\nimport * as API from '../../../data/quizApi';\n\nexport default function ViewQuizList(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <ScrollView>\n            {props.loading ? (\n                <ActivityIndicator\n                    color={'blue'}\n                    size={'small'}\n                    style={styles.loading}\n                />\n            ) : props.quiz?.length > 0 ? (\n                props.quiz?.map((el, i) => {\n                    return (\n                        <QuizList\n                            index={i}\n                            key={el._id}\n                            quiz={el}\n                            lang={props.lang}\n                            deleteId={deleteId}\n                            personId={props.personId}\n                            setEdit={props.setEdit}\n                            setQuizEdit={props.setQuizEdit}\n                        />\n                    );\n                })\n            ) : (\n                <Text style={styles.nothingYet}>\n                    {QuizLang[props.lang].NothingYet}\n                </Text>\n            )}\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/activities/quiz/success.gif';\n\nimport styles from './styles';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    KeyboardAvoidingView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContentAndroid(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <KeyboardAvoidingView behavior='padding' style={{flex:1}}>\n                <ScrollView contentContainerStyle={styles.ScrollView}>\n                    { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                    <Button\n                        title={QuizLang[props.lang].ImportFile}\n                        buttonStyle={{ borderRadius: 15 }}\n                        onPress={pickFile}\n                    />\n                    <Text style={styles.overlayDescriptionReference}>\n                        {QuizLang[props.lang].ReferenceFile}\n                    </Text>\n                    <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                        <Input\n                            value={props.question}\n                            inputStyle={{fontSize: 14}}\n                            containerStyle={{marginBottom: 50}}\n                            placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                            onChangeText={(e) => props.setQuestion(e)}\n                        />\n                        <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                        <Input\n                            placeholder={QuizLang[props.lang].AddAnswer}\n                            inputStyle={{fontSize: 14}}\n                            value={answer}\n                            onChangeText={(e) => setAnswer(e)}\n                        />\n                        <Button\n                            icon={\n                                <Icon\n                                    name={'add-circle'}\n                                    type={'ionicon'}\n                                    color={'white'}\n                                    size={18}\n                                    style={{ marginHorizontal: 5 }}\n                                />\n                            }\n                            onPress={() => addAnswer()}\n                            disabled={props.answers.length >= 10}\n                        />\n                        </View>\n                    </View>\n                    <View style={styles.badgesView}>\n                        {props.answers.map( (el, i) => {\n                            return(\n                                <Badge\n                                    key={i}\n                                    value={el}\n                                    badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                    onPress={() => pickOutAnswer(i)}\n                                />\n                            )\n                        })}\n                    </View>\n                    <Text style={styles.overlayDescriptionAnswers}>\n                        {QuizLang[props.lang].WhatIsAnswer}\n                    </Text>\n                </ScrollView>\n            </KeyboardAvoidingView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    KeyboardAvoidingView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge } from 'react-native-elements';\n\nimport * as DocumentPicker from 'expo-document-picker';\nimport * as ImagePicker from 'expo-image-picker';\n\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContentIOS(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickAudioFile = async () => {\n        let result = await DocumentPicker.getDocumentAsync({type: 'audio/*', copyToCacheDirectory: true, multiple:false});\n        if (result.type === 'cancel') {\n            return;\n        }\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const pickImageFile = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n        if (result.type === 'cancel') {\n            return;\n        }\n        props.setUri(result.uri);\n        props.setFileType(result.type);\n        props.setFilename(result.name);\n    }\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <KeyboardAvoidingView behavior='padding' style={{flex:1}}>\n                <ScrollView contentContainerStyle={styles.ScrollView}>\n                    { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                    <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'wrap'}}>\n                        <Button\n                            title={QuizLang[props.lang].ImportImage}\n                            buttonStyle={{ borderRadius: 15, marginRight: 15 }}\n                            onPress={pickImageFile}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].ImportSound}\n                            buttonStyle={{ borderRadius: 15 }}\n                            onPress={pickAudioFile}\n                        />\n                    </View>\n                    <Text style={styles.overlayDescriptionReference}>\n                        {QuizLang[props.lang].ReferenceFile}\n                    </Text>\n                    <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                        <Input\n                            value={props.question}\n                            inputStyle={{fontSize: 14}}\n                            containerStyle={{marginBottom: 50}}\n                            placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                            onChangeText={(e) => props.setQuestion(e)}\n                        />\n                        <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                        <Input\n                            placeholder={QuizLang[props.lang].AddAnswer}\n                            inputStyle={{fontSize: 14}}\n                            value={answer}\n                            onChangeText={(e) => setAnswer(e)}\n                        />\n                        <Button\n                            icon={\n                                <Icon\n                                    name={'add-circle'}\n                                    type={'ionicon'}\n                                    color={'white'}\n                                    size={18}\n                                    style={{ marginHorizontal: 5 }}\n                                />\n                            }\n                            onPress={() => addAnswer()}\n                            disabled={props.answers.length >= 10}\n                        />\n                        </View>\n                    </View>\n                    <View style={styles.badgesView}>\n                        {props.answers.map( (el, i) => {\n                            return(\n                                <Badge\n                                    key={i}\n                                    value={el}\n                                    badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                    onPress={() => pickOutAnswer(i)}\n                                />\n                            )\n                        })}\n                    </View>\n                    <Text style={styles.overlayDescriptionAnswers}>\n                        {QuizLang[props.lang].WhatIsAnswer}\n                    </Text>\n                </ScrollView>\n            </KeyboardAvoidingView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    SafeAreaView,\n    ScrollView,\n    Alert,\n    Modal,\n    Text,\n    Platform\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay } from 'react-native-elements';\n\nimport QuestionList from './Creation/QuestionList';\nimport ViewQuizList from './ViewQuizList';\n\nimport * as API from '../../../data/quizApi';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport FormQuizContentAndroid from './Creation/FormQuizContentAndroid';\nimport FormQuizContentIOS from './Creation/FormQuizContentIOS';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n    // if the user is editing or not an existing quiz\n    const [edit, setEdit] = useState(false);\n\n    // if the user want to add a question to an existing quiz\n    const [newQuestion, setNewQuestion] = useState(false);\n\n    // if the user want to edit an existing question to an existing quiz\n    const [editContent, setEditContent] = useState();\n\n    // the existing quiz to edit\n    const [quizEdit, setQuizEdit] = useState();\n\n    // the new content to add in an existing quiz\n    const [newContent, setNewContent] = useState([]);\n\n    // check if something has been edited\n    const [editedQuiz, setEditedQuiz] = useState(false);\n\n    // open the modal of going back without saving confirmation\n    const [modal, setModal] = useState(false);\n\n    // the states for the quiz edition (add / edit question)\n    const [question, setQuestion] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const push = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setNewContent([...newContent, push]);\n        setEditedQuiz(true);\n        setSuccess(true);\n    };\n\n    const saveContent = () => {\n        let content;\n        let index;\n        if (Number.isInteger(editContent)) {\n            // edit newContent array\n            content = newContent[editContent - quizEdit?.content?.length];\n        } else {\n            // edit quizEdit array\n\n            // for already in api content -- think of reuploading the file\n            // if there's a new one, or to delete it\n            index = quizEdit.content.findIndex(el => el.id == editContent);\n            content = quizEdit.content[index];\n            if (fileType != content.fileType || uri != content.uri)\n                content.editedFile = true;\n        }\n        content.filename= filename;\n        content.fileType = fileType;\n        content.uri = uri;\n        content.answers = answers;\n        content.question = question;\n        setEditedQuiz(true);\n        setSuccess(true);\n        if (Number.isInteger(editContent)) {\n            if (newContent.length == 1)\n                setNewContent([content]);\n            else\n                setNewContent([...content]);\n        } else {\n            quizEdit.content[index] = content;\n            setQuizEdit(quizEdit);\n        }\n    };\n\n    // clear the states before edition or creation of a content\n    const clearState = () => {\n        setAnswers([]);\n        setQuestion();\n        setFileType();\n        setFilename();\n        setUri();\n        setSound(new Audio.Sound());\n    };\n\n    // Save the edited quiz\n    const saveQuiz = () => {\n        if (!editedQuiz) return;\n        const content = quizEdit.content.concat(newContent);\n        API.saveQuiz(props.personId, quizEdit._id, content).then((data) => {\n            return Alert.alert(\n                QuizLang[props.lang].EditedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            props.setReload(!props.reload);\n                            setNewContent([]);\n                            goBack();\n                        },\n                    }\n                ]\n            );\n        });\n    }\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const viewPage = () => {\n        if (editContent && !newQuestion) {\n            if (success) setSuccess(false);\n            let content;\n            if (Number.isInteger(editContent)) {\n                content = newContent[editContent - quizEdit?.content?.length];\n            } else {\n                const index = quizEdit.content.findIndex(el => el.id == editContent);\n                content = quizEdit.content[index];\n            }\n            if (!content) return;\n            setFilename(content.filename);\n            setFileType(content.fileType);\n            setUri(content.uri);\n            setQuestion(content.question);\n            setAnswers([...content.answers]);\n            setNewQuestion(true);\n        } else if (newQuestion) {\n            // if the user wants to set a new question for quiz edition\n            const propsFormQuizContent = {\n                lang: props.lang,\n                uri: uri,\n                filename: filename,\n                answers: answers,\n                fileType: fileType,\n                question: question,\n                success: success,\n                sound: sound,\n                isPlaying: isPlaying,\n\n                setAnswers: setAnswers,\n                setFileType: setFileType,\n                setQuestion: setQuestion,\n                setUri: setUri,\n                setFilename: setFilename,\n                setSuccess: setSuccess,\n                setSound: setSound,\n                setIsPlaying: setIsPlaying,\n                pauseSound: pauseSound\n            };\n            if (Platform.OS === 'ios') {\n                return <FormQuizContentIOS {...propsFormQuizContent} />\n            } else {\n                return <FormQuizContentAndroid {...propsFormQuizContent} />\n            }\n        } else if (edit && !newQuestion) {\n             // if the user want to see all the question for the quiz edition\n            return (quizEdit.content)?.concat(newContent)?.map((el, i) => {\n                return (<QuestionList\n                    index={i}\n                    key={i}\n                    id={quizEdit._id || 0}\n                    quizEdit={quizEdit}\n                    newContent={newContent}\n                    content={el}\n                    lang={props.lang}\n                    questionId={el.id || i}\n                    quizEdition={true}\n                    reload={props.reload}\n                    setReload={props.setReload}\n                    setEditedQuiz={setEditedQuiz}\n                    setEditContent={setEditContent}\n                    setQuizEdit={setQuizEdit}\n                    setNewContent={setNewContent}\n                />);\n            })\n        } else {\n             // if the user want to see all the existing quiz for the quiz edition\n            return (<ViewQuizList\n                quiz={props.quiz}\n                loading={props.loading}\n                lang={props.lang}\n                personId={props.personId}\n                setEdit={setEdit}\n                setQuizEdit={setQuizEdit}\n                setReload={props.setReload}\n            />);\n        }\n    };\n\n    const goBack = () => {\n\n        if (!success) setSuccess(false);\n\n        if ( (editedQuiz && !newQuestion) || newContent.length > 0) {\n            setModal(true);\n            return;\n        }\n\n        if (editContent) {\n            clearState();\n            setEditContent();\n            setNewQuestion(false);\n        } else if (newQuestion)\n            setNewQuestion(false);\n        else if (edit) {\n            setEditedQuiz(false);\n            setEdit(false);\n        } else\n            props.setTab(0);\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return saveContent();\n        } else if (newQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].AddContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return pushContent();\n        } else if (edit) {\n            // save the quiz button\n            if (mode == 'title') return QuizLang[props.lang].Save;\n            else if (mode == 'disabled') return !(editedQuiz);\n            else if (mode == 'onpress') return saveQuiz();\n        } else {\n            // create a quiz button\n            if (mode == 'title') return QuizLang[props.lang].Create;\n            else if (mode == 'disabled') false;\n            else if (mode == 'onpress') return props.setTab(4);\n        }\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => setModal(false)}\n                    ModalComponent={Modal}\n                >\n                    <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                    <View style={{ flexDirection: 'row' }}>\n                        <Button\n                            title={QuizLang[props.lang].Cancel}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{ marginRight: 10 }}\n                            onPress={() => setModal(false)}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].GoBack}\n                            buttonStyle={{ fontWeight: 'bold' }}\n                            onPress={() => {\n                                setEditedQuiz(false);\n                                setEditContent();\n                                setEdit(false);\n                                setNewContent([]);\n                                setModal(false);\n                            } }\n                        />\n                    </View>\n                </Overlay>\n\n\n                <Button\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={edit ? 'save-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        buttonTop('onpress')\n                    }}\n                    disabled={ buttonTop('disabled') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => goBack() }\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                {\n                    edit && !newQuestion && !editContent ?\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setNewQuestion(true) }\n                    /> : <></>\n                }\n                <ScrollView style={{marginBottom: 40}}>\n                { viewPage() }\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert,\n    Platform\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContentAndroid from './FormQuizContentAndroid';\nimport FormQuizContentIOS from './FormQuizContentIOS';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\nimport { Audio } from 'expo-av';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n    const [modalConfirmation, setModalConfirmation] = useState(false);\n\n    const [editContent, setEditContent] = useState();\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name.substring(0, 23),\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    // Save an existing question\n    const saveContent = () => {\n        content[editContent].fileType = fileType;\n        content[editContent].filename = filename;\n        content[editContent].uri = uri;\n        content[editContent].question = question;\n        content[editContent].answers = answers;\n        setContent([...content]);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        if (isPlaying) setIsPlaying(false);\n    };\n\n    const clearState = () => {\n        setAnswers([]);\n        setFileType();\n        setFilename();\n        setUri();\n        setQuestion();\n        setSuccess(false);\n    };\n\n    const printQuestionList = () => {\n        if (content.length === 0) {\n            return (<Text style={styles.nothingYet}>\n                {QuizLang[props.lang].NoQuestionYet}\n            </Text>);\n        } else {\n            return content?.map((el, i) => {\n                return (\n                    <QuestionList\n                        index={i}\n                        key={i}\n                        id={i}\n                        content={el}\n                        lang={props.lang}\n                        setContent={setContent}\n                        setEditContent={setEditContent}\n                        questionId={i}\n                        contentList={content}\n                    />\n                );\n            });\n        }\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent !== undefined) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); return saveContent(); }\n        } else if (createQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].OK;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); setModal(false); return pushContent(); }\n        } else {\n            if (mode == 'title') return QuizLang[props.lang].Complete;\n            else if (mode == 'disabled') return !(content.length > 0);\n            else if (mode == 'onpress') { return setModal(true);  }\n        }\n    };\n\n    const printPage = () => {\n        if (editContent !== undefined && !createQuestion) {\n            if (success) setSuccess(false);\n            setAnswers(content[editContent].answers);\n            setFileType(content[editContent].fileType);\n            setFilename(content[editContent].filename);\n            setUri(content[editContent].uri);\n            setQuestion(content[editContent].question);\n            setCreateQuestion(true);\n        }\n        if (createQuestion) { // if the user is creating a new question\n            const propsFormQuizContent = {\n                lang: props.lang,\n                uri: uri,\n                filename: filename,\n                answers: answers,\n                fileType: fileType,\n                question: question,\n                success: success,\n                sound: sound,\n                isPlaying: isPlaying,\n\n                setAnswers: setAnswers,\n                setFileType: setFileType,\n                setQuestion: setQuestion,\n                setUri: setUri,\n                setFilename: setFilename,\n                setSuccess: setSuccess,\n                setSound: setSound,\n                setIsPlaying: setIsPlaying,\n                pauseSound: pauseSound\n            };\n\n            /* Form to create a quiz */\n            if (Platform.OS === 'ios') {\n                return <FormQuizContentIOS {...propsFormQuizContent} />\n            } else\n                return <FormQuizContentAndroid {...propsFormQuizContent} />\n        } else {\n            return <SafeAreaView style={styles.safeArea}>\n                <Button\n                    title={QuizLang[props.lang].AddQuestion}\n                    icon={\n                        <Icon\n                            name={'add-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => setCreateQuestion(true)}\n                />\n                <ScrollView style={{marginBottom: 40}}>\n                    { props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : printQuestionList() }\n                </ScrollView>    \n            </SafeAreaView>\n        }\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button containerStyle={{ marginTop: 10, width: 40 }} title={{}} icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    } disabled={name?.length < 3 || name.length > 23 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            {/* Confirmation give up quiz creation */}\n            <Overlay\n                visible={modalConfirmation}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => setModalConfirmation(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={QuizLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={() => setModalConfirmation(false)}\n                    />\n                    <Button\n                        title={QuizLang[props.lang].GoBack}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={() => {\n                            setModalConfirmation(false);\n                            props.setTab(2);\n                        } }\n                    />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ buttonTop('disabled') }\n                    onPress={ () => buttonTop('onpress') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearState();\n                        pauseSound();\n                        if (createQuestion)\n                            setCreateQuestion(!createQuestion);\n                        else if (content.length == 0) props.setTab(2);\n                        else setModalConfirmation(true)\n                    }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            { printPage() }\n        </>\n    );\n}\n","import React from 'react';\nimport { Text, Button, Icon, FAB } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif');\n    return (\n    <>\n        { props.quizLength > 1 ? <FAB\n            style={{marginTop: 140, position: 'absolute', zIndex: 10}}\n            containerStyle={{marginLeft: 120}}\n            size=\"small\"\n            icon={{name: 'repeat-sharp', type: 'ionicon', color:'white' }}\n            onPress={() => props.pickRandomQuizz()}\n        /> : <></> }\n        <Lottie LottieSource={ThinkingLottie} ImageSource={ThinkingImage} LottieStyle={{marginTop: -25, height: 250, marginBottom: -30}} />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButton}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            buttonStyle={{ backgroundColor: 'red' }}\n            containerStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, Alert, View, Modal } from 'react-native';\nimport { Text, Image, Input, Button, Icon, Overlay } from 'react-native-elements';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../../assets/img/activities/sad.gif';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport Lottie from '../../../utils/Lottie';\nimport { Audio } from 'expo-av';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n    const [modal, setModal] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const [success, setSuccess] = useState(0);\n    const [fail, setFail] = useState(0);\n    const [confetti, setConfetti] = useState(false);\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const TrophyLottie = require('../../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../../assets/lottie/sad.json');\n\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const stopSound = async () => {\n        await pauseSound();\n        setSound(new Audio.Sound());\n        await sound?.unloadAsync();\n    }\n\n    const playSound = async () => {\n        setIsPlaying(true);\n        await Audio.setAudioModeAsync({\n            staysActiveInBackground: true,\n            shouldDuckAndroid: true,\n        });\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus?.isLoaded === false) {\n            await sound.loadAsync({ uri: game[current].uri });\n            setSound(sound);\n        }\n        await sound.playAsync();\n        sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n            if (playbackStatus.didJustFinish) {\n                await sound.unloadAsync();\n                setIsPlaying(false);\n            }\n        });\n    };\n\n    const setMediaType = () => {\n        if (!game[current]) return;\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <Icon onPress={() => isPlaying ? pauseSound() : playSound() } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30}} />\n            default:\n                return <></>;\n        }\n    };\n\n    const openAlertResultQuestion = (result) => {\n        return (\n            Alert.alert(\n                result ? QuizLang[props.lang].SuccessTitle : QuizLang[props.lang].FailedTitle,\n                result ? QuizLang[props.lang].Success : QuizLang[props.lang].Failed(game[current].answers),\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: async () => {\n                            if (current + 1 <= game.length - 1)\n                                setCurrent(current + 1);\n                            else {\n                                const path = success >= fail ? require(`../../../../assets/sound/global/applause.mp3`) : require(`../../../../assets/sound/global/you_lose.mp3`);\n                                if (success >= fail) setConfetti(true);\n                                const { sound } = await Audio.Sound.createAsync(path);\n                                setSound(sound);\n                                sound.playAsync();\n                                setModal(true);\n                            }\n                        },\n                    }\n                ]\n            )\n        )\n    };\n\n    const answerQuestion = async () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        stopSound();\n        setAnswer('');\n        const result = game[current].answers.includes(answerTrimedLowercase);\n        if (result === false) {\n            // increment the fail and update the API\n            setFail(fail + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, false);\n        } else {\n            // increment the success and update the API\n            setSuccess(success + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, true)\n        }\n        openAlertResultQuestion(result);\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                {confetti && success >= fail ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n                )}\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => props.setTab(0)}\n                    ModalComponent={Modal}\n                >\n                    {success >= fail ? \n                        <>\n                            <Lottie LottieSource={TrophyLottie} ImageSource={TrophyImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} loop={false} />\n                            <Text style={{color:'blue', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].SuccessQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].SuccessQuiz(fail, success)}</Text>\n                        </>\n                    :\n                        <>\n                            <Lottie LottieSource={SadLottie} ImageSource={SadImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} />\n                            <Text style={{color:'red', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].FailQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].FailQuiz(fail, success)}</Text>\n                        </>\n                    }\n                    <Button title={QuizLang[props.lang].Leave} onPress={() => props.setTab(0)} containerStyle={styles.leaveButton} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </Overlay>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button buttonStyle={styles.buttonQuizGameOK} title={QuizLang[props.lang].OK} onPress={() => { answerQuestion() }} />\n                </View>\n            </>\n        }\n    </>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\n// This component is mounted when the user clicks on 'Play' in the main quiz menu\nexport default function Play(props) {\n    const [play, setPlay] = useState(false);\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quizId={props.quiz._id}\n                personId={props.personId}\n                quiz={props.quiz.content}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n                quizLength={props.quizLength}\n            />\n        }\n    </View>);\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{QuizLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Rules()}</Text>\n\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].CustomHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Custom()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler, Alert } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber, randomArrayElement } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Creation/CreateQuiz';\nimport Play from './Play';\nimport Help from './Help';\n\nimport * as API from '../../../data/quizApi';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1) {\n                    Alert.alert(\n                        QuizLang[props.lang].GiveUpQuizTitle,\n                        QuizLang[props.lang].GiveUpQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    setTab(0);\n                                }\n                            },\n                        ]\n                    )\n                }\n                else setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            let rand = randomArrayElement(random, 0, quiz.length - 1);\n            setRandom(rand);\n        }\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    isLoading={isLoading}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                quizLength={quiz.length}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    setReload={setReload}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {printPage()}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'green')\n        color = '#459449';\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Essai${tries > 1 ? 's' : ''} restant${tries > 1 ? 's' : ''}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Score actuel: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Commencer \",\n        GiveUp: \"Abandonner\",\n        Reinit: \"Nouveau modèle\",\n        TitleGiveUp: \"Abandonner la partie\",\n        SureToGiveUp: \"Êtes-vous sûr(e) de vouloir abandonner la partie? Votre score sera enregistré.\",\n        Congratulations: 'Félicitations !!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: \"Recommencer\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'Le jeu des pairs, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu des pairs est assez connu et classique. Lorsque vous commencerez la partie, vous aurez un {0}. Cliquez alors sur le bouton \"{1}\" sur le bas de l’écran pour retourner les cartes face verso.\\n\\nVous devrez alors {2}. Par exemple, si vous cliquez sur une carte rouge, vous devrez cliquer sur l’autre carte rouge ensuite.\\n\\nPlus vous grimpez dans le score, plus le nombre de paires s’ajoutent au schéma. Il peut y avoir jusqu’à {3} au total.`,\n                boldText: [\"schéma de plusieurs paires de cartes face recto\", \"Commencer\", \"retourner les paires l'une après l’autre\", \"6 paires\"],\n            });\n        },\n        ScoreHead: \"Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois qu’un schéma est complété (c'est-à-dire que toutes les cartes ont été retournées), {0} et passez à un schéma suivant, {1}.\\n\\nLes points peuvent vous servir à avoir un joli score, mais aussi à recréer un nouveau schéma si vous l’avez complètement oublié. A chaque re-création d’un schéma, {2}. Et vous ne pouvez pas recréer un schéma s’il ne vous reste {3}.`,\n                boldText: [\"vous gagnez un point\", \"potentiellement plus difficile\", \"vous perdez un point\", \"qu’un essai pour le schéma actuel\"],\n            });\n        },\n        Remember: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Mémorisez bien ce schéma!'],\n            }, 'green');\n        }\n    },\n    en: {\n        Play: 'Play',\n        Help: 'How does it work',\n        Leave: 'Back',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Remaning tr${tries > 1 ? 'ies' : 'y'}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Actual score: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Start \",\n        GiveUp: \"Give up\",\n        Reinit: \"New model\",\n        TitleGiveUp: \"Give up the game\",\n        SureToGiveUp: \"Are you sure to give up this party? Your score will be saved.\",\n        Congratulations: 'Congratulations!!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        SoBad: 'So sad...',\n        ScoreNotBeated: 'Your daily score has not been beaten... But you can retry!',\n        Retry: \"Retry\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Best score made today: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'The double memory, how does it works?',\n        RulesHead: \"The rules\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The game of peers (or double memory) is quite familiar and classic. When you start the game, you will have a {0}. Then click on the \"{1}\" button at the bottom of the screen to turn the cards face up.\\n\\nFor example, if you click on a red card, you will have to click on the other red card next.\\n\\nThere can be up to {3} in total.`,\n                boldText: [\"pattern of several pairs of cards face up\", \"Start\", \"turn over the pairs one after the other\", \"6 pairs\"],\n            });\n        },\n        ScoreHead: \"The score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `Each time a pattern is completed (i.e., all the cards have been turned over), {0} and move on to the next pattern, {1}.\\n\\nThe points can be used to get a nice score, but they can also be used to recreate a new pattern if you've completely forgotten about it. Each time you re-create a pattern, {2}. And you can't recreate a pattern if you don't have {3} left.`,\n                boldText: [\"you earn a point\", \"potentially more challenging\", \"you lose a point\", \"than a try for the current pattern\"],\n            });\n        },\n        Remember: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Remember this schema carefully!'],\n            }, 'green');\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { Dimensions } from 'react-native'\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nconst mode = SCREEN_WIDTH >= SCREEN_HEIGHT ? 'landscape' : 'portrait';\nconst factor = mode == 'landscape' ? hp : wp;\n\nexport default StyleSheet.create({\n    view: {\n        height: hp('100%'),\n        paddingBottom: 40,\n        flex: 1,\n    },\n    logo: {\n        width: 90,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n        marginBottom: 20\n    },\n    RectoCard: {\n        width: factor('21%'),\n        height: 0,\n        backgroundColor: '#C3C3CF',\n        borderRadius: 20,\n        borderColor: '#858593',\n        borderWidth: 1,\n        aspectRatio: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    PlayingCard: {\n        width: factor('21%'),\n        height: 0,\n        borderRadius: 20,\n        aspectRatio: 1,\n        borderColor: '#68FF5C',\n        borderWidth: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    VersoCard: {\n        width: factor('21%'),\n        height: 0,\n        borderRadius: 20,\n        opacity: .8,\n        marginHorizontal: 5,\n        aspectRatio: 1,\n        marginVertical: 5\n    },\n    IconCard: {\n        marginTop: 28 + '%'\n    },\n    viewGame: {\n        marginTop: 10,\n        width: 95+'%',\n        height: hp('55%'),\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    buttonViewPlay: {\n        flexDirection: 'row',\n        width: mode == 'portrait' ? wp('100%') : hp('100%'),\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: 10\n    },\n    playButtons: {\n        alignContent: 'center',\n        textAlign: 'center',\n        paddingHorizontal: 30,\n        borderRadius: 10,\n        marginHorizontal: 5\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        paddingTop: 20,\n        width: wp('100%'),\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={DoubleLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{DoubleLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].Rules()}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].ScoreHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].ScoreHelp()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React from 'react';\nimport { Image, View } from 'react-native';\nimport { Button, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport DoubleLogo from '../../../assets/img/activities/double/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={DoubleLogo} style={styles.logo} />\n\n            <Button\n                title={DoubleLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={DoubleLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <View>\n\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: -50,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                        type: 'ionicon',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.ambiantSoundPlay() }\n            />\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 20,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.soundEnabled ? 'sound' : 'sound-mute',\n                        type: 'entypo',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.setSoundEnabled(prev => !prev) }\n            />\n            </View>\n\n            <Button\n                title={DoubleLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => {\n                    props.ambiant.unloadAsync();\n                    props.setPage(null);\n                }}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}","const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};\n\nexport const generateRandomPair = (length) => {\n    const colors = [\n        '#791414',\n        '#143479',\n        '#791462',\n        '#147920',\n        '#797714',\n        '#14AB9D'\n    ];\n    const icons = [\n        'airplane',\n        'boat',\n        'bulb',\n        'color-palette',\n        'earth',\n        'gift',\n        'happy',\n        'heart-circle',\n        'restaurant',\n        'ribbon'\n    ]\n    var arr = [];\n    for (let i = 0; i < length / 2; i++) {\n        var indexColor = Math.floor(Math.random() * colors.length);\n        var indexIcon = Math.floor(Math.random() * icons.length);\n        arr.push({ color: colors[indexColor], icon: icons[indexIcon] }, { color: colors[indexColor], icon: icons[indexIcon] });\n        colors.splice(indexColor, 1);\n        icons.splice(indexIcon, 1);\n    }\n    arr = shuffle(arr);\n    for (let i = 0; i < arr.length; i++) {\n        const el = arr[i];\n        el.idx = i\n    }\n\n    return (arr);\n};","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements';\n\nimport { Dimensions } from 'react-native'\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nimport styles from '../styles';\n\nexport default function Card(props) {\n    var cardStyles;\n    const factor = SCREEN_WIDTH >= SCREEN_HEIGHT ? SCREEN_HEIGHT : SCREEN_WIDTH;\n    if (props.inPlay) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.PlayingCard]];\n    else if (props.inFound || props.show) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.VersoCard]];\n    else cardStyles = styles.RectoCard\n\n    const icon = !props.inFound && !props.inPlay && !props.show ? 'help-circle-outline' : props.icon;\n\n    return (\n        <>\n            <TouchableOpacity style={ cardStyles } onPress={() => {\n                if (!props.inPlay && !props.inFound) props.ReturnCard(props.index);\n            }}>\n                <Icon\n                    name={icon}\n                    size={props.inFound || props.show || props.inPlay ? factor * .08 : factor * .08}\n                    color={props.inFound || props.show || props.inPlay ? 'white' : 'grey'}\n                    type=\"ionicon\"\n                    style={styles.IconCard}\n                />\n            </TouchableOpacity>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { View, Text, Modal } from 'react-native';\n\nimport { Button, Overlay, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../assets/img/activities/sad.gif';\n\nimport Lottie from '../../utils/Lottie';\n\nimport styles from './styles';\n\nimport { generateRandomPair } from './subs/helpers';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport Card from './subs/Card';\n\nexport default function Play(props) {\n    const [game, setGame] = useState([...generateRandomPair(4)]); // the current map game\n    const [found, setFound] = useState([]);\n    const [tries, setTries] = useState(3);\n    const [play, setPlay] = useState([]); // the current play of the player, an array with two values max, corresponding to the cards the player played\n    const [show, setShow] = useState(true);\n    const [confetti, setConfetti] = useState(false);\n    const [pause, setPause] = useState(false);\n\n    const TrophyLottie = require('../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../assets/lottie/sad.json');\n\n    const setLengthGame = () => {\n        if (props.score <= 8)\n            return 4;\n        else if (props.score <= 15)\n            return 6;\n        else if (props.score <= 30)\n            return 8;\n        else if (props.score <= 45)\n            return 10;\n        else\n            return 12;\n    }\n\n    // Exemple game element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null },\n            { idx: 2, color: '#ffffff', icon: null },\n            { idx: 3, color: '#ferdnc', icon: null }\n        ]\n    */\n\n        // each play, we push the current card to the play state, and check if the first element exists in the\n        // game state, and if the second element is the same as the first one, if so => success for a round, and push\n        // this pair in the found state. If fail => clear the play && found states\n\n    // Exemple play element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 2, color: '#ffffff', icon: null }\n        ] // this is a successful array\n\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null }\n        ] // this is a fail array\n    */\n\n    const failOverlay = () => {\n        if (props.modal == false) return;\n        return (\n            <>\n                <Lottie\n                    LottieSource={SadLottie}\n                    ImageSource={SadImage}\n                    autoplay={true}\n                    loop={true}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const successOverlay = () => {\n        if (!confetti) setConfetti(true);\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].BestScoreToday(props.bestScoreDay)}\n                </Text>\n                <Lottie\n                    LottieSource={TrophyLottie}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n    \n    const newModel = () => {\n        if (props.score == 0) return;\n        const currentGameLength = game.length;\n        props.setScore(prevScore => prevScore - 1);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(currentGameLength)]);\n    };\n\n    const printButton = () => {\n        return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={show ? DoubleLang[props.lang].Start : DoubleLang[props.lang].Reinit} onPress={() => { if (show) setShow(false); else newModel(); }} buttonStyle={[styles.playButtons, {backgroundColor: show ? '#208bdc' : 'green'}]} icon={\n                    <Icon\n                    name={show ? \"play\" : ''}\n                    size={18}\n                    color=\"white\"\n                    type=\"ionicon\"\n                />\n                } iconRight={true} disabled={!show && props.score === 0 || tries <= 1} />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.ambiantSoundPlay() }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.soundEnabled ? 'sound' : 'sound-mute',\n                            type: 'entypo',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.setSoundEnabled(prev => !prev) }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='red'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: 'caret-back',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.giveUp() }\n                    style={{marginHorizontal: 5}}\n                />\n            </View>);\n    };\n    \n    const ReturnCard = (key) => {\n        if (pause || show) return;\n        const currentPlay = play;\n        const indexGame = game[key];\n        const playing = [...currentPlay, indexGame];\n        if (playing.length == 2) {\n            // check if same card or return all and lose a try\n            if (playing[0].color === playing[1].color && playing[0].icon === playing[1].icon) {\n                const currentGameLength = game.length;\n                const nFound = [...found, playing[0], playing[1]];\n                if (nFound.length == currentGameLength) {\n                    props.playSound('next');\n                    props.setScore(prevScore => prevScore + 1);\n                    setShow(true);\n                    setTries(3);\n                    setGame([...generateRandomPair(setLengthGame())]);\n                    setFound([]);\n                } else {\n                    props.playSound('success');\n                    setFound(nFound);\n                }\n                setPlay([]);\n            } else {\n                setPlay(playing);\n                props.playSound('fail');\n                setPause(true);\n                setTimeout(() => {\n                    if (tries != 0) setTries(prevTries => prevTries - 1);\n                    if (tries === 0)\n                        props.endGame();\n                    else {\n                        setPlay([]);\n                        setFound([]);\n                    }\n                    setPause(false);\n                }, 1000);\n            }\n        } else {\n            setPlay(playing);\n            props.playSound('play');\n        }\n    };\n\n    const printCards = () => {\n        return game.map( (el, i) => {\n            var inFound = false;\n            var inPlay = false;\n            if (found.find(element => element.idx === i )) inFound = true;\n            else if (play.find(element => element.idx === i )) inPlay = true;\n            return (<Card show={show} key={i} index={i} inFound={inFound} inPlay={inPlay} backgroundColor={el.color} icon={el.icon} ReturnCard={ReturnCard} />);\n        });\n    };\n\n    const newGame = () => {\n        if (confetti) setConfetti(false);\n        props.setModal(false);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(4)]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n            )}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                { props.success && props.modal ? successOverlay() : failOverlay() }\n                <View style={{flexDirection: 'row', marginTop: 20}}>\n                    <Button title={DoubleLang[props.lang].Retry} onPress={() => newGame()} buttonStyle={{marginRight: 10}} icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n\n                    <Button title={DoubleLang[props.lang].Leave} onPress={() => { \n                        if (confetti) setConfetti(false);\n                        props.setModal(false);\n                        props.setTab(0);\n                    }} buttonStyle={{backgroundColor: 'red'}} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </View>\n            </Overlay>\n            <View style={styles.viewGame}>\n                { printCards() }\n            </View>\n            <View style={{alignItems: 'center', width: wp('100%'), marginTop: -10}}>\n                { show === true ? <Text>{DoubleLang[props.lang].Remember()}</Text> : <></> }\n                <Text>{DoubleLang[props.lang].Score(props.score)}</Text>\n                <Text>{DoubleLang[props.lang].BestDayScore(props.bestScoreDay)}</Text>\n                <Text>{DoubleLang[props.lang].RemaningTries(tries)}</Text>\n                { printButton() }\n            </View>\n        </>\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n    Text,\n    BackHandler,\n    ScrollView,\n    Alert\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport styles from './styles';\n\nimport * as API from '../../../data/doubleApi';\n\nimport Help from './Help';\nimport Menu from './Menu';\nimport Play from './Play';\n\nconst currentDate = new Date().toLocaleDateString('fr-FR');\n\nexport default function Double(props) {\n    const [tab, setTab] = useState(0);\n    const [score, setScore] = useState(0);\n    const [bestScoreDay, setBestScoreDay] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [ambiant, setAmbiant] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n    const [soundEnabled, setSoundEnabled] = useState(true);\n    const [ambiantEnabled, setAmbiantEnabled] = useState(true);\n\n    useEffect( async () => {\n        // API.clear();\n\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by kilo\n            require(`../../../assets/sound/double/ambiant.mp3`),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n\n        API.getScoreDay(props.personId, currentDate).then((data) => {\n            if (data.length > 0) setBestScoreDay(data[0].score);\n        });\n\n        API.getBestScore(props.personId).then((data) => {\n            if (data.length > 0) setBestScore(data[0].score);\n        });\n\n    }, []);\n\n    useEffect(() => {\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1 && score > 0) {  \n                    giveUp()\n                    return ;\n                }\n                setTab(0);\n            } else {\n                ambiant.unloadAsync();\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, ambiant]);\n\n    const endGame = async () => {\n        setModal(true);\n        let bestDayScore = false;\n        let bestScore = false;\n        if (score > bestScoreDay) { \n            playSound('applause');\n            setSuccess(true);\n            setBestScoreDay(score);\n            bestDayScore = true;\n            if (score > bestScore) {\n                bestScore = true;\n                setBestScore(score);\n            }\n        } else {\n            playSound('lose');\n            setSuccess(false);\n        }\n        await API.insertScore(props.personId, score, currentDate, bestDayScore, bestScore);\n        setScore(0);\n    };\n\n    const ambiantSoundPlay = () => {\n        if (ambiantEnabled) ambiant.pauseAsync();\n        else ambiant.playAsync();\n        setAmbiantEnabled(prevEnable => !prevEnable);\n    };\n    \n    const giveUp = () => {\n        if (score === 0) setTab(0);\n        else return Alert.alert(\n            DoubleLang[props.lang].TitleGiveUp,\n            DoubleLang[props.lang].SureToGiveUp,\n            [\n                {\n                    text: DoubleLang[props.lang].Leave,\n                    onPress: () => { null },\n                    style: 'cancel'\n                },\n                {\n                    text: DoubleLang[props.lang].GiveUp,\n                    onPress: () => {\n                        endGame();\n                    }\n                },\n            ]\n        )\n    };\n\n    const playSound = async (type) => {\n        if (!soundEnabled && !['applause', 'lose'].includes(type)) return;\n        if (sound) sound?.unloadAsync();\n        let choosenSound;\n        switch (type) {\n            case \"success\":\n                choosenSound = require(`../../../assets/sound/double/success.mp3`);\n                break;\n            case \"fail\":\n                choosenSound = require(`../../../assets/sound/double/fail.mp3`);\n                break;\n            case \"play\":\n                choosenSound = require(`../../../assets/sound/double/play.mp3`);\n                break;\n            case \"next\":\n                choosenSound = require(`../../../assets/sound/double/next.mp3`);\n                break;\n            case \"applause\":\n                choosenSound = require(`../../../assets/sound/global/applause.mp3`);\n                break;\n            case \"lose\":\n                choosenSound = require(`../../../assets/sound/global/you_lose.mp3`);\n                break;\n            default:\n                break;\n        }\n        const { sound } = await Audio.Sound.createAsync(choosenSound);\n        setSound(sound);\n        sound.playAsync();\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    ambiant={ambiant}\n                    setSoundEnabled={setSoundEnabled}\n                    soundEnabled={soundEnabled}\n                    ambiantEnabled={ambiantEnabled}\n                    ambiantSoundPlay={ambiantSoundPlay}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                        lang={props.lang}\n                        setTab={setTab}\n                        score={score}\n                        setScore={setScore}\n                        giveUp={giveUp}\n                        modal={modal}\n                        setModal={setModal}\n                        bestScoreDay={bestScoreDay}\n                        success={success}\n                        endGame={endGame}\n                        playSound={playSound}\n                        ambiantSoundPlay={ambiantSoundPlay}\n                        ambiantEnabled={ambiantEnabled}\n                        soundEnabled={soundEnabled}\n                        setSoundEnabled={setSoundEnabled}\n                    />;\n        } else if (tab === 2) {\n            return (<Help lang={props.lang} setTab={setTab} />);\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <ScrollView style={styles.view} contentContainerStyle={{alignItems: 'center'}}>\n            { printPage() }\n        </ScrollView>\n    );\n};","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\nimport Double from '../components/activities/Double';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return <Double lang={lang} setPage={setPage} personId={personId} />;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n        /* {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        }, */\n    ];\n}\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: wp('80%'),\n        height: hp('7%'),\n        justifyContent: 'flex-start',\n        backgroundColor: '#4d8abd',\n        fontSize: hp('10%')\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport styles from './styles';\n\nimport { Audio } from 'expo-av';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n\n    useEffect( () => {\n        Audio.setIsEnabledAsync(true);\n    }, [])\n\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: wp('6%'),\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: wp('15%'), marginLeft: wp('5%') }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        titleStyle={{fontSize: wp('4%')}}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    scoreRow: {\n        flex: 1,\n        height: 180,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreRowSimon: {\n        flex: 1,\n        height: 250,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreHeading: {\n        fontSize: 18,\n        color: '#2089dc',\n        fontWeight: 'bold',\n        margin: 5\n    },\n    NoScore: {\n        color: 'grey',\n        fontStyle: 'italic',\n        marginTop: 45,\n        marginLeft: 45\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\nimport { Badge } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport { ScoreRatio } from '../../../../components/activities/Quiz/utils/scoreFunc';\nimport * as API from '../../../../data/quizApi';\n\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nexport default function QuizScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [quizScore, setQuizScore] = useState([]);\n\n    useEffect( () => {\n        API.get(props.personId).then((data) => {\n            const arr = [];\n            for (let i = 0; i < data.length; i++) {\n                const el = data[i];\n                arr.push({score: ScoreRatio(el.content, props.personId), name: el.name});\n            }\n            setQuizScore(arr);\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (quizScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            return quizScore.map( (el,i) => {\n                return (\n                    <View style={{marginHorizontal: 15}} key={i}>\n                        <View style={{zIndex: 20}}>\n                            <Badge\n                                value={el.name}\n                                textStyle={{textAlign: 'center', zIndex: 20}}\n                                badgeStyle={{position:'absolute', paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 100, zIndex: 100}}\n                                titleStyle={{zIndex: 20}}\n                            />\n                        </View>\n                        <View style={{zIndex: 1}}>\n                            <CircularProgress\n                                value={el.score}\n                                textStyle={{marginBottom: -10}}\n                                title={ActivitiesLang[props.lang].Success}\n                                valueSuffix={'%'}\n                                titleStyle={{marginBottom: 10}}\n                                initialValue={0}\n                                delay={500}\n                                activeStrokeColor={'#2089dc'}\n                                radius={65}\n                                inActiveStrokeColor={'#9b59b6'}\n                                inActiveStrokeOpacity={0.5}\n                                inActiveStrokeWidth={6}\n                                activeStrokeWidth={12}\n                            />\n                        </View>\n                    </View>\n                );\n            });\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRow} horizontal={true}>\n            <View>\n                <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].QuizScore}</Text>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} /> :\n                    <ScrollView horizontal={true}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/simonApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function SimonScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [simonScore, setSimonScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setSimonScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (simonScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = simonScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].SimonScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/doubleApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function DoubleScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [doubleScore, setDoubleScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setDoubleScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (doubleScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = doubleScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].DoubleScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React from 'react';\nimport { ScrollView } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\n\nimport QuizScore from './QuizScore';\nimport SimonScore from './SimonScore';\nimport DoubleScore from './DoubleScore';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <QuizScore lang={props.lang} personId={props.personId} />\n            <DoubleScore lang={props.lang} personId={props.personId} />\n            <SimonScore lang={props.lang} personId={props.personId} />\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: 10+\"%\", color: '#3B8EFF', backgroundColor: '#355c7d' }],\n                tabBarLabelStyle: [{ color: 'white', marginBottom: 10, fontSize: hp('2%') }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} personId={props.personId} /> }\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        fullname={props?.fullname}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                        setPerson={props.setPerson}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { Platform } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        paddingBottom: 10,\n        width: 100+'%',\n        backgroundColor: '#355c7d'\n    },\n    topLottie: {\n        marginTop: hp('1%'),\n        width: wp('10%'),\n        height: undefined,\n        marginBottom: hp('3%'),\n        backgroundColor: '#355c7d'\n    },\n    bgLottie: {\n        width: wp('100%'),\n        opacity: Platform.OS === 'ios' ? 0.8 : 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: wp('100%'),\n        height: hp('100%'),\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: wp('20%'),\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: '#355c7d'\n    },\n    heading: {\n        fontSize: hp('3%'),\n        color: 'white',\n        marginTop: 0,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%'\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport TopImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/selection');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/selection', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/selection', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TopImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={state?.username}\n                        fullname={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setPerson={setPerson}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\nimport React from 'react';\n\nimport { Text } from 'react-native'\nimport App from './App';\n\nText.defaultProps = Text.defaultProps || {};\nText.defaultProps.allowFontScaling = false\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig, reset } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport SelectionMenu from './pages/SelectionMenu';\nimport Activities from './pages/Activities';\nimport Home from './pages/Home';\nimport Tutorial from './pages/Tutorial';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [lang, setLang] = useState('fr');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        // reset();\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    useEffect( () => {\n        let local = Localization.locale?.split('-')[0] || 'fr';\n        setLang(['en', 'fr'].includes(local) ? local : 'fr');\n        console.log('- Imported config file -');\n    }, [config]);\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                    setLang={setLang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/tutorial\"\n                            element={\n                                <Tutorial\n                                    lang={lang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={<Home lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/selection\"\n                            element={\n                                <SelectionMenu\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}