{"version":3,"sources":["assets/img/activities/trophy.gif","assets/img/activities/help/question_mark.gif","assets/img/interface/profile.jpg","assets/img/activities/sad.gif","assets/sound/global/applause.mp3","assets/sound/global/you_lose.mp3","assets/sound/simon/green.mp3","assets/img/username/chooseusername.gif","assets/img/home/loading_brain.gif","assets/img/home/addedUser.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/tutorial/swipe-right.gif","assets/img/activities/brain.gif","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/quiz/logo.png","assets/img/activities/quiz/success.gif","assets/img/activities/double/logo.png","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","assets/img/activities/quiz/thinking.gif","assets/sound/double/ambiant.mp3","assets/sound/double/success.mp3","assets/sound/double/fail.mp3","assets/sound/double/play.mp3","assets/sound/double/next.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","pages/ChooseUsername/styles.js","language/home/index.js","components/home/Rows.js","components/home/styles.js","components/utils/Lottie.js","components/home/PersonCreation/Success.js","data/dictaphoneApi.js","data/simonApi.js","data/quizApi.js","utils/helpers.js","data/personApi.js","components/home/PersonCreation/Form.js","components/home/PersonCreation/CreatePerson.js","pages/Home/styles.js","pages/Home/index.js","pages/ChooseUsername/index.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","components/utils/HomeOrTutorial.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/Help.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/utils/quizFunc.js","components/activities/Quiz/Creation/QuestionList.js","components/activities/Quiz/utils/scoreFunc.js","components/activities/Quiz/QuizList.js","components/activities/Quiz/ViewQuizList.js","components/activities/Quiz/SuccessContent.js","components/activities/Quiz/Creation/FormQuizContent.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Creation/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/Help.js","components/activities/Quiz/index.js","language/activities/double/index.js","components/activities/Double/styles.js","data/doubleApi.js","components/activities/Double/Help.js","components/activities/Double/Menu.js","components/activities/Double/subs/helpers.js","components/activities/Double/subs/Card.js","components/activities/Double/Play.js","components/activities/Double/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/QuizScore/index.js","pages/Activities/Score/SimonScore/index.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","StyleSheet","create","wrapper","height","marginTop","container","flex","alignItems","alignContent","heading","fontSize","marginBottom","marginHorizontal","textAlign","color","description","textInput","borderColor","borderRadius","paddingHorizontal","backgroundColor","shadowOpacity","shadowRadius","shadowOffset","width","elevation","image","buttonContainer","button","marginLeft","buttonText","paddingTop","slide","padding","viewrow","flexDirection","flexWrap","justifyContent","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","props","navigate","useNavigate","TouchableScale","Platform","OS","default","mod","index","componentProps","Component","key","id","bottomDivider","containerStyle","onPress","state","source","picture","uri","DefaultProfilePicture","rounded","Content","Title","fullname","Subtitle","Chevron","rightButton","minHeight","imageSuccess","leftButton","view","alignSelf","marginVertical","btnImport","btnSave","profilePicture","successPageTitle","Lottie","LottieStyle","LottieSource","loop","hasOwnProperty","autoPlay","resizeMode","Image","ImageSource","ImageStyle","Success","View","SuccessImage","styles","edit","InterfaceLang","title","e","close","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","createQuizContent","el","uuidv4","success","failed","includes","fileType","uploadQuizFile","path","FileSystem","from","to","updateScore","quizId","contentId","_id","quiz","contentIndex","content","findIndex","scoreIndex","pushErrors","errors","field","msg","randomNumber","min","max","Math","floor","random","person","trim","Object","keys","upd","$set","catch","log","Form","useState","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","encoding","fsRead","setImage","titleStyle","buttonStyle","icon","name","size","placeholder","leftIcon","label","errorStyle","renderErrorMessage","maxLength","errorMessage","inputStyle","value","onChangeText","setFullname","setDescription","raised","cb","Person","intermediates","imgName","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","topImage","zIndex","boldtext","subtitle","overflow","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","fontStyle","searchBar","searchInputStyle","Home","isLoading","setIsLoading","search","setSearch","setIndex","HomeLang","btnText","setBtnTxt","active","setActive","swiper","useRef","useLocation","useEffect","regex","RegExp","$regex","backHandler","BackHandler","addEventListener","remove","list","LoadingBrain","TouchableOpacity","activeOpacity","idx","ActivityIndicator","current","scrollBy","SafeAreaView","ref","showsButtons","scrollEnabled","pagingEnabled","showsPagination","onIndexChanged","setTimeout","ScrollView","inputContainerStyle","map","input","setInput","confirmed","setConfirmed","parseUsername","setUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","animating","Loading","LoadingImage","slideOdd","paddingBottom","marginRight","borderWidth","Tutorial","res","SwipeImage","position","opacity","StepOne","StepTwo","StepThree","StepFour","StepFive","StepSixth","component","Config","HomeOrTutorial","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","QuizScore","SimonScore","NoScore","Global","BestScoreByDay","ReturnList","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","deletePerson","SimonDB","removeAsync","DictaphoneDB","deleted","type","iconContainerStyle","ActivitiesLang","Alert","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","isPlaying","setIsPlaying","progress","setProgress","Audio","Sound","sound","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","playAsync","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","unloadAsync","positionMillis","playableDurationMillis","variant","animation","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","getURI","folder","record","DictaphoneLang","Date","created","deleteRecord","goBack","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","createAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","clr","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","Head","RulesHead","TriesHead","Rules","TriesExplain","logo","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","viewHelpPage","leaveButtonHelpPage","helpHead","helpStepHead","textTransform","helpStep","helpQuestionMark","Menu","SimonLogo","SimonLang","setTab","Game","start","setStart","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","dailyScoreBeaten","globalScoreBeaten","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","disabled","QuestionMark","tab","pos","Create","GoBack","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","GiveUpQuizTitle","GiveUpQuiz","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","EditedQuiz","QuizListRedirection","selectedQuizz","quizName","Questions","SuccessTitle","FailedTitle","answers","join","SuccessQuizTitle","SuccessQuiz","fail","FailQuizTitle","FailQuiz","SaveContent","AddContent","SureCancelEdition","CustomHead","Custom","answersText","leaveButtonPlay","createButton","overlayDescriptionReference","ScrollViewSuccess","modalTitle","modalDescription","quizTitleInputContainer","quizTitleInput","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","QuizLogo","QuizLang","printFile","clearFile","pauseSound","playSound","QuestionList","quizEdit","newContent","quizEdition","Number","isInteger","questionId","tmp","setNewContent","setQuizEdit","setReload","reload","setEditedQuiz","contentList","setContent","pickOutQuestion","setEditContent","question","ScoreRatio","filter","parseInt","total","toFixed","QuizList","ViewQuizList","SuccessContent","FormQuizContent","answer","setAnswer","contentContainerStyle","setFileType","setFilename","setUri","DocumentPicker","mimeType","flexShrink","setQuestion","toLowerCase","setAnswers","addAnswer","badgeStyle","pickOutAnswer","ViewQuiz","newQuestion","setNewQuestion","editContent","editedQuiz","saveQuiz","concat","editedFile","buttonTop","mode","saveContent","pushContent","viewPage","CreateQuiz","createQuestion","setCreateQuestion","setName","modalConfirmation","setModalConfirmation","undefined","substring","ThinkingImage","quizLength","pickRandomQuizz","ThinkingLottie","setPlay","setCurrent","setFail","arr","j","shuffle","TrophyLottie","SadLottie","openAlertResultQuestion","SadImage","setMediaType","answerTrimedLowercase","answerQuestion","play","setQuiz","setRandom","rand","randomArrayElement","exclude","randNumber","RemaningTries","Reinit","TitleGiveUp","SureToGiveUp","BestDayScore","ScoreHead","ScoreHelp","aspectRatio","RectoCard","PlayingCard","VersoCard","IconCard","viewGame","buttonViewPlay","playButtons","getBestScore","insertScore","DoubleLang","DoubleLogo","ambiantEnabled","ambiantSoundPlay","soundEnabled","setSoundEnabled","prev","ambiant","generateRandomPair","colors","icons","indexColor","indexIcon","Card","cardStyles","inPlay","inFound","show","ReturnCard","found","setFound","setShow","currentPlay","indexGame","playing","currentGameLength","nFound","setScore","prevScore","prevTries","endGame","bestScoreDay","failOverlay","element","giveUp","newModel","Double","setBestScoreDay","setAmbiant","setAmbiantEnabled","bestDayScore","prevEnable","choosenSound","returnComponent","page","ActivitiesList","iconPosition","scoreRow","scoreRowSimon","scoreHeading","margin","quizScore","setQuizScore","horizontal","textStyle","valueSuffix","activeStrokeColor","radius","inActiveStrokeColor","inActiveStrokeOpacity","inActiveStrokeWidth","activeStrokeWidth","simonScore","setSimonScore","btnIndex","setBtnIndex","buttons","TotalScore","selectedIndex","global","days","item","highestToLowest","b","labels","datasets","fromZero","showValuesOnTopOfBars","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","printScore","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","unmountOnBlur","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","setPerson","BgSource","navTheme","DefaultTheme","background","BackgroundImage","NavigationContainer","theme","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,ktyBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,6iiECA3CD,EAAOC,QAAU,IAA0B,mC,m3SCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,u9fCA3CD,EAAOC,QAAU,IAA0B,kC,y24CCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,khqBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,mo9ICI9BC,EAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,eACVC,QAASC,IACTC,UAAU,IAGP,SAASC,EAAYC,GACxB,OAAOP,EAAGQ,YACN,CAAEC,gBAAiB,CAAEC,SAAS,IAC9B,CAAED,gBAAiBF,IAcpB,SAAeI,IAAf,iBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAGoBZ,EAClBc,UAAU,CAAEC,SAAU,CAAEL,SAAS,KAAU,SAACM,EAAKC,GAC9C,OAAoB,IAAhBA,EAAKC,QACLlB,EAAGmB,YAAY,CACXJ,SAAU,KAEP,MAEAE,EAAK,GAAGF,YAGtBK,MAAK,SAACC,GAAU,IAAD,EACZ,OAAO,SAAAA,EAAK,SAAL,IAASN,WAAY,SAfjC,cAGGA,EAHH,kBAAAH,EAAA,MAkB2BZ,EACzBc,UAAU,CAAEL,gBAAiB,CAAEC,SAAS,KAAU,SAACM,EAAKC,GACrD,OAAoB,IAAhBA,EAAKC,QACLlB,EAAGmB,YAAY,CACXV,iBAAiB,KAEd,GAEAQ,EAAK,GAAGR,mBAGtBW,MAAK,SAACC,GAAU,IAAD,EACZ,OAAO,SAAAA,EAAK,SAAL,IAASZ,mBAAmB,MA9BxC,cAkBGA,EAlBH,yBAgCI,CAAEM,WAAUN,oBAhChB,4D,mBCVMa,EAAO,CAChBC,GAAI,CAEAC,aAAc,0BACdC,YAAa,qBACbC,SAAU,cACVC,YAAa,wCACbC,YAAa,2BACbC,eAAgB,uCAChBC,cACI,6DACJC,mBAAoB,SAACC,GACjB,MAAM,qCAAmCA,EAAzC,kBAEJC,KAAM,cACNC,cAAe,8DACfC,aAAc,oDACdC,aAAc,8BAGdC,IAAK,MACLC,GAAI,MACJC,WAAY,2BACZC,aAAc,SAACzB,GACX,MAAM,uDAAqDA,EAA3D,kLAIJ0B,cAAe,yCAEnBC,GAAI,CAEAlB,aAAc,gBACdC,YAAa,mBACbC,SAAU,YACVC,YAAa,0CACbC,YAAa,yBACbC,eAAgB,kCAChBC,cAAe,yBACfC,mBAAoB,SAACC,GACjB,MAAM,4BAA6BA,EAAnC,eAEJC,KAAM,OACNC,cAAe,uDACfC,aAAc,4CACdC,aAAc,qBAGdC,IAAK,MACLC,GAAI,KACJC,WAAY,gBACZC,aAAc,SAACzB,GACX,MAAM,2BAA4BA,EAAlC,yHAIJ0B,cAAe,2B,wCCvEjBE,EAAiB,SAACC,GACpB,IAAIC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,QAAnC,SACKN,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLxB,EAAO,CAChBC,GAAI,CAEAiC,YAAa,2BACbC,aAAc,WACV,OAAOd,EAAe,CAClBI,SACI,iNACJE,SAAU,CAAC,iBAKnBS,YAAa,oCACbC,aACI,iNAGJC,YAAa,oBACbC,aAAc,WACV,OAAOlB,EAAe,CAClBI,SACI,0LACJE,SAAU,CAAC,gBAKnBa,YAAa,eACbC,aAAc,WACV,OAAOpB,EAAe,CAClBI,SACI,4JACJE,SAAU,CAAC,gDAKnBe,YAAa,mBACbC,aACI,kLAGJC,eAAgB,8BAChBC,eAAgB,aAEhBC,eAAgB,qCAChBC,eAAgB,WACZ,OAAO1B,EAAe,CAClBI,SACI,+LACJE,SAAU,CAAC,iBAIvBP,GAAI,CAEAc,YAAa,wBACbC,aAAc,WACV,OAAOd,EAAe,CAClBI,SACI,6KACJE,SAAU,CAAC,iBAKnBS,YAAa,kCACbC,aACI,qKAGJC,YAAa,sBACbC,aAAc,WACV,OAAOlB,EAAe,CAClBI,SACI,qKACJE,SAAU,CAAC,gBAKnBa,YAAa,YACbC,aAAc,WACV,OAAOpB,EAAe,CAClBI,SACI,yHACJE,SAAU,CAAC,qCAKnBe,YAAa,kBACbC,aACI,oJAGJC,eAAgB,kBAChBC,eAAgB,QAEhBC,eAAgB,uBAChBC,eAAgB,WACZ,OAAO1B,EAAe,CAClBI,SACI,uJACJE,SAAU,CAAC,kB,yBCxHZqB,MAAWC,OAAO,CAC7BC,QAAS,CACLC,OAAQ,IACRC,UAAW,IAEfC,UAAW,CACPC,KAAM,EACNC,WAAY,SACZC,aAAc,UAElBC,QAAS,CACLC,SAAU,GACVzB,WAAY,OACZ0B,aAAc,GACdC,iBAAkB,GAClBA,iBAAkB,GAClBC,UAAW,SACXC,MAAO,SAEXC,YAAa,CACTL,SAAU,GACVC,aAAc,GACdC,iBAAkB,GAClBA,iBAAkB,GAClBC,UAAW,SACXC,MAAO,QAEXE,UAAW,CACPb,OAAQ,GACRc,YAAa,OACbC,aAAc,GACdC,kBAAmB,GACnBL,MAAO,QACPM,gBAAiB,QACjBC,cAAe,GACfC,aAAc,EACdC,aAAc,CACVpB,OAAQ,EACRqB,MAAO,GAEXC,UAAW,GAEfC,MAAO,CACHpB,KAAM,EACNkB,MAAO,KAEXG,gBAAiB,CACbpB,WAAY,UACZiB,MAAO,KAEXI,OAAQ,CACJR,gBAAiB,yBACjBF,aAAc,GACdM,MAAO,GACPK,WAAY,IAEhBC,WAAY,CACRC,WAAY,GACZjB,MAAO,QACPD,UAAW,UAEfmB,MAAO,CACH1B,KAAM,EACN2B,QAAS,IAEbC,QAAS,CACL1B,aAAc,SACdgB,MAAO,OACPW,cAAe,MACfC,SAAU,SACVC,eAAgB,Y,mDCtElBhE,EAAiB,SAACC,GACpB,IAAIC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQ6B,MAAO,WAAlD,SACKnC,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLxB,EAAO,CAChBC,GAAI,CACAqF,MAAO,SAAC7F,GACJ,OAAO4B,EAAe,CAClBI,SAAU,gBACVE,SAAU,CAAClC,MAGnB8F,QAAS,yCACTC,WAAY,uBACZC,KAAM,YACNC,OAAQ,YACRC,aAAc,uBACdC,UAAW,wCACXC,cACI,8EACJC,OAAQ,2BAEZ1E,GAAI,CACAkE,MAAO,SAAC7F,GACJ,OAAO4B,EAAe,CAClBI,SAAU,aACVE,SAAU,CAAClC,MAGnB8F,QAAS,uCACTC,WAAY,eACZC,KAAM,OACNC,OAAQ,SACRC,aAAc,qBACdC,UAAW,wCACXC,cACI,0EACJC,OAAQ,oB,2mBC3CD,SAASC,EAAKC,GACzB,IAAMC,EAAWC,cAEbC,EACgB,QAAhBC,IAASC,GACH1H,EAAQ,KAAgC2H,QACxC,KACNC,EACAP,EAAMQ,MAAQ,IAAM,EACd,CAAEpC,gBAAiB,SACnB,CAAEA,gBAAiB,WACzBqC,EACgB,QAAhBL,IAASC,GACH,CACIK,UAAWP,EACXQ,IAAKX,EAAMY,GACXC,eAAe,EACfC,eAAgBP,GAEpB,CAAEI,IAAKX,EAAMY,GAAIC,eAAe,EAAMC,eAAgBP,GAChE,OACI,eAAC,IAAD,OACQE,GADR,IAEIM,QAAS,WAAO,IAAD,EACXd,EAAS,eAAeD,EAAMY,GAAM,CAChCI,MAAO,CACHhH,KAAI,SAAEgG,EAAMhG,MAAR,EAAgB,KACpBP,SAAUuG,EAAMvG,aANhC,UAWI,cAAC,IAAD,CACIwH,OACS,MAALjB,KAAOkB,QACD,CAAEC,IAAKnB,EAAMkB,SACbE,IAEVC,SAAO,IAEX,eAAC,IAASC,QAAV,WACI,cAAC,IAASC,MAAV,UAAiBvB,EAAMwB,WACvB,cAAC,IAASC,SAAV,UAAoBzB,EAAMjC,iBAE9B,cAAC,IAAS2D,QAAV,CAAkB5D,MAAM,aCjDrBd,UAAWC,OAAO,CAC7B0E,YAAa,CACTC,UAAW,OACXxD,gBAAiB,OAErByD,aAAc,CACVrD,MAAO,IACPrB,OAAQ,KAEZ2E,WAAY,CACRF,UAAW,QAEfG,KAAM,CACFxE,WAAY,SACZyE,UAAW,SACXC,eAAgB,GAChBzD,MAAO,QAEX0D,UAAW,CACPhE,aAAc,GACdM,MAAO,KAEX2D,QAAS,CACL3D,MAAO,KAEX4D,eAAgB,CACZ5D,MAAO,IACPrB,OAAQ,IACRe,aAAc,IACdP,aAAc,IAElB0E,iBAAkB,CACdL,UAAW,SACXxD,MAAO,IACPX,UAAW,SACX5B,WAAY,OACZyB,SAAU,GACVI,MAAO,UACPH,aAAc,M,kBClBP2E,EAlBA,SAACtC,GAER,MAAuB,QAAhBI,IAASC,GACZ,cAAC,IAAD,CACIrE,MAAOgE,EAAMuC,YACbtB,OAAQjB,EAAMwC,aACdC,MAAMzC,EAAM0C,eAAe,SAAU1C,EAAMyC,KAC3CE,UACI3C,EAAM0C,eAAe,aAAc1C,EAAM2C,SAE7CC,WAAW,UAGf,cAACC,EAAA,EAAD,CAAO5B,OAAQjB,EAAM8C,YAAa9G,MAAOgE,EAAM+C,c,kBCN5C,SAASC,GAAQhD,GAC5B,IAAMwC,EAAe7J,EAAQ,KAE7B,OACI,eAACsK,EAAA,EAAD,WACI,cAAC,EAAD,CACIT,aAAcA,EACdM,YAAaI,IACbX,YAAaY,EAAOtB,aACpBkB,WAAYI,EAAOtB,aACnBY,MAAM,EACNE,UAAU,IAEd,cAAC5G,EAAA,EAAD,CAAMC,MAAOmH,EAAOd,iBAApB,UACoB,IAAfrC,EAAMoD,KACDC,EAAcrD,EAAMhG,MAAMY,cAC1ByI,EAAcrD,EAAMhG,MAAMa,eAEpC,cAAC,IAAD,CACIyI,MAAOD,EAAcrD,EAAMhG,MAAMc,aACjCkB,MAAO,CAAEoC,gBAAiB,QAC1B2C,QAAS,SAACwC,GACNvD,EAAMwD,c,8DC5Bb9K,GAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,mBACVC,QAASC,IACTC,UAAU,IAYP,SAAS0K,GAAIC,GAChB,OAAOhL,GACFiL,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEC,MAAO,IACdC,MAAK,SAACpK,EAAKqK,GACR,OAAOA,KCvBnB,IAEarL,GAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,cACVC,QAASC,IACTC,UAAU,IAeP,SAASiL,GAAYN,EAAUG,GAClC,OAAOnL,GACFiL,KAAK,CAAED,SAAUA,EAAUG,KAAMA,IACjCD,KAAK,CAAEK,OAAQ,IACfH,MAAK,SAACpK,EAAKwK,GAIR,OAHIxK,GACAyK,QAAQC,MAAM1K,GAEXwK,K,qkBCzBnB,IA2CaxL,GAAK,IA3CAC,EAAQ,KA2CR,CAAc,CAC5BC,SAAU,aACVC,QAASC,IACTC,UAAU,IAGRsL,GAAoB,SAAOX,EAAUY,GAAjB,SAAAhL,EAAAC,OAAA,mDACtB+K,EAAG1D,GAAK2D,gBACRD,EAAGL,MAAQ,CAAC,CAACP,SAAUA,EAAUc,QAAS,EAAGC,OAAQ,KACjD,CAAC,QAAS,SAASC,SAASJ,EAAGK,UAHb,kCAAArL,EAAA,MAIZsL,GAAeN,IAJH,6DAQpBM,GAAiB,SAAON,GAAP,iBAAAhL,EAAAC,OAAA,uDACbX,EAAc2L,iBAA0B,SAAfD,EAAGK,SAAsB,OAAS,QAC3DE,EAAUC,KAFG,QAEiCR,EAAGK,SAFpC,eAAArL,EAAA,MAGbwL,KAAqB,CACvBC,KAAMT,EAAGnD,IACT6D,GAAG,GAAIH,EAAOjM,KALC,yBAAAU,EAAA,MAObwL,KAAuBR,EAAGnD,MAPb,OAQnBmD,EAAGnD,IAAH,GAAY0D,EAAOjM,EARA,6DAWhB,SAAS6K,GAAIC,GAChB,OAAOhL,GACFiL,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEC,MAAO,IACdC,MAAK,SAACpK,EAAKwK,GAIR,OAHIxK,GACAyK,QAAQC,MAAM1K,GAEXwK,KAuBZ,SAAee,GAAYvB,EAAUwB,EAAQC,EAAWX,GAAxD,mBAAAlL,EAAAC,OAAA,kEAAAD,EAAA,MACgBZ,GAAGc,UAAU,CAAE4L,IAAKF,EAAQxB,SAAUA,IAAY,SAAChK,EAAKwK,GAEvE,OADIxK,GAAKyK,QAAQC,MAAM1K,GAChBwK,MAHR,cACGmB,EADH,OAKGC,EAAeD,EAAK,GAAGE,QAAQC,WAAU,SAAAlB,GAAE,OAAIA,EAAG1D,IAAMuE,KACxDM,EAAaJ,EAAK,GAAGE,QAAQD,GAAcrB,MAAMuB,WAAU,SAAAlB,GAAE,OAAIA,EAAGZ,SAAWA,KACjFc,EAASa,EAAK,GAAGE,QAAQD,GAAcrB,MAAMwB,GAAYjB,UACxDa,EAAK,GAAGE,QAAQD,GAAcrB,MAAMwB,GAAYhB,SARlD,kBASI/L,GAAGQ,YAAY,CAACkM,IAAKF,GAArB,MAAkCG,EAAK,MAT3C,4DCxGA,IAAMK,GAAa,SAACC,EAAQC,EAAOC,GAMtC,OALIF,EAAOjD,eAAekD,GACtBD,EAAOC,GAASC,EAIbF,GAGEG,GAAe,SAACC,EAAKC,GAC9B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,I,qkBCDxD,IAEarN,GAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,eACVC,QAASC,IACTC,UAAU,IAGP,SAASkE,GAAOmJ,GAAS,IAAD,gBACvB1M,EAAM,GAWV,IATI,MAAC0M,MAAQ5E,WACT,SAAA4E,EAAO5E,WAAP,WAAiB6E,aAAjB,IAAyBzM,QAAS,KAClC,SAAAwM,EAAO5E,WAAP,WAAiB6E,aAAjB,IAAyBzM,QAAS,IAElC8L,GAAWhM,EAAK,WAAY,MAEtB,MAAN0M,KAAQrI,cAAe,SAAAqI,EAAOrI,cAAP,WAAoBsI,aAApB,IAA4BzM,QAAS,KAC5D8L,GAAWhM,EAAK,cAAe,MAE/B4M,OAAOC,KAAK7M,GAAKE,OAAS,EAC1B,MAAO,CAAE4K,SAAS,EAAON,KAAMxK,GAEnC,IAAMwK,EAAO,CACT1C,SAAQ,SAAE4E,EAAO5E,eAAT,EAAE,EAAiB6E,OAC3BtI,YAAW,SAAEqI,EAAOrI,kBAAT,EAAE,EAAoBsI,OACjCnF,QAAS,MAEb,OAAOxI,GAAGmB,YAAH,MAAoBqK,IAAQ,SAACxK,EAAK8B,GACrC,OAAI9B,EACO,CAAE8K,SAAS,EAAON,KAAM,IAE5B,CACHM,SAAS,EACTN,KAAM1I,MAKX,SAAS4H,GAAKxC,EAAI4F,GACrB,IACoC,EAGG,EAGJ,EAP/BtC,EAAO,GACPsC,EAAI9D,eAAe,cACnBwB,EAAK1C,SAAL,SAAgBgF,EAAIhF,eAApB,EAAgB,EAAc6E,QAE9BG,EAAI9D,eAAe,iBACnBwB,EAAKnG,YAAL,SAAmByI,EAAIzI,kBAAvB,EAAmB,EAAiBsI,QAEpCG,EAAI9D,eAAe,aACnBwB,EAAKhD,QAAL,SAAesF,EAAItF,cAAnB,EAAe,EAAamF,QAEhC,OAAO3N,GAAGQ,YAAY,CAAEkM,IAAKxE,GAAM,CAAE6F,KAAK,MAAMvC,KAAUwC,OAAM,SAAChN,GAC7DyK,QAAQwC,IAAIjN,MC/CL,SAASkN,GAAK5G,GACzB,MAA0C6G,mBAAS,IAAnD,WAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAgDF,mBAAS,IAAzD,WAAOG,EAAP,KAAyBC,EAAzB,KAgHA,OACI,eAAChE,EAAA,EAAD,CAAMjH,MAAOmH,EAAOpB,KAApB,UACI,cAACc,EAAA,EAAD,CACI5B,OACIjB,EAAMkH,WACA,CAAE/F,IAAKnB,EAAMkH,YACbC,IAEVnL,MAAOmH,EAAOf,iBAElB,cAAC,IAAD,CACIkB,MAAOD,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMG,YAClC4G,QA1CM,8BAAAzH,EAAAC,OAAA,kEAAAD,EAAA,MACK8N,KAAoC,CACnDC,WAAYD,KAA6BE,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,KALC,WAQW,KAPrBjM,EADU,QAQHkM,UARG,oDAYM,QAAhBtH,IAASC,GAZC,gBAaVsH,MAAM,QAbI,uCAgBFxG,EAAM3F,EAAO2F,IACjBnB,EAAM4H,cAAczG,GAjBd,YAAA7H,EAAA,MAkBewL,KAA6B3D,EAAK,CACnD0G,SAAU,WACXnB,OAAM,SAAChN,GACNyK,QAAQwC,IAAIjN,OArBV,QAkBAoO,EAlBA,OAuBN9H,EAAM+H,SAASD,GAvBT,kDAyBN3D,QAAQwC,IAAR,MAzBM,kEA2CNqB,WAAY,CAAEtK,SAAU,IACxBuK,YAAa9E,EAAOjB,UACpBgG,KACI,cAAC,IAAD,CACIC,KAAK,QACLC,KAAM,GACNtK,MAAM,QACN9B,MAAO,CAAE4B,iBAAkB,OAIvC,cAAC,IAAD,CACI5B,MAAO,CAAEwC,MAAO,OAAWyD,eAAgB,IAC3CzD,MAAO,IAEX,cAAC,IAAD,CACI6J,YAAahF,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMK,YACxCiO,SAAU,cAAC,IAAD,CAAMH,KAAK,SAASC,KAAM,GAAItK,MAAM,SAC9CyK,MAAOlF,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMI,SAClCoO,WAAY,CAAE1K,MAAO,OACrB2K,oBAAoB,EACpBC,UAAW,GACXC,aAAc7B,EACd8B,WAAY,CAAElL,SAAU,GAAIE,iBAAkB,IAC9CiL,MAAO7I,EAAMwB,SACbV,eAAgB,CAAEtC,MAAO,IAAKpB,WAAY,IAC1C0L,aAAc,SAACvF,GACXvD,EAAM+I,YAAYxF,MAI1B,cAAC,IAAD,CACI8E,YAAahF,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMO,eACxC+N,SAAU,cAAC,IAAD,CAAMH,KAAK,OAAOC,KAAM,GAAItK,MAAM,SAC5CyK,MAAOlF,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMM,YAClCkO,WAAY,CAAE1K,MAAO,OACrB4K,UAAW,IACXD,oBAAoB,EACpBE,aAAc3B,EACd4B,WAAY,CAAElL,SAAU,GAAIE,iBAAkB,IAC9CkD,eAAgB,CAAEtC,MAAO,IAAKb,aAAc,GAC5CkL,MAAO7I,EAAMjC,YACb+K,aAAc,SAACvF,GACXvD,EAAMgJ,eAAezF,MAI7B,cAAC,IAAD,CACI0F,QAAQ,EACR3F,MAAOD,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMW,KAClCoG,QAAS,SAACwC,IA7KN,iCAAAjK,EAAAC,OAAA,uDACRmK,EADQ,SACG1D,EAAM0D,UADT,EACqB,EAC3BwF,GACa,IAAflJ,EAAMoD,KACA+F,GAAYnJ,EAAM0D,SAAU,CACxBlC,SAAUxB,EAAMwB,SAChBzD,YAAaiC,EAAMjC,cAEvBoL,GACI,CACI3H,SAAUxB,EAAMwB,SAChBzD,YAAaiC,EAAMjC,aAEvBiC,EAAMhG,MAbR,WAAAV,EAAA,MAeS4P,GAfT,WAgBW,KADjB1N,EAfM,QAgBDgJ,QAhBC,wBAiBJhJ,EAAOkH,eAAe,aACtBqE,EAAiB1D,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMQ,eAE5CgB,EAAOkH,eAAe,gBACtBuE,EACI5D,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMS,mBAAmB,MAtB9C,mBAyBD,GAzBC,eA2BS,IAAbiJ,IACAA,EAAWlI,EAAO4J,KA5Bd,YAAA9L,EAAA,MA6BFwL,KAAiCA,KAAjC,WAAwEpB,EAAY,CAAC0F,eAAe,KA7BlG,cA8BJ,SAAApJ,EAAMtB,YAAN,IAAa9E,QAAS,GA9BlB,wBA+BAyP,EAAU9E,gBACRM,EAAUC,KAhCZ,WAgCmDpB,EAhCnD,kBAAApK,EAAA,MAiCEwL,KAA8BD,EAAM,CAACuE,eAAe,IAAO1C,OAAM,SAAChN,GACpEyK,QAAQwC,IAAI,gCAlCZ,QAoCJ7B,KACID,EAAI,IAAOwE,EAAP,OACJrJ,EAAMtB,MACN,CACImJ,SAAU,WAGb/N,MAAK,WACFqP,GAAYzF,EAAU,CAClBxC,QAAS2D,EAAI,IAAOwE,EAAP,SAEZvP,MAAK,SAACoK,GAOK,IAAD,GANY,IAAflE,EAAMoD,MACN5H,EAAO0F,QAAU2D,EAAI,IAAOwE,EAAP,OACrBrJ,EAAMsJ,WAAU,SAACC,GAAD,qBACTA,GADS,CAEZ/N,QAGJwE,EAAMwJ,kBAAN,SACIxJ,EAAMwB,eADV,EACI,EAAgB6E,QAGxBrG,EAAMyJ,SAET/C,OAAM,SAAChN,GAEJ,OADAyK,QAAQwC,IAAI,YAAajN,IAClB,QAGlBgN,OAAM,SAAChN,GACJyK,QAAQwC,IAAI,kBAAmBjN,MAnEnC,yBAsEe,IAAfsG,EAAMoD,KACNpD,EAAMsJ,WAAU,SAACC,GAAD,qBAAiBA,GAAjB,CAA0B/N,OAE1CwE,EAAMwJ,kBAAN,SAAwBxJ,EAAMwB,eAA9B,EAAwB,EAAgB6E,QAE5CrG,EAAMyJ,MA3EF,6DA8KAC,IAEJ1B,WAAY,CAAEtK,SAAU,IACxBuK,YAAa9E,EAAOhB,QACpBwH,WAAW,EACXzB,KACI,cAAC,IAAD,CACIC,KAAK,OACLC,KAAM,GACNtK,MAAM,QACN9B,MAAO,CAAE4B,iBAAkB,U,qkBClMpC,SAASgM,GAAa5J,GACjC,MAA0B6G,qBAA1B,WAAOnI,EAAP,KAAcqJ,EAAd,KACA,EAAgClB,mBAAS,IAAzC,WAAOrF,EAAP,KAAiBuH,EAAjB,KACA,EAAoClC,qBAApC,WAAOK,EAAP,KAAmBU,EAAnB,KACA,EAAsCf,mBAAS,IAA/C,WAAO9I,EAAP,KAAoBiL,EAApB,KACA,EAA8BnC,oBAAS,GAAvC,WAAOrC,EAAP,KAAgBqF,EAAhB,KAcMC,EAAY,CACd9P,KAAMgG,EAAMhG,KAEZwH,SAAUA,EACVuH,YAAaA,EAEbrK,MAAOA,EACPqJ,SAAUA,EAEVb,WAAYA,EACZU,cAAeA,EAEf7J,YAAaA,EACbiL,eAAgBA,GAGpB,OACI,cAAC/F,EAAA,EAAD,CAAMjH,MAAOmH,EAAOpB,KAApB,SACKyC,EACG,cAACxB,GAAD,SAAa8G,GAAb,IAAwBtG,MA3BtB,WACVuF,EAAY,IACZnB,EAAc,IACdG,EAAS,IACTiB,EAAe,IACfa,GAAW,IAsBmCzG,MAAM,KAE5C,cAACwD,GAAD,SACQkD,GADR,IAEI1G,MAAM,EACNmG,QAASvJ,EAAMuJ,QACfD,UAAWtJ,EAAM+J,WACjBN,IAtCH,WACTI,GAAW,SCbJ7M,WAAWC,OAAO,CAC7BI,UAAW,CACPC,KAAM,GAEVJ,QAAS,CACLE,UAAW,IACXS,UAAW,SACXN,WAAY,UAEhByM,SAAU,CACN1M,KAAM,EACNkB,MAAO,GACPpB,WAAY,KAEhBK,QAAS,CACLL,WAAY,IACZM,SAAU,GACVuM,OAAQ,GAEZC,SAAU,CACNjO,WAAY,OACZ6B,MAAO,WAEXqM,SAAU,CACNtM,UAAW,UAEfa,MAAO,CACHpB,KAAM,EACNkB,MAAO,KAEXI,OAAQ,CACJR,gBAAiB,UACjB6D,eAAgB,GAChB9E,OAAQ,GACRqB,MAAO,IACPN,aAAc,GACdkM,SAAU,UAEdtL,WAAY,CACRhB,MAAO,QACPD,UAAW,SACXT,UAAW,IAEfiN,SAAU,CACNxM,UAAW,SACXN,WAAY,SACZ+M,kBAAmB,OACnBC,kBAAmB,GACnBH,SAAU,UAEdI,cAAe,CACXlN,KAAM,GAEVmN,UAAW,CACP5M,UAAW,SACXoE,eAAgB,GAChBnE,MAAO,OACP4M,UAAW,UAEfC,UAAW,CACPhN,cAAe,IAEnBiN,iBAAkB,CACd/M,UAAW,SACXC,MAAO,UACPJ,SAAU,MC3CH,SAASmN,GAAK7K,GAAQ,IAAD,EAChC,EAAkC6G,oBAAS,GAA3C,WAAOiE,EAAP,KAAkBC,EAAlB,KACA,EAA8BlE,qBAA9B,WAAO0C,EAAP,KAAgBQ,EAAhB,KACA,EAA4BlD,qBAA5B,WAAOmE,EAAP,KAAeC,EAAf,KACA,EAA0BpE,mBAAS,GAAnC,WAAOrG,EAAP,KAAc0K,EAAd,KACA,EAA6BrE,mBACzBsE,EAASnL,EAAMhG,MAAQA,GAAMwF,YADjC,WAAO4L,EAAP,KAAgBC,EAAhB,KAGA,EAA4BxE,oBAAS,GAArC,WAAOyE,EAAP,KAAeC,EAAf,KAEMC,EAASC,iBAAO,MAChBzK,EAAK,SAAG0K,oBAAH,EAAG,EAAe1K,MACvBf,EAAWC,cAEXzG,GAAgB,MAALuH,OAAA,EAAAA,EAAOvH,WAAYuG,EAAMvG,SACpCO,GAAY,MAALgH,OAAA,EAAAA,EAAOhH,OAAQgG,EAAMhG,KAElC2R,qBAAU,WAAO,IAAD,GACPlS,IAAoB,MAARA,GAAA,SAAAA,EAAU4M,aAAV,IAAkBzM,QAAS,EACxCqG,EAAS,KJqBd,SAAakI,GAChB,IAAMyD,EAAQ,IAAIC,OAAO1D,EAAM,KAC/B,OAAOzP,GAAGc,UAAU,CAAEgI,SAAU,CAAEsK,OAAQF,KIrBlCzC,CAAW6B,GAAQlR,MAAK,SAACoK,GACrB6F,EAAW7F,GACX6G,GAAa,MAGrB,IAAMgB,EAAcC,IAAYC,iBAC5B,qBACA,WACI,OAAO,KAGf,OAAO,kBAAMF,EAAYG,YAC1B,CAAClB,EAAQvR,EAAUwG,IAEtB,IAmBmBkM,EAiBnB,OACI,eAAClJ,EAAA,EAAD,CAAMjH,MAAOmH,GAAO9F,UAApB,UACI,eAAC4F,EAAA,EAAD,CAAMjH,MAAOmH,GAAOjG,QAApB,UACI,cAAC2F,EAAA,EAAD,CACI5B,OAAQmL,IACRxJ,WAAW,UACX5G,MAAOmH,GAAO6G,WAElB,cAACjO,EAAA,EAAD,CAAMC,MAAOmH,GAAO1F,QAApB,SACK0N,EAASnR,GAAMsF,MAAM7F,QAG9B,cAACsC,EAAA,EAAD,CAAMC,MAAOmH,GAAOgH,SAApB,SAA+BgB,EAASnR,GAAMuF,UAC9C,cAAC0D,EAAA,EAAD,CAAMjH,MAAOmH,GAAOkH,SAApB,SACI,cAACgC,EAAA,EAAD,CACIrQ,MAAOmH,GAAOvE,OACd0N,cAAe,GACfvL,QAAS,SAACwC,GArDR,IAACgJ,GAsDgB,IAAXjB,IAGJC,GAAU,GACVF,EACI,cAACmB,EAAA,EAAD,CAAmB1O,MAAO,QAASsK,KAAM,YA1DhD,KADEmE,EA6DW/L,EAAQ,KA3D9B+L,EAAM,GAEVf,EAAOiB,QAAQC,SAASH,EAAM/L,GAAO,KA8C7B,SAcI,cAACzE,EAAA,EAAD,CAAMC,MAAOmH,GAAOrE,WAApB,SAAiCsM,QAGzC,cAACuB,EAAA,EAAD,CAAc3Q,MAAOmH,GAAOqH,cAA5B,SACKM,EACG,cAAC0B,EAAA,EAAD,CACI1O,MAAO,OACP9B,MAAO,CAAEoB,UAAW,MAGxB,eAAC,IAAD,CACIwP,IAAKpB,EACLqB,cAAc,EACdC,eAAe,EACfrK,MAAI,EACJsK,eAAa,EACbvM,MAAO,EACPwM,iBAAiB,EACjBC,eAAgB,SAAC1J,GA3EjB,IAACgJ,EACjBrB,EADiBqB,EA4EehJ,GA1EhC2J,YAAW,WACK,IAARX,EACAlB,EAAUF,EAASnR,GAAMwF,YACV,IAAR+M,GACPlB,EAAUF,EAASnR,GAAM2F,cAE7B4L,GAAU,KACX,MA0DS,UAYI,eAAC4B,EAAA,EAAD,WACI,cAAC,IAAD,CACI9E,YAAa8C,EAASnR,GAAM8F,OAC5BsN,oBAAqBjK,GAAOwH,UAC5B7B,aAAc,SAACvF,GACX0H,EAAU1H,IAEdsF,MAAOmC,EACPpC,WAAYzF,GAAOyH,mBAEtBrB,GAAWA,EAAQ3P,OAAS,GA7ElCuS,EA8EmB5C,EA7E3B4C,EAAKkB,KAAI,SAAC/I,EAAIzI,GACjB,OACI,cAACkE,EAAD,CACIS,MAAO3E,EAEPpC,SAAUA,EACVmH,GAAI0D,EAAGc,IACP5D,SAAU8C,EAAG9C,SACbzD,YAAauG,EAAGvG,YAChBmD,QAASoD,EAAGpD,QACZlH,KAAMA,GANDsK,EAAGc,SA2EI,cAACrJ,EAAA,EAAD,CAAMC,MAAOmH,GAAOsH,UAApB,SACKU,EAASnR,GAAM4F,eAI5B,cAACuN,EAAA,EAAD,UACI,cAACvD,GAAD,CACIL,QAASA,EACTQ,WAAYA,EACZ/P,KAAMA,MAGd,cAACmT,EAAA,EAAD,YCrJT,SAASrQ,GAAekD,GACnC,MAA0B6G,mBAAS,IAAnC,WAAOyG,EAAP,KAAcC,EAAd,KACA,EAAkC1G,oBAAS,GAA3C,WAAOiE,EAAP,KAAkBC,EAAlB,KACA,EAAkClE,oBAAS,GAA3C,WAAO2G,EAAP,KAAkBC,EAAlB,KACMxN,EAAWC,cAEjByL,qBAAU,WACN,IAUMI,EAAcC,IAAYC,iBAC5B,qBAXe,WACf,OAAOjT,GAAY,GACdc,MAAK,WAEF,OADAmG,EAAS,MACF,KAEVyG,OAAM,SAAChN,GACJ,OAAO,QAOnB,OAAO,kBAAMqS,EAAYG,YAC1B,IAEH,IAAMwB,EAAgB,SAACJ,GACnBvC,GAAa,GACb,IAAItR,GAAgB,MAAL6T,OAAA,EAAAA,EAAOjH,SAAU,KAC5B5M,IAAoB,MAARA,OAAA,EAAAA,EAAUG,SAAU,IAAa,MAARH,OAAA,EAAAA,EAAUG,QAAS,GlB/B7D,SAA2B0T,GAA3B,SAAAhU,EAAAC,OAAA,yEACIb,EAAGQ,YAAY,CAAEO,SAAU,CAAEL,SAAS,IAAU,CAAEK,SAAU6T,KADhE,4DkBgCKK,CAAYlU,GACPK,MAAK,SAAC8T,GACH7C,GAAa,GACbwC,EAAS9T,GACTgU,GAAa,MAEhB/G,OAAM,SAAChN,GACJyK,QAAQwC,IAAIjN,MAGpBqR,GAAa,IAIrB,OAAKyC,EAmDM,cAAC3C,GAAD,CAAMpR,SAAU6T,EAAOtT,KAAMgG,EAAMhG,OAjDtC,eAACiJ,EAAA,EAAD,CAAMjH,MAAOmH,EAAO9F,UAApB,UACI,cAAC4F,EAAA,EAAD,CAAMjH,MAAOmH,EAAOjG,QAApB,SACI,cAAC2F,EAAA,EAAD,CACI5B,OAAQ4M,IACRjL,WAAW,UACX5G,MAAOmH,EAAOzE,UAGtB,cAAC3C,EAAA,EAAD,CAAMC,MAAOmH,EAAO1F,QAApB,SACKqQ,EAAa9N,EAAMhG,MAAM8C,iBAE9B,cAACf,EAAA,EAAD,CAAMC,MAAOmH,EAAOpF,YAApB,SACK+P,EAAa9N,EAAMhG,MAAM+C,mBAE9B,eAACkG,EAAA,EAAD,CAAMjH,MAAOmH,EAAOjE,QAApB,UACI,cAAC6O,EAAA,EAAD,CACIC,sBAAsB,cACtBhS,MAAOmH,EAAOnF,UACd6K,MAAOyE,EACPjF,YAAahF,EAAcrD,EAAMhG,MAAME,aACvCwO,UAAW,GACXI,aAAc,SAACvF,GACXgK,EAAShK,MAGjB,cAAC8I,EAAA,EAAD,CACIrQ,MAAOmH,EAAOvE,OACd0N,cAAe,GACfvL,QAAS,SAACwC,GACNmK,EAAcJ,IAJtB,SAOI,eAACvR,EAAA,EAAD,CAAMC,MAAOmH,EAAOrE,WAApB,UACK,IACAgM,EACG,cAAC0B,EAAA,EAAD,CACI1O,MAAM,QACNsK,KAAK,QACL6F,WAAW,IAGf,gB,yBCpEjBC,GAhCC,SAAClO,GACb,IAAMwC,EAAe7J,EAAQ,KACvBwK,EAAS,CAAE3E,MAAO,IAAKpB,UAAW,KACxC,OACI,eAAC6F,EAAA,EAAD,CAAMjH,MAAOgE,EAAMhE,MAAnB,UACI,cAAC,EAAD,CACIwG,aAAcA,EACdD,YAAaY,EACbJ,WAAYI,EACZL,YAAaqL,OAEjB,cAACpS,EAAA,EAAD,CACIC,MAAO,CACHoB,UAAW,IACXU,MAAO,UACPU,MAAO,IACPX,UAAW,UALnB,SAQKmC,EAAM1E,OAEX,cAACS,EAAA,EAAD,CAAMC,MAAO,CAAEoB,UAAW,KAA1B,SACI,cAACoP,EAAA,EAAD,CACI1O,MAAO,UACPsK,KAAM,QACNpM,MAAO,CAAEoB,UAAW,Y,mJC7BzBJ,OAAWC,OAAO,CAC7BC,QAAS,CACLmC,eAAgB,SAChB9B,WAAY,UAEhByB,MAAO,CACH1B,KAAM,EACN2B,QAAS,IAEbmP,SAAU,CACN9Q,KAAM,EACN2B,QAAS,GACTb,gBAAiB,WAErBkF,MAAO,CACHxF,MAAO,QACPR,KAAM,EACNI,SAAU,GACVzB,WAAY,OACZmB,WAAY,GACZS,UAAW,UAEfvC,KAAM,CACFwC,MAAO,QACPJ,SAAU,GACVJ,KAAM,EACNF,WAAY,GACZS,UAAW,UAEfa,MAAO,CACHpB,KAAM,EACNkB,MAAO,OACPrB,OAAQ,KAEZwB,gBAAiB,CACbrB,KAAM,EACNF,WAAY,IAEhBwB,OAAQ,CACJxB,UAAW,GACX2B,WAAY,GACZsP,cAAe,GACfxP,WAAY,GACZyP,YAAa,GACblQ,gBAAiB,UACjBF,aAAc,GACdqQ,YAAa,EACbtQ,YAAa,QAEjBa,WAAY,CACRhB,MAAO,OACPD,UAAW,YC9BJ,SAAS2Q,GAASxO,GAC7B,IAAMwC,EAAe7J,EAAQ,KAc7B,OAZAgT,qBAAU,WrBLP,EAAArS,EAAAC,OAAA,yEACIb,EAAGc,UAAU,CAAEC,SAAU,CAAEL,SAAS,KAAU,SAACM,EAAKC,GACvD,OAAOA,MAFR,4DqBOMG,MAAK,SAAC2U,GAAS,IAAD,EACX,YAAIA,EAAI,KAAJ,EAAQhV,SACR,OAAO,cAACoR,GAAD,CAAMpR,SAAUgV,EAAKzU,KAAMgG,EAAMhG,UAG/C0M,OAAM,SAAChN,GACJyK,QAAQwC,IAAIjN,QAErB,IAGC,qCACI,cAAC,EAAD,CACI8I,aAAcA,EACdM,YAAa4L,KACbnM,YAAa,CACToM,SAAU,WACVxR,OAAQ,GACRC,UAAW,IACXyB,WAAY,GACZ+P,QAAS,IAEb7L,WAAY,CACR4L,SAAU,WACVxR,OAAQ,GACRC,UAAW,IACXyB,WAAY,GACZ+P,QAAS,MAGjB,eAAC,IAAD,CACI5S,MAAOmH,GAAOjG,QACd2P,cAAc,EACdG,iBAAiB,EACjBvK,MAAM,EAJV,UAMI,eAACQ,EAAA,EAAD,CAAMjH,MAAOmH,GAAOnE,MAApB,UACI,cAAC6D,EAAA,EAAD,CACI5B,OAAQ4N,KACRjM,WAAW,UACX5G,MAAOmH,GAAOzE,QAElB,cAAC3C,EAAA,EAAD,CAAMC,MAAOmH,GAAOG,MAApB,SACKwK,EAAa9N,EAAMhG,MAAMkC,cAE9B,cAACH,EAAA,EAAD,CAAMC,MAAOmH,GAAO7H,KAApB,SACKwS,EAAa9N,EAAMhG,MAAMmC,oBAIlC,eAAC8G,EAAA,EAAD,CAAMjH,MAAOmH,GAAOiL,SAApB,UACI,cAACvL,EAAA,EAAD,CACI5B,OAAQ6N,KACRlM,WAAW,UACX5G,MAAOmH,GAAOzE,QAElB,cAAC3C,EAAA,EAAD,CAAMC,MAAOmH,GAAOG,MAApB,SACKwK,EAAa9N,EAAMhG,MAAMoC,cAE9B,cAACL,EAAA,EAAD,CAAMC,MAAOmH,GAAO7H,KAApB,SACKwS,EAAa9N,EAAMhG,MAAMqC,kBAIlC,eAAC4G,EAAA,EAAD,CAAMjH,MAAOmH,GAAOnE,MAApB,UACI,cAAC6D,EAAA,EAAD,CACI5B,OAAQ8N,KACRnM,WAAW,UACX5G,MAAOmH,GAAOzE,QAElB,cAAC3C,EAAA,EAAD,CAAMC,MAAOmH,GAAOG,MAApB,SACKwK,EAAa9N,EAAMhG,MAAMsC,cAE9B,cAACP,EAAA,EAAD,CAAMC,MAAOmH,GAAO7H,KAApB,SACKwS,EAAa9N,EAAMhG,MAAMuC,oBAIlC,eAAC0G,EAAA,EAAD,CAAMjH,MAAOmH,GAAOiL,SAApB,UACI,cAACvL,EAAA,EAAD,CACI5B,OAAQ+N,KACRpM,WAAW,UACX5G,MAAOmH,GAAOzE,QAElB,cAAC3C,EAAA,EAAD,CAAMC,MAAOmH,GAAOG,MAApB,SACKwK,EAAa9N,EAAMhG,MAAMwC,cAE9B,cAACT,EAAA,EAAD,CAAMC,MAAOmH,GAAO7H,KAApB,SACKwS,EAAa9N,EAAMhG,MAAMyC,oBAIlC,eAACwG,EAAA,EAAD,CAAMjH,MAAOmH,GAAOnE,MAApB,UACI,cAAC6D,EAAA,EAAD,CACI5B,OAAQgO,KACRrM,WAAW,UACX5G,MAAOmH,GAAOzE,QAElB,cAAC3C,EAAA,EAAD,CAAMC,MAAOmH,GAAOG,MAApB,SACKwK,EAAa9N,EAAMhG,MAAM0C,cAE9B,cAACX,EAAA,EAAD,CAAMC,MAAOmH,GAAO7H,KAApB,SACKwS,EAAa9N,EAAMhG,MAAM2C,kBAIlC,eAACsG,EAAA,EAAD,CAAMjH,MAAOmH,GAAOiL,SAApB,UACI,cAACvL,EAAA,EAAD,CACI5B,OAAQiO,KACRtM,WAAW,UACX5G,MAAOmH,GAAOzE,QAElB,cAAC3C,EAAA,EAAD,CAAMC,MAAOmH,GAAOG,MAApB,SACKwK,EAAa9N,EAAMhG,MAAM4C,iBAE9B,cAACqG,EAAA,EAAD,CAAMjH,MAAOmH,GAAOxE,gBAApB,SACI,cAAC,IAAD,CACIqG,GAAG,YACHmK,UAAW9C,IACXrQ,MAAOmH,GAAOvE,OACdmC,QAAS,SAACwC,GACN6L,GAAmB,IAEvB9C,cAAe,GAPnB,SASI,eAACvQ,EAAA,EAAD,CAAMC,MAAOmH,GAAOrE,WAApB,UACK,IACAgP,EAAa9N,EAAMhG,MAAM6C,eAAgB,oBCrJ1E,IAUewS,GAVQ,SAACrP,GAAW,IAAD,EAC9B,OAAI,MAACA,KAAO7G,gBAGR,MAAC6G,MAAOvG,WAAiB,MAALuG,GAAA,SAAAA,EAAOvG,eAAP,IAAiBG,QAAS,EACvC,cAACkD,GAAD,CAAgB9C,KAAMgG,EAAMhG,OAEhC,cAAC6Q,GAAD,CAAM7Q,KAAMgG,EAAMhG,KAAMP,SAAUuG,EAAMvG,WALpC,cAAC+U,GAAD,CAAUxU,KAAMgG,EAAMhG,Q,0CCN/BqB,GAAiB,SAACC,GACpB,IAAIC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQ6B,MAAO,WAAlD,SACKnC,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLxB,GAAO,CAChBC,GAAI,CACAqF,MAAO,SAAC7F,GACJ,OAAO4B,GAAe,CAClBI,SAAU,gBACVE,SAAU,CAAClC,MAGnB6V,WAAY,eACZC,MAAO,QACPC,SAAU,gBACV3E,KAAM,UACN4E,cAAe,qBACfC,aAAc,qBACdC,cAAe,sBACfC,aAAc,2BACdC,MAAO,iBACPC,aAAc,gBACdC,WAAY,gBACZC,KAAM,qBACNC,oBAAqB,+BACrBC,KAAM,8BACNC,UAAW,iBACXC,WAAY,iBACZC,QAAS,sDACTrN,QAAS,cACTsN,OAAQ,iBACRC,eAAgB,yBAEhBC,WAAY,UAEhBpV,GAAI,CACAkE,MAAO,SAAC7F,GACJ,OAAO4B,GAAe,CAClBI,SAAU,aACVE,SAAU,CAAClC,MAGnB6V,WAAY,aACZC,MAAO,QACPC,SAAU,WACV3E,KAAM,OACN4E,cAAe,qBACfC,aAAc,oBACdC,cAAe,qBACfC,aAAc,2BACdC,MAAO,gBACPE,WAAY,YACZC,KAAM,eACNF,aAAc,gBACdG,oBAAqB,uBACrBC,KAAM,0BACNC,UAAW,aACXC,WAAY,cACZC,QAAS,2CACTrN,QAAS,UACTsN,OAAQ,cACRC,eAAgB,oBAEhBC,WAAY,W,mBC1ELxT,OAAWC,OAAO,CAC7B6D,eAAgB,CACZvD,WAAY,SACZH,UAAW,GACXO,aAAc,IAElBsK,YAAa,CACTzJ,MAAO,IACPrB,OAAQ,IAEZsT,kBAAmB,CACfjS,MAAO,IACPrB,OAAQ,IAEZuT,kBAAmB,CACflS,MAAO,IACPrB,OAAQ,GACRiB,gBAAiB,OAErBuS,gBAAiB,CACbnS,MAAO,IACPrB,OAAQ,GACRiB,gBAAiB,WAErBwS,iBAAkB,CACdpS,MAAO,IACPrB,OAAQ,GACRiB,gBAAiB,Y,qkBCdV,SAASoR,GAASxP,GAAQ,IAAD,UACpC,EAAwB6G,oBAAS,GAAjC,WAAOzD,EAAP,KAAayN,EAAb,KACA,EAA8BhK,oBAAS,GAAvC,WAAOrC,EAAP,KAAgBqF,EAAhB,KACA,EAA0BhD,qBAA1B,WAAOnI,EAAP,KAAcqJ,EAAd,KACA,EAAgClB,mBAAS7G,EAAMoG,OAAO5E,UAAtD,WAAOA,EAAP,KAAiBuH,EAAjB,KACA,EAAoClC,mBAAS7G,EAAMoG,OAAOlF,SAA1D,WAAOgG,EAAP,KAAmBU,EAAnB,KACA,EAAsCf,mBAAS7G,EAAMoG,OAAOrI,aAA5D,WAAOA,EAAP,KAAoBiL,EAApB,KAEM/I,EAAWC,cAcX4J,EAAY,CACd9P,KAAMgG,EAAMhG,KAEZwH,SAAUA,EACVuH,YAAaA,EAEbrK,MAAOA,EACPqJ,SAAUA,EAEVb,WAAYA,EACZU,cAAeA,EAEf7J,YAAaA,EACbiL,eAAgBA,GAGd8H,EAAe,WZoBlB,IAA0BlQ,KYnBPZ,EAAM0D,SZmBzB,EAAApK,EAAAC,OAAA,kEAAAD,EAAA,MACGyX,GAAQC,YAAY,CAAEtN,SAAU9C,KADnC,yBAAAtH,EAAA,MAEG2X,GAAaD,YAAY,CAAEtN,SAAU9C,KAFxC,yBAAAtH,EAAA,MAGGwL,KAA0BA,KAA1B,WAAiElE,GAAM8F,OAAM,SAAAhN,GAC/EyK,QAAQC,MAAM,qBAAqB1K,OAJpC,gCAMIhB,GAAGsY,YAAY,CAAE5L,IAAKxE,KAN1B,6DYnBmC9G,MAAK,SAACoX,GACpCjR,EAAS,aAqBjB,OACI,cAACgD,EAAA,EAAD,CAAMjH,MAAO,CAAEsB,KAAM,GAArB,UACc,IAAT8F,EACG,eAAC+J,EAAA,EAAD,CAAYnR,MAAO,CAAEsB,KAAM,GAA3B,UACI,cAAC,IAAD,CACI4K,KAAM,CACFC,KAAM,OACNgJ,KAAM,eACN/I,KAAM,GACNtK,MAAO,SAEXsT,mBAAoB,CAAE9C,YAAa,IACnCrG,YAAa9E,GAAO8E,YACpBnH,eAAgBqC,GAAOrC,eACvBC,QAAS,WACL8P,GAAQ,IAEZvN,MAAK,SAAE+N,GAAerR,EAAMhG,YAAvB,EAAE,EAA4ByV,gBAEvC,cAAC,IAAD,CACIvH,KAAM,CACFC,KAAM,YACNgJ,KAAM,eACN/I,KAAM,GACNtK,MAAO,SAEXsT,mBAAoB,CAAE9C,YAAa,IACnCrG,YAAa9E,GAAO8E,YACpBnH,eAAgBqC,GAAOrC,eACvBwC,MAAK,SAAE+N,GAAerR,EAAMhG,YAAvB,EAAE,EAA4B0V,eAEvC,cAAC,IAAD,CACIxH,KAAM,CACFC,KAAM,SACNgJ,KAAM,eACN/I,KAAM,GACNtK,MAAO,SAEXsT,mBAAoB,CAAE9C,YAAa,IACnCrG,YAAa9E,GAAOuN,kBACpB5P,eAAgBqC,GAAOrC,eACvBwC,MAAK,SAAE+N,GAAerR,EAAMhG,YAAvB,EAAE,EAA4B2V,cACnC5O,QAAS,WA1DlBuQ,KAAM3J,MACTtE,EAAcrD,EAAMhG,MAAMiB,WAC1BoI,EAAcrD,EAAMhG,MAAMkB,aAAa8E,EAAMvG,UAC7C,CACI,CACI6B,KAAM+H,EAAcrD,EAAMhG,MAAMe,IAChCgG,QAAS,WACL+P,MAGR,CACIxV,KAAM+H,EAAcrD,EAAMhG,MAAMgB,SAmDhC,cAAC,IAAD,CACIkN,KAAM,CACFC,KAAM,aACNgJ,KAAM,eACN/I,KAAM,GACNtK,MAAO,SAEXsT,mBAAoB,CAAE9C,YAAa,IACnCrG,YAAa9E,GAAOwN,gBACpB7P,eAAgBqC,GAAOrC,eACvBwC,MAAK,SAAE+N,GAAerR,EAAMhG,YAAvB,EAAE,EAA4BkW,KACnCnP,QAAS,WACLd,EAAS,eAKrB,eAACkN,EAAA,EAAD,CAAYnR,MAAO,CAAEsB,KAAM,EAAGc,gBAAiB,SAA/C,UACI,cAAC,IAAD,CACI8J,KAAM,CACFC,KAAM,oBACNgJ,KAAM,eACN/I,KAAM,GACNtK,MAAO,SAEXsT,mBAAoB,CAAE9C,YAAa,IACnCrG,YAAa9E,GAAOsN,kBACpB3P,eAAgBqC,GAAOrC,eACvBwC,MAAK,SAAE+N,GAAerR,EAAMhG,YAAvB,EAAE,EAA4BwW,WACnCzP,QAAS,kBAAM8P,GAAQ,MAE1BrM,EACG,cAACxB,GAAD,SAAa8G,GAAb,IAAwBtG,MA7H9B,WACVuF,EAAY/I,EAAMoG,OAAO5E,UACzBoG,EAAc5H,EAAMoG,OAAOlF,SAC3B6G,EAAS,IACTiB,EAAehJ,EAAMoG,OAAOrI,aAC5B8L,GAAW,IAwH2CzG,MAAM,KAE5C,cAACwD,GAAD,SACQkD,GADR,IAEI1G,MAAM,EACNmG,QAASvJ,EAAMoG,OACfoD,kBAAmBxJ,EAAM+I,YACzBrF,SAAU1D,EAAM0D,SAChB+F,IAzIX,WACTI,GAAW,Y,sBCTN7P,GAAO,CAChBC,GAAI,CACAsX,MAAO,cACPC,MAAO,QACPC,KAAM,OACNC,SAAU,YACVC,SAAU,aACVC,YAAa,uBACbC,mBAAoB,oDACpBtQ,MAAO,0BACPuQ,OAAQ,UACRnX,KAAM,cACNoX,YAAa,8CACbC,YAAa,kCACbC,gBACI,qGACJvS,OAAQ,YACRwS,WAAY,sCAEhB9W,GAAI,CACAmW,MAAO,kBACPC,MAAO,kBACPC,KAAM,iBACNC,SAAU,qBACVC,SAAU,WACVC,YAAa,iBACbC,mBAAoB,wCACpBtQ,MAAO,cACPuQ,OAAQ,SACRnX,KAAM,OACNoX,YAAa,qCACbC,YAAa,mBACbC,gBACI,oEACJvS,OAAQ,SACRwS,WAAY,sB,qkBC/CL,SAASnS,GAAKC,GACzB,MAAkC6G,oBAAS,GAA3C,WAAOsL,EAAP,KAAkBC,EAAlB,KACA,EAAgCvL,mBAAS,GAAzC,WAAOwL,EAAP,KAAiBC,EAAjB,KACA,EAA0BzL,mBAAS,IAAI0L,KAAMC,OAA7C,WAAOC,EAAP,KAAcC,EAAd,KAEA/G,qBAAU,WACNyG,GAAa,KACd,CAACpS,EAAM2S,gBAEV,IA2CIxS,EACgB,QAAhBC,IAASC,GACH1H,EAAQ,KAAgC2H,QACxC,KACNC,EACAP,EAAMQ,MAAQ,IAAM,EACd,CAAEpC,gBAAiB,SACnB,CAAEA,gBAAiB,WACzBqC,EACgB,QAAhBL,IAASC,GACH,CACIK,UAAWP,EACXQ,IAAKX,EAAMoF,IACXvE,eAAe,EACfC,eAAgBP,GAEpB,CAAEI,IAAKX,EAAMoF,IAAKvE,eAAe,EAAMC,eAAgBP,GACjE,OACI,eAAC,IAAD,SACQE,GADR,IAEIM,QAASoR,EAzBE,oBAAA7Y,EAAAC,OAAA,kEAAAD,EAAA,MACTmZ,EAAMG,cADG,OAEfR,GAAa,GAFE,6DAtCD,0BAAA9Y,EAAAC,OAAA,2EAAAD,EAAA,MAEJ0G,EAAM6S,YAFF,yBAAAvZ,EAAA,MAGJiZ,KAAMO,kBAAkB,CAC1BC,yBAAyB,EACzBC,mBAAmB,KALb,cAOVZ,GAAa,GAPH,WAAA9Y,EAAA,YAQmBmZ,OARnB,EAQmBA,EAAOQ,kBAR1B,WASuB,KAAf,OADZC,EARI,aASN,EAAAA,EAAgBC,UATV,oCAAA7Z,EAAA,MAUAmZ,EAAMW,UAAU,CAAEjS,IAAKnB,EAAM6E,QAV7B,QAWN6N,EAASD,GACTzS,EAAMqT,iBAAN,eAA2BrT,EAAM2S,eAAjC,CAAgDF,KAZ1C,wBAcNzS,EAAMqT,iBAAN,KAA2BrT,EAAM2S,gBAd3B,2BAAArZ,EAAA,MAgBJmZ,EAAMa,aAhBF,QAiBVb,EAAMc,2BAA0B,SAAOC,GAAP,SAAAla,EAAAC,OAAA,oDACxBia,EAAeC,cADS,kCAAAna,EAAA,MAElBmZ,EAAMiB,eAFY,OAGxBpB,EAAY,GACZF,GAAa,GAJW,sBAMxBoB,EAAeG,eACXH,EAAeI,uBACnB,GAEAtB,EACIkB,EAAeG,eACXH,EAAeI,wBAZC,+DAgBhCxB,GAAa,GAjCH,kDAmCVjO,QAAQC,MAAR,MAnCU,kEA6Dd,UAII,cAAC,IAAD,CACI6E,QAAM,EACNd,KAAMgK,EAAY,eAAiB,sBACnChB,KAAM,UACNrT,MAAO,SAEX,eAAC,IAASwD,QAAV,WACI,cAAC,IAASC,MAAV,UAAiBvB,EAAMsD,QACvB,cAAC,IAAS7B,SAAV,UAAoBzB,EAAM6D,OAC1B,cAAC,IAAD,CACI7H,MAAO,CAAEiG,eAAgB,IACzB4G,MAAOwJ,EACPwB,QAAQ,cACRC,UAAW,CAAEC,SAAU,QAG/B,cAAC,IAAD,CACIC,SAAO,EACP5L,KAAM,GACNpM,MAAO,CAAEoC,gBAAiB,OAC1B+J,KAAM,gBACNgJ,KAAM,UACNrT,MAAO,MACPiD,QAAS,SAACwC,GACNvD,EAAMiU,SAASjU,EAAMoF,YCrG1BpI,WAAWC,OAAO,CAC7B8E,KAAM,CACFE,eAAgB,GAChB3E,KAAM,EACNC,WAAY,UAEhBuD,eAAgB,CACZtC,MAAO,OAEX0V,aAAc,CACV9V,gBAAiB,OAErB+V,YAAa,CACTlY,WAAY,QAEhBmY,kBAAmB,CACfjV,cAAe,OAEnBkV,cAAe,CACXzW,iBAAkB,GAEtB0W,SAAU,CACNlW,gBAAiB,QACjBT,aAAc,GACdR,OAAQ,OACRqB,MAAO,QAEX+V,QAAS,CACL/W,aAAc,SACdJ,UAAW,IAEfoX,WAAY,CACR3W,UAAW,SACXC,MAAO,OACPV,UAAW,IAEfqX,QAAS,CACLjW,MAAO,OACPpB,UAAW,IAEfsX,QAAS,CACLxW,aAAc,GACdC,kBAAmB,GACnBwW,gBAAiB,GACjBpX,WAAY,UAEhBqX,aAAc,CACV3Y,WAAY,OACZ4B,UAAW,SACXH,SAAU,GACVuE,eAAgB,IAEpB4S,mBAAoB,CAChBhX,UAAW,SACXoE,eAAgB,GAChBzD,MAAO,KAEXsW,aAAc,CACVpX,SAAU,GACVE,iBAAkB,MC9BX,SAASmS,GAAW/P,GAC/B,MAAkC6G,qBAAlC,WAAOkO,EAAP,KAAkBC,EAAlB,KACA,EAA8BnO,mBAAS,IAAvC,WAAOoO,EAAP,KAAgBC,EAAhB,KACA,EAA0BrO,qBAA1B,WAAOvD,EAAP,KAAc6R,EAAd,KACA,EAA0CtO,mBAAS,IAAnD,WAAO8L,EAAP,KAAsBU,EAAtB,KACA,EAA0BxM,oBAAS,GAAnC,WAAOuO,EAAP,KAAcC,EAAd,KACA,EAAgCxO,mBAAS,GAAzC,WAAOoN,EAAP,KAAiBqB,EAAjB,KACA,EAAkCzO,oBAAS,GAA3C,WAAOiE,EAAP,KAAkBC,EAAlB,KACA,EAA0BlE,oBAAS,GAAnC,WAAO0O,EAAP,KAAcC,EAAd,KA8CA,SAAeC,IAAf,SAAAnc,EAAAC,OAAA,uDACIic,GAAS,GADb,WAAAlc,EAAA,MAEUyb,EAAUW,sBAFpB,OAGIL,GAAS,GAHb,4DA5CA1J,qBAAU,WAINgK,GAAQ3V,EAAM0D,UAAU5J,MAAK,SAACoK,GAC1BgR,EAAWhR,GACX6G,GAAa,MAIjB,IAUMgB,EAAcC,IAAYC,iBAC5B,qBAXe,WAQf,OAPI8I,GACAU,KAEa,MAAb9C,OAAA,EAAAA,EAAe/Y,QAAS,GACxBgc,IAEJ5V,EAAM6V,QAAQ,OACP,KAMX,OAAO,kBAAM9J,EAAYG,YAC1B,CAAC6I,EAAWpC,IAmCf,IAAMmD,EAAa,8BAAAxc,EAAAC,OAAA,mDACXsL,EAAOkQ,EAAUgB,SACD,QAAhB3V,IAASC,GAFE,uBAGL2V,EAAYlR,KAHP,WAG8C9E,EAAM0D,SAHpD,cAIL9K,EAAW2L,gBAJN,WAAAjL,EAAA,MAKLwL,KAAqB,CACvBC,KAAMF,EACNG,GAAIgR,GAAYpd,EAAN,WAPH,yBAAAU,EAAA,MASLwL,KAAuBD,IATlB,OAUXA,EAAOmR,GAAYpd,EAAN,QAVF,QpB1FAqd,EoBsGJ,CACP9N,MAAW,MAAL7E,OAAA,EAAAA,EAAO+C,SAAU6P,GAAelW,EAAMhG,MAAM2X,SAClD9M,KAAMA,EACNnB,SAAU1D,EAAM0D,UpBxGjBhL,GAAGmB,YAAY,CAClBsO,KAAM8N,EAAO9N,KACbtE,KAAM,IAAIsS,KACVtR,KAAMoR,EAAOpR,KACbnB,SAAUuS,EAAOvS,YoBqGd5J,MAAK,SAACsc,GACDf,GAAS,GACTF,EAAS,IACTH,GAAa,MAClBtO,OAAM,SAAChN,GACNyK,QAAQwC,IAAIjN,MArBD,kCpB1FhB,IAAgBuc,IoB0FA,yBA0BbI,EAAe,YpBlGlB,SAAmB3S,EAAU9C,GAA7B,eAAAtH,EAAAC,OAAA,kEAAAD,EAAA,MACgBZ,GACdiL,KAAK,CAAED,SAAUA,EAAU0B,IAAKxE,IAChCkD,MAAK,SAACpK,EAAK+U,GACR,OAAOA,MAJZ,YACGvK,EADH,0CAAA5K,EAAA,MAOOwL,KAAuBZ,EAAK,GAAGW,OAPtC,gCASInM,GAAGsY,YAAY,CAAE5L,IAAKxE,EAAI8C,SAAUA,KATxC,6DoBmGCiS,CAAQ3V,EAAM0D,SAAUuQ,GACnBna,MAAK,SAACoK,GACHoR,EAAY,GACZK,GAAQ3V,EAAM0D,UACT5J,MAAK,SAACoK,GACHgR,EAAWhR,MAEdwC,OAAM,SAAChN,GACJyK,QAAQwC,IAAIjN,SAGvBgN,OAAM,SAAChN,GACJyK,QAAQwC,IAAIjN,OAIlB4c,EAAS,oBAAAhd,EAAAC,OAAA,kEAAAD,EAAA,YACLyb,OADK,EACLA,EAAWW,sBADN,OAEXE,IACA5V,EAAM6V,QAAQ,GAHH,6DAOTD,EAAoB,WACtBjD,EAActF,KAAI,SAAC/I,EAAIzI,GACnByI,EAAGoP,kBAKLb,EAAW,oBAAAvZ,EAAAC,OAAA,gDACToZ,EAAc/Y,OAAS,IACV,MAAb+Y,KAAetF,KAAI,SAAO/I,EAAIzI,GAAX,SAAAvC,EAAAC,OAAA,kEAAAD,EAAA,MACTgL,EAAGsO,aAAalM,OAAM,SAAChN,GACzByK,QAAQwC,IAAI,4BAFD,gEAFV,6DAUjB,OACI,eAAC1D,EAAA,EAAD,CAAMjH,MAAOmH,GAAOpB,KAApB,UAEI,eAAC,IAAD,CACIwU,QAASnB,EACToB,aAAcrT,GAAOuR,QACrB+B,gBAAiB,kBAAMX,KACvBY,eAAgBC,KAJpB,UAMI,cAAC,IAAD,CAAM3a,MAAOmH,GAAOyR,aAApB,SACKsB,GAAelW,EAAMhG,MAAM4X,cAEhC,cAAC,IAAD,CAAM5V,MAAOmH,GAAOyR,aAApB,SACKsB,GAAelW,EAAMhG,MAAM6X,qBAEhC,cAAC,IAAD,CACIxJ,YAAa6N,GAAelW,EAAMhG,MAAM+X,YACxCzJ,SACI,cAAC,IAAD,CACIH,KAAK,eACLC,KAAM,GACNtK,MAAM,OACNqT,KAAK,YAGb5I,MAAO2N,GAAelW,EAAMhG,MAAMuH,MAClCmH,UAAW,GACXE,WAAYzF,GAAO2R,aACnBjM,MAAOvF,EACPwF,aAAc,SAACvF,GACX4R,EAAS5R,MAGjB,eAACN,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UACI,cAAC,IAAD,CACImE,MAAO4S,GAAelW,EAAMhG,MAAM8X,OAClC7J,YAAa,CAAE7J,gBAAiB,OAChC0C,eAAgB,CAAEwN,YAAa,IAC/BvN,QAAS+U,IAEb,cAAC,IAAD,CACIxS,MAAO4S,GAAelW,EAAMhG,MAAMW,KAClCsN,YAAa,CAAEhM,WAAY,QAC3B8E,QAAS+U,UAMrB,eAAC,IAAD,CACIS,QAAsB,IAAbtC,EACTuC,aAAcrT,GAAOuR,QACrBgC,eAAgBC,KAHpB,UAKI,cAAC,IAAD,CAAM3a,MAAOmH,GAAOyR,aAApB,SACKsB,GAAelW,EAAMhG,MAAMgY,cAEhC,cAAC,IAAD,CAAMhW,MAAOmH,GAAO0R,mBAApB,SACKqB,GAAelW,EAAMhG,MAAMiY,kBAEhC,eAAChP,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UACI,cAAC,IAAD,CACImE,MAAO4S,GAAelW,EAAMhG,MAAM8X,OAClC7J,YAAa,CAAEhM,WAAY,QAC3B6E,eAAgB,CAAEwN,YAAa,IAC/BvN,QAAS,SAACwC,GACN+R,EAAY,MAGpB,cAAC,IAAD,CACIhS,MAAO4S,GAAelW,EAAMhG,MAAM0F,OAClCuI,YAAa,CAAE7J,gBAAiB,OAChC2C,QAAS,SAACwC,GACN8S,aAMftB,EAEG,eAAC9R,EAAA,EAAD,CAAMjH,MAAOmH,GAAOiR,kBAApB,UACI,cAAC,IAAD,CACI9Q,MACIiS,EACMW,GAAelW,EAAMhG,MAAM0X,SAC3BwE,GAAelW,EAAMhG,MAAMwX,MAErC1Q,eAAgBqC,GAAOkR,cACvBnM,KAAM,CACFC,KAAMoN,EACA,sBACA,uBACNpE,KAAM,UACN/I,KAAM,GACNtK,MAAO,SAEXiD,QAASwU,EAzK7B,oBAAAjc,EAAAC,OAAA,uDACIic,GAAS,GADb,WAAAlc,EAAA,MAEUyb,EAAU6B,cAFpB,6DALA,oBAAAtd,EAAAC,OAAA,uDACIic,GAAS,GADb,WAAAlc,EAAA,MAEUyb,EAAUnC,cAFpB,+DAiLgB,cAAC,IAAD,CACItP,MAAO4S,GAAelW,EAAMhG,MAAMyX,KAClC3Q,eAAgBqC,GAAOkR,cACvBnM,KAAM,CACFC,KAAM,sBACNgJ,KAAM,UACN/I,KAAM,GACNtK,MAAO,SAEXiD,QAAS0U,IAEb,cAAC,IAAD,CACI3U,eAAgBqC,GAAOkR,cACvBnM,KAAM,CACFC,KAAM,qBACNgJ,KAAM,UACN/I,KAAM,GACNtK,MAAO,SAEXmK,YAAa9E,GAAO+Q,aACpB5Q,MAAO,GACP0E,WAAY7E,GAAOgR,YACnBpT,QAAS,kBAAMuV,UAKvB,eAACrT,EAAA,EAAD,CAAMjH,MAAOmH,GAAOiR,kBAApB,UACA,cAAC,IAAD,CACItT,eAAgBqC,GAAOrC,eACvBoH,KAAM,CACFC,KAAM,aACNgJ,KAAM,UACN/I,KAAM,GACNtK,MAAO,SAEXmK,YAAa9E,GAAO+Q,aACpB5Q,MAAO4S,GAAelW,EAAMhG,MAAMuX,MAClCvJ,WAAY7E,GAAOgR,YACnBpT,QA/OhB,4BAAAzH,EAAAC,OAAA,2EAAAD,EAAA,MAEciZ,KAAMsE,2BAFpB,yBAAAvd,EAAA,MAGciZ,KAAMO,kBAAkB,CAC1BgE,oBAAoB,EACpBC,sBAAsB,EACtBhE,yBAAyB,KANrC,yBAAAzZ,EAAA,MAQoCiZ,KAAMyE,UAAUC,YACxC1E,KAAM2E,wCATlB,gBAQgBnC,EARhB,EAQgBA,UAGRC,EAAaD,GAXrB,kDAaQ5Q,QAAQC,MAAM,4BAAd,MAbR,oEAiPY,cAAC,IAAD,CACItD,eAAgBqC,GAAOkR,cACvBnM,KAAM,CACFC,KAAM,qBACNgJ,KAAM,UACN/I,KAAM,GACNtK,MAAO,SAEXmK,YAAa9E,GAAO+Q,aACpB5Q,MAAO,GACP0E,WAAY7E,GAAOgR,YACnBpT,QAAS,kBAAMuV,UAIvB,cAAC,IAAD,CAASta,MAAOmH,GAAOsR,QAASjW,MAAO,IACvC,cAACmO,EAAA,EAAD,CAAc3Q,MAAOmH,GAAOmR,SAA5B,SACI,cAACnH,EAAA,EAAD,CAAYnR,MAAO,CAAC2B,aAAc,IAAlC,SACKmN,EACG,cAAC0B,EAAA,EAAD,CACI1O,MAAO,OACPsK,KAAM,QACNpM,MAAOmH,GAAOoR,UAElBU,EAAQrb,OAAS,EACjBqb,EAAQ5H,KAAI,SAAC/I,EAAIzI,GACb,OACI,cAAC,GAAD,CACIgX,SAAUA,EACVF,cAAeA,EACfU,iBAAkBA,EAClBY,SAAUqB,EACV9U,MAAO3E,EAEPyH,MAAOgB,EAAG6D,KACV/C,IAAKd,EAAGc,IACRvB,KAASS,EAAGT,KAAKsT,mBACb,SADA,IAEC7S,EAAGT,KAAKuT,mBAAmB,SAChCvS,KAAMP,EAAGO,MANJP,EAAGc,QAWpB,cAAC,IAAD,CAAMpJ,MAAOmH,GAAOqR,WAApB,SACK0B,GAAelW,EAAMhG,MAAMkY,oBChWxD,IAAM7W,GAAiB,SAACC,EAAM+b,GAC1B,IAAIvZ,EAAQ,UACA,QAARuZ,EACAvZ,EAAQ,UACO,UAARuZ,IACPvZ,EAAQ,WAEZ,IAAIvC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQ6B,MAAOA,GAAlD,SACKnC,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLxB,GAAO,CAChBC,GAAI,CACAqd,KAAM,QACNC,KAAM,uBACNC,MAAO,SACPvc,WAAY,2BACZwc,SACI,gHACJC,UAAW,SAACC,GACR,OAAOtc,GAAe,CAClBI,SAAU,sBACVE,SAAU,CAACgc,MAGnBC,WAAY,SAACC,GACT,OAAOxc,GAAe,CAClBI,SAAU,8BACVE,SAAU,CAACkc,MAGnBC,SAAU,WACN,OAAOzc,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,qBAGnBoc,SAAU,WACN,OAAO1c,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,gCAGnBqc,OAAQ,WACJ,OAAO3c,GACH,CACII,SAAU,MACVE,SAAU,CAAC,kBAEf,QAGRsc,QAAS,WACL,OAAO5c,GACH,CACII,SAAU,MACVE,SAAU,CAAC,oBAEf,UAGRuc,MAAO,SAACC,GACJ,OAAO9c,GACH,CACII,SAAU,2BACVE,SAAU,CAACwc,IAEf,QAGRC,eAAgB,SAACnU,GACb,OAAO5I,GAAe,CAClBI,SAAU,oDACVE,SAAU,CAACsI,MAGnBoU,SAAU,SAACC,EAAOC,GACd,OAAOld,GAAe,CAClBI,SAAS,6BAAwB8c,EAAzB,SACR5c,SAAU,CAAC2c,MAGnBE,gBAAiB,sBACjBC,MAAO,aACPC,eAAgB,yFAChBC,MAAO,cACPC,KAAM,mBACNC,OAAQ,aACRtH,MAAO,uBACPO,OAAQ,UACRgH,WAAY,4BAMZC,KAAM,mCACNC,UAAW,gBACXC,UAAW,aACXC,MAAO,WACH,OAAO7d,GAAe,CAClBI,SAAS,4bACTE,SAAU,CAAC,oBAAkB,aAAW,iBAAkB,6DAA8D,oDAAyC,aAGzKwd,aAAc,WACV,OAAO9d,GAAe,CAClBI,SAAS,+SACTE,SAAU,CAAC,kBAAmB,iBAAkB,gCAAiC,qDAI7FP,GAAI,CACAkc,KAAM,OACNC,KAAM,OACNC,MAAO,UACPvc,WAAY,gBACZwc,SACI,qGACJC,UAAW,SAACC,GACR,OAAOtc,GAAe,CAClBI,SAAU,kBACVE,SAAU,CAACgc,MAGnBC,WAAY,SAACC,GACT,OAAOxc,GAAe,CAClBI,SAAU,wBACVE,SAAU,CAACkc,MAGnBC,SAAU,WACN,OAAOzc,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,iBAGnBoc,SAAU,WACN,OAAO1c,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,wBAGnBqc,OAAQ,WACJ,OAAO3c,GACH,CACII,SAAU,MACVE,SAAU,CAAC,gBAEf,QAGRuc,MAAO,SAACC,GACJ,OAAO9c,GACH,CACII,SAAU,uBACVE,SAAU,CAACwc,IAEf,QAGRF,QAAS,WACL,OAAO5c,GACH,CACII,SAAU,MACVE,SAAU,CAAC,gBAEf,UAGRyc,eAAgB,SAACnU,GACb,OAAO5I,GAAe,CAClBI,SAAU,qCACVE,SAAU,CAACsI,MAGnBoU,SAAU,SAACC,EAAOC,GACd,OAAOld,GAAe,CAClBI,SAAS,aAAc8c,EAAf,SACR5c,SAAU,CAAC2c,MAGnBE,gBAAiB,oBACjBC,MAAO,YACPC,eACI,6DACJC,MAAO,QACPC,KAAM,OACNC,OAAQ,UACRtH,MAAO,eACPO,OAAQ,SACRgH,WAAY,sBAMZC,KAAK,gCACLC,UAAW,YACXC,UAAW,YACXC,MAAO,WACH,OAAO7d,GAAe,CAClBI,SAAS,iZACTE,SAAU,CAAC,cAAe,UAAW,mBAAoB,oDAAqD,4CAA6C,UAGnKwd,aAAc,WACV,OAAO9d,GAAe,CAClBI,SAAS,kOACTE,SAAU,CAAC,aAAc,qBAAsB,2BAA4B,0C,qBC3N5EqB,OAAWC,OAAO,CAC7B8E,KAAM,CACFhD,WAAY,GACZzB,KAAM,EACNC,WAAY,UAEhB6b,KAAM,CACF5a,MAAO,GACPrB,OAAQ,GACR8E,eAAgB,GAChB2M,QAAS,GACTjR,aAAc,IAElBiB,OAAQ,CACJJ,MAAO,IACPb,aAAc,GACdO,aAAc,GACdN,iBAAkB,GAEtByb,YAAa,CACT7a,MAAO,IACPpB,UAAW,GACXgB,gBAAiB,MACjBF,aAAc,GACdN,iBAAkB,GAEtB0b,eAAgB,CAEZ9a,MAAO,IACPrB,OAAQ,IACRe,aAAc,GACd0Q,QAAS,IAEb2K,YAAa,CAET/a,MAAO,IACPrB,OAAQ,IACRe,aAAc,GACd0Q,QAAS,IAEb4K,gBAAiB,CACb3a,WAAY,GACZyP,YAAa,IAEjBmL,WAAY,CACRC,oBAAqB,GACrBtb,gBAAiB,WAErBub,SAAU,CACNrL,YAAa,GACbsL,qBAAsB,GACtBxb,gBAAiB,WAErByb,YAAa,CACThb,WAAY,GACZyP,YAAa,GACbwL,uBAAwB,GACxB1b,gBAAiB,WAErB2b,UAAW,CACPzL,YAAa,GACb0L,sBAAuB,GACvB5b,gBAAiB,WAErB6b,cAAe,CACXrL,QAAS,EACT3Q,YAAa,UACbsQ,YAAa,GAEjBiI,aAAc,CACVvX,QAAS,GACTf,aAAc,GACdf,OAAQ,IACRK,aAAc,SACdD,WAAY,UAEhB2c,cAAe,CACXxc,SAAU,GACVzB,WAAY,QAEhBke,YAAa,CACT3b,MAAO,IACPd,SAAU,GACVC,aAAc,GACdE,UAAW,UAKfuc,aAAc,CACV7c,WAAY,SACZa,gBAAiB,QACjBhB,WAAY,GACZoB,MAAO,QAEX6b,oBAAqB,CACjB7b,MAAO,IACPJ,gBAAiB,MACjB4D,UAAW,SACX9D,aAAc,GACdd,UAAW,GACXQ,iBAAkB,GAEtB0c,SAAU,CACNrY,eAAgB,GAChBhG,WAAY,OACZyB,SAAU,GACVG,UAAW,SACXC,MAAO,WAEXyc,aAAc,CACV5c,aAAc,GACd1B,WAAY,OACZyB,SAAU,GACVG,UAAW,OACXmE,UAAW,aACXnD,WAAY,GACZf,MAAO,UACP0c,cAAe,aAEnBC,SAAU,CACN7c,iBAAkB,GAClBD,aAAc,GACda,MAAO,KAEXkc,iBAAkB,CACd/L,SAAU,WACVnQ,MAAO,IACPoQ,QAAS,GACT3E,QAAS,KCzHF,SAAS0Q,GAAK3a,GACzB,OACI,qCACI,cAAC6C,EAAA,EAAD,CAAO5B,OAAQ2Z,KAAW5e,MAAOmH,GAAOiW,OACxC,cAAC,IAAD,CACI9V,MAAOuX,GAAU7a,EAAMhG,MAAMsd,KAC7BxW,eAAgBqC,GAAOvE,OACvBqK,QAAM,EACNlI,QAAS,SAACwC,GAAD,OAAOvD,EAAM8a,OAAO,IAC7B5S,KACI,cAAC,IAAD,CACIC,KAAM,eACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,OAIvC,cAAC,IAAD,CACI0F,MAAOuX,GAAU7a,EAAMhG,MAAMud,KAC7BzW,eAAgBqC,GAAOvE,OACvBqK,QAAM,EACNlI,QAAS,SAACwC,GAAD,OAAOvD,EAAM8a,OAAO,IAC7B5S,KACI,cAAC,IAAD,CACIC,KAAM,6BACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,OAIvC,cAAC,IAAD,CACI0F,MAAOuX,GAAU7a,EAAMhG,MAAMwd,MAC7BvP,YAAa,CAAE7J,gBAAiB,OAChC0C,eAAgBqC,GAAOkW,YACvBpQ,QAAM,EACNlI,QAAS,kBAAMf,EAAM6V,QAAQ,OAC7B3N,KACI,cAAC,IAAD,CACIC,KAAM,qBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,U,mCCxCpC,SAASmd,GAAK/a,GACzB,MAA0B6G,oBAAS,GAAnC,WAAOmU,EAAP,KAAcC,EAAd,KACA,EAA4BpU,oBAAS,GAArC,WAAOpC,EAAP,KAAeyW,EAAf,KACA,EAA8BrU,oBAAS,GAAvC,WAAOsU,EAAP,KAAgBC,EAAhB,KACA,EAA8BvU,oBAAS,GAAvC,WAAO0N,EAAP,KAAgB8G,EAAhB,KACA,EAA0BxU,mBAAS,GAAnC,WAAOsR,EAAP,KAAcmD,EAAd,KACA,EAA0BzU,mBAAS,CAACZ,KAAKsV,MAAsB,EAAhBtV,KAAKE,YAApD,WAAOmS,EAAP,KAAckD,EAAd,KACA,EAA8B3U,oBAAS,GAAvC,WAAOrC,EAAP,KAAgBqF,EAAhB,KACA,EAA0ChD,oBAAU,GAApD,WAAO4U,EAAP,KAAsBC,EAAtB,KACA,EAAkC7U,mBAAS,GAA3C,WAAO8Q,EAAP,KAAkBgE,EAAlB,KACA,EAAoC9U,mBAAS,GAA7C,WAAOgR,EAAP,KAAmB+D,EAAnB,KACA,EAA8B/U,oBAAS,GAAvC,WAAOgV,EAAP,KAAgBC,GAAhB,KACA,GAAgCjV,oBAAS,GAAzC,aAAOkV,GAAP,MAAiBC,GAAjB,MACA,GAAwBnV,mBAAS,IAAIoV,MAAM,IAA3C,aAAO1D,GAAP,MAAa2D,GAAb,MAEA,GAAsCrV,oBAAS,GAA/C,aAAOsV,GAAP,MAAoBC,GAApB,MAEM5Z,GAAe7J,EAAQ,KACvB0jB,IAAc,IAAIlG,MAAOgB,mBAAmB,SAE5CmF,GAAkC,OAAflc,IAASC,GAAc8C,GAAOmW,eAAiBnW,GAAOoW,YAE/E5N,qBAAU,0BAAArS,EAAAC,OAAA,oDAEQ,IAAVyhB,EAFE,gBAGFK,GAAW,IvB/BM3X,EuBgCA1D,EAAM0D,SvB/BxBhL,GACFiL,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEK,OAAQ,IACfH,MAAK,SAACpK,EAAKwK,GAIR,OAHIxK,GACAyK,QAAQC,MAAM1K,GAEXwK,MuBwB0BpK,MAAK,SAACoK,GAC/BA,EAAKtK,OAAS,GACd+hB,EAAazX,EAAK,GAAGD,UAG7B0R,GAAgB3V,EAAM0D,SAAU2Y,IAAaviB,MAAK,SAACoK,GAC3CA,EAAKtK,OAAS,GACdgiB,EAAc1X,EAAK,GAAGD,UAG9BoX,GAAW,GAdT,uBAgBFS,IAAW,GACXV,GAAW,GAIFvf,EAAI,EArBX,aAqBcA,EAAIyc,EAAM1e,QArBxB,oBAsBO4K,EAtBP,oCAAAlL,EAAA,MAuBYijB,GAAejE,EAAMzc,KAvBjC,QAqBgCA,IArBhC,wBA0BFuf,GAAW,GA1BT,kCvB5BP,IAAsB1X,IuB4Bf,0BA4BP,CAACsX,EAAO1C,IAEX,IAAMxS,GAAe,WACjB,OAAOG,KAAKsV,MAAsB,EAAhBtV,KAAKE,WAGrBqW,GAAmB,SAACjQ,GACtB,OAAQA,GACJ,KAAK,EACD,OAAO5T,EAAQ,KACnB,KAAK,EACD,OAAOA,EAAQ,KACnB,KAAK,EACD,OAAOA,EAAQ,KACnB,KAAK,EACD,OAAOA,EAAQ,OAMrB4jB,GAAiB,SAAOhQ,GAAP,SAAAjT,EAAAC,OAAA,yEAEZ,IAAIkjB,SAAQ,SAAOC,EAASC,GAAhB,iBAAArjB,EAAAC,OAAA,kEAAAD,EAAA,MACSiZ,KAAMC,MAAMyE,YAChCuF,GAAiBjQ,KAFN,uBACPkG,EADO,EACPA,MAGRzS,EAAM0S,SAASD,GACfiJ,EAAiBnP,GALF,WAAAjT,EAAA,MAMTmZ,EAAMa,YAAYxZ,MAAK,SAAO8iB,GAAP,SAAAtjB,EAAAC,OAAA,gDACzB2T,YAAW,oBAAA5T,EAAAC,OAAA,uDACPmiB,GAAkB,GADX,WAAApiB,EAAA,MAEDmZ,EAAMiB,eAFL,OAGPgJ,GAAQ,GAHD,8DAIRE,EAAehJ,uBAAyB,KALlB,gEANd,gEAFA,6DA4BjBiJ,GAAa,SAAOtQ,GAAP,qBAAAjT,EAAAC,OAAA,mDACV4hB,EADU,sDAIX5C,GAAK3e,QAAU0e,EAAM1e,QAJV,sDAOX2S,GAAO,GAAKA,GAAO,GAPR,qBAQPuQ,EAAavE,IACNwE,KAAKxQ,GAChB2P,GAAQY,IAEJrK,EAZO,oCAAAnZ,EAAA,MAaDmZ,EAAMiB,eAbL,eAeXgI,EAAiBnP,GAfN,YAAAjT,EAAA,MAgBaiZ,KAAMC,MAAMyE,YAChCuF,GAAiBjQ,KAjBV,wBAgBHkG,EAhBG,EAgBHA,MAGRzS,EAAM0S,SAASD,GAnBJ,YAAAnZ,EAAA,MAqBMmZ,EAAMa,YAAYxZ,MAAK,SAACoK,GACrC,OAAOA,EAAK0P,2BAtBL,WAqBPoJ,EArBO,OA2BX9P,YAAW,oBAAA5T,EAAAC,OAAA,kEAAAD,EAAA,MACDmZ,EAAMiB,eADL,OAEPgI,GAAkB,GAFX,8DAGRsB,EAAO,KACNzE,GAAKA,GAAK3e,OAAS,KAAO0e,EAAMC,GAAK3e,OAAS,GA/BvC,oCAAAN,EAAA,MAgCD2jB,GAAUD,IAhCT,mCAiCAzE,GAAK3e,SAAW0e,EAAM1e,OAjCtB,oCAAAN,EAAA,MAkCD4jB,GAAaF,EAAMvK,IAlClB,8DAuCbwK,GAAY,SAAOD,GAAP,SAAA1jB,EAAAC,OAAA,gDACd2hB,GAAU,GACVgB,GAAQ,IACRd,GAAW,GACXE,EAASnD,EAAQ,GACbA,EAAQ,EACRjL,YAAW,0BAAA5T,EAAAC,OAAA,gDACEsC,EAAI,EADN,YACSA,EAAIyc,EAAM1e,QADnB,kCAAAN,EAAA,MAEGijB,GAAejE,EAAMzc,KAFxB,OAC2BA,IAD3B,sBAIPuf,GAAW,GACXF,GAAU,GALH,8DAMR8B,EAAO,KAEVG,KAdU,6DAkBZA,GAAe,8BAAA7jB,EAAAC,OAAA,uDACjByG,EAAMqV,UAAS,GADE,WAAA/b,EAAA,OvB9HGoK,EuBgIE1D,EAAM0D,SvBhIEO,EuBgIQqU,EAAM1e,OAAS,EvBhIhBiK,EuBgImBwY,GvBhIbe,EuBgI0BvF,EAAaS,EAAM1e,OAAS,EvBhIpCyjB,EuBgIuC1F,EAAYW,EAAM1e,OAAS,EvB/H5HlB,GAAGmB,YAAY,CAClB6J,SAAUA,EACVG,KAAMA,EACNI,MAAOA,EACPmZ,iBAAkBA,EAClBC,kBAAmBA,MuBwHF,cAGjBjC,GAAW,GACXvR,GAAW,GACLhF,EAAOgT,EAAaS,EAAM1e,OAAS,EAAIjB,EAAQ,KAA+CA,EAAQ,KAL3F,WAAAW,EAAA,MAMOiZ,KAAMC,MAAMyE,YAAYpS,IAN/B,gBAMT4N,EANS,EAMTA,MACRzS,EAAM0S,SAASD,GACfA,EAAMa,YACFuE,EAAaS,EAAM1e,OAAS,EAC5BwiB,IAAe,GAEfA,IAAe,GAZF,kCvB9HlB,IAAqB1Y,EAAUO,EAAOJ,EAAMuZ,EAAkBC,IuB8H5C,yBAgBfH,GAAe,SAAOF,EAAMvK,GAAb,SAAAnZ,EAAAC,OAAA,gDACjBuiB,IAAW,GACXV,GAAW,GACXlO,YAAW,oBAAA5T,EAAAC,OAAA,kEAAAD,EAAA,MACDmZ,EAAMiB,eADL,OAEP8H,EAAS,GAAD,YAAKlD,GAAL,CAAYxS,QAFb,8DAGRkX,EAAO,KACVd,GAAQ,IAPS,6DA0DrB,OACI,qCACKH,GACG,cAAC,KAAD,CACIuB,SAAS,EACTC,WAAW,EACXC,UAAW,IACXC,MAAO,GACPC,OAAQ,CAAEC,GAAI,GAAIC,GAAI,MAG1B,6BAIJ,eAAC,IAAD,CACIrH,QAAS/R,EACTgS,aAAcrT,GAAOqT,aACrBC,gBAAiB,kBAAM5M,GAAW,IAClC6M,eAAgBC,KAJpB,UAMKwF,IApEJJ,IACDC,IAAY,GAGZ,qCACI,cAAC,IAAD,CAAMhgB,MAAOmH,GAAO+W,cAApB,SACKW,GAAU7a,EAAMhG,MAAMwe,kBAE3B,cAAC,IAAD,CAAMxc,MAAOmH,GAAOgX,YAApB,SACKU,GAAU7a,EAAMhG,MAAMoe,eAAeE,EAAM1e,OAAS,KAEzD,cAAC,EAAD,CACI4I,aAAcA,GACdM,YAAa+a,KACbC,UAAU,EACVrb,MAAM,EACNF,YAAa,CAAEpF,OAAQ,IACvB4F,WAAY,CAAE5F,OAAQ,UAO9BoX,EACO,cAAC/H,EAAA,EAAD,IAGP,qCACI,cAAC,IAAD,CAAMxQ,MAAOmH,GAAO+W,cAApB,SACKW,GAAU7a,EAAMhG,MAAMye,QAE3B,cAAC,IAAD,CAAMzc,MAAOmH,GAAOgX,YAApB,SACKU,GAAU7a,EAAMhG,MAAM0e,oBAoC3B,eAACzV,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,MAAO/B,UAAW,IAAhD,UACI,cAAC,IAAD,CACI6L,QAAM,EACNlI,QAAS,WAhCzBib,IAAY,GACZnS,GAAW,GACXqR,GAAU,GACVI,EAAS,GACTE,EAAS,CAAC1V,QA+BMxC,MAAOuX,GAAU7a,EAAMhG,MAAM2e,MAC7B7X,eAAgB,CACZ5C,aAAc,GACdoQ,YAAa,MAGrB,cAAC,IAAD,CACIrF,QAAM,EACNlI,QAAS,WACLf,EAAM8a,OAAO,IAEjBxX,MAAOuX,GAAU7a,EAAMhG,MAAM4e,KAC7B9X,eAAgB,CAAE5C,aAAc,IAChC+J,YAAa,CAAE7J,gBAAiB,eAM5C,eAAC,IAAD,CACImY,QAASvW,EAAMoV,MACfoB,aAAcrT,GAAOqT,aACrBC,gBAAiB,kBAAMzW,EAAMqV,UAAS,IACtCqB,eAAgBC,KAJpB,UAMI,cAAC,IAAD,CAAM3a,MAAOmH,GAAO+W,cAApB,SACKW,GAAU7a,EAAMhG,MAAMiB,aAE3B,cAAC,IAAD,CAAMe,MAAOmH,GAAOgX,YAApB,SACKU,GAAU7a,EAAMhG,MAAMyd,WAE3B,eAACxU,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,MAAO/B,UAAW,IAAhD,UACI,cAAC,IAAD,CACI6L,QAAM,EACNlI,QAAS,WACLf,EAAMqV,UAAS,IAEnB/R,MAAOuX,GAAU7a,EAAMhG,MAAM8X,OAC7BhR,eAAgB,CAAE5C,aAAc,GAAIoQ,YAAa,MAErD,cAAC,IAAD,CACIrF,QAAM,EACNlI,QAAS,WACLoc,MAEJ7Z,MAAOuX,GAAU7a,EAAMhG,MAAM8e,WAC7BhY,eAAgB,CAAE5C,aAAc,IAChC+J,YAAa,CAAE7J,gBAAiB,eAM5C,eAAC6E,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,MAAOxB,aAAc,IAAnD,UACI,cAACsF,EAAA,EAAD,CACIjH,MAAO,CACHsgB,GACAnZ,GAAOqW,gBACPrW,GAAOsW,WACW,IAAlBgC,EAAsBtY,GAAO8W,cAAgB,IAEjD8D,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMnB,GAAW,MAEvC,cAAC5Z,EAAA,EAAD,CACIjH,MAAO,CACHsgB,GACAnZ,GAAOwW,SACW,IAAlB8B,EAAsBtY,GAAO8W,cAAgB,IAEjD8D,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMnB,GAAW,SAK3C,eAAC5Z,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UACI,cAAC8D,EAAA,EAAD,CACIjH,MAAO,CACHsgB,GACAnZ,GAAOqW,gBACPrW,GAAO0W,YACW,IAAlB4B,EAAsBtY,GAAO8W,cAAgB,IAEjD8D,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMnB,GAAW,MAEvC,cAAC5Z,EAAA,EAAD,CACIjH,MAAO,CACHsgB,GACAnZ,GAAO4W,UACW,IAAlB0B,EAAsBtY,GAAO8W,cAAgB,IAEjD8D,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMnB,GAAW,SAI3C,eAAC5Z,EAAA,EAAD,CAAMjH,MAAO,CAAEoB,UAAW,IAA1B,UACI,cAAC,IAAD,CAAMpB,MAAO,CAAE6B,UAAW,UAA1B,SACKgd,GAAU7a,EAAMhG,MAAM0d,UAAUC,KAErC,cAAC,IAAD,CAAM3b,MAAO,CAAE6B,UAAW,UAA1B,SACKgd,GAAU7a,EAAMhG,MAAM4d,WAAWC,KAEtC,cAAC,IAAD,CAAM7b,MAAO,CAAE6B,UAAW,SAAUF,aAAc,IAAlD,SACKkd,GAAU7a,EAAMhG,MAAMke,MAAMC,KAEhC6C,EACG,eAAC/X,EAAA,EAAD,CACIjH,MAAO,CAAEwB,aAAc,SAAUD,WAAY,UADjD,UAGI,cAAC,IAAD,CAAMvB,MAAO,CAAE6B,UAAW,SAAUH,SAAU,IAA9C,SACKyd,GAAW1W,EAzR5BA,EACOoW,GAAU7a,EAAMhG,MAAMge,SACtB6D,EACAhB,GAAU7a,EAAMhG,MAAMie,UAEtB4C,GAAU7a,EAAMhG,MAAM8d,WAsRP+C,GAAU7a,EAAMhG,MAAM+d,aAEhC,cAAC,IAAD,CAAM/b,MAAO,CAAE6B,UAAW,UAA1B,SACKgd,GAAU7a,EAAMhG,MAAMqe,SACnBC,EAAM1e,OACN2e,GAAK3e,UAGb,cAAC,IAAD,CACIqkB,UAAW9C,EACXpa,QAAS,kBAAMf,EAAMqV,UAAS,IAC9BpN,YAAa,CAAE7J,gBAAiB,OAChC0C,eAAgB,CACZ1D,UAAW,GACXoB,MAAO,IACPN,aAAc,IAElB+K,QAAM,EACN3F,MAAOuX,GAAU7a,EAAMhG,MAAM6e,YAIrC,mCACI,eAAC5V,EAAA,EAAD,CACI9D,cAAe,MACfnD,MAAO,CACHwB,aAAc,SACdD,WAAY,UAJpB,UAOI,cAAC,IAAD,CACI0K,YAAa,CACTqG,YAAa,GACbpQ,aAAc,IAElBoF,MAAOuX,GAAU7a,EAAMhG,MAAMuX,MAC7BxQ,QAAS,kBAAMka,GAAS,MAE5B,cAAC,IAAD,CACIhT,YAAa,CACT/J,aAAc,GACdE,gBAAiB,OAErBkF,MAAOuX,GAAU7a,EAAMhG,MAAMwd,MAC7BzW,QAAS,kBAAMf,EAAM8a,OAAO,iB,yBCta7C,SAASvD,GAAKvX,GACzB,IAAMwC,EAAe7J,EAAQ,KAC7B,OACI,cAACgU,EAAA,EAAD,CAAc3Q,MAAOmH,GAAOiX,aAA5B,SACI,eAACjN,EAAA,EAAD,WACI,cAAC,IAAD,CACI7J,MAAOuX,GAAU7a,EAAMhG,MAAMwd,MAC7BvP,YAAa,CAAE7J,gBAAiB,OAChC0C,eAAgBqC,GAAOkX,oBACvBpR,QAAM,EACNlI,QAAS,kBAAMf,EAAM8a,OAAO,IAC5B5S,KACI,cAAC,IAAD,CACIC,KAAM,qBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,OAIvC,cAAC,EAAD,CACI4E,aAAcA,EACdM,YAAaob,KACb3b,YAAaY,GAAOuX,iBACpB3X,WAAYI,GAAOuX,iBACnBjY,MAAM,EACNE,UAAU,IAEd,cAAC,IAAD,CAAM3G,MAAOmH,GAAOmX,SAApB,SAA+BO,GAAU7a,EAAMhG,MAAM+e,OACrD,eAAC,IAAD,CAAM/c,MAAOmH,GAAOoX,aAApB,UACI,cAAC,IAAD,CACIpS,KAAM,iBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,KAE9Bid,GAAU7a,EAAMhG,MAAMgf,aAE3B,cAAC,IAAD,CAAMhd,MAAOmH,GAAOsX,SAApB,SAA+BI,GAAU7a,EAAMhG,MAAMkf,UAGrD,eAAC,IAAD,CAAMld,MAAOmH,GAAOoX,aAApB,UACI,cAAC,IAAD,CACIpS,KAAM,iBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,KAE9Bid,GAAU7a,EAAMhG,MAAMif,aAE3B,cAAC,IAAD,CAAMjd,MAAOmH,GAAOsX,SAApB,SAA+BI,GAAU7a,EAAMhG,MAAMmf,sBCnDtD,SAAStJ,GAAM7P,GAC1B,MAAsB6G,mBAAS,GAA/B,WAAOsX,EAAP,KAAYrD,EAAZ,KACA,EAA0BjU,mBAAS,IAAI0L,KAAMC,OAA7C,WAAOC,EAAP,KAAcC,EAAd,KACA,EAA0B7L,oBAAS,GAAnC,WAAOuO,EAAP,KAAcC,EAAd,KAEA1J,qBAAU,WAGN,IAeMI,EAAcC,IAAYC,iBAC5B,qBAhBe,WAaf,OAZIwG,GACAA,EAAMiB,cAENyK,EAAM,EACM,IAARA,EACArD,EAAO,GAEPzF,GAAS,GAGbrV,EAAM6V,QAAQ,OAEX,KAMX,OAAO,WACH9J,EAAYG,YAEjB,CAACiS,IA8BJ,OACI,mCACI,cAAClb,EAAA,EAAD,CAAMjH,MAAOmH,GAAOpB,KAApB,SA7BQ,IAARoc,EAEI,cAACxD,GAAD,CACIG,OAAQA,EACR9gB,KAAMgG,EAAMhG,KACZ6b,QAAS7V,EAAM6V,UAGR,IAARsI,EAEH,cAACpD,GAAD,CACID,OAAQA,EACR9gB,KAAMgG,EAAMhG,KACZ0J,SAAU1D,EAAM0D,SAChB+O,MAAOA,EACPC,SAAUA,EACV0C,MAAOA,EACPC,SAAUA,IAGH,IAAR8I,EACA,cAAC5G,GAAD,CAAMvd,KAAMgG,EAAMhG,KAAM8gB,OAAQA,IAEhC,cAAC,IAAD,8BCnEnB,IAAMzf,GAAiB,SAACC,EAAM+b,EAAK+G,GAC/B,IAAItgB,EAAQ,UACA,QAARuZ,EACAvZ,EAAQ,UACO,UAARuZ,IACPvZ,EAAQ,WAEZ,IAAIvC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQ6B,MAAOjC,GAAKuiB,EAAMtgB,EAAQ,WAArE,SACKnC,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLxB,GAAO,CAChBC,GAAI,CACAqd,KAAM,QACNrU,KAAM,gBACNob,OAAQ,mBACR9G,KAAM,uBACNC,MAAO,SACP1F,OAAQ,UACRwM,OAAQ,qCACRpM,WAAY,qCACZqM,cAAe,0CACfC,gBAAiB,iBACjBC,YAAa,uBACbC,SAAU,0BACVC,WAAY,yCACZC,cAAe,0NACfC,kBAAmB,2BACnBC,UAAW,yBACXC,aAAc,2PACdC,GAAI,UACJC,gBAAiB,qBACjBC,WAAY,qFACZpkB,aAAc,0CACdqkB,gBAAiB,mDACjBC,eAAgB,wDAChBC,gBAAiB,4BACjBC,WAAY,oBACZC,eAAgB,0FAChBC,mBAAoB,iGACpBC,wBAAyB,mBACzBC,kBAAmB,6IACnBC,UAAW,cACXC,YAAa,gCACbC,WAAY,mCACZC,oBAAqB,oEACrBC,cAAe,SAACC,GACZ,OAAO3kB,GAAe,CAClBI,SAAU,sDACVE,SAAU,CAACqkB,MAGnBC,UAAW,cACXC,aAAc,+BACdld,QAAS,4FACTmd,YAAa,0BACbnI,OAAQ,SAACoI,GAEL,MAAM,+FADYA,EAAQC,KAAK,MAC/B,KAEJC,iBAAkB,iBAClBC,YAAa,SAACC,EAAMhc,GAChB,OAAOnJ,GAAe,CAClBI,SAAU,0GACVE,SAAU,CAAC6I,EAASgc,IACrB,MAAO,IAEdC,cAAe,uBACfC,SAAU,SAACF,EAAMhc,GACb,OAAOnJ,GAAe,CAClBI,SAAU,wGACVE,SAAU,CAAC6I,EAASgc,IACrB,MAAO,IAEd7lB,KAAM,sBACNgmB,YAAa,0BACbC,WAAY,sBACZC,kBAAmB,iIAGnB9H,KAAM,kCACNC,UAAW,gBACX8H,WAAY,mBACZ5H,MAAO,WACH,OAAO7d,GAAe,CAClBI,SAAS,+QACTE,SAAU,CAAC,0DAAwD,gBAG3EolB,OAAQ,WACJ,OAAO1lB,GAAe,CAClBI,SAAS,i0CACTE,SAAU,CAAC,WACP,gBACA,gBACA,mBACA,uBACA,2CACA,yBACA,yCACA,QACA,4BACA,UACA,4CACA,+BAKhBP,GAAI,CACAkc,KAAM,OACNrU,KAAM,eACNob,OAAQ,gBACR9G,KAAM,oBACNC,MAAO,QACP1F,OAAQ,SACRwM,OAAQ,yBACRpM,WAAY,gCACZqM,cAAe,oCACfC,gBAAiB,aACjBC,YAAa,iBACbC,SAAU,6BACVC,WAAY,0BACZC,cAAe,gJACfC,kBAAmB,wBACnBC,UAAW,gBACXC,aAAc,wJACdC,GAAI,SACJC,gBAAiB,UACjBC,WAAY,8DACZpkB,aAAc,iCACdqkB,gBAAiB,6CACjBC,eAAgB,4CAChBC,gBAAiB,qBACjBC,WAAY,gBACZC,eAAgB,kEAChBC,mBAAoB,sEACpBC,wBAAyB,gBACzBC,kBAAmB,iHACnBC,UAAW,aACXC,YAAa,4BACbC,WAAY,2BACZC,oBAAqB,6CACrBC,cAAe,SAACC,GACZ,OAAO3kB,GAAe,CAClBI,SAAU,qCACVE,SAAU,CAACqkB,MAGnBC,UAAW,cACXC,aAAc,6BACdld,QAAS,6EACTmd,YAAa,uBACbnI,OAAQ,SAACoI,GACL,IAAIY,EAAcZ,EAAQC,KAAK,MAC/B,MAAM,uDAAuDD,EAAQxmB,OAAS,EAAI,SAAW,QAA7F,MAAyGonB,EAAzG,KAEJV,iBAAkB,cAClBC,YAAa,SAACC,EAAMhc,GAChB,OAAOnJ,GAAe,CAClBI,SAAU,6FACVE,SAAU,CAAC6I,EAASgc,IACrB,MAAO,IAEdC,cAAe,uBACfC,SAAU,SAACF,EAAMhc,GACb,OAAOnJ,GAAe,CAClBI,SAAU,iGACVE,SAAU,CAAC6I,EAASgc,IACrB,MAAO,IAEd7lB,KAAM,gBACNgmB,YAAa,oBACbC,WAAY,mBACZC,kBAAmB,iFAGnB9H,KAAM,+BACNC,UAAW,YACX8H,WAAY,gBACZ5H,MAAO,WACH,OAAO7d,GAAe,CAClBI,SAAS,2NACTE,SAAU,CAAC,gDAAiD,uBAGpEolB,OAAQ,WACJ,OAAO1lB,GAAe,CAClBI,SAAS,qmCACTE,SAAU,CAAC,SACP,YACA,eACA,gBACA,iBACA,0BACA,uBACA,2BACA,QACA,qBACA,SACA,iCACA,mC,qBCnNLqB,OAAWC,OAAO,CAC7B8E,KAAM,CACFE,eAAgB,GAChB3E,KAAM,EACNC,WAAY,UAEhB6b,KAAM,CACF5a,MAAO,GACPrB,OAAQ,GACR8E,eAAgB,GAChB2M,QAAS,GACTjR,aAAc,IAElBiB,OAAQ,CACJJ,MAAO,IACPb,aAAc,GACdO,aAAc,GACdN,iBAAkB,GAEtByb,YAAa,CACT7a,MAAO,IACPpB,UAAW,GACXgB,gBAAiB,MACjBF,aAAc,GACdN,iBAAkB,GAEtBqjB,gBAAiB,CACbziB,MAAO,IACPpB,UAAW,GACXgB,gBAAiB,MACjBF,aAAc,GACdN,iBAAkB,GAEtBif,WAAY,CACRre,MAAO,IACPpB,UAAW,GACXgB,gBAAiB,OACjBF,aAAc,GACdN,iBAAkB,GAEtBsjB,aAAc,CACV1iB,MAAO,IACPN,aAAc,IAElBoW,SAAU,CACNlW,gBAAiB,QACjBhB,UAAW,EACXO,aAAc,GACdR,OAAQ,OACRqB,MAAO,QAEXgW,WAAY,CACR3W,UAAW,SACXC,MAAO,OACPV,UAAW,IAEfmX,QAAS,CACLnX,UAAW,IAEfsX,QAAS,CACLxW,aAAc,GACdC,kBAAmB,GACnBwW,gBAAiB,GACjBpX,WAAY,UAEhB4jB,4BAA6B,CACzB3iB,MAAO,IACPX,UAAW,SACXC,MAAO,UACPmE,eAAgB,IAEpBkL,WAAY,CACR5P,WAAY,SACZ0E,eAAgB,GAChBoM,cAAe,IAEnB+S,kBAAmB,CACf7jB,WAAY,SACZ0E,gBAAiB,GACjBoM,cAAe,IAEnBxM,aAAc,CACVrD,MAAO,IACPrB,OAAQ,KAEZkF,iBAAkB,CACdL,UAAW,SACXxD,MAAO,IACPX,UAAW,SACX5B,WAAY,OACZyB,SAAU,GACVI,MAAO,UACPH,aAAc,IAElByX,MAAO,CACHlX,aAAc,GACdC,kBAAmB,GACnBwW,gBAAiB,GACjBpX,WAAY,UAEhB8jB,WAAY,CACR1jB,aAAc,GACda,MAAO,IACPX,UAAW,SACX5B,WAAY,OACZyB,SAAU,IAEd4jB,iBAAkB,CACd9iB,MAAO,IACPX,UAAW,SACXC,MAAO,WAGXyjB,wBAAyB,CACrB/iB,MAAO,IACPpB,UAAW,IAEfokB,eAAgB,CACZ9jB,SAAU,IAEd+jB,WAAY,CACRtiB,cAAe,MACfE,eAAe,SACfD,SAAS,OACT7B,WAAW,SACXC,aAAa,SACbG,aAAc,IAElB+jB,WAAY,CACRzlB,WAAY,OACZyB,SAAU,GACVG,UAAW,SACXW,MAAO,KAEXmjB,iBAAkB,CACdzjB,aAAc,GACdM,MAAO,IACPrB,OAAQ,KAEZykB,aAAc,CACVlkB,SAAU,GACVN,UAAW,GACXnB,WAAY,OACZ6B,MAAO,WAEX+jB,aAAc,CACVvkB,KAAM,EACN6B,cAAe,MACf/B,UAAW,GACXI,aAAa,SACbgB,MAAO,MACPa,eAAgB,cAEpByiB,cAAe,CACX1jB,gBAAiB,QACjBsb,oBAAqB,GACrBE,qBAAsB,GACtB3b,YAAa,OACbsQ,YAAa,EACbpQ,kBAAmB,GACnBoM,kBAAmB,EACnBzM,MAAO,QAEXikB,iBAAkB,CACd5jB,kBAAmB,GACnBD,aAAc,IAMlBkc,aAAc,CACV7c,WAAY,SACZa,gBAAiB,QACjBhB,WAAY,GACZoB,MAAO,OACPrB,OAAQ,OACRkR,cAAe,IAEnBgM,oBAAqB,CACjB7b,MAAO,IACPJ,gBAAiB,MACjB4D,UAAW,SACX9D,aAAc,GACdd,UAAW,GACXQ,iBAAkB,GAEtB0c,SAAU,CACNrY,eAAgB,GAChBzD,MAAO,IACPvC,WAAY,OACZyB,SAAU,GACVG,UAAW,SACXC,MAAO,UACPkE,UAAW,UAEfuY,aAAc,CACV5c,aAAc,GACd1B,WAAY,OACZyB,SAAU,GACVG,UAAW,OACXmE,UAAW,aACXnD,WAAY,GACZf,MAAO,UACP0c,cAAe,aAEnBC,SAAU,CACN7c,iBAAkB,GAClBD,aAAc,GACda,MAAO,KAEXkc,iBAAkB,CACd/L,SAAU,WACVnQ,MAAO,IACPoQ,QAAS,GACT3E,QAAS,KC/MF,SAAS0Q,GAAK3a,GACzB,OACI,qCACI,cAAC6C,EAAA,EAAD,CAAO5B,OAAQ+gB,KAAUhmB,MAAOmH,GAAOiW,OAEvC,cAAC,IAAD,CACI9V,MAAOtD,EAAM8K,UAAY,cAAC0B,EAAA,EAAD,CAAmB1O,MAAO,OAAQsK,KAAM,UAAc6Z,GAASjiB,EAAMhG,MAAMsd,KACpGxW,eAAgBqC,GAAOvE,OACvBmC,QAAS,kBAAMf,EAAM8a,OAAO,IAC5B5S,KACI,cAAC,IAAD,CACIC,KAAM,eACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,KAGnCqgB,SAAgC,IAAtBje,EAAMqF,KAAKzL,SAGzB,cAAC,IAAD,CACI0J,MAAO2e,GAASjiB,EAAMhG,MAAMiJ,KAC5BnC,eAAgBqC,GAAOvE,OACvBmC,QAAS,kBAAMf,EAAM8a,OAAO,IAC5B5S,KACI,cAAC,IAAD,CACIC,KAAM,eACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,OAKvC,cAAC,IAAD,CACI0F,MAAO2e,GAASjiB,EAAMhG,MAAMud,KAC5BzW,eAAgBqC,GAAOvE,OACvBmC,QAAS,kBAAMf,EAAM8a,OAAO,IAC5B5S,KACI,cAAC,IAAD,CACIC,KAAM,6BACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,OAKvC,cAAC,IAAD,CACI0F,MAAO2e,GAASjiB,EAAMhG,MAAMwd,MAC5BvP,YAAa,CAAE7J,gBAAiB,OAChC0C,eAAgBqC,GAAOkW,YACvBtY,QAAS,kBAAMf,EAAM6V,QAAQ,OAC7B3N,KACI,cAAC,IAAD,CACIC,KAAM,qBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,UCjE5C,IAAMskB,GAAY,SAACvd,EAAUxD,EAAKghB,EAAWhQ,EAAWiQ,EAAYhQ,EAAcK,EAAOC,GAC5F,MAAiB,UAAb/N,EAEI,eAAC1B,EAAA,EAAD,WACI,cAAC,IAAD,CACInF,MAAM,MACN9B,MAAO,CAAC6C,WAAY,GAAI8P,SAAS,WAAY1E,OAAQ,GACrD7B,KAAK,QACLF,KAAM,CAACC,KAAM,uBAAwBgJ,KAAM,UAAWrT,MAAM,SAC5DiD,QAAS,WACLohB,OAGR,cAACtf,EAAA,EAAD,CAAO5B,OAAQ,CAACE,IAAKA,GAAMnF,MAAO,CAACwC,MAAO,IAAKrB,OAAQ,IAAKe,aAAc,IAAKP,aAAc,SAGjF,UAAbgH,EAEH,eAAC1B,EAAA,EAAD,WACI,cAAC,IAAD,CACInF,MAAM,MACN9B,MAAO,CAAC6C,WAAY,IAAK8P,SAAS,WAAY1E,OAAQ,GACtD7B,KAAK,QACLF,KAAM,CAACC,KAAM,uBAAwBgJ,KAAM,UAAWrT,MAAM,SAC5DiD,QAAS,WACLohB,OAGR,cAAC,IAAD,CAAMphB,QAAS,kBAAMoR,EAAYiQ,IAAeC,GAAUjQ,EAAcK,EAAOC,EAAUvR,IAAO8H,QAAM,EAACb,KAAM,GAAID,KAAMgK,EAAY,uBAAyB,sBAAuBrU,MAAO,UAAWqT,KAAM,UAAWrQ,eAAgB,CAACnD,aAAc,GAAIsM,OAAQ,aAZtQ,GAkBEoY,GAAY,SAAOjQ,EAAcK,EAAOC,EAAUvR,GAAtC,eAAA7H,EAAAC,OAAA,uDACrB6Y,GAAa,GADQ,WAAA9Y,EAAA,MAEfiZ,KAAMO,kBAAkB,CAC1BC,yBAAyB,EACzBC,mBAAmB,KAJF,yBAAA1Z,EAAA,YAMQmZ,OANR,EAMQA,EAAOQ,kBANf,WAOY,KAAf,OADZC,EANe,aAOjB,EAAAA,EAAgBC,UAPC,mCAAA7Z,EAAA,MAQXmZ,EAAMW,UAAU,CAAEjS,IAAKA,KARZ,OASjBuR,EAASD,GATQ,2BAAAnZ,EAAA,MAWfmZ,EAAMa,aAXS,QAYrBb,EAAMc,2BAA0B,SAAOC,GAAP,SAAAla,EAAAC,OAAA,oDACxBia,EAAeC,cADS,kCAAAna,EAAA,MAElBmZ,EAAMiB,eAFY,OAGxBtB,GAAa,GAHW,+DAZX,8D,qkBC3BV,SAASkQ,GAAatiB,GAAQ,IAAD,UD+CZ2E,EAAUxD,EC9CtC,EAA0B0F,oBAAS,GAAnC,WAAOuO,EAAP,KAAcC,EAAd,KAEMzb,GAAS,SAAAoG,EAAMuiB,WAAN,WAAgBhd,cAAhB,IAAyB3L,SAAzB,SAAkCoG,EAAMwiB,iBAAxC,EAAkC,EAAkB5oB,QAkC/DuG,EAAiC,QAAhBC,IAASC,GAAe1H,EAAQ,KAAgC2H,QAAU,KAC3FC,EAAMP,EAAMQ,MAAQ,GAAK,EAAI,CAACpC,gBAAiB,SAAW,CAACA,gBAAiB,WAC5EqC,EACgB,QAAhBL,IAASC,GACL,CAAEK,UAAUP,EAAgBQ,IAAIX,EAAMQ,MAAOK,eAAc,EAAMC,eAAeP,GAChF,CAAEI,IAAKX,EAAMQ,MAAOK,eAAc,EAAMC,eAAeP,GAC/D,OACI,qCACA,eAAC,IAAD,CACIgW,QAASnB,EACToB,aAAcrT,GAAOuR,QACrB+B,gBAAiB,kBAAMpB,GAAS,IAChCqB,eAAgBC,KAJpB,UAMI,cAAC5a,EAAA,EAAD,CAAMC,MAAO,CAAC2B,aAAc,GAAIa,MAAO,IAAKX,UAAW,UAAvD,SAAmEokB,GAASjiB,EAAMhG,MAAMwlB,qBACxF,eAACvc,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UACI,cAAC,IAAD,CACImE,MAAO2e,GAASjiB,EAAMhG,MAAMwd,MAC5BvP,YAAa,CAAE7J,gBAAiB,OAChC0C,eAAgB,CAAEwN,YAAa,IAC/BvN,QAAS,kBAAMsU,GAAS,MAE5B,cAAC,IAAD,CACI/R,MAAO2e,GAASjiB,EAAMhG,MAAMglB,GAC5B/W,YAAa,CAAEhM,WAAY,QAC3B8E,QAAS,kBAzDD,WACpB,KAAInH,GAAU,GAAKoG,EAAMyiB,aAAzB,CACA,IAA0B,IAAtBziB,EAAMyiB,YACN,GAAIC,OAAOC,UAAU3iB,EAAM4iB,YAAa,CAAC,IAAD,IAK9BpiB,EAAQR,EAAM4iB,YAAN,SAAmB5iB,EAAMuiB,WAAzB,SAAmB,EAAgBhd,cAAnC,EAAmB,EAAyB3L,QACpDipB,EAAM7iB,EAAMwiB,WAClBK,EAAI/mB,OAAO0E,EAAO,GAGlBR,EAAM8iB,cAAN,KAAwBD,QACrB,CAGH,IAAMriB,EAAQR,EAAMuiB,SAAShd,QAAQC,WAAU,SAAAlB,GAAE,OAAIA,EAAG1D,IAAMZ,EAAM4iB,cAC9DC,EAAM7iB,EAAMuiB,SAClBM,EAAItd,QAAQzJ,OAAO0E,EAAO,GAC1BR,EAAM+iB,YAAYF,GAClB7iB,EAAMgjB,WAAWhjB,EAAMijB,QACvBjjB,EAAMkjB,eAAc,OAErB,CACH,IAAML,EAAM7iB,EAAMyiB,YAAcziB,EAAMuF,QAAUvF,EAAMmjB,YACtDN,EAAI/mB,OAAOkE,EAAMQ,MAAO,GACxBR,EAAMojB,WAAN,KAAqBP,IAEzBxN,GAAS,IA4BkBgO,YAIvB,eAAC,IAAD,SAAc5iB,GAAd,IAA8BM,QAAS,WAAQf,EAAMsjB,eAAetjB,EAAM4iB,aAA1E,WDnBoBje,ECoBE3E,EAAMuF,QAAQZ,SDpBNxD,ECoBgBnB,EAAMuF,QAAQpE,IDnBnD,UAAbwD,EAEI,cAAC,IAAD,CACI1D,OAAQ,CAAEE,IAAKA,GACfE,SAAO,EACP+G,KAAM,SACNtH,eAAgB,CAAClD,iBAAkB,KAGvB,UAAb+G,EAEH,cAAC,IAAD,CACIsE,QAAM,EACNd,KAAM,wBACNgJ,KAAM,UACNrT,MAAO,YAKX,cAAC,IAAD,CACImL,QAAM,EACNd,KAAM,eACNgJ,KAAM,UACNrT,MAAO,aCJP,eAAC,IAASwD,QAAV,WACI,cAAC,IAASC,MAAV,UAAiBvB,EAAMuF,QAAQge,WAC/B,eAAC,IAAS9hB,SAAV,YAAoB,SAAAzB,EAAMuF,UAAN,WAAe6a,cAAf,IAAwBxmB,SAAU,EAAtD,IAA0DqoB,GAASjiB,EAAMhG,MAAMqlB,sBAEnF,cAAC,IAAD,CAAMpB,SAA+B,GAArBje,EAAMyiB,aAAuB7oB,GAAU,EAAGoa,SAAO,EAAC5L,KAAM,GAAIpM,MAAO,CAACoC,gBAAgB,OAAQ+J,KAAM,gBAAiBgJ,KAAM,UAAWrT,MAAO,MAAOiD,QAAS,SAACwC,GAAQ8R,GAAS,aCtFtM,SAASmO,GAAYje,EAAS7B,GACjC,IAAIc,EAAU,EACVgc,EAAO,EACXjb,EAAQ8H,KAAK,SAAC/I,EAAIzI,GACAyI,EAAGL,MAAMwf,QAAQ,SAACnf,GAAD,OAAQA,EAAGZ,UAAYA,KAChD2J,KAAK,SAAC/I,EAAIzI,GACZ2I,GAAWkf,SAASpf,EAAGE,SACvBgc,GAAQkD,SAASpf,EAAGG,cAG5B,IAAMkf,EAAQnf,EAAUgc,EACxB,OAAa,GAATmD,EACO,GACKnf,EAAUmf,EAAS,KAAKC,QAAQ,G,qkBCNrC,SAASC,GAAS7jB,GAAQ,IAAD,IAChCG,EACgB,QAAhBC,IAASC,GACH1H,EAAQ,KAAgC2H,QACxC,KACNC,EACAP,EAAMQ,MAAQ,IAAM,EACd,CAAEpC,gBAAiB,SACnB,CAAEA,gBAAiB,WACzBqC,EACgB,QAAhBL,IAASC,GACH,CACIK,UAAWP,EACXQ,IAAKX,EAAMoF,IACXvE,eAAe,EACfC,eAAgBP,GAEpB,CAAEI,IAAKX,EAAMoF,IAAKvE,eAAe,EAAMC,eAAgBP,GAEjE,OACI,eAAC,IAAD,SAAcE,GAAd,IAA8BM,QAAS,WAC/Bf,EAAM6Q,SAAQ,GACd7Q,EAAM+iB,YAAY/iB,EAAMqF,OAFhC,UAII,eAAC,IAAS/D,QAAV,WACI,cAAC,IAASC,MAAV,UAAiBvB,EAAMqF,KAAK8C,OAC5B,eAAC,IAAS1G,SAAV,WACM+hB,GAAWxjB,EAAMqF,KAAKE,QAASvF,EAAM0D,UAAY,KAClDue,GAASjiB,EAAMhG,MAAMwkB,mBAE1B,eAAC,IAAS/c,SAAV,YACK,SAAAzB,EAAMqF,OAAN,WAAYE,cAAZ,IAAqB3L,SAAU,EAAG,IAClCqoB,GAASjiB,EAAMhG,MAAMimB,gBAG9B,cAAC,IAAD,CACIjM,SAAO,EACP5L,KAAM,GACNpM,MAAO,CAAEoC,gBAAiB,OAC1B+J,KAAM,gBACNgJ,KAAM,UACNrT,MAAO,MACPiD,QAAS,WACL,OAAOuQ,KAAM3J,MACTsa,GAASjiB,EAAMhG,MAAMslB,WACrB2C,GAASjiB,EAAMhG,MAAMulB,eACrB,CACI,CACIjkB,KAAM2mB,GAASjiB,EAAMhG,MAAMwd,MAC3BzW,QAAS,aACT/E,MAAO,UAEX,CACIV,KAAM2mB,GAASjiB,EAAMhG,MAAMglB,GAC3Bje,QAAS,WACLf,EAAMiU,SAASjU,EAAMqF,KAAKD,gBClD/C,SAAS0e,GAAa9jB,GAAQ,IAAD,IAElCiU,EAAW,SAAC/O,IhCsGf,SAAwBxB,EAAUwB,GAAlC,mBAAA5L,EAAAC,OAAA,kEAAAD,EAAA,MACgBZ,GAAGc,UAAU,CAAE4L,IAAKF,EAAQxB,SAAUA,IAAY,SAAChK,EAAKwK,GAEvE,OADIxK,GAAKyK,QAAQC,MAAM1K,GAChBwK,MAHR,OACGmB,EADH,OAKMxJ,EAAI,EALV,YAKaA,EAAIwJ,EAAK,GAAGE,QAAQ3L,QALjC,oBAMO0K,EAAKe,EAAK,GAAGE,QAAQ1J,IACvB,CAAC,QAAS,SAAS6I,SAASJ,EAAGK,UAPpC,kCAAArL,EAAA,MAQWwL,KAAuBR,EAAGnD,MARrC,OAKyCtF,IALzC,gDAUInD,GAAGsY,YAAY,CAAE5L,IAAKF,EAAQxB,SAAUA,KAV5C,8DgCrGCiS,CAAa3V,EAAM0D,SAAUwB,GAAQpL,MAAK,SAACoK,GACvClE,EAAMgjB,WAAWhjB,EAAMijB,YAI/B,OACI,cAAC9V,EAAA,EAAD,UACKnN,EAAMuU,QACH,cAAC/H,EAAA,EAAD,CACI1O,MAAO,OACPsK,KAAM,QACNpM,MAAOmH,GAAOoR,WAElB,SAAAvU,EAAMqF,WAAN,IAAYzL,QAAS,EAArB,SACAoG,EAAMqF,WADN,EACA,EAAYgI,KAAI,SAAC/I,EAAIzI,GACjB,OACI,cAACgoB,GAAD,CACIrjB,MAAO3E,EAEPwJ,KAAMf,EACNtK,KAAMgG,EAAMhG,KACZia,SAAUA,EACVvQ,SAAU1D,EAAM0D,SAChBmN,QAAS7Q,EAAM6Q,QACfkS,YAAa/iB,EAAM+iB,aANdze,EAAGc,QAWpB,cAACrJ,EAAA,EAAD,CAAMC,MAAOmH,GAAOqR,WAApB,SACKyN,GAASjiB,EAAMhG,MAAMkY,e,mCClC3B,SAAS6R,GAAe/jB,GACnC,IAAMwC,EAAe7J,EAAQ,KAE7B,OACI,eAACsK,EAAA,EAAD,WACI,cAAC,EAAD,CACIT,aAAcA,EACdM,YAAaI,KACbX,YAAaY,GAAOtB,aACpBkB,WAAYI,GAAOtB,aACnBY,MAAM,EACNE,UAAU,IAEd,cAAC5G,EAAA,EAAD,CAAMC,MAAOmH,GAAOd,iBAApB,UACoB,IAAfrC,EAAMoD,KACD6e,GAASjiB,EAAMhG,MAAMmlB,gBACrB8C,GAASjiB,EAAMhG,MAAMolB,iBAE/B,cAAC,IAAD,CACI9b,MAAO2e,GAASjiB,EAAMhG,MAAMc,aAC5BkB,MAAO,CAAEoC,gBAAiB,QAC1B2C,QAAS,SAACwC,GACNvD,EAAMwD,cCjBX,SAASwgB,GAAgBhkB,GACpC,MAA4B6G,qBAA5B,WAAOod,EAAP,KAAeC,EAAf,KA2CA,OAAIlkB,EAAMwE,QAEF,cAACmI,EAAA,EAAD,CAAc3Q,MAAOmH,GAAOmR,SAA5B,SACI,cAACnH,EAAA,EAAD,CAAYgX,sBAAuBhhB,GAAOie,kBAA1C,SACI,cAAC2C,GAAD,CAAgB3gB,MAAM,EAAOpJ,KAAMgG,EAAMhG,KAAMwJ,MARjD,WACVxD,EAAM6J,YAAW,UAcjB,cAAC8C,EAAA,EAAD,CAAc3Q,MAAOmH,GAAOmR,SAA5B,SACI,eAACnH,EAAA,EAAD,CAAYgX,sBAAuBhhB,GAAOgK,WAA1C,UACM+U,GAAUliB,EAAM2E,SAAU3E,EAAMmB,KAvC5B,WACdnB,EAAMokB,cACNpkB,EAAMqkB,cACNrkB,EAAMskB,WAoCoDtkB,EAAMmS,UAAWnS,EAAMoiB,WAAYpiB,EAAMoS,aAAcpS,EAAMyS,MAAOzS,EAAM0S,UAC5H,cAAC,IAAD,CACIpP,MAAO2e,GAASjiB,EAAMhG,MAAM2kB,WAC5B1W,YAAa,CAAE/J,aAAc,IAC7B6C,QArCC,0BAAAzH,EAAAC,OAAA,mDACO,QAAhB6G,SAASC,GADA,uBAETsH,MAAM,QAFG,4CAAArO,EAAA,MAMMirB,KAAgC,CAACpT,KAAM,CAAC,UAAW,cANzD,UAOO,YADhB3V,EANS,QAOF2V,KAPE,iDAWbnR,EAAMskB,OAAO9oB,EAAO2F,KACpBnB,EAAMokB,YAAY5oB,EAAOgpB,SAAS9oB,MAAM,KAAK,IAC7CsE,EAAMqkB,YAAY7oB,EAAO2M,MAbZ,gEAuCL,cAACpM,EAAA,EAAD,CAAMC,MAAOmH,GAAOge,4BAApB,SACKc,GAASjiB,EAAMhG,MAAM4kB,gBAE1B,eAAC3b,EAAA,EAAD,CAAMjH,MAAO,CAACmD,cAAe,MAAO5B,WAAY,SAAUK,iBAAkB,GAAI6mB,WAAY,EAAGrlB,SAAS,QAAxG,UACI,cAAC,IAAD,CACIyJ,MAAO7I,EAAMujB,SACb3a,WAAY,CAAClL,SAAU,IACvBoD,eAAgB,CAACnD,aAAc,IAC/B0K,YAAa4Z,GAASjiB,EAAMhG,MAAM6kB,kBAClC/V,aAAc,SAACvF,GAAD,OAAOvD,EAAM0kB,YAAYnhB,MAE3C,eAACN,EAAA,EAAD,CAAMjH,MAAO,CAACmD,cAAe,MAAO5B,WAAY,SAAUknB,WAAY,EAAGrlB,SAAS,SAAUZ,MAAO,OAAnG,UACA,cAAC,IAAD,CACI6J,YAAa4Z,GAASjiB,EAAMhG,MAAM8kB,UAClClW,WAAY,CAAClL,SAAU,IACvBmL,MAAOob,EACPnb,aAAc,SAACvF,GAAD,OAAO2gB,EAAU3gB,MAEnC,cAAC,IAAD,CACI2E,KACI,cAAC,IAAD,CACIC,KAAM,aACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,KAGnCmD,QAAS,kBAxFX,WAAO,IAAD,IAGyD,EAF7E,GAAI,MAACkjB,MAAQ5d,QAAUrG,EAAMogB,QAAQxmB,QAAU,GAC3C,OAAO,MAC2D,KAA3D,SAAAoG,EAAMogB,cAAN,IAAe1b,SAAf,MAAwBuf,GAAxB,SAAwBA,EAAQ5d,aAAhC,EAAwB,EAAgBse,iBAC/C3kB,EAAM4kB,WAAN,eAAqB5kB,EAAMogB,SAA3B,OAAoC6D,GAApC,SAAoCA,EAAQ5d,aAA5C,EAAoC,EAAgBse,iBAExDT,IAkF+BW,IACf5G,SAAUje,EAAMogB,QAAQxmB,QAAU,WAI1C,cAACmC,EAAA,EAAD,CAAMC,MAAOmH,GAAOge,4BAApB,SACKc,GAASjiB,EAAMhG,MAAM+kB,eAE1B,cAAC9b,EAAA,EAAD,CAAMjH,MAAOmH,GAAOse,WAApB,SACKzhB,EAAMogB,QAAQ/S,KAAK,SAAC/I,EAAIzI,GACrB,OACI,cAAC,IAAD,CAEIgN,MAAOvE,EACPwgB,WAAY,CAAC3mB,kBAAmB,GAAIhB,OAAQ,GAAIS,iBAAkB,GAAIqE,eAAgB,GACtFlB,QAAS,kBA9Ff,SAAClF,GACnB,IAAMgnB,EAAM7iB,EAAMogB,QAClByC,EAAI/mB,OAAOD,EAAG,GACdmE,EAAM4kB,WAAN,KAAqB/B,IA2FkBkC,CAAclpB,KAHxBA,aChGtB,SAASmpB,GAAShlB,GAE7B,MAAwB6G,oBAAS,GAAjC,WAAOzD,EAAP,KAAayN,EAAb,KAGA,EAAsChK,oBAAS,GAA/C,WAAOoe,EAAP,KAAoBC,EAApB,KAGA,EAAsCre,qBAAtC,WAAOse,EAAP,KAAoB7B,EAApB,KAGA,EAAgCzc,qBAAhC,WAAO0b,EAAP,KAAiBQ,EAAjB,KAGA,EAAoClc,mBAAS,IAA7C,WAAO2b,EAAP,KAAmBM,EAAnB,KAGA,EAAoCjc,oBAAS,GAA7C,WAAOue,EAAP,KAAmBlC,EAAnB,KAGA,EAA0Brc,oBAAS,GAAnC,WAAOuO,EAAP,KAAcC,EAAd,KAGA,EAAgCxO,qBAAhC,WAAO0c,EAAP,KAAiBmB,EAAjB,KACA,EAA8B7d,mBAAS,IAAvC,WAAOuZ,EAAP,KAAgBwE,EAAhB,KACA,EAAsB/d,qBAAtB,WAAO1F,EAAP,KAAYmjB,EAAZ,KACA,EAAgCzd,qBAAhC,WAAOjO,EAAP,KAAiByrB,EAAjB,KACA,GAAgCxd,qBAAhC,aAAOlC,GAAP,MAAiByf,GAAjB,MACA,GAAkCvd,oBAAS,GAA3C,aAAOsL,GAAP,MAAkBC,GAAlB,MACA,GAA0BvL,mBAAS,IAAI0L,KAAMC,OAA7C,aAAOC,GAAP,MAAcC,GAAd,MACA,GAA8B7L,oBAAS,GAAvC,aAAOrC,GAAP,MAAgBqF,GAAhB,MAoEMwb,GAAW,WACb,GAAKD,EAAL,CACA,IAAM7f,EAAUgd,EAAShd,QAAQ+f,OAAO9C,InC0BzC,SAAwB9e,EAAUwB,EAAQK,GAA1C,mBAAAjM,EAAAC,OAAA,kEAAAD,EAAA,MACgBZ,GAAGc,UAAU,CAAE4L,IAAKF,IAAS,SAACxL,EAAKwK,GAElD,OADIxK,GAAKyK,QAAQC,MAAM,oBAAqB1K,GACpCwK,MAHT,UACGmB,EADH,wDAMMxJ,EAAI,EANV,YAMaA,EAAI0J,EAAQ3L,QANzB,qBAOO0K,EAAKiB,EAAQ1J,IACX+E,GART,oCAAAtH,EAAA,MASW+K,GAAkBX,EAAUY,IATvC,oCAUUA,EAAG1D,KAAM0D,EAAGihB,WAVtB,oCAAAjsB,EAAA,MAWWsL,GAAeN,IAX1B,eAYYA,EAAGihB,WAZf,QAMiC1pB,IANjC,8BAeHwJ,EAAK,GAAGE,QAAUA,EAff,kBAgBI7M,GAAGQ,YAAY,CAACkM,IAAKF,GAArB,MAAkCG,EAAK,MAhB3C,8DmCzBCsQ,CAAa3V,EAAM0D,SAAU6e,EAASnd,IAAKG,GAASzL,MAAK,SAACoK,GACtD,OAAOoN,KAAM3J,MACTsa,GAASjiB,EAAMhG,MAAM6lB,WACrBoC,GAASjiB,EAAMhG,MAAM8lB,oBACrB,CACI,CACIxkB,KAAM2mB,GAASjiB,EAAMhG,MAAMglB,GAC3Bje,QAAS,WACLf,EAAMgjB,WAAWhjB,EAAMijB,QACvBH,EAAc,IACdxM,cAQlB8L,GAAa,oBAAA9oB,EAAAC,OAAA,kEAAAD,EAAA,YACcmZ,QADd,EACcA,GAAOQ,kBADrB,kBAEIE,SAFJ,kCAAA7Z,EAAA,MAGLmZ,GAAMG,cAHD,OAIfR,IAAa,GAJE,6DAgFbkE,GAAS,WAEN9R,IAASqF,IAAW,GAEnBub,IAAeH,GAAgBzC,EAAW5oB,OAAS,EACrDyb,GAAS,GAIT8P,GAvHJP,EAAW,IACXF,IACAN,KACAC,IACAC,IACA5R,GAAS,IAAIH,KAAMC,OAoHf8Q,IACA4B,GAAe,IACRD,EACPC,GAAe,GACV9hB,GACL8f,GAAc,GACdrS,GAAQ,IAER7Q,EAAM8a,OAAO,IAGf0K,GAAY,SAACC,GACf,GAAIN,EAAa,CAEb,GAAY,SAARM,EAAiB,OAAOxD,GAASjiB,EAAMhG,MAAM2mB,YAC5C,GAAY,YAAR8E,EAAoB,QAASrF,EAAQxmB,OAAS,GAAK2pB,EAAS3pB,OAAS,GACzE,GAAY,WAAR6rB,EAAmB,OA7KhB,WAChB,IAAIlgB,EACA/E,EAC+B,EAA/BkiB,OAAOC,UAAUwC,GAEjB5f,EAAUid,EAAW2C,GAAW,MAAG5C,GAAH,SAAGA,EAAUhd,cAAb,EAAG,EAAmB3L,UAMtD4G,EAAQ+hB,EAAShd,QAAQC,WAAU,SAAAlB,GAAE,OAAIA,EAAG1D,IAAMukB,KAClD5f,EAAUgd,EAAShd,QAAQ/E,GACvBmE,IAAYY,EAAQZ,UAAYxD,GAAOoE,EAAQpE,MAC/CoE,EAAQggB,YAAa,IAE7BhgB,EAAQ3M,SAAUA,EAClB2M,EAAQZ,SAAWA,GACnBY,EAAQpE,IAAMA,EACdoE,EAAQ6a,QAAUA,EAClB7a,EAAQge,SAAWA,EACnBL,GAAc,GACdrZ,IAAW,GACP6Y,OAAOC,UAAUwC,GACQ,GAArB3C,EAAW5oB,OACXkpB,EAAc,CAACvd,IAEfud,EAAc,KAAIvd,KAEtBgd,EAAShd,QAAQ/E,GAAS+E,EAC1Bwd,EAAYR,IA+IuBmD,QAChC,GAAIT,EAAa,CAEpB,GAAY,SAARQ,EAAiB,OAAOxD,GAASjiB,EAAMhG,MAAM4mB,WAC5C,GAAY,YAAR6E,EAAoB,QAASrF,EAAQxmB,OAAS,GAAK2pB,EAAS3pB,OAAS,GACzE,GAAY,WAAR6rB,EAAmB,OAtMhB,WAChB,IAAM1I,EAAO,CACT5b,IAAKA,EACLvI,SAAUA,EACVwnB,QAASA,EACTmD,SAAUA,EACV5e,SAAUA,IAGdyf,KACAE,IACAD,IACAO,EAAW,IACXF,IAEA5B,EAAc,GAAD,YAAKN,GAAL,CAAiBzF,KAC9BmG,GAAc,GACdrZ,IAAW,GAqL4B8b,QAChC,GAAIviB,EAAM,CAEb,GAAY,SAARqiB,EAAiB,OAAOxD,GAASjiB,EAAMhG,MAAMW,KAC5C,GAAY,YAAR8qB,EAAoB,OAASL,EACjC,GAAY,WAARK,EAAmB,OAAOJ,SAChC,CAEH,GAAY,SAARI,EAAiB,OAAOxD,GAASjiB,EAAMhG,MAAMqkB,OAC5C,GAAY,YAARoH,QACJ,GAAY,WAARA,EAAmB,OAAOzlB,EAAM8a,OAAO,KAIxD,OACI,qCACI,eAAC7X,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UAEI,eAAC,IAAD,CACIoX,QAASnB,EACToB,aAAcrT,GAAOuR,QACrB+B,gBAAiB,kBAAMpB,GAAS,IAChCqB,eAAgBC,KAJpB,UAMI,cAAC5a,EAAA,EAAD,CAAMC,MAAO,CAAC2B,aAAc,GAAIa,MAAO,IAAKX,UAAW,UAAvD,SAAmEokB,GAASjiB,EAAMhG,MAAM6mB,oBACxF,eAAC5d,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UACI,cAAC,IAAD,CACImE,MAAO2e,GAASjiB,EAAMhG,MAAM8X,OAC5B7J,YAAa,CAAE7J,gBAAiB,OAChC0C,eAAgB,CAAEwN,YAAa,IAC/BvN,QAAS,kBAAMsU,GAAS,MAE5B,cAAC,IAAD,CACI/R,MAAO2e,GAASjiB,EAAMhG,MAAMskB,OAC5BrW,YAAa,CAAEhM,WAAY,QAC3B8E,QAAS,WACLmiB,GAAc,GACdI,IACAzS,GAAQ,GACRiS,EAAc,IACdzN,GAAS,YAOzB,cAAC,IAAD,CACI/R,MAAQkiB,GAAU,SAClB1kB,eAAgBqC,GAAO+d,aACvBhZ,KACI,cAAC,IAAD,CACIC,KAAM/E,EAAO,eAAiB,oBAC9B+N,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,KAGnCmD,QAAS,WACLykB,GAAU,YAEdvH,SAAWuH,GAAU,cAEzB,cAAC,IAAD,CACI1nB,MAAM,MACN9B,MAAO,CAAC6C,WAAY,IACpBuJ,KAAK,QACLF,KAAM,CAACC,KAAM,qBAAsBgJ,KAAM,UAAWrT,MAAM,SAC1DiD,QAAS,kBAAMuV,WAGvB,cAAC,IAAD,CACIxY,MAAO,OACPU,MAAO,EACPxC,MAAO,CAAEwC,MAAO,OAAWpB,UAAW,MAE1C,eAACuP,EAAA,EAAD,CAAc3Q,MAAOmH,GAAOmR,SAA5B,WAEQlR,GAAS6hB,GAAgBE,EAapB,6BAZL,cAAC,IAAD,CACI7hB,MAAO2e,GAASjiB,EAAMhG,MAAMykB,YAC5BvW,KACI,cAAC,IAAD,CACIC,KAAM,qBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,KAGnCmD,QAAS,kBAAMmkB,GAAe,MAGtC,cAAC/X,EAAA,EAAD,CAAYnR,MAAO,CAAC2B,aAAc,IAAlC,SAvMK,WAsCqB,IAAD,IAnCzB4H,EAFR,IAAI4f,GAAgBF,EAgBb,OAAIA,EACC,cAACjB,GAAD,CACIhqB,KAAMgG,EAAMhG,KACZ4qB,WAAYA,EACZR,YAAaA,GACbM,YAAaA,EACbJ,OAAQA,EACRD,YAAaA,EACbxa,WAAYA,GACZ6I,SAAUA,GACVN,aAAcA,GACdgQ,WAAYA,GACZjhB,IAAKA,EACLvI,SAAUA,EACVwnB,QAASA,EACTzb,SAAUA,GACV4e,SAAUA,EACV/e,QAASA,GACTiO,MAAOA,GACPN,UAAWA,KAEhB/O,IAAS6hB,EAEhB,SAAQ1C,EAAShd,UAAjB,SAAO,EAAoB+f,OAAO9C,SAAlC,EAAO,EAAwCnV,KAAI,SAAC/I,EAAIzI,GACpD,OAAQ,cAACymB,GAAD,CACJ9hB,MAAO3E,EAEP+E,GAAI2hB,EAASnd,KAAO,EACpBmd,SAAUA,EACVC,WAAYA,EACZjd,QAASjB,EACTtK,KAAMgG,EAAMhG,KACZ4oB,WAAYte,EAAG1D,IAAM/E,EACrB4mB,aAAa,EACbQ,OAAQjjB,EAAMijB,OACdD,UAAWhjB,EAAMgjB,UACjBE,cAAeA,EACfI,eAAgBA,EAChBP,YAAaA,EACbD,cAAeA,GAbVjnB,MAkBL,cAACioB,GAAD,CACJze,KAAMrF,EAAMqF,KACZkP,QAASvU,EAAMuU,QACfva,KAAMgG,EAAMhG,KACZ0J,SAAU1D,EAAM0D,SAChBmN,QAASA,EACTkS,YAAaA,EACbC,UAAWhjB,EAAMgjB,YAhErB,GAFIxe,IAASqF,IAAW,GAEpB6Y,OAAOC,UAAUwC,GAAc,CAAC,IAAD,EAC/B5f,EAAUid,EAAW2C,GAAW,MAAG5C,GAAH,SAAGA,EAAUhd,cAAb,EAAG,EAAmB3L,aACnD,CACH,IAAM4G,EAAQ+hB,EAAShd,QAAQC,WAAU,SAAAlB,GAAE,OAAIA,EAAG1D,IAAMukB,KACxD5f,EAAUgd,EAAShd,QAAQ/E,GAE1B+E,IACL8e,EAAY9e,EAAQ3M,UACpBwrB,GAAY7e,EAAQZ,UACpB2f,EAAO/e,EAAQpE,KACfujB,EAAYnf,EAAQge,UACpBqB,EAAW,KAAIrf,EAAQ6a,UACvB8E,GAAe,IAwLTU,WCvUH,SAASC,GAAW7lB,GAC/B,MAA4C6G,oBAAS,GAArD,WAAOif,EAAP,KAAuBC,EAAvB,KACA,EAA8Blf,mBAAS,IAAvC,WAAOtB,EAAP,KAAgB6d,EAAhB,KACA,EAAwBvc,mBAAS,IAAjC,WAAOsB,EAAP,KAAa6d,EAAb,KACA,EAA0Bnf,oBAAS,GAAnC,WAAOuO,EAAP,KAAcC,EAAd,KACA,EAAkDxO,oBAAS,GAA3D,WAAOof,EAAP,KAA0BC,EAA1B,KAEA,EAAsCrf,qBAAtC,WAAOse,EAAP,KAAoB7B,EAApB,KAGA,EAAsBzc,qBAAtB,WAAO1F,EAAP,KAAYmjB,EAAZ,KACA,EAAgCzd,qBAAhC,WAAOjO,EAAP,KAAiByrB,EAAjB,KACA,EAAgCxd,qBAAhC,WAAOlC,EAAP,KAAiByf,EAAjB,KACA,EAA8Bvd,mBAAS,IAAvC,WAAOuZ,EAAP,KAAgBwE,EAAhB,KACA,EAAgC/d,qBAAhC,WAAO0c,EAAP,KAAiBmB,GAAjB,KACA,GAA8B7d,oBAAS,GAAvC,aAAOrC,GAAP,MAAgBqF,GAAhB,MACA,GAAkChD,oBAAS,GAA3C,aAAOsL,GAAP,MAAkBC,GAAlB,MACA,GAA0BvL,mBAAS,IAAI0L,KAAMC,OAA7C,aAAOC,GAAP,MAAcC,GAAd,MAyDM0P,GAAa,oBAAA9oB,EAAAC,OAAA,kEAAAD,EAAA,YACcmZ,QADd,EACcA,GAAOQ,kBADrB,kBAEIE,SAFJ,kCAAA7Z,EAAA,MAGLmZ,GAAMG,cAHD,OAIXT,IAAWC,IAAa,GAJb,6DAwCboT,GAAY,SAACC,GACf,QAAoBU,IAAhBhB,EAA2B,CAE3B,GAAY,SAARM,EAAiB,OAAOxD,GAASjiB,EAAMhG,MAAM2mB,YAC5C,GAAY,YAAR8E,EAAoB,SAAgB,MAAPrF,OAAA,EAAAA,EAASxmB,QAAS,GAAK2pB,EAAS3pB,OAAS,GAC1E,GAAY,WAAR6rB,EAAmC,OAAdrD,KAtDlC7c,EAAQ4f,GAAaxgB,SAAWA,EAChCY,EAAQ4f,GAAavsB,SAAWA,EAChC2M,EAAQ4f,GAAahkB,IAAMA,EAC3BoE,EAAQ4f,GAAa5B,SAAWA,EAChChe,EAAQ4f,GAAa/E,QAAUA,EAC/BgD,EAAW,KAAI7d,SACfsE,IAAW,QAiDJ,GAAIic,EAAgB,CAEvB,GAAY,SAARL,EAAiB,OAAOxD,GAASjiB,EAAMhG,MAAMglB,GAC5C,GAAY,YAARyG,EAAoB,SAAgB,MAAPrF,OAAA,EAAAA,EAASxmB,QAAS,GAAK2pB,EAAS3pB,OAAS,GAC1E,GAAY,WAAR6rB,EAAoD,OAA/BrD,KAAc/M,GAAS,GAhFzC,WAChB,IAAMmN,EAAa,CACfrhB,IAAKA,EACLvI,SAAUA,EACVwnB,QAASA,EACTmD,SAAUA,EACV5e,SAAUA,GAGdyf,IACAE,IACAD,IACAO,EAAW,IACXF,KAEAtB,EAAW,GAAD,YAAK7d,GAAL,CAAcid,KACxB3Y,IAAW,GAgE6D8b,OACjE,CACH,GAAY,SAARF,EAAiB,OAAOxD,GAASjiB,EAAMhG,MAAM0kB,SAC5C,GAAY,YAAR+G,EAAoB,QAASlgB,EAAQ3L,OAAS,GAClD,GAAY,WAAR6rB,EAAqB,OAAOpQ,GAAS,KAgEtD,OACI,qCAEI,eAAC,IAAD,CACIkB,QAASnB,EACToB,aAAcrT,GAAOiS,MACrBqB,gBAAiB,kBAAMpB,GAAS,IAChCqB,eAAgBC,KAJpB,UAMI,cAAC5a,EAAA,EAAD,CAAMC,MAAOmH,GAAOke,WAApB,SAAiCY,GAASjiB,EAAMhG,MAAMylB,0BACtD,cAAC1jB,EAAA,EAAD,CAAMC,MAAOmH,GAAOme,iBAApB,SAAuCW,GAASjiB,EAAMhG,MAAM0lB,oBAC5D,eAACzc,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UACI,cAAC,IAAD,CAAOkJ,YAAa4Z,GAASjiB,EAAMhG,MAAM2lB,UACrC7e,eAAgBqC,GAAOoe,wBACvB3Y,WAAYzF,GAAOqe,eACnB1Y,aAAc,SAACvF,GAAD,OAAOyiB,EAAO,MAACziB,OAAD,EAACA,EAAG8C,WAEpC,cAAC,IAAD,CAAQvF,eAAgB,CAAE1D,UAAW,GAAIoB,MAAO,IAAM8E,MAAO,GAAI4E,KAC7D,cAAC,IAAD,CACIC,KAAM,2BACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,KAEZ6V,UAAc,MAAJ9V,OAAA,EAAAA,EAAMvO,QAAS,GAAKuO,EAAKvO,OAAS,GAAmBmH,QArM9D,YpC4ChB,SAAsB2C,EAAU2B,GAAhC,mBAAA/L,EAAAC,OAAA,mDACE8L,EAAK8C,MAAiC,KAAzB,SAAA9C,EAAKE,cAAL,IAAc3L,QAD7B,uBAECuK,QAAQC,MAAM,mCAFf,kBAGQ,MAHR,OAKMvI,EAAI,EALV,YAKaA,EAAIwJ,EAAKE,QAAQ3L,QAL9B,wBAMO0K,EAAKe,EAAKE,QAAQ1J,GANzB,WAAAvC,EAAA,MAOO+K,GAAkBX,EAAUY,IAPnC,OAKsCzI,IALtC,gDASInD,GAAGmB,YAAH,MAAoBwL,IAAQ,SAAC3L,EAAK8B,GACrC,OAAI9B,GACAyK,QAAQC,MAAM1K,GACP,MAEA8B,MAdZ,8DoC3CCma,CAAW3V,EAAM0D,SAAU,CACvByE,KAAMA,EAAKie,UAAU,EAAG,IACxB7gB,QAASA,EACT7B,SAAU1D,EAAM0D,WACjB5J,MAAK,SAAAoK,GACJ,OAAOoN,KAAM3J,MACTsa,GAASjiB,EAAMhG,MAAM4lB,YACrBqC,GAASjiB,EAAMhG,MAAM8lB,oBACrB,CACI,CACIxkB,KAAM2mB,GAASjiB,EAAMhG,MAAMglB,GAC3Bje,QAAS,WACLsU,GAAS,GACTrV,EAAM8a,OAAO,UAK9BpU,OAAM,SAAAhN,GACLyK,QAAQwC,IAAIjN,eAsLZ,eAAC,IAAD,CACI6c,QAAS0P,EACTzP,aAAcrT,GAAOuR,QACrB+B,gBAAiB,kBAAMyP,GAAqB,IAC5CxP,eAAgBC,KAJpB,UAMI,cAAC5a,EAAA,EAAD,CAAMC,MAAO,CAAC2B,aAAc,GAAIa,MAAO,IAAKX,UAAW,UAAvD,SAAmEokB,GAASjiB,EAAMhG,MAAM6mB,oBACxF,eAAC5d,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UACI,cAAC,IAAD,CACImE,MAAO2e,GAASjiB,EAAMhG,MAAM8X,OAC5B7J,YAAa,CAAE7J,gBAAiB,OAChC0C,eAAgB,CAAEwN,YAAa,IAC/BvN,QAAS,kBAAMmlB,GAAqB,MAExC,cAAC,IAAD,CACI5iB,MAAO2e,GAASjiB,EAAMhG,MAAMskB,OAC5BrW,YAAa,CAAEhM,WAAY,QAC3B8E,QAAS,WACLmlB,GAAqB,GACrBlmB,EAAM8a,OAAO,YAM7B,eAAC7X,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UACI,cAAC,IAAD,CAEImE,MAAQkiB,GAAU,SAClB1kB,eAAgBqC,GAAO+d,aACvBhZ,KACI,cAAC,IAAD,CACIC,KAAM2d,EAAiB,eAAiB,gCACxC3U,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,KAGnCqgB,SAAWuH,GAAU,YACrBzkB,QAAU,kBAAMykB,GAAU,cAE9B,cAAC,IAAD,CACI1nB,MAAM,MACN9B,MAAO,CAAC6C,WAAY,IACpBuJ,KAAK,QACLF,KAAM,CAACC,KAAM,qBAAsBgJ,KAAM,UAAWrT,MAAM,SAC1DiD,QAAS,WA1LrB6jB,EAAW,IACXR,IACAC,IACAC,IACAI,KACA7a,IAAW,GAuLKuY,KACI0D,EACAC,GAAmBD,GACI,GAAlBvgB,EAAQ3L,OAAaoG,EAAM8a,OAAO,GACtCoL,GAAqB,SAItC,cAAC,IAAD,CACIpoB,MAAO,OACPU,MAAO,EACPxC,MAAO,CAAEwC,MAAO,OAAWpB,UAAW,YApJ1B+oB,IAAhBhB,GAA8BW,IAC1BthB,IAASqF,IAAW,GACxB+a,EAAWrf,EAAQ4f,GAAa/E,SAChCgE,EAAY7e,EAAQ4f,GAAaxgB,UACjC0f,EAAY9e,EAAQ4f,GAAavsB,UACjC0rB,EAAO/e,EAAQ4f,GAAahkB,KAC5BujB,GAAYnf,EAAQ4f,GAAa5B,UACjCwC,GAAkB,IAElBD,EACO,cAAC9B,GAAD,CAEHhqB,KAAMgG,EAAMhG,KACZ4qB,WAAYA,EACZR,YAAaA,EACbM,YAAaA,GACbJ,OAAQA,EACRD,YAAaA,EACbxa,WAAYA,GACZ6I,SAAUA,GACVN,aAAcA,GACdgQ,WAAYA,GACZjhB,IAAKA,EACLvI,SAAUA,EACVwnB,QAASA,EACTzb,SAAUA,EACV4e,SAAUA,EACV/e,QAASA,GACTiO,MAAOA,GACPN,UAAWA,KAGR,eAACxF,EAAA,EAAD,CAAc3Q,MAAOmH,GAAOmR,SAA5B,UACH,cAAC,IAAD,CACIhR,MAAO2e,GAASjiB,EAAMhG,MAAMykB,YAC5BvW,KACI,cAAC,IAAD,CACIC,KAAM,qBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,KAGnCmD,QAAS,kBAAMglB,GAAkB,MAErC,cAAC5Y,EAAA,EAAD,CAAYnR,MAAO,CAAC2B,aAAc,IAAlC,SACMqC,EAAMuU,QACJ,cAAC/H,EAAA,EAAD,CACI1O,MAAO,OACPsK,KAAM,QACNpM,MAAOmH,GAAOoR,UA7FX,IAAnBhP,EAAQ3L,OACA,cAACmC,EAAA,EAAD,CAAMC,MAAOmH,GAAOqR,WAApB,SACHyN,GAASjiB,EAAMhG,MAAMukB,gBAG1B,MAAOhZ,OAAP,EAAOA,EAAS8H,KAAI,SAAC/I,EAAIzI,GACrB,OACI,cAACymB,GAAD,CACI9hB,MAAO3E,EAEP+E,GAAI/E,EACJ0J,QAASjB,EACTtK,KAAMgG,EAAMhG,KACZopB,WAAYA,EACZE,eAAgBA,EAChBV,WAAY/mB,EACZsnB,YAAa5d,GAPR1J,e,cCjHd,SAAS8e,GAAK3a,GACzB,IAAMqmB,EAAgB1tB,EAAQ,KAC9B,OACA,qCACMqH,EAAMsmB,WAAa,EAAI,cAAC,IAAD,CACrBtqB,MAAO,CAACoB,UAAW,IAAKuR,SAAU,WAAY1E,OAAQ,IACtDnJ,eAAgB,CAACjC,WAAY,KAC7BuJ,KAAK,QACLF,KAAM,CAACC,KAAM,eAAgBgJ,KAAM,UAAWrT,MAAM,SACpDiD,QAAS,kBAAMf,EAAMumB,qBACpB,6BACL,cAAC,EAAD,CAAQ/jB,aAAcgkB,GAAgB1jB,YAAaujB,EAAe9jB,YAAa,CAACnF,WAAY,GAAID,OAAQ,IAAKQ,cAAe,MAC5H,cAAC,IAAD,CAAM3B,MAAOmH,GAAOue,WAApB,SAAiCO,GAASjiB,EAAMhG,MAAM+lB,cAAc/f,EAAMqF,KAAK8C,QAC/E,cAAC,IAAD,CACI7E,MAAO2e,GAASjiB,EAAMhG,MAAMsd,KAC5BxW,eAAgBqC,GAAO0Z,WACvB9b,QAAS,kBAAMf,EAAMymB,SAAQ,IAC7B9c,WAAW,EACXzB,KACI,cAAC,IAAD,CACIC,KAAM,wBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,OAIvC,cAAC,IAAD,CACI0F,MAAO2e,GAASjiB,EAAMhG,MAAMwd,MAC5BvP,YAAa,CAAE7J,gBAAiB,OAChC0C,eAAgBqC,GAAO8d,gBACvBlgB,QAAS,kBAAMf,EAAM8a,OAAO,IAC5B5S,KACI,cAAC,IAAD,CACIC,KAAM,qBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,U,yBC9BhC,SAASmd,GAAK/a,GACzB,MAAwB6G,mBAAS,IAAjC,WAAO0R,EAAP,KAAa2D,EAAb,KACA,EAA8BrV,oBAAS,GAAvC,WAAO0N,EAAP,KAAgB8G,EAAhB,KACA,EAA8BxU,mBAAS,GAAvC,WAAO4F,EAAP,KAAgBia,EAAhB,KACA,EAA4B7f,qBAA5B,WAAOod,EAAP,KAAeC,EAAf,KACA,EAA0Brd,oBAAS,GAAnC,WAAOuO,EAAP,KAAcC,EAAd,KACA,EAAkCxO,oBAAS,GAA3C,WAAOsL,EAAP,KAAkBC,EAAlB,KACA,EAA0BvL,mBAAS,IAAI0L,KAAMC,OAA7C,WAAOC,EAAP,KAAcC,EAAd,KAEA,EAA8B7L,mBAAS,GAAvC,WAAOrC,EAAP,KAAgBqF,EAAhB,KACA,EAAwBhD,mBAAS,GAAjC,WAAO2Z,EAAP,KAAamG,EAAb,KACA,EAAgC9f,oBAAS,GAAzC,WAAOkV,EAAP,KAAiBC,EAAjB,KAEArQ,qBAAW,WACPuQ,EChCe,SAAC0K,GACpB,IAAK,IAAI/qB,EAAI+qB,EAAIhtB,OAAS,EAAGiC,EAAI,EAAGA,IAAK,CACrC,IAAMgrB,EAAI5gB,KAAKC,MAAMD,KAAKE,UAAYtK,EAAI,IADL,EAElB,CAAC+qB,EAAIC,GAAID,EAAI/qB,IAA/B+qB,EAAI/qB,GAFgC,KAE5B+qB,EAAIC,GAFwB,KAIzC,OAAOD,ED2BKE,CAAQ9mB,EAAMqF,OACtBgW,GAAW,KACZ,IAEH,IAAM0L,EAAepuB,EAAQ,KACvBquB,EAAYruB,EAAQ,KAGpBypB,EAAa,oBAAA9oB,EAAAC,OAAA,kEAAAD,EAAA,YACcmZ,OADd,EACcA,EAAOQ,kBADrB,kBAEIE,SAFJ,kCAAA7Z,EAAA,MAGLmZ,EAAMG,cAHD,OAIfR,GAAa,GAJE,6DA6Cb6U,EAA0B,SAACzrB,GAC7B,OACI8V,KAAM3J,MACFnM,EAASymB,GAASjiB,EAAMhG,MAAMkmB,aAAe+B,GAASjiB,EAAMhG,MAAMmmB,YAClE3kB,EAASymB,GAASjiB,EAAMhG,MAAMgJ,QAAUif,GAASjiB,EAAMhG,MAAMge,OAAOO,EAAK9L,GAAS2T,SAClF,CACI,CACI9kB,KAAM2mB,GAASjiB,EAAMhG,MAAMglB,GAC3Bje,QAAS,8BAAAzH,EAAAC,OAAA,qDACDkT,EAAU,GAAK8L,EAAK3e,OAAS,GAD5B,gBAED8sB,EAAWja,EAAU,GAFpB,8BAIK5H,EAAyBlM,EAAlB6L,GAAWgc,EAAe,IAA0D,KAC7Fhc,GAAWgc,GAAMxE,GAAY,GALhC,WAAA1iB,EAAA,MAMuBiZ,KAAMC,MAAMyE,YAAYpS,IAN/C,gBAMO4N,EANP,EAMOA,MACRC,EAASD,GACTA,EAAMa,YACN+B,GAAS,GATR,kEAmC7B,OACA,mCACKd,EACG,cAAC/H,EAAA,EAAD,CAAmBpE,KAAM,QAASpM,MAAO,CAACoB,UAAW,IAAKU,MAAO,SAEjE,qCACKie,GAAYvX,GAAWgc,EACpB,cAAC,KAAD,CACIlD,SAAS,EACTC,WAAW,EACXC,UAAW,IACXC,MAAO,GACPC,OAAQ,CAAEC,GAAI,GAAIC,GAAI,MAG1B,6BAEJ,eAAC,IAAD,CACIrH,QAASnB,EACToB,aAAcrT,GAAOuR,QACrB+B,gBAAiB,kBAAMzW,EAAM8a,OAAO,IACpCpE,eAAgBC,KAJpB,UAMKnS,GAAWgc,EACR,qCACI,cAAC,EAAD,CAAQhe,aAAcukB,EAAcjkB,YAAa+a,KAAatb,YAAa,CAACnF,WAAY,GAAID,OAAQ,IAAKQ,cAAe,IAAK8E,MAAM,IACnI,cAAC,IAAD,CAAMzG,MAAO,CAAC8B,MAAM,OAAQD,UAAW,SAAUH,SAAU,GAAIzB,WAAY,QAA3E,SAAqFgmB,GAASjiB,EAAMhG,MAAMsmB,mBAC1G,cAAC,IAAD,CAAMtkB,MAAO,CAAC6B,UAAW,SAAUT,UAAW,GAAIM,SAAU,IAA5D,SAAkEukB,GAASjiB,EAAMhG,MAAMumB,YAAYC,EAAMhc,QAG7G,qCACI,cAAC,EAAD,CAAQhC,aAAcwkB,EAAWlkB,YAAaokB,KAAU3kB,YAAa,CAACnF,WAAY,GAAID,OAAQ,IAAKQ,cAAe,MAClH,cAAC,IAAD,CAAM3B,MAAO,CAAC8B,MAAM,MAAOD,UAAW,SAAUH,SAAU,GAAIzB,WAAY,QAA1E,SAAoFgmB,GAASjiB,EAAMhG,MAAMymB,gBACzG,cAAC,IAAD,CAAMzkB,MAAO,CAAC6B,UAAW,SAAUT,UAAW,GAAIM,SAAU,IAA5D,SAAkEukB,GAASjiB,EAAMhG,MAAM0mB,SAASF,EAAMhc,QAG9G,cAAC,IAAD,CAAQlB,MAAO2e,GAASjiB,EAAMhG,MAAMwd,MAAOzW,QAAS,kBAAMf,EAAM8a,OAAO,IAAIha,eAAgBqC,GAAOkW,YAAanR,KAC3G,cAAC,IAAD,CACIC,KAAM,qBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,UAjG9B,WACjB,GAAK2a,EAAK9L,GACV,OAAQ8L,EAAK9L,GAAS9H,UAClB,IAAK,QACD,OAAO,cAAC,IAAD,CAAO1D,OAAS,CAACE,IAAKoX,EAAK9L,GAAStL,KAAQnF,MAAOmH,GAAOwe,mBACrE,IAAK,QACD,OAAO,cAAC,IAAD,CAAM5gB,QAAS,kBAAMoR,EAAYiQ,IA1BlC,0BAAA9oB,EAAAC,OAAA,uDACd6Y,GAAa,GADC,WAAA9Y,EAAA,MAERiZ,KAAMO,kBAAkB,CAC1BC,yBAAyB,EACzBC,mBAAmB,KAJT,yBAAA1Z,EAAA,YAMemZ,OANf,EAMeA,EAAOQ,kBANtB,WAOmB,KAAf,OADZC,EANQ,aAOV,EAAAA,EAAgBC,UAPN,mCAAA7Z,EAAA,MAQJmZ,EAAMW,UAAU,CAAEjS,IAAKoX,EAAK9L,GAAStL,OARjC,OASVuR,EAASD,GATC,2BAAAnZ,EAAA,MAWRmZ,EAAMa,aAXE,QAYdb,EAAMc,2BAA0B,SAAOC,GAAP,SAAAla,EAAAC,OAAA,oDACxBia,EAAeC,cADS,kCAAAna,EAAA,MAElBmZ,EAAMiB,eAFY,OAGxBtB,GAAa,GAHW,+DAZlB,6DA0BiDiQ,IAAcpZ,QAAM,EAACb,KAAM,GAAID,KAAMgK,EAAY,uBAAyB,sBAAuBrU,MAAO,UAAWqT,KAAM,UAAWrQ,eAAgB,CAACnD,aAAc,MAC9N,QACI,OAAO,8BA6FLwpB,GACF,cAAC,IAAD,CAAMnrB,MAAOmH,GAAOye,aAApB,SAAmCrJ,EAAK9L,GAAS8W,WACjD,eAACtgB,EAAA,EAAD,CAAMjH,MAAOmH,GAAO0e,aAApB,UACI,cAAC,IAAD,CAAO7lB,MAAOmH,GAAO2e,cAAehZ,aAAc,SAACvF,GAAQ2gB,EAAU3gB,IAAOsF,MAAOob,IACnF,cAAC,IAAD,CAAQhc,YAAa9E,GAAO4e,iBAAkBze,MAAO2e,GAASjiB,EAAMhG,MAAMglB,GAAIje,QAAS,YAnEhF,uBAAAzH,EAAAC,OAAA,mDACb6tB,EADa,MACWnD,GADX,SACWA,EAAQ5d,aADnB,EACW,EAAgBse,cAjEhC,EAAArrB,EAAAC,OAAA,kEAAAD,EAAA,MACR8oB,KADQ,cAEd1P,EAAS,IAAIH,KAAMC,OAFL,WAAAlZ,EAAA,YAGRmZ,OAHQ,EAGRA,EAAOiB,eAHC,4DAmEdwQ,EAAU,KAEK,KADT1oB,EAAS+c,EAAK9L,GAAS2T,QAAQ1b,SAAS0iB,IAJ3B,wBAOfT,EAAQnG,EAAO,GAPA,WAAAlnB,EAAA,MAQTqc,GAAgB3V,EAAM0D,SAAU1D,EAAMkF,OAAQqT,EAAK9L,GAAS7L,IAAI,IARvD,sCAWfiJ,EAAWrF,EAAU,GAXN,YAAAlL,EAAA,MAYTqc,GAAgB3V,EAAM0D,SAAU1D,EAAMkF,OAAQqT,EAAK9L,GAAS7L,IAAI,IAZvD,QAcnBqmB,EAAwBzrB,GAdL,6DAmEwF6rB,cEzKpG,SAAS/P,GAAKtX,GACzB,MAAwB6G,oBAAS,GAAjC,WAAOygB,EAAP,KAAab,EAAb,KAEA,OACA,cAACxjB,EAAA,EAAD,CAAMjH,MAAOmH,GAAOpB,KAApB,SACMulB,EACE,cAAC,GAAD,CACIttB,KAAMgG,EAAMhG,KACZkL,OAAQlF,EAAMqF,KAAKD,IACnB1B,SAAU1D,EAAM0D,SAChB2B,KAAMrF,EAAMqF,KAAKE,QACjBuV,OAAQ9a,EAAM8a,OACd2L,QAASA,IAGb,cAAC,GAAD,CACIzsB,KAAMgG,EAAMhG,KACZusB,gBAAiBvmB,EAAMumB,gBACvBlhB,KAAMrF,EAAMqF,KACZyV,OAAQ9a,EAAM8a,OACd2L,QAASA,EACTH,WAAYtmB,EAAMsmB,eCnBnB,SAAS/O,GAAKvX,GACzB,IAAMwC,EAAe7J,EAAQ,KAC7B,OACI,cAACgU,EAAA,EAAD,CAAc3Q,MAAOmH,GAAOiX,aAA5B,SACI,eAACjN,EAAA,EAAD,CAAYnR,MAAO,CAACwC,MAAO,QAA3B,UACI,cAAC,IAAD,CACI8E,MAAO2e,GAASjiB,EAAMhG,MAAMwd,MAC5BvP,YAAa,CAAE7J,gBAAiB,OAChC0C,eAAgBqC,GAAOkX,oBACvBpR,QAAM,EACNlI,QAAS,kBAAMf,EAAM8a,OAAO,IAC5B5S,KACI,cAAC,IAAD,CACIC,KAAM,qBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,OAIvC,cAAC,EAAD,CACI4E,aAAcA,EACdM,YAAaob,KACb3b,YAAaY,GAAOuX,iBACpB3X,WAAYI,GAAOuX,iBACnBjY,MAAM,EACNE,UAAU,IAEd,cAAC,IAAD,CAAM3G,MAAOmH,GAAOmX,SAApB,SAA+B2H,GAASjiB,EAAMhG,MAAM+e,OAEpD,eAAC,IAAD,CAAM/c,MAAOmH,GAAOoX,aAApB,UACI,cAAC,IAAD,CACIpS,KAAM,iBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,KAE9BqkB,GAASjiB,EAAMhG,MAAMgf,aAE1B,cAAC,IAAD,CAAMhd,MAAOmH,GAAOsX,SAApB,SAA+BwH,GAASjiB,EAAMhG,MAAMkf,UAGpD,eAAC,IAAD,CAAMld,MAAOmH,GAAOoX,aAApB,UACI,cAAC,IAAD,CACIpS,KAAM,iBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,KAE9BqkB,GAASjiB,EAAMhG,MAAM8mB,cAE1B,cAAC,IAAD,CAAM9kB,MAAOmH,GAAOsX,SAApB,SAA+BwH,GAASjiB,EAAMhG,MAAM+mB,gBC/CrD,SAAS/Q,GAAKhQ,GACzB,MAAkC6G,oBAAS,GAA3C,WAAOiE,EAAP,KAAkBC,EAAlB,KACA,EAAsBlE,mBAAS,GAA/B,WAAOsX,EAAP,KAAYrD,EAAZ,KACA,EAAwBjU,mBAAS,IAAjC,WAAOxB,EAAP,KAAakiB,EAAb,KACA,EAA4B1gB,mBAAS,GAArC,WAAOV,EAAP,KAAeqhB,EAAf,KACA,EAA4B3gB,oBAAS,GAArC,WAAOoc,EAAP,KAAeD,EAAf,KAEArX,qBAAU,WAGNgK,GAAQ3V,EAAM0D,UAAU5J,MAAK,SAACoK,GACtBA,EAAKtK,OAAS,IACd2tB,EAAQrjB,GACRsjB,EAAU1hB,GAAa,EAAGT,EAAKzL,OAAS,KAE5CmR,GAAa,MAIjB,IA2BMgB,EAAcC,IAAYC,iBAC5B,qBA5Be,WAyBf,OAxBIkS,EAAM,EACM,IAARA,EACA7M,KAAM3J,MACFsa,GAASjiB,EAAMhG,MAAMilB,gBACrBgD,GAASjiB,EAAMhG,MAAMklB,WACrB,CACI,CACI5jB,KAAM2mB,GAASjiB,EAAMhG,MAAMwd,MAC3BzW,QAAS,aACT/E,MAAO,UAEX,CACIV,KAAM2mB,GAASjiB,EAAMhG,MAAMglB,GAC3Bje,QAAS,WACL+Z,EAAO,OAMtBA,EAAO,GAEZ9a,EAAM6V,QAAQ,OAEX,KAMX,OAAO,WACH9J,EAAYG,YAEjB,CAACiS,EAAK8E,IAET,IAAMsD,EAAkB,WACpB,GAAIlhB,EAAKzL,OAAS,EAAG,CACjB,IAAI6tB,EzC9DkB,SAArBC,EAAsBC,EAAS5hB,EAAKC,GAE7C,OADA4hB,WAAa9hB,GAAaC,EAAKC,GAC3B4hB,YAAcD,EACPD,EAAmBC,EAAS5hB,EAAKC,GACrC4hB,WyC0DYF,CAAmBvhB,EAAQ,EAAGd,EAAKzL,OAAS,GACvD4tB,EAAUC,KAsDlB,OAAO,cAACxkB,EAAA,EAAD,CAAMjH,MAAOmH,GAAOpB,KAApB,SAjDS,IAARoc,EAEI,cAAC,GAAD,CACIrD,OAAQA,EACR9gB,KAAMgG,EAAMhG,KACZ6b,QAAS7V,EAAM6V,QACfxQ,KAAMA,EACNyF,UAAWA,IAGJ,IAARqT,EACA,cAAC7G,GAAD,CACHjS,KAAMA,EAAKc,GACXmgB,WAAYjhB,EAAKzL,OACjBI,KAAMgG,EAAMhG,KACZ0J,SAAU1D,EAAM0D,SAChBoX,OAAQA,EACRyL,gBAAiBA,IAEN,IAARpI,EAEH,cAAC6G,GAAD,CACIzQ,QAASzJ,EACTgQ,OAAQA,EACR9gB,KAAMgG,EAAMhG,KACZ6b,QAAS7V,EAAM6V,QACfxQ,KAAMA,EACN3B,SAAU1D,EAAM0D,SAChBuf,OAAQA,EACRD,UAAWA,IAGJ,IAAR7E,EACA,cAAC,GAAD,CAAMnkB,KAAMgG,EAAMhG,KAAM8gB,OAAQA,IACxB,IAARqD,EAEH,cAAC0H,GAAD,CACIniB,SAAU1D,EAAM0D,SAChBoX,OAAQA,EACR9gB,KAAMgG,EAAMhG,KACZ6b,QAAS7V,EAAM6V,QACfmN,UAAWA,IAIZ,cAAC,IAAD,4BC5HnB,IAAM3nB,GAAiB,SAACC,GACpB,IAAIC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQ6B,MAAO,WAAlD,SACKnC,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLxB,GAAO,CAChBC,GAAI,CACAqd,KAAM,QACNC,KAAM,uBACNC,MAAO,SACPqQ,cAAe,SAAC1P,GACZ,OAAO9c,GAAe,CAClBI,SAAS,SAAS0c,EAAQ,EAAI,IAAM,IAA5B,YAAyCA,EAAQ,EAAI,IAAM,IAA3D,QACRxc,SAAU,CAACwc,MAGnB5I,MAAO,SAACtL,GACJ,OAAO5I,GAAe,CAClBI,SAAS,oBACTE,SAAU,CAACsI,MAGnBsN,MAAO,YACPsH,OAAQ,aACRiP,OAAQ,oBACRC,YAAa,uBACbC,aAAc,0FACdxP,gBAAiB,sBACjBJ,eAAgB,SAACnU,GACb,OAAO5I,GAAe,CAClBI,SAAU,oDACVE,SAAU,CAACsI,MAGnBwU,MAAO,aACPC,eAAgB,yFAChBC,MAAO,cACPsP,aAAc,SAAChkB,GACX,OAAO5I,GAAe,CAClBI,SAAU,8BACVE,SAAU,CAACsI,MAKnB8U,KAAM,2CACNC,UAAW,gBACXE,MAAO,WACH,OAAO7d,GAAe,CAClBI,SAAS,6dACTE,SAAU,CAAC,qDAAmD,YAAa,mDAA4C,eAG/HusB,UAAW,WACXC,UAAW,WACP,OAAO9sB,GAAe,CAClBI,SAAS,mcACTE,SAAU,CAAC,uBAAwB,iCAAkC,uBAAwB,iDAIzGP,GAAI,CACAkc,KAAM,OACNC,KAAM,mBACNC,MAAO,OACPqQ,cAAe,SAAC1P,GACZ,OAAO9c,GAAe,CAClBI,SAAS,eAAe0c,EAAQ,EAAI,MAAQ,KAApC,QACRxc,SAAU,CAACwc,MAGnB5I,MAAO,SAACtL,GACJ,OAAO5I,GAAe,CAClBI,SAAS,oBACTE,SAAU,CAACsI,MAGnBsN,MAAO,QACPsH,OAAQ,UACRiP,OAAQ,YACRC,YAAa,mBACbC,aAAc,gEACdxP,gBAAiB,oBACjBJ,eAAgB,SAACnU,GACb,OAAO5I,GAAe,CAClBI,SAAU,qCACVE,SAAU,CAACsI,MAGnBwU,MAAO,YACPC,eAAgB,6DAChBC,MAAO,QACPsP,aAAc,SAAChkB,GACX,OAAO5I,GAAe,CAClBI,SAAU,6BACVE,SAAU,CAACsI,MAKnB8U,KAAM,wCACNC,UAAW,YACXE,MAAO,WACH,OAAO7d,GAAe,CAClBI,SAAS,6UACTE,SAAU,CAAC,4CAA6C,QAAS,0CAA2C,cAGpHusB,UAAW,WACXC,UAAW,WACP,OAAO9sB,GAAe,CAClBI,SAAS,2WACTE,SAAU,CAAC,mBAAoB,+BAAgC,mBAAoB,2CC1HpFqB,OAAWC,OAAO,CAC7B8E,KAAM,CACF5E,OAAQ,OACRkR,cAAe,GACf/Q,KAAM,GAEV8b,KAAM,CACF5a,MAAO,IACPrB,YAAQgpB,EACRlkB,eAAgB,GAChB2M,QAAS,GACTjR,aAAc,GACdiF,WAAY,SACZwlB,YAAa,GAEjBxpB,OAAQ,CACJJ,MAAO,IACPb,aAAc,GACdO,aAAc,GACdN,iBAAkB,GAEtByb,YAAa,CACT7a,MAAO,IACPpB,UAAW,GACXgB,gBAAiB,MACjBF,aAAc,GACdN,iBAAkB,EAClBD,aAAc,IAElB0qB,UAAW,CACP7pB,MAAO,GACPrB,OAAQ,GACRiB,gBAAiB,UACjBF,aAAc,GACdD,YAAa,UACbsQ,YAAa,EACbK,QAAS,GACThR,iBAAkB,EAClBqE,eAAgB,GAEpBqmB,YAAa,CACT9pB,MAAO,GACPrB,OAAQ,GACRe,aAAc,GACdD,YAAa,UACbsQ,YAAa,EACbK,QAAS,GACThR,iBAAkB,EAClBqE,eAAgB,GAEpBsmB,UAAW,CACP/pB,MAAO,GACPrB,OAAQ,GACRe,aAAc,GACd0Q,QAAS,GACThR,iBAAkB,EAClBqE,eAAgB,GAEpBumB,SAAU,CACNprB,UAAW,IAEfqrB,SAAU,CACNrrB,UAAW,GACXoB,MAAO,IACPrB,OAAQ,IACRgC,cAAe,MACfC,SAAU,OACVC,eAAgB,UAEpBqpB,eAAgB,CACZvpB,cAAe,MACfX,MAAO,OACPa,eAAgB,SAChB7B,aAAc,SACdJ,UAAW,IAEfurB,YAAa,CACTnrB,aAAc,SACdK,UAAW,SACXM,kBAAmB,GACnBD,aAAc,IAElBwW,QAAS,CACLxW,aAAc,GACdC,kBAAmB,GACnBwW,gBAAiB,GACjBpX,WAAY,UAEhB2c,cAAe,CACXxc,SAAU,GACVzB,WAAY,QAEhBke,YAAa,CACT3b,MAAO,IACPd,SAAU,GACVC,aAAc,GACdE,UAAW,UAKfuc,aAAc,CACV7c,WAAY,SACZa,gBAAiB,QACjBW,WAAY,GACZP,MAAO,OACPrB,OAAQ,OACRkR,cAAe,IAEnBgM,oBAAqB,CACjB7b,MAAO,IACPJ,gBAAiB,MACjB4D,UAAW,SACX9D,aAAc,GACdd,UAAW,GACXQ,iBAAkB,GAEtB0c,SAAU,CACNrY,eAAgB,GAChBzD,MAAO,IACPvC,WAAY,OACZyB,SAAU,GACVG,UAAW,SACXC,MAAO,UACPkE,UAAW,UAEfuY,aAAc,CACV5c,aAAc,GACd1B,WAAY,OACZyB,SAAU,GACVG,UAAW,OACXmE,UAAW,aACXnD,WAAY,GACZf,MAAO,UACP0c,cAAe,aAEnBC,SAAU,CACN7c,iBAAkB,GAClBD,aAAc,GACda,MAAO,KAEXkc,iBAAkB,CACd/L,SAAU,WACVnQ,MAAO,IACPoQ,QAAS,GACT3E,QAAS,KC/IJvR,GAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,eACVC,QAASC,IACTC,UAAU,IAGP,SAAS6vB,GAAallB,GACzB,OAAOhL,GACFiL,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEK,OAAQ,IACfH,MAAK,SAACpK,EAAKwK,GAIR,OAHIxK,GACAyK,QAAQC,MAAM1K,GAEVwK,KA4Bb,SAAS2kB,GAAYnlB,EAAUO,EAAOJ,EAAMuZ,EAAkBC,GACjE,OAAO3kB,GAAGmB,YAAY,CAClB6J,SAAUA,EACVG,KAAMA,EACNI,MAAOA,EACPmZ,iBAAkBA,EAClBC,kBAAmBA,ICzCZ,SAAS9F,GAAKvX,GACzB,IAAMwC,EAAe7J,EAAQ,KAC7B,OACI,cAACgU,EAAA,EAAD,CAAc3Q,MAAOmH,GAAOiX,aAA5B,SACI,eAACjN,EAAA,EAAD,CAAYnR,MAAO,CAACwC,MAAO,QAA3B,UACI,cAAC,IAAD,CACI8E,MAAOwlB,GAAW9oB,EAAMhG,MAAMwd,MAC9BvP,YAAa,CAAE7J,gBAAiB,OAChC0C,eAAgBqC,GAAOkX,oBACvBpR,QAAM,EACNlI,QAAS,kBAAMf,EAAM8a,OAAO,IAC5B5S,KACI,cAAC,IAAD,CACIC,KAAM,qBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,OAIvC,cAAC,EAAD,CACI4E,aAAcA,EACdM,YAAaob,KACb3b,YAAaY,GAAOuX,iBACpB3X,WAAYI,GAAOuX,iBACnBjY,MAAM,EACNE,UAAU,IAEd,cAAC,IAAD,CAAM3G,MAAOmH,GAAOmX,SAApB,SAA+BwO,GAAW9oB,EAAMhG,MAAM+e,OAEtD,eAAC,IAAD,CAAM/c,MAAOmH,GAAOoX,aAApB,UACI,cAAC,IAAD,CACIpS,KAAM,iBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,KAE9BkrB,GAAW9oB,EAAMhG,MAAMgf,aAE5B,cAAC,IAAD,CAAMhd,MAAOmH,GAAOsX,SAApB,SAA+BqO,GAAW9oB,EAAMhG,MAAMkf,UAEtD,eAAC,IAAD,CAAMld,MAAOmH,GAAOoX,aAApB,UACI,cAAC,IAAD,CACIpS,KAAM,iBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,KAE9BkrB,GAAW9oB,EAAMhG,MAAMkuB,aAE5B,cAAC,IAAD,CAAMlsB,MAAOmH,GAAOsX,SAApB,SAA+BqO,GAAW9oB,EAAMhG,MAAMmuB,mB,yBCtDvD,SAASxN,GAAK3a,GACzB,OACI,qCACI,cAAC6C,EAAA,EAAD,CAAO5B,OAAQ8nB,KAAY/sB,MAAOmH,GAAOiW,KAAMxW,WAAY,UAE3D,cAAC,IAAD,CACIU,MAAOwlB,GAAW9oB,EAAMhG,MAAMsd,KAC9BxW,eAAgBqC,GAAOvE,OACvBmC,QAAS,kBAAMf,EAAM8a,OAAO,IAC5B5S,KACI,cAAC,IAAD,CACIC,KAAM,eACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,OAKvC,cAAC,IAAD,CACI0F,MAAOwlB,GAAW9oB,EAAMhG,MAAMud,KAC9BzW,eAAgBqC,GAAOvE,OACvBmC,QAAS,kBAAMf,EAAM8a,OAAO,IAC5B5S,KACI,cAAC,IAAD,CACIC,KAAM,6BACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,OAKvC,eAACqF,EAAA,EAAD,WAEA,cAAC,IAAD,CACInF,MAAM,UACN9B,MAAO,CACH2S,SAAU,WACV9P,YAAa,GACbzB,WAAY,IAEhBgL,KAAK,QACLF,KACI,CACIC,KAAMnI,EAAMgpB,eAAiB,sBAAwB,sBACrD7X,KAAM,UACNrT,MAAM,QACNsK,KAAM,GACNpM,MAAO,CAACoB,UAAW,IAG3B2D,QAAS,kBAAMf,EAAMipB,sBAEzB,cAAC,IAAD,CACInrB,MAAM,UACN9B,MAAO,CACH2S,SAAU,WACV9P,WAAY,GACZzB,WAAY,IAEhBgL,KAAK,QACLF,KACI,CACIC,KAAMnI,EAAMkpB,aAAe,QAAU,aACrC/X,KAAM,SACNrT,MAAM,QACNsK,KAAM,GACNpM,MAAO,CAACoB,UAAW,IAG3B2D,QAAS,kBAAMf,EAAMmpB,iBAAgB,SAAAC,GAAI,OAAKA,WAIlD,cAAC,IAAD,CACI9lB,MAAOwlB,GAAW9oB,EAAMhG,MAAMwd,MAC9BvP,YAAa,CAAE7J,gBAAiB,OAChC0C,eAAgBqC,GAAOkW,YACvBtY,QAAS,WACLf,EAAMqpB,QAAQ3V,cACd1T,EAAM6V,QAAQ,OAElB3N,KACI,cAAC,IAAD,CACIC,KAAM,qBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,UCrGnD,IAQa0rB,GAAqB,SAAC1vB,GAsB/B,IArBA,IAAM2vB,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,WAEEC,EAAQ,CACV,WACA,OACA,OACA,gBACA,QACA,OACA,QACA,eACA,aACA,UAEA5C,EAAM,GACD/qB,EAAI,EAAGA,EAAIjC,EAAS,EAAGiC,IAAK,CACjC,IAAI4tB,EAAaxjB,KAAKC,MAAMD,KAAKE,SAAWojB,EAAO3vB,QAC/C8vB,EAAYzjB,KAAKC,MAAMD,KAAKE,SAAWqjB,EAAM5vB,QACjDgtB,EAAI7J,KAAK,CAAEjf,MAAOyrB,EAAOE,GAAavhB,KAAMshB,EAAME,IAAc,CAAE5rB,MAAOyrB,EAAOE,GAAavhB,KAAMshB,EAAME,KACzGH,EAAOztB,OAAO2tB,EAAY,GAC1BD,EAAM1tB,OAAO4tB,EAAW,GAE5B9C,EArCY,SAACA,GACb,IAAK,IAAI/qB,EAAI+qB,EAAIhtB,OAAS,EAAGiC,EAAI,EAAGA,IAAK,CACrC,IAAMgrB,EAAI5gB,KAAKC,MAAMD,KAAKE,UAAYtK,EAAI,IADL,EAElB,CAAC+qB,EAAIC,GAAID,EAAI/qB,IAA/B+qB,EAAI/qB,GAFgC,KAE5B+qB,EAAIC,GAFwB,KAIzC,OAAOD,EAgCDE,CAAQF,GACd,IAAK,IAAI/qB,EAAI,EAAGA,EAAI+qB,EAAIhtB,OAAQiC,IAAK,CACtB+qB,EAAI/qB,GACZ0Q,IAAM1Q,EAGb,OAAQ+qB,GCrCG,SAAS+C,GAAK3pB,GACzB,IAAI4pB,EACcA,EAAd5pB,EAAM6pB,OAAqB,CAAC,CAACzrB,gBAAiB4B,EAAM5B,iBAAkB,CAAC+E,GAAOmlB,cACzEtoB,EAAM8pB,SAAW9pB,EAAM+pB,KAAmB,CAAC,CAAC3rB,gBAAiB4B,EAAM5B,iBAAkB,CAAC+E,GAAOolB,YACpFplB,GAAOklB,UAEzB,IAAMngB,EAAQlI,EAAM8pB,SAAY9pB,EAAM6pB,QAAW7pB,EAAM+pB,KAA+B/pB,EAAMkI,KAA9B,sBAE9D,OACI,mCACI,cAACmE,EAAA,EAAD,CAAkBrQ,MAAQ4tB,EAAa7oB,QAAS,WACvCf,EAAM6pB,QAAW7pB,EAAM8pB,SAAS9pB,EAAMgqB,WAAWhqB,EAAMQ,QADhE,SAGI,cAAC,IAAD,CACI2H,KAAMD,EACNE,KAAMpI,EAAM8pB,SAAW9pB,EAAM+pB,MAAQ/pB,EAAM6pB,OAAS,GAAK,GACzD/rB,MAAOkC,EAAM8pB,SAAW9pB,EAAM+pB,MAAQ/pB,EAAM6pB,OAAS,QAAU,OAC/D1Y,KAAK,UACLnV,MAAOmH,GAAOqlB,eCLnB,SAASlR,GAAKtX,GACzB,MAAwB6G,mBAAS,KAAIyiB,GAAmB,KAAxD,WAAO/Q,EAAP,KAAa2D,EAAb,KACA,EAA0BrV,mBAAS,IAAnC,WAAOojB,EAAP,KAAcC,EAAd,KACA,EAA0BrjB,mBAAS,GAAnC,WAAOsR,EAAP,KAAcmD,EAAd,KACA,EAAwBzU,mBAAS,IAAjC,WAAOygB,EAAP,KAAab,EAAb,KACA,EAAwB5f,oBAAS,GAAjC,WAAOkjB,EAAP,KAAaI,EAAb,KACA,EAAgCtjB,oBAAS,GAAzC,WAAOkV,EAAP,KAAiBC,EAAjB,KACA,EAA0BnV,oBAAS,GAAnC,WAAO0O,EAAP,KAAcC,EAAd,KAEMuR,EAAepuB,EAAQ,KACvBquB,EAAYruB,EAAQ,KAiHpBqxB,EAAa,SAACrpB,GAChB,IAAI4U,IAASwU,EAAb,CACA,IAAMK,EAAc9C,EACd+C,EAAY9R,EAAK5X,GACjB2pB,EAAO,eAAOF,GAAP,CAAoBC,IACjC,GAAsB,GAAlBC,EAAQ1wB,OAER,GAAI0wB,EAAQ,GAAGxsB,QAAUwsB,EAAQ,GAAGxsB,OAASwsB,EAAQ,GAAGpiB,OAASoiB,EAAQ,GAAGpiB,KAAM,CAC9E,IAAMqiB,EAAoBhS,EAAK3e,OACzB4wB,EAAM,eAAOP,GAAP,CAAcK,EAAQ,GAAIA,EAAQ,KAC1CE,EAAO5wB,QAAU2wB,GACjBvqB,EAAMqiB,UAAU,QAChBriB,EAAMyqB,UAAS,SAAAC,GAAS,OAAIA,EAAY,KACxCP,GAAQ,GACR7O,EAAS,GACTY,EAAQ,KAAIoN,GA7HpBtpB,EAAMiE,OAAS,EACR,EACFjE,EAAMiE,OAAS,GACb,EACFjE,EAAMiE,OAAS,GACb,EACFjE,EAAMiE,OAAS,GACb,GAEA,MAqHCimB,EAAS,MAETlqB,EAAMqiB,UAAU,WAChB6H,EAASM,IAEb/D,EAAQ,SAERA,EAAQ6D,GACRtqB,EAAMqiB,UAAU,QAChB7M,GAAS,GACTtI,YAAW,WACM,GAATiL,GAAYmD,GAAS,SAAAqP,GAAS,OAAIA,EAAY,KACpC,IAAVxS,EACAnY,EAAM4qB,WAENnE,EAAQ,IACRyD,EAAS,KAEb1U,GAAS,KACV,UAGPiR,EAAQ6D,GACRtqB,EAAMqiB,UAAU,UAwBxB,OACI,qCACI,eAACpf,EAAA,EAAD,WACI,cAAC,IAAD,CACInF,MAAM,UACN9B,MAAO,CACH2S,SAAU,WACV9P,WAAY,IACZzB,UAAW,KAEfgL,KAAK,QACLF,KACI,CACIC,KAAMnI,EAAMgpB,eAAiB,sBAAwB,sBACrD7X,KAAM,UACNrT,MAAM,QACNsK,KAAM,GACNpM,MAAO,CAACoB,UAAW,IAG3B2D,QAAS,kBAAMf,EAAMipB,sBAEzB,cAAC,IAAD,CACInrB,MAAM,UACN9B,MAAO,CACH2S,SAAU,WACV9P,WAAY,GACZzB,UAAW,KAEfgL,KAAK,QACLF,KACI,CACIC,KAAMnI,EAAMkpB,aAAe,QAAU,aACrC/X,KAAM,SACNrT,MAAM,QACNsK,KAAM,GACNpM,MAAO,CAACoB,UAAW,IAG3B2D,QAAS,kBAAMf,EAAMmpB,iBAAgB,SAAAC,GAAI,OAAKA,WAGrDrN,EACO,cAAC,KAAD,CACIuB,SAAS,EACTC,WAAW,EACXC,UAAW,IACXC,MAAO,GACPC,OAAQ,CAAEC,GAAI,GAAIC,GAAI,MAG1B,6BAER,eAAC,IAAD,CACIrH,QAASvW,EAAMoV,MACfoB,aAAcrT,GAAOuR,QACrB+B,gBAAiB,kBAAMzW,EAAMqV,UAAS,IACtCqB,eAAgBC,KAJpB,UAMM3W,EAAMwE,SAAWxE,EAAMoV,OA1K5B2G,GAAUC,GAAY,GAEvB,qCACI,cAACjgB,EAAA,EAAD,CAAMC,MAAOmH,GAAO+W,cAApB,SACK4O,GAAW9oB,EAAMhG,MAAMwe,kBAE5B,cAACzc,EAAA,EAAD,CAAMC,MAAOmH,GAAOgX,YAApB,SACK2O,GAAW9oB,EAAMhG,MAAMoe,eAAepY,EAAM6qB,gBAEjD,cAAC,EAAD,CACIroB,aAAcukB,EACdjkB,YAAa+a,KACbC,UAAU,EACVrb,MAAM,EACNF,YAAa,CAAEpF,OAAQ,IACvB4F,WAAY,CAAE5F,OAAQ,UAtClB,WAChB,GAAmB,GAAf6C,EAAMoV,MACV,OACI,qCACI,cAAC,EAAD,CACI5S,aAAcwkB,EACdlkB,YAAaokB,KACbpJ,UAAU,EACVrb,MAAM,EACNF,YAAa,CAAEpF,OAAQ,IACvB4F,WAAY,CAAE5F,OAAQ,MAE1B,cAACpB,EAAA,EAAD,CAAMC,MAAOmH,GAAO+W,cAApB,SACK4O,GAAW9oB,EAAMhG,MAAMye,QAE5B,cAAC1c,EAAA,EAAD,CAAMC,MAAOmH,GAAOgX,YAApB,SACK2O,GAAW9oB,EAAMhG,MAAM0e,oBAiLwBoS,GACpD,eAAC7nB,EAAA,EAAD,CAAMjH,MAAO,CAACmD,cAAe,MAAO/B,UAAW,IAA/C,UACI,cAAC,IAAD,CAAQkG,MAAOwlB,GAAW9oB,EAAMhG,MAAM2e,MAAO5X,QAAS,kBAtE9Dgb,GAAUC,GAAY,GAC1Bhc,EAAMqV,UAAS,GACf8U,GAAQ,GACR7O,EAAS,GACT4O,EAAS,IACTzD,EAAQ,SACRvK,EAAQ,KAAIoN,GAAmB,MAgEoDrhB,YAAa,CAACqG,YAAa,IAAKpG,KACnG,cAAC,IAAD,CACIC,KAAM,eACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,OAInC,cAAC,IAAD,CAAQ0F,MAAOwlB,GAAW9oB,EAAMhG,MAAMwd,MAAOzW,QAAS,WAC9Cgb,GAAUC,GAAY,GAC1Bhc,EAAMqV,UAAS,GACfrV,EAAM8a,OAAO,IACd7S,YAAa,CAAC7J,gBAAiB,OAAQ8J,KACtC,cAAC,IAAD,CACIC,KAAM,qBACNgJ,KAAM,UACNrT,MAAO,QACPsK,KAAM,GACNpM,MAAO,CAAE4B,iBAAkB,aAK3C,cAACqF,EAAA,EAAD,CAAMjH,MAAOmH,GAAOslB,SAApB,SAzGGlQ,EAAKlL,KAAK,SAAC/I,EAAIzI,GAClB,IAAIiuB,GAAU,EACVD,GAAS,EAGb,OAFII,EAAMtmB,MAAK,SAAAonB,GAAO,OAAIA,EAAQxe,MAAQ1Q,KAAKiuB,GAAU,EAChDxC,EAAK3jB,MAAK,SAAAonB,GAAO,OAAIA,EAAQxe,MAAQ1Q,OAAKguB,GAAS,GACpD,cAACF,GAAD,CAAMI,KAAMA,EAAcvpB,MAAO3E,EAAGiuB,QAASA,EAASD,OAAQA,EAAQzrB,gBAAiBkG,EAAGxG,MAAOoK,KAAM5D,EAAG4D,KAAM8hB,WAAYA,GAArGnuB,QAuG/B,eAACoH,EAAA,EAAD,CAAMjH,MAAO,CAACuB,WAAY,SAAUiB,MAAO,OAAWpB,WAAY,IAAlE,UACI,cAACrB,EAAA,EAAD,UAAO+sB,GAAW9oB,EAAMhG,MAAMuV,MAAMvP,EAAMiE,SAC1C,cAAClI,EAAA,EAAD,UAAO+sB,GAAW9oB,EAAMhG,MAAMiuB,aAAajoB,EAAM6qB,gBACjD,cAAC9uB,EAAA,EAAD,UAAO+sB,GAAW9oB,EAAMhG,MAAM6tB,cAAc1P,KA1KhD4R,EAEA,eAAC9mB,EAAA,EAAD,CAAMjH,MAAOmH,GAAOulB,eAApB,UACI,cAAC,IAAD,CAAQplB,MAAOwlB,GAAW9oB,EAAMhG,MAAMuX,MAAOxQ,QAAS,kBAAMopB,GAAQ,IAASliB,YAAa9E,GAAOwlB,cACrG,cAAC,IAAD,CAAQrlB,MAAOwlB,GAAW9oB,EAAMhG,MAAMwd,MAAOzW,QAAS,kBAAMf,EAAMgrB,UAAW/iB,YAAa,CAAC9E,GAAOwlB,YAAR,CAAuB,CAACvqB,gBAAiB,MAAOS,WAAY,UAItJ,eAACoE,EAAA,EAAD,CAAMjH,MAAOmH,GAAOulB,eAApB,UACI,cAAC,IAAD,CAAQplB,MAAOwlB,GAAW9oB,EAAMhG,MAAM8tB,OAAQ7f,YAAa,CAAC9E,GAAOwlB,YAAa,CAACvqB,gBAAiB,UAAW2C,QAAS,kBArBjH,WACb,GAAmB,GAAff,EAAMiE,MAAV,CACA,IAAMsmB,EAAoBhS,EAAK3e,OAC/BoG,EAAMyqB,UAAS,SAAAC,GAAS,OAAIA,EAAY,KACxCP,GAAQ,GACR7O,EAAS,GACT4O,EAAS,IACTzD,EAAQ,IACRvK,EAAQ,KAAIoN,GAAmBiB,MAaqGU,IAAahN,SAA0B,IAAhBje,EAAMiE,OAAekU,GAAS,IACjL,cAAC,IAAD,CAAQ7U,MAAOwlB,GAAW9oB,EAAMhG,MAAM6e,OAAQ5Q,YAAa,CAAC9E,GAAOwlB,YAAa,CAACvqB,gBAAiB,MAAOS,WAAY,KAAOkC,QAAS,kBAAMf,EAAMgrB,qBCtHjK,IAAM3O,IAAc,IAAIlG,MAAOgB,mBAAmB,SAEnC,SAAS+T,GAAOlrB,GAC3B,MAAsB6G,mBAAS,GAA/B,WAAOsX,EAAP,KAAYrD,EAAZ,KACA,EAA0BjU,mBAAS,GAAnC,WAAO5C,EAAP,KAAcwmB,EAAd,KACA,EAAwC5jB,mBAAS,GAAjD,WAAOgkB,EAAP,KAAqBM,EAArB,KACA,EAAkCtkB,mBAAS,GAA3C,WAAkB8U,GAAlB,WACA,EAA0B9U,oBAAS,GAAnC,WAAOuO,EAAP,KAAcC,EAAd,KACA,EAA0BxO,mBAAS,IAAI0L,KAAMC,OAA7C,WAAcE,GAAd,WACA,EAA8B7L,mBAAS,IAAI0L,KAAMC,OAAjD,WAAO6W,EAAP,KAAgB+B,EAAhB,KACA,EAA8BvkB,oBAAS,GAAvC,WAAOrC,EAAP,KAAgBqF,EAAhB,KACA,EAAwChD,oBAAS,GAAjD,WAAOqiB,EAAP,KAAqBC,EAArB,KACA,EAA4CtiB,oBAAS,GAArD,WAAOmiB,EAAP,KAAuBqC,EAAvB,KAEA1f,qBAAW,4BAAArS,EAAAC,OAAA,kEAAAD,EAAA,MAGiBiZ,KAAMC,MAAMyE,YAEhCte,EAAQ,OALL,gBAGC8Z,EAHD,EAGCA,MAIR2Y,EAAW3Y,GACXA,EAAMa,aNnBc5P,EMqBJ1D,EAAM0D,SNrBQG,EMqBEwY,GNpB7B3jB,GACFiL,KAAK,CAAED,SAAUA,EAAUG,KAAMA,IACjCD,KAAK,CAAEK,OAAQ,IACfH,MAAK,SAACpK,EAAKwK,GAIR,OAHIxK,GACAyK,QAAQC,MAAM1K,GAEVwK,MMaiCpK,MAAK,SAACoK,GAC3CA,EAAKtK,OAAS,GAAGuxB,EAAgBjnB,EAAK,GAAGD,UAGjD0R,GAAiB3V,EAAM0D,UAAU5J,MAAK,SAACoK,GAC/BA,EAAKtK,OAAS,GAAG+hB,EAAazX,EAAK,GAAGD,UAfvC,iCNXR,IAAqBP,EAAUG,IMWvB,0BAkBR,IAEH8H,qBAAU,WAEN,IAaMI,EAAcC,IAAYC,iBAC5B,qBAde,WACf,GAAIkS,EAAM,EAAG,CACT,GAAY,IAARA,GAAala,EAAQ,EAErB,YADA+mB,IAGJlQ,EAAO,QAEPuO,EAAQ3V,cACR1T,EAAM6V,QAAQ,MAElB,OAAO,KAMX,OAAO,WACH9J,EAAYG,YAEjB,CAACiS,EAAKkL,IAET,IAAMuB,EAAU,4BAAAtxB,EAAAC,OAAA,uDACZ8b,GAAS,GACLiW,GAAe,EACf3T,GAAY,EACZ1T,EAAQ4mB,GACRxI,EAAU,YACVxY,GAAW,GACXshB,EAAgBlnB,GAChBqnB,GAAe,EACXrnB,EAAQ0T,IACRA,GAAY,EACZgE,EAAa1X,MAGjBoe,EAAU,QACVxY,GAAW,IAfH,WAAAvQ,EAAA,MAiBNqc,GAAgB3V,EAAM0D,SAAUO,EAAOoY,GAAaiP,EAAc3T,IAjB5D,OAkBZ8S,EAAS,GAlBG,6DAqBVxB,EAAmB,WACjBD,EAAgBK,EAAQzW,aACvByW,EAAQ/V,YACb+X,GAAkB,SAAAE,GAAU,OAAKA,MAG/BP,EAAS,WACX,GAAc,IAAV/mB,EACC,OAAOqN,KAAM3J,MACdmhB,GAAW9oB,EAAMhG,MAAM+tB,YACvBe,GAAW9oB,EAAMhG,MAAMguB,aACvB,CACI,CACI1sB,KAAMwtB,GAAW9oB,EAAMhG,MAAMwd,MAC7BzW,QAAS,aACT/E,MAAO,UAEX,CACIV,KAAMwtB,GAAW9oB,EAAMhG,MAAM6e,OAC7B9X,QAAS,WACL6pB,QAbC9P,EAAO,IAoBtBuH,EAAY,SAAOlR,GAAP,mBAAA7X,EAAAC,OAAA,mDACT2vB,GAAiB,CAAC,WAAY,QAAQxkB,SAASyM,GADtC,iDAEVsB,IAAY,MAALA,KAAOiB,eAFJ,KAINvC,EAJM,OAKL,YALK,OAQL,SARK,OAWL,SAXK,QAcL,SAdK,QAiBL,aAjBK,QAoBL,SApBK,+BAMNqa,EAAe7yB,EAAQ,KANjB,mCASN6yB,EAAe7yB,EAAQ,KATjB,oCAYN6yB,EAAe7yB,EAAQ,KAZjB,oCAeN6yB,EAAe7yB,EAAQ,KAfjB,oCAkBN6yB,EAAe7yB,EAAQ,KAlBjB,oCAqBN6yB,EAAe7yB,EAAQ,KArBjB,oFAAAW,EAAA,MA0BUiZ,KAAMC,MAAMyE,YAAYuU,IA1BlC,iBA0BN/Y,EA1BM,EA0BNA,MACRC,EAASD,GACTA,EAAMa,YA5BQ,8DAsElB,OACI,cAACnG,EAAA,EAAD,CAAYnR,MAAOmH,GAAOpB,KAAMoiB,sBAAuB,CAAC5mB,WAAY,UAApE,SAvCY,IAAR4gB,EAEI,cAAC,GAAD,CACIrD,OAAQA,EACR9gB,KAAMgG,EAAMhG,KACZ6b,QAAS7V,EAAM6V,QACfwT,QAASA,EACTF,gBAAiBA,EACjBD,aAAcA,EACdF,eAAgBA,EAChBC,iBAAkBA,IAGX,IAAR9K,EACA,cAAC,GAAD,CACKnkB,KAAMgG,EAAMhG,KACZ8gB,OAAQA,EACR7W,MAAOA,EACPwmB,SAAUA,EACVO,OAAQA,EACR5V,MAAOA,EACPC,SAAUA,EACVwV,aAAcA,EACdrmB,QAASA,EACTomB,QAASA,EACTvI,UAAWA,EACX4G,iBAAkBA,EAClBD,eAAgBA,EAChBE,aAAcA,EACdC,gBAAiBA,IAEd,IAARhL,EACC,cAAC,GAAD,CAAMnkB,KAAMgG,EAAMhG,KAAM8gB,OAAQA,IAEjC,cAAC/e,EAAA,EAAD,4BCzLJ,SAASuT,GAAWtV,EAAM0J,GAAW,IAAD,UAC/C,MAAO,CACH,CACIyE,KAAI,SAAEkJ,GAAerX,SAAjB,EAAE,EAAsB6V,MAC5B3H,KAAM,eACNujB,gBAAiB,SAACzxB,EAAM6b,GACpB,OACI,cAAChG,GAAD,CAAO7V,KAAMA,EAAM6b,QAASA,EAASnS,SAAUA,MAI3D,CACIyE,KAAI,SAAEkJ,GAAerX,SAAjB,EAAE,EAAsB8V,aAC5B5H,KAAM,eACNujB,gBAAiB,SAACzxB,EAAM6b,GACpB,OAAO,cAACqV,GAAD,CAAQlxB,KAAMA,EAAM6b,QAASA,EAASnS,SAAUA,MAG/D,CACIyE,KAAI,SAAEkJ,GAAerX,SAAjB,EAAE,EAAsBgW,KAC5B9H,KAAM,sBACNujB,gBAAiB,SAACzxB,EAAM6b,GACpB,OACI,cAAC7F,GAAD,CAAMhW,KAAMA,EAAM6b,QAASA,EAASnS,SAAUA,MAI1D,CACIyE,KAAI,SAAEkJ,GAAerX,SAAjB,EAAE,EAAsBiW,oBAC5B/H,KAAM,wBACNujB,gBAAiB,SAACzxB,EAAM6b,GACpB,OAAO,OAGf,CACI1N,KAAI,SAAEkJ,GAAerX,SAAjB,EAAE,EAAsB+V,WAC5B7H,KAAM,cACNujB,gBAAiB,SAACzxB,EAAM6b,GACpB,OACI,cAAC9F,GAAD,CACI/V,KAAMA,EACN6b,QAASA,EACTnS,SAAUA,OC9CnB1G,WAAWC,OAAO,CAC7B6D,eAAgB,CACZvD,WAAY,SACZH,UAAW,GACXO,aAAc,IAElBsK,YAAa,CACTzJ,MAAO,IACPrB,OAAQ,GACRkC,eAAgB,cAEpBqR,kBAAmB,CACflS,MAAO,IACPrB,OAAQ,GACRiB,gBAAiB,OAErBwS,iBAAkB,CACdpS,MAAO,IACPrB,OAAQ,GACRiB,gBAAiB,YCdV,SAASkR,GAAWtP,GAC/B,MAAwB6G,qBAAxB,WAAO6kB,EAAP,KAAa7V,EAAb,KACA,OAAO6V,GAGH,cAACve,EAAA,EAAD,CAAYnR,MAAO,CAAEsB,KAAM,GAA3B,SACKquB,GAAe3rB,EAAMhG,MAAQ,KAAMgG,EAAM0D,UAAU2J,KAAI,SAAC/I,EAAIzI,GACzD,OACI,cAAC,IAAD,CACIqM,KAAM,CACFC,KAAM7D,EAAG4D,KACTiJ,KAAM,UACN/I,KAAM,GACNtK,MAAO,SAGX8tB,aAAc,OACdxa,mBAAoB,CAAE9C,YAAa,IACnCrG,YAAa9E,GAAO8E,YACpBnH,eAAgBqC,GAAOrC,eACvBwC,MAAOgB,EAAG6D,KACVpH,QAAS,SAACwC,GACNsS,EACIvR,EAAGmnB,gBAAgBzrB,EAAMhG,MAAQ,KAAM6b,MAR1Cha,QCpBdmB,WAAWC,OAAO,CAC7B4uB,SAAU,CACNvuB,KAAM,EACNH,OAAQ,IACRiB,gBAAiB,QACjB6D,eAAgB,GAChBhE,YAAa,OACbsQ,YAAa,GAEjBud,cAAe,CACXxuB,KAAM,EACNH,OAAQ,IACRiB,gBAAiB,QACjB6D,eAAgB,GAChBhE,YAAa,OACbsQ,YAAa,GAEjBwd,aAAc,CACVruB,SAAU,GACVI,MAAO,UACP7B,WAAY,OACZ+vB,OAAQ,GAEZ3b,QAAS,CACLvS,MAAO,OACP4M,UAAW,SACXtN,UAAW,GACXyB,WAAY,M,UCjBL,SAASsR,GAAUnQ,GAC9B,MAAkC6G,oBAAS,GAA3C,WAAOiE,EAAP,KAAkBC,EAAlB,KACA,EAAkClE,mBAAS,IAA3C,WAAOolB,EAAP,KAAkBC,EAAlB,KAEAvgB,qBAAW,WACPgK,GAAQ3V,EAAM0D,UAAU5J,MAAK,SAACoK,GAE1B,IADA,IAAM0iB,EAAM,GACH/qB,EAAI,EAAGA,EAAIqI,EAAKtK,OAAQiC,IAAK,CAClC,IAAMyI,EAAKJ,EAAKrI,GAChB+qB,EAAI7J,KAAK,CAAC9Y,MAAOuf,GAAWlf,EAAGiB,QAASvF,EAAM0D,UAAWyE,KAAM7D,EAAG6D,OAEtE+jB,EAAatF,GACb7b,GAAa,QAElB,IAkCH,OACI,cAACoC,EAAA,EAAD,CAAYnR,MAAOmH,GAAO0oB,SAAUM,YAAY,EAAhD,SACI,eAAClpB,EAAA,EAAD,WACI,cAAClH,EAAA,EAAD,CAAMC,MAAOmH,GAAO4oB,aAApB,SAAmC1a,GAAerR,EAAMhG,MAAMmW,YAC5DrF,EAAY,cAAC0B,EAAA,EAAD,CAAmBpE,KAAM,QAAStK,MAAO,YACnD,cAACqP,EAAA,EAAD,CAAYgf,YAAY,EAAxB,SApCa,IAArBF,EAAUryB,OACF,cAACmC,EAAA,EAAD,CAAMC,MAAOmH,GAAOkN,QAApB,SAA8BgB,GAAerR,EAAMhG,MAAMqW,UAE1D4b,EAAU5e,KAAK,SAAC/I,EAAGzI,GACtB,OACI,eAACoH,EAAA,EAAD,CAAMjH,MAAO,CAAC4B,iBAAkB,IAAhC,UACI,cAAC,IAAD,CACIiL,MAAOvE,EAAG6D,KACVikB,UAAW,CAACvuB,UAAW,UACvBinB,WAAY,CAACnW,SAAS,WAAYxQ,kBAAmB,GAAIhB,OAAQ,GAAIS,iBAAkB,GAAIqE,eAAgB,IAAKgI,OAAQ,KAE5H,cAAC,KAAD,CACIpB,MAAOvE,EAAGL,MACVmoB,UAAW,CAACzuB,cAAe,IAC3B2F,MAAO+N,GAAerR,EAAMhG,MAAMgJ,QAClCqpB,YAAa,IACbrkB,WAAY,CAACrK,aAAc,IAE3B2uB,kBAAmB,UACnBC,OAAQ,GACRC,oBAAqB,UACrBC,sBAAuB,GACvBC,oBAAqB,EACrBC,kBAAmB,OAlBe9wB,a,mlBCrB/C,SAASuU,GAAWpQ,GAC/B,MAAkC6G,oBAAS,GAA3C,WAAOiE,EAAP,KAAkBC,EAAlB,KACA,EAAoClE,mBAAS,IAA7C,WAAO+lB,EAAP,KAAmBC,EAAnB,KACA,EAAgChmB,mBAAS,GAAzC,WAAOimB,EAAP,KAAiBC,EAAjB,KAEMC,EAAU,CAAC3b,GAAerR,EAAMhG,MAAMsW,OAAQe,GAAerR,EAAMhG,MAAMuW,gBAE/E5E,qBAAW,W1DcR,IAAkBjI,K0DbJ1D,EAAM0D,S1DchBhL,GACFiL,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEC,MAAO,IACdC,MAAK,SAACpK,EAAKwK,GAIR,OAHIxK,GACAyK,QAAQC,MAAM1K,GAEXwK,M0DrBkBpK,MAAK,SAAC0B,GAC/B,IAAMyxB,EAAazxB,EAAOioB,QAAQ,SAACnf,GAAD,OAAQA,EAAGL,MAAQ,KACrD4oB,EAAcI,GACdliB,GAAa,QAElB,IA8EH,OACI,cAACoC,EAAA,EAAD,CAAYnR,MAAOmH,GAAO2oB,cAAeK,YAAY,EAArD,SACI,eAAClpB,EAAA,EAAD,WACI,eAACA,EAAA,EAAD,CAAMjH,MAAO,CAACmD,cAAe,OAA7B,UACI,cAACpD,EAAA,EAAD,CAAMC,MAAOmH,GAAO4oB,aAApB,SAAmC1a,GAAerR,EAAMhG,MAAMoW,aAC9D,cAAC,IAAD,CACIrP,QAAS,SAACwL,GAAD,OAASwgB,EAAYxgB,IAC9B2gB,cAAeJ,EACfE,QAASA,EACT/kB,YAAa,CAAC9J,kBAAmB,SAGvC2M,EAAY,cAAC0B,EAAA,EAAD,CAAmBpE,KAAM,QAAStK,MAAO,UAAW9B,MAAO,CAAC6C,WAAY,IAAKzB,UAAW,MAClG,cAAC+P,EAAA,EAAD,CAAYgf,YAAY,EAAMnwB,MAAO,CAACoB,UAAW,GAAjD,SAzFG,WACf,GAA0B,IAAtBwvB,EAAWhzB,OACX,OAAQ,cAACmC,EAAA,EAAD,CAAMC,MAAOmH,GAAOkN,QAApB,SAA8BgB,GAAerR,EAAMhG,MAAMqW,UAEjE,IAAM8c,EAAS,GACTC,EAAO,GACPnpB,EAAQ,GAER4e,EAAM+J,EAAWvf,KAAI,SAAAggB,GAAI,aAASA,MACxC,GAAiB,IAAbP,EACA,IADiB,IAAD,WACPjxB,GACL,IAAMyI,EAAKue,EAAIhnB,GACf,GAA8B,GAA1BuxB,EAAK1oB,SAASJ,EAAGT,MAAgB,CACjC,IAEIypB,EAFMzK,EAAIxV,KAAI,SAAAggB,GAAI,aAASA,MACZ5J,QAAQ,SAAClgB,GAAD,OAAOA,EAAEM,OAASS,EAAGT,QACjBD,MAAK,SAACtK,EAAGi0B,GAAJ,OAAUA,EAAEtpB,MAAQ3K,EAAE2K,SAC1DmpB,EAAKrQ,KAAKzY,EAAGT,MACbI,EAAM8Y,KAAKuQ,EAAgB,GAAGrpB,SAP7BpI,EAAI,EAAGA,EAAIgnB,EAAIjpB,OAAQiC,IAAM,EAA7BA,GAWb,IAAK,IAAIA,EAAI,EAAGA,EAAIgnB,EAAIjpB,OAAQiC,IAAK,CACjC,IAAI0Q,EAAM4gB,EAAOvzB,OACX0K,EAAKue,EAAIhnB,GACE,IAAbixB,GAAkBvgB,EAAM,GAAK4gB,EAAO5gB,EAAM,GAAG1I,OAASS,EAAGT,KACzDspB,EAAO5gB,EAAM,GAAGtI,OAASK,EAAGL,MACR,IAAb6oB,GAAkBvgB,EAAM,GAAK4gB,EAAO5gB,EAAM,GAAGtI,MAAQK,EAAGL,OAASkpB,EAAO5gB,EAAM,GAAG1I,OAASS,EAAGT,MACpGspB,EAAO5gB,EAAM,GAAGtI,MAAQK,EAAGL,MAC3B4e,EAAI/mB,OAAOD,EAAG,IACXsxB,EAAOpQ,KAAKzY,GAGN,IAAbwoB,IAEAK,EAAO9f,KAAK,SAAC/I,GACTL,EAAM8Y,KAAKzY,EAAGL,UAGlBkpB,EAAO9f,KAAK,SAAC/I,GACT8oB,EAAKrQ,KAAKzY,EAAGT,UAIrB,IAAMK,EAAO,CACTspB,OAAQJ,EACRK,SAAU,CACN,CACIvpB,KAAMD,KAIlB,OACI,cAAChB,EAAA,EAAD,CAAMjH,MAAO,CAAC4B,iBAAkB,IAAhC,SACI,cAAC,KAAD,CACIsG,KAAMA,EACN1F,MAAqB,IAAd4uB,EAAKxzB,OACZuD,OAAQ,IACRuwB,UAAU,EACVC,uBAAuB,EACvBC,YAAa,CACTxvB,gBAAiB,UACjByvB,uBAAwB,UACxBC,qBAAsB,UACtBC,cAAe,EACfjwB,MAAO,iBAAM,WACbkwB,WAAY,iBAAM,YAEtBhyB,MAAO,CACH6C,YAAa,QAsBfovB,UC5GX,SAAS1e,GAAMvP,GAC1B,OACI,eAACmN,EAAA,EAAD,CAAYnR,MAAO,CAAEsB,KAAM,GAA3B,UACI,cAAC8S,GAAD,CAAYpW,KAAMgG,EAAMhG,KAAM0J,SAAU1D,EAAM0D,WAC9C,cAACyM,GAAD,CAAWnW,KAAMgG,EAAMhG,KAAM0J,SAAU1D,EAAM0D,cCFzD,IAAMwqB,GAAMC,eAEG,SAASC,GAAKpuB,GAAQ,IAAD,MAEfE,cAEjB,OACI,eAACguB,GAAIG,UAAL,CACIC,cAAe,CACXC,YAAa,CAAC,CAAEpxB,OAAQ,GAAIW,MAAO,YACnC0wB,iBAAkB,CAAC,CAAE1wB,MAAO,UAAWH,aAAc,MAH7D,UAMI,cAACuwB,GAAIO,OAAL,CACIC,QAAS,CACLC,aAAa,EACbC,WAAY,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACI,cAAC,IAAD,CACI1d,KAAM,UACNrT,MAAO,UACPqK,KAAI,mBACA0mB,EAAU,GAAK,gBAMnC1mB,KAAI,SAAEkJ,GAAerR,EAAMhG,YAAvB,EAAE,EAA4BsV,WAClCwf,SAAU,kBACN,cAAC,GAAD,CAAY90B,KAAMgG,EAAMhG,KAAM0J,SAAU1D,EAAM0D,cAGtD,cAACwqB,GAAIO,OAAL,CACIC,QAAS,CACLC,aAAa,EACbI,eAAe,EACfH,WAAY,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACI,cAAC,IAAD,CACI1d,KAAM,UACNrT,MAAO,UACPqK,KAAI,QAAS0mB,EAAU,GAAK,gBAK5C1mB,KAAI,SAAEkJ,GAAerR,EAAMhG,YAAvB,EAAE,EAA4BuV,MAClCuf,SAAU,kBAAM,cAACvf,GAAD,CAAOvV,KAAMgG,EAAMhG,KAAM0J,SAAU1D,EAAM0D,cAE7D,cAACwqB,GAAIO,OAAL,CACIC,QAAS,CACLC,aAAa,EACbI,eAAe,EACfH,WAAY,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACI,cAAC,IAAD,CACI1d,KAAM,UACNrT,MAAO,UACPqK,KAAI,YAAa0mB,EAAU,GAAK,gBAKhD1mB,KAAI,SAAEkJ,GAAerR,EAAMhG,YAAvB,EAAE,EAA4BwV,SAClCsf,SAAU,SAACvrB,GAAD,OACN,cAACiM,GAAD,CACIxV,KAAMgG,EAAMhG,KACZP,SAAQ,MAAEuG,OAAF,EAAEA,EAAOvG,SACjB2M,OAAQpG,EAAMoG,OACd1C,SAAU1D,EAAM0D,SAChBqF,YAAa/I,EAAM+I,oB,wBCjF5B/L,OAAWC,OAAO,CAC7BI,UAAW,CACPE,WAAY,SACZC,aAAc,SACdG,aAAc,GACda,MAAO,OACPJ,gBAAiB,SAErB4wB,UAAW,CACP5xB,WAAY,GACZoB,MAAO,IACPrB,OAAQ,IACRQ,cAAe,IAEnBsxB,SAAU,CACNzwB,MAAO,OACPoQ,QAAS,IAEbsgB,QAAS,CACLvgB,SAAU,WACVnQ,MAAO,OACPrB,OAAQ,OACRyR,QAAS,IAEb5E,SAAU,CACN5M,WAAY,GACZoB,MAAO,IACPrB,OAAQ,IACRQ,cAAe,GACfS,gBAAiB,SAErBX,QAAS,CACLC,SAAU,GACVI,MAAO,UACPV,UAAW,GACX6M,OAAQ,GAEZwK,QAAS,CACLnG,YAAa,GACb9P,MAAO,QAEX2wB,YAAa,CACT7xB,KAAM,EACNkB,MAAO,QAEX4wB,QAAS,CACL1xB,SAAU,IAEd2xB,QAAS,CACL9xB,WAAY,SACZC,aAAc,SACdgB,MAAO,U,qkBCpCA,SAAS8Q,KAAc,IAAD,IACjC,EAAgCzI,mBAASyoB,YAAU,OAAS,KAA5D,WAAO5rB,EAAP,KACA,GADA,KAC4BmD,sBAA5B,WAAOT,EAAP,KAAempB,EAAf,KACA,EAAgC1oB,qBAAhC,WAAOrF,EAAP,KAAiBuH,EAAjB,KACA,EAAkClC,oBAAS,GAA3C,WAAOiE,EAAP,KAAkBC,EAAlB,KAEM9K,EAAWC,cACXc,EAAK,SAAG0K,oBAAH,EAAG,EAAe1K,MACvBhH,GAAY,MAALgH,OAAA,EAAAA,EAAOhH,OAAQ,KAEtBwI,EAAe7J,EAAQ,KACvB62B,EAAW72B,EAAQ,KAEzBgT,qBAAU,W3DuCP,IAAiB/K,K2DtCD8C,EAAS9C,G3DuCrBlI,GAAGc,UAAU,CAAE4L,IAAKxE,K2DtClB9G,MAAK,SAAC0B,GAAY,IAAD,EACTA,GAA6B,KAAb,MAANA,OAAA,EAAAA,EAAQ5B,SACnBqG,EAAS,SAEbsvB,EAAU/zB,EAAO,IACjBuN,EAAW,SAACvN,EAAO,SAAR,EAAC,EAAWgG,UACvBuJ,GAAa,MAEhBrE,OAAM,SAAChN,GACJyK,QAAQwC,IAAIjN,GACZuG,EAAS,QAAS,CACde,MAAO,CAAEvH,SAAQ,MAAEuH,OAAF,EAAEA,EAAOvH,SAAUO,KAAMA,QAGtD,IAMM+R,EAAcC,IAAYC,iBAC5B,qBAPe,WAIf,OAHAhM,EAAS,QAAS,CACde,MAAO,CAAEvH,SAAQ,MAAEuH,OAAF,EAAEA,EAAOvH,SAAUO,KAAMA,MAEvC,KAMX,OAAO,kBAAM+R,EAAYG,YAC1B,IAEH,IAAMujB,EAAQ,SACPC,MADO,IAEVnG,OAAO,SACAmG,KAAanG,QADd,IAEFoG,WAAY,kBAIpB,OAAI7kB,EAEI,cAAC0B,EAAA,EAAD,CACI1O,MAAO,OACPsK,KAAM,QACNpM,MAAO,CAAEoB,UAAW,OAK5B,qCACI,eAAC6F,EAAA,EAAD,CAAMjH,MAAOmH,GAAO9F,UAApB,UACI,cAAC,EAAD,CACImF,aAAcA,EACdM,YAAaI,KACbX,YAAaY,GAAO6rB,UACpBjsB,WAAYI,GAAO6G,SACnBvH,MAAM,EACNE,UAAU,IAEd,cAAC,IAAD,CAAM3G,MAAOmH,GAAO1F,QAApB,UACK,SAAA4T,GAAerX,SAAf,IAAsBsF,MAAMkC,KAAa,UAGlD,cAAC,IAAD,CAAS1D,MAAO,OAAQU,MAAO,EAAGxC,MAAOmH,GAAOsR,UAEhD,eAACxR,EAAA,EAAD,CAAMjH,MAAO,CAAEsB,KAAM,GAArB,UACI,cAAC2F,EAAA,EAAD,CAAMjH,MAAO,CAAEsB,KAAM,EAAGqR,SAAU,YAAlC,SACI,cAAC,EAAD,CACInM,aAAcgtB,EACd1sB,YAAa8sB,KACbrtB,YAAaY,GAAO8rB,SACpBlsB,WAAYI,GAAO+rB,QACnBzsB,MAAM,EACNE,UAAU,MAGlB,cAACktB,GAAA,EAAD,CAAqBC,MAAOL,EAAUzzB,MAAO,CAAEiD,QAAS,KAAxD,SACI,cAACmvB,GAAD,CACIp0B,KAAMA,EACNP,SAAQ,MAAE2M,OAAF,EAAEA,EAAQ5E,SAClBkC,SAAUA,EAAS9C,GACnBwF,OAAQA,EACR2C,YAAaA,YCvGrCgnB,aCSe,WAAgB,IAAD,IAC1B,EAA4BlpB,qBAA5B,WAAOmpB,EAAP,KAAeC,EAAf,KACA,EAAkCppB,oBAAS,GAA3C,WAAOiE,EAAP,KAAkBC,EAAlB,KAEAY,qBAAU,WACNukB,MACD,CAACA,IAEJvkB,qBAAW,WACPxH,QAAQwC,IAAI,8BACb,CAACqpB,IAEJ,IAAIG,GAAQ,SAAAC,UAAA,IAAqB10B,MAAM,KAAK,KAAM,KAC5C1B,EAAO,CAAC,KAAM,MAAM0K,SAASyrB,GAASA,EAAQ,KAE9CD,EAAmBG,uBAAY,oBAAA/2B,EAAAC,OAAA,gDACjC,IACI+2B,IACF,MAAO52B,GACLyK,QAAQC,MAAM1K,GAJe,8DAMlC,IAEG42B,EAAY,oBAAAh3B,EAAAC,OAAA,gDACdF,IAAYS,MAAK,SAACC,GACdk2B,EAAUl2B,GACVgR,GAAa,MAHH,6DAOlB,OACI,eAAC9H,EAAA,EAAD,CAAMjH,MAAO,CAAEsB,KAAM,GAArB,UACI,cAACizB,EAAA,EAAD,CAAWC,QAAQ,IAClB1lB,EACG,cAAC,GAAD,CACI9O,MAAO,CAAEsB,KAAM,EAAGC,WAAY,UAC9BjC,KAAI,SAAEm1B,EAAcz2B,SAAhB,EAAE,EAAqBmB,gBAG/B,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIu1B,OAAK,EACL7rB,KAAK,IACLkmB,QACI,cAAC,GAAD,CACI5xB,gBAAe,MAAE62B,OAAF,EAAEA,EAAQ72B,gBACzBa,KAAMA,EACNP,SAAQ,MAAEu2B,OAAF,EAAEA,EAAQv2B,aAI9B,cAAC,IAAD,CACIi3B,OAAK,EACL7rB,KAAK,YACLkmB,QAAS,cAACjuB,GAAD,CAAgB9C,KAAMA,MAEnC,cAAC,IAAD,CACI02B,OAAK,EACL7rB,KAAK,QACLkmB,QACI,cAAClgB,GAAD,CACI1R,gBAAe,MAAE62B,OAAF,EAAEA,EAAQ72B,gBACzBa,KAAMA,EACNP,SAAQ,MAAEu2B,OAAF,EAAEA,EAAQv2B,aAI9B,cAAC,IAAD,CACIoL,KAAK,kBACLkmB,QAAS,cAAC,GAAD,mB","file":"static/js/app.f75fe507.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/question_mark.c1494184.gif\";","module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sad.bfdab12f.gif\";","module.exports = __webpack_public_path__ + \"static/media/applause.bfbba08b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/you_lose.c6b6ef1b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading_brain.ef5884d9.gif\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.ede08671.png\";","module.exports = __webpack_public_path__ + \"static/media/2.b87932e3.png\";","module.exports = __webpack_public_path__ + \"static/media/3.3ed4e762.png\";","module.exports = __webpack_public_path__ + \"static/media/4.80535fcd.png\";","module.exports = __webpack_public_path__ + \"static/media/5.da0bedf3.png\";","module.exports = __webpack_public_path__ + \"static/media/6.7911d645.png\";","module.exports = __webpack_public_path__ + \"static/media/swipe-right.6dde9c7c.gif\";","module.exports = __webpack_public_path__ + \"static/media/brain.70fc8c58.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.097ce51b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.348cd96d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.5d28b463.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.acbb69fd.png\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e82f415e.gif\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.e46e92e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.83357dfb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fail.60814d28.mp3\";","module.exports = __webpack_public_path__ + \"static/media/play.25c902a7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.c7b1e976.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n}\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n}\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n}\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n}\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n}\n\nexport function reset() {\n    return AsyncStorage.clear();\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retourner sur le formulaire',\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet requise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? C'est possible, le partage est réalisable entre deux appareils par {0} !\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can share data between two devices with {0} technology!\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer {0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 40,\n        borderColor: 'gray',\n        borderRadius: 20,\n        paddingHorizontal: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        elevation: 2,\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n    },\n    buttonText: {\n        paddingTop: 10,\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to produce today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text, Platform } from 'react-native';\nimport { Button, Image } from 'react-native-elements';\nimport Lottie from '../../../components/utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/home/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/home/addedUser.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <Button\n                title={InterfaceLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nconst createQuizContent = async (personId, el) => {\n    el.id = uuidv4();\n    el.score = [{personId: personId, success: 0, failed: 0}];\n    if (['audio', 'image'].includes(el.fileType)) {\n        await uploadQuizFile(el);\n    }\n};\n\nconst uploadQuizFile = async (el) => {\n    const filename = `${uuidv4()}${el.fileType == 'audio' ? '.m4a' : '.png'}`;\n    const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n    await FileSystem.copyAsync({\n        from: el.uri,\n        to: `${path}${filename}`\n    });\n    await FileSystem.deleteAsync(el.uri);\n    el.uri = `${path}${filename}`;\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        await createQuizContent(personId, el);\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport async function updateScore(personId, quizId, contentId, success) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    const contentIndex = quiz[0].content.findIndex(el => el.id == contentId );\n    const scoreIndex = quiz[0].content[contentIndex].score.findIndex(el => el.personId = personId);\n    if (success) quiz[0].content[contentIndex].score[scoreIndex].success++\n    else quiz[0].content[contentIndex].score[scoreIndex].failed++\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function deleteId(personId, quizId) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n};\n\nexport async function deleteQuestion(quizId, questionId) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    const content = quiz[0].content;\n    const contentIndex = content.findIndex(el => el.id == questionId );\n    if (['audio', 'image'].includes(content[contentIndex]))\n        await FileSystem.deleteAsync(content.uri);\n    quiz[0].content = content.splice(0, contentIndex);\n    return db.updateAsync({_id: quizId}, {...quiz[0]})\n};\n\nexport async function getById(quizId) {\n    return db.findAsync({ _id: quizId }, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n};\n\nexport async function saveQuiz(personId, quizId, content) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    if (!quiz) return;\n    for (let i = 0; i < content.length; i++) {\n        const el = content[i];\n        if (!el.id)\n            await createQuizContent(personId, el);\n        else if (el.id && el.editedFile) {\n            await uploadQuizFile(el);\n            delete el.editedFile;\n        }\n    }\n    quiz[0].content = content;\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function reset() {\n    return db.removeAsync({}, { multi: true });\n};\n","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nexport const randomArrayElement = (exclude, min, max) => {\n    randNumber = randomNumber(min, max);\n    if (randNumber == exclude)\n        return randomArrayElement(exclude, min, max);\n    return randNumber;\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\nimport { db as QuizDB } from './quizApi'\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return db.removeAsync({ _id: id });\n};\n\nexport async function reset() {\n    return FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(async res => {\n        await SimonDB.removeAsync({}, { multi: true });\n        await QuizDB.removeAsync({}, { multi: true });\n        await DictaphoneDB.removeAsync({}, { multi: true });\n        return db.removeAsync({}, { multi: true });\n    });\n};","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0)\n                personId = result._id;\n            await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${personId}`, {intermediates: true})\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    wrapper: {\n        marginTop: 100,\n        textAlign: 'center',\n        alignItems: 'center',\n    },\n    topImage: {\n        flex: 1,\n        width: 80,\n        marginTop: -270,\n    },\n    heading: {\n        marginTop: -190,\n        fontSize: 20,\n        zIndex: 2,\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: '#3B8EFF',\n    },\n    subtitle: {\n        textAlign: 'center',\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: 10,\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1,\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Text,\n    View,\n    Image,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    BackHandler,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input } from 'react-native-elements';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport LoadingBrain from '../../assets/img/home/loading_brain.gif';\nimport { lang as HomeLang } from '../../language/home';\nimport Rows from '../../components/home/Rows';\nimport CreatePerson from '../../components/home/PersonCreation/CreatePerson';\n\nimport * as Person from '../../data/personApi';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        HomeLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const swiper = useRef(null);\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n\n    useEffect(() => {\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - index, true);\n    };\n\n    const changeIndex = (idx) => {\n        setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                setBtnTxt(HomeLang[lang].AddAPerson);\n            } else if (idx === 1) {\n                setBtnTxt(HomeLang[lang].ReturnToList);\n            }\n            setActive(true);\n        }, 400);\n    };\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.wrapper}>\n                <Image\n                    source={LoadingBrain}\n                    resizeMode=\"contain\"\n                    style={styles.topImage}\n                />\n                <Text style={styles.heading}>\n                    {HomeLang[lang].Hello(username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{HomeLang[lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (active === false) {\n                            return;\n                        }\n                        setActive(false);\n                        setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={HomeLang[lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    setSearch(e);\n                                }}\n                                value={search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {persons && persons.length > 0 ? (\n                                printRows(persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {HomeLang[lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={persons}\n                                setPersons={setPersons}\n                                lang={lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    TouchableOpacity,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername, SawTutorial } from '../../data/configApi';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\nimport Home from '../Home';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [confirmed, setConfirmed] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            setUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <TouchableOpacity\n                        style={styles.button}\n                        activeOpacity={0.5}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                    >\n                        <Text style={styles.buttonText}>\n                            {' '}\n                            {isLoading ? (\n                                <ActivityIndicator\n                                    color=\"white\"\n                                    size=\"small\"\n                                    animating={true}\n                                />\n                            ) : (\n                                'OK'\n                            )}\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        );\n    } else {\n        return <Home username={input} lang={props.lang} />;\n    }\n}\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    slideOdd: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#C8EEFF',\n    },\n    title: {\n        color: 'black',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center',\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center',\n    },\n    image: {\n        flex: 3,\n        width: 100 + '%',\n        height: 400,\n    },\n    buttonContainer: {\n        flex: 2,\n        marginTop: -40,\n    },\n    button: {\n        marginTop: 10,\n        paddingTop: 15,\n        paddingBottom: 15,\n        marginLeft: 30,\n        marginRight: 30,\n        backgroundColor: '#00BCD4',\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: '#fff',\n    },\n    buttonText: {\n        color: '#fff',\n        textAlign: 'center',\n    },\n});\n","import React, { useEffect } from 'react';\nimport { Text, View, Image, TouchableOpacity } from 'react-native';\n\nimport { Link } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport SwipeImage from '../../assets/img/tutorial/swipe-right.gif';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport Lottie from '../../components/utils/Lottie';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\nimport Home from '../Home';\n\nexport default function Tutorial(props) {\n    const LottieSource = require('../../assets/lottie/swipe-right.json');\n\n    useEffect(() => {\n        Config.getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    return <Home username={res} lang={props.lang} />;\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SwipeImage}\n                LottieStyle={{\n                    position: 'absolute',\n                    height: 80,\n                    marginTop: 280,\n                    marginLeft: 80,\n                    opacity: 0.8,\n                }}\n                ImageStyle={{\n                    position: 'absolute',\n                    height: 80,\n                    marginTop: 280,\n                    marginLeft: 80,\n                    opacity: 0.8,\n                }}\n            />\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Link\n                            to=\"/username\"\n                            component={TouchableOpacity}\n                            style={styles.button}\n                            onPress={(e) => {\n                                Config.SawTutorial(true);\n                            }}\n                            activeOpacity={0.5}\n                        >\n                            <Text style={styles.buttonText}>\n                                {' '}\n                                {TutorialLang[props.lang].LastStepButton}{' '}\n                            </Text>\n                        </Link>\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} />;\n    }\n    return <Home lang={props.lang} username={props.username} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        Home: 'Accueil',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n        QuizScore: \"Score des quiz\",\n        SimonScore: \"Score du Simon\",\n        NoScore: \"Aucun score enregistré pour cette activité...\",\n        Success: 'réussite',\n        Global: \"Vue d'ensemble\",\n        BestScoreByDay: 'Meilleur score du jour',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        Home: 'Home',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n        QuizScore: \"Quiz Score\",\n        SimonScore: \"Simon Score\",\n        NoScore: \"No score registered for this activity...\",\n        Success: 'success',\n        Global: \"Global view\",\n        BestScoreByDay: 'Best score by day',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#5EA1E4',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\n\nimport { ScrollView, Alert, View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/home/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\n\nimport styles from './styles';\nimport Form from '../../../components/home/PersonCreation/Form';\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname(props.person.fullname);\n        setUriPreview(props.person.picture);\n        setImage('');\n        setDescription(props.person.description);\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/home');\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.username),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: 'bluetooth',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ShareProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/home');\n                        }}\n                    />\n                </ScrollView>\n            ) : (\n                <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => setEdit(false)}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </ScrollView>\n            )}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync();\n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const goBack = async () => {\n        await recording?.stopAndUnloadAsync();\n        stopPlayingSounds();\n        props.setPage(0);\n    }\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            el.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                    <Button\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'caret-back-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        buttonStyle={styles.recordButton}\n                        title={{}}\n                        titleStyle={styles.titleButton}\n                        onPress={() => goBack()}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <View style={styles.actionButtonsView}>\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n                <Button\n                    containerStyle={styles.actionButtons}\n                    icon={{\n                        name: 'caret-back-outline',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={{}}\n                    titleStyle={styles.titleButton}\n                    onPress={() => goBack()}\n                />\n                </View>\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n\n\n\n\n        // Help section\n        Head: \"Le Simon, comment ça marche ?\",\n        RulesHead: \"Les règles\",\n        TriesHead: \"Les essais\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu Simon est un {0} de forme circulaire comportant quatre gros boutons de couleurs différentes: rouge, vert, jaune et bleu.\\n\\nLe jeu {1} une des quatres couleurs et {2} toujours associé à cette couleur. Le joueur doit alors {3}.\\n\\nLe jeu {4}, puis {5} une nouvelle couleur. Le jour doit reproduire cette nouvelle séquence. Chaque fois que le joueur reproduit correctement la séquence, le jeu ajoute une nouvelle couleur.`,\n                boldText: ['jeu de mémoire', 'éclaire', 'produit un son', \"appuyer sur la touche de la couleur qui vient de s'allumer\", 'répète la même couleur et le même son', 'ajoute'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois que vous ratez une séquence, vous {0}. Au cours d'une partie, vous avez le droit à seulement {1}.\\n\\nUne fois les quatre erreurs faites, ou alors lorsque vous {2}, votre score est compatibilisé en fonction du nombre de touches dans la séquence actuelle.\\n\\nChaque jour, {3}.`,\n                boldText: ['perdez un essai', 'quatre erreurs', 'abandonnez la partie en cours', 'votre score journalier est remit à zéro'],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n\n\n\n\n        // Help section\n        Head: `The Simon, how does it works?`,\n        RulesHead: \"The rules\",\n        TriesHead: \"The tries\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The Simon is a circular shaped {0} with four different colored buttons: red, green, yellow and blue.\\n\\nThe game {1} one of the four colors and {2} always associated to this color. The player shall {3}.\\n\\nThe game {4}, then {5} another color. The player will have to reproduces this sequence. Each time the player successfully reproduces the sequence, the game adds another color in this sequence.`,\n                boldText: ['memory game', 'lighten', 'produces a sound', \"press the colored button which has just turned on\", 'repeat the same color with the same sound', 'add'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `Each time you fail a sequence, you {0}. In a game, you are allowed up to {1}.\\n\\nOnce the four fails made, or when you {2}, you will have the number of elements in the current sequence saved as your score.\\n\\nEach day, {3}.`,\n                boldText: ['lose a try', 'four maximum fails', 'give up the current game', 'your daily score is reset to zero'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        paddingTop: 20,\n        flex: 1,\n        alignItems: 'center'\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        // flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        //flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    // Help section\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .4,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate, dailyScore < order.length - 1, bestScore < order.length - 1);\n        setCanPlay(false);\n        setSuccess(true);\n        const path = dailyScore < order.length - 1 ? require(`../../../assets/sound/global/applause.mp3`) : require(`../../../assets/sound/global/you_lose.mp3`);\n        const { sound } = await Audio.Sound.createAsync(path);\n        props.setSound(sound);\n        sound.playAsync();\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            <Overlay\n                visible={success}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => setSuccess(false)}\n                ModalComponent={Modal}\n            >\n                {scoreBeaten ? successOverlay() : failOverlay()}\n                <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            retryGame();\n                        }}\n                        title={SimonLang[props.lang].Retry}\n                        containerStyle={{\n                            borderRadius: 13,\n                            marginRight: 10,\n                        }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setTab(0);\n                        }}\n                        title={SimonLang[props.lang].Exit}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React from 'react';\nimport { View, ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView>\n                <Button\n                    title={SimonLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{SimonLang[props.lang].Head}</Text>\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].Rules()}</Text>\n\n                \n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].TriesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].TriesExplain()}</Text>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\nimport Help from './Help';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr, pos) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: i == pos ? color : '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        Cancel: 'Annuler',\n        GoBack: \"Oui, j'annule l'édition du quiz\",\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Abandonner le quiz\",\n        GiveUpQuiz: \"Êtes-vous sûr de vouloir abandonner ce quiz? Le score restera enregistré.\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        EditedQuiz: \"Quiz modifié avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Bien joué !! 😄\",\n        Success: \"Bien joué ! C'est la bonne réponse !! Vous pouvez maintenant passer à la suite !\",\n        FailedTitle: \"Dommage... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Dommage, mais ce n'était pas la bonne réponse ! Les réponses possibles étaient: ${answersText}.`\n        },\n        SuccessQuizTitle: \"Haut la main !\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Fantastique !! Vous avez réussi ce quiz ! Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Dommage... Vous avez raté ce quiz ! ... Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Sauvegarder le quiz',\n        SaveContent: \"Sauvegarder la question\",\n        AddContent: \"Ajouter la question\",\n        SureCancelEdition: \"Êtes-vous sûr de bien vouloir abandonner l'édition de ce quiz? Vous ne pourrez pas récupérer vos modifications.\",\n\n        // Help page related\n        Head: 'Le quiz, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        CustomHead: \"Personnalisation\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Les règles du quiz sont basiques: il y a des questions {0}, et le joueur doit y répondre. Il peut y avoir {1} réponses possibles, une bonne réponse et c'est un point ajouté au score.\\n\\nIl n'y a pas de perte de points suite à une mauvaise réponse.`,\n                boldText: [\"facultativement accompagnées d'une image ou d'un son\", \"plusieurs\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `Il n'y a pas de quiz par défaut. C'est à vous d'en {0} et de les {1} à votre guise !\\nPour cela, vous devez vous rendre dans la partie \"{2}\".\\n\\nVous aurez là la liste des quiz que vous avez préalablement crée. Si vous n'en avez encore créé aucun, façonnez votre premier quiz avec le bouton \"{3}\".\\n\\nIci vous pourrez ajouter des question avec le bouton \"{4}\". Il vous est demandé {5} (facultatif), qui correspond à un son ou une image pour illustrer votre question.\\n\\nEnsuite, vous devez {6}. Ce sera cette question qui sera ensuite demandée au joueur.\\n\\nEt enfin, {7}. Une fois une réponse valide renseignée, cliquez sur le symbole {8} à côté, et votre réponse est ajoutée à la liste des réponses valides à la question. Vous pouvez en avoir 10 maximum.\\n\\nSi vous avez fait une erreur sur une des réponses, {9} pour la retirer de la liste.\\n\\nUne fois tous les éléments de la question renseignées, cliquez sur \"{10}\" au dessus pour enregistrer la question et retourner à la liste des questions précédemment crées. Ajoutez-en autant que vous voulez pour un quiz.\\n\\nVous pouvez également {11}.\\n\\nUne fois le quiz complet, cliquez sur \"{12}\", et voilà ! Renseignez le nom de ce quiz et c'est terminé, le quiz est désormais jouable !`,\n                boldText: [\"créer\",\n                    \"personnaliser\",\n                    \"Voir les quiz\",\n                    \"Créer un quiz\",\n                    \"Ajouter une question\",\n                    \"d'importer un fichier de référence\",\n                    \"renseigner la question\",\n                    \"ajouter les réponses éventuelles\",\n                    \"( + )\",\n                    \"cliquez simplement dessus\",\n                    \"Valider\",\n                    \"cliquer sur une question pour la modifier\",\n                    \"Terminer la création\"\n                ],\n            });\n        }\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizzes',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        Cancel: 'Cancel',\n        GoBack: 'Yes, I want to go back',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'of success',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Submit\",\n        GiveUpQuizTitle: \"Give up\",\n        GiveUpQuiz: \"Are you sure to give up this quiz? The score will be saved.\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        EditedQuiz: \"Quiz successfuly edited!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Well played!! 😄\",\n        Success: \"Well played! That's the good answer!! You can now go to the next question!\",\n        FailedTitle: \"Oops... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Oops, that's not a valid answer... the valid answer${answers.length > 0 ? 's were' : ' was'} : ${answersText}.`\n        },\n        SuccessQuizTitle: \"Easy peasy!\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Congratulations!! You won this quiz! Your score is for {0} good answer(s) for {1} mistake!',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: \"It's alright... You failed this quiz!... Your score is for {0} good answer(s) for {1} mistake!\",\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Save the quiz',\n        SaveContent: \"Save the question\",\n        AddContent: \"Add the question\",\n        SureCancelEdition: \"Are you sure to cancel this quiz edition? Your modification would not be saved\",\n\n        // Help page related\n        Head: 'The quiz, how does it works?',\n        RulesHead: \"The rules\",\n        CustomHead: \"Customization\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `This is a basic quiz game: there are questions {1}, and the player must answer them. There can be {1} answers, one correct answer and it's a point added to the score.\\n\\nThere is no loss of points for a wrong answer.`,\n                boldText: [\"optionally accompanied by an image or a sound\", \"several possible\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `There are no default quizzes. It is up to you to {0} and {1} them as you wish!\\nTo do this, you must go to the \"{2}\" section.\\nThere you will see the list of quizzes that you have already created. If you haven't created any yet, create your first quiz with the \"{3}\" button.\\n\\nHere you can add questions with the \"{4}\" button. You are asked to {5} (optional), which is a sound or image file to illustrate your question.\\n\\nThen you have to {6}. This question will be asked to the player.\\n\\nAnd finally, {7}. Once you have entered a valid answer, click on the {8} symbol next to it, and your answer would be added to the list of the valid answers to the question. You can have a maximum of 10 possible answers.\\n\\nIf you made a mistake on one of the answers, {9} to remove it from the list.\\n\\nOnce you have filled in all the elements of the question, click \"{10}\" above to save the question and return to the list of questions. Add as many as you want to this quiz.\\n\\nYou can also {11}.\\n\\nOnce the quiz is completed, click \"{12}\" and that's it! Fill in the name of this quiz and it's done, the quiz is now playable!`,\n                boldText: [\"create\",\n                    \"customize\",\n                    \"View quizzes\",\n                    \"Create a quiz\",\n                    \"Add a question\",\n                    \"import a reference file\",\n                    \"fill in the question\",\n                    \"add the possible answers\",\n                    \"( + )\",\n                    \"simply click on it\",\n                    \"Submit\",\n                    \"click on a question to edit it\",\n                    \"Complete the quiz creation\"\n                ],\n            });\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: 235,\n        marginTop: 20,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: 235,\n        marginTop: 10,\n        backgroundColor: 'blue',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: 30,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    modalDescription: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: 290,\n        marginTop: 10\n    },\n    quizTitleInput: {\n        fontSize: 15\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 50\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        width: 250\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: 250,\n        height: 250\n    },\n    gameQuestion: {\n        fontSize: 25,\n        marginTop: 10,\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey'\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15\n    },\n\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n        height: 120 + '%',\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image, ActivityIndicator } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            <Button\n                title={props.isLoading ? <ActivityIndicator color={'blue'} size={'small'} /> : QuizLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n                disabled={props.quiz.length === 0}\n            />\n\n            <Button\n                title={QuizLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import {\n    View,\n    Image\n} from 'react-native';\nimport { Icon, FAB, Avatar } from 'react-native-elements';\nimport { Audio } from 'expo-av';\n\nexport const printFile = (fileType, uri, clearFile, isPlaying, pauseSound, setIsPlaying, sound, setSound) => {\n    if (fileType === 'image') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Image source={{uri: uri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n            </View>\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 100, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Icon onPress={() => isPlaying ? pauseSound() : playSound(setIsPlaying, sound, setSound, uri) } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30, zIndex: 2}} />\n            </View>\n        );\n    }\n};\n\nexport const playSound = async (setIsPlaying, sound, setSound, uri) => {\n    setIsPlaying(true);\n    await Audio.setAudioModeAsync({\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n    });\n    const getSoundStatus = await sound?.getStatusAsync();\n    if (getSoundStatus?.isLoaded === false) {\n        await sound.loadAsync({ uri: uri });\n        setSound(sound);\n    }\n    await sound.playAsync();\n    sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n        if (playbackStatus.didJustFinish) {\n            await sound.unloadAsync();\n            setIsPlaying(false);\n        }\n    });\n};\n\nexport const pickCorrectIcon = (fileType, uri) => {\n    if (fileType === 'image') {\n        return (\n            <Avatar\n                source={{ uri: uri }}\n                rounded\n                size={'medium'}\n                containerStyle={{marginHorizontal: 8}}\n            />\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <Icon\n                raised\n                name={'musical-notes-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    } else {\n        return (\n            <Icon\n                raised\n                name={'text-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    }\n};","import React, { useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nimport { pickCorrectIcon } from '../utils/quizFunc';\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n\n    const length = props.quizEdit?.content?.length + props.newContent?.length;\n\n    const pickOutQuestion = () => {\n        if (length <= 2 && props.quizEdition) return;\n        if (props.quizEdition === true) {\n            if (Number.isInteger(props.questionId)) {\n                // if the questionId is an integer, it means it has not\n                // been added to the api yet, so it's an index of the\n                // newContent array passed in the props from the ViewQuiz Component\n\n                const index = props.questionId - props.quizEdit?.content?.length;\n                const tmp = props.newContent;\n                tmp.splice(index, 1);\n                // take out the new content from the newContent state in the\n                // parent component\n                props.setNewContent([...tmp]);\n            } else {\n                // todo not get by api but update quizedit state\n                // update api only when saving quiz\n                const index = props.quizEdit.content.findIndex(el => el.id == props.questionId );\n                const tmp = props.quizEdit;\n                tmp.content.splice(index, 1);\n                props.setQuizEdit(tmp);\n                props.setReload(!props.reload)\n                props.setEditedQuiz(true);\n            }\n        } else {\n            const tmp = props.quizEdition ? props.content : props.contentList;\n            tmp.splice(props.index, 1)\n            props.setContent([...tmp]);\n        }\n        setModal(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{ marginRight: 10 }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={{ fontWeight: 'bold' }}\n                    onPress={() => pickOutQuestion() }\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { props.setEditContent(props.questionId) }} >\n                { pickCorrectIcon(props.content.fileType, props.content.uri) }\n                <ListItem.Content>\n                    <ListItem.Title>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon disabled={props.quizEdition == true && length <= 2} reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","export function ScoreRatio (content, personId) {\n    var success = 0;\n    var fail = 0;\n    content.map( (el, i) => {\n        const score = el.score.filter( (el) => el.personId == personId );\n        score.map( (el, i) => {\n            success += parseInt(el.success);\n            fail += parseInt(el.failed);\n        });\n    });\n    const total = success + fail;\n    if (total == 0)\n        return 0;\n    const score = ((success / total) * 100).toFixed(2);\n    return score;\n};","import React from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport { ScoreRatio } from './utils/scoreFunc';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n\n    return (\n        <ListItem {...componentProps} onPress={() => {\n                props.setEdit(true);\n                props.setQuizEdit(props.quiz);\n            }}>\n            <ListItem.Content>\n                <ListItem.Title>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    { ScoreRatio(props.quiz.content, props.personId) }{'% '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Text,\n    ScrollView,\n} from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport QuizList from './QuizList';\nimport styles from './styles';\n\nimport * as API from '../../../data/quizApi';\n\nexport default function ViewQuizList(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <ScrollView>\n            {props.loading ? (\n                <ActivityIndicator\n                    color={'blue'}\n                    size={'small'}\n                    style={styles.loading}\n                />\n            ) : props.quiz?.length > 0 ? (\n                props.quiz?.map((el, i) => {\n                    return (\n                        <QuizList\n                            index={i}\n                            key={el._id}\n                            quiz={el}\n                            lang={props.lang}\n                            deleteId={deleteId}\n                            personId={props.personId}\n                            setEdit={props.setEdit}\n                            setQuizEdit={props.setQuizEdit}\n                        />\n                    );\n                })\n            ) : (\n                <Text style={styles.nothingYet}>\n                    {QuizLang[props.lang].NothingYet}\n                </Text>\n            )}\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/activities/quiz/success.gif';\n\nimport styles from './styles';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge, FAB } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContent(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <ScrollView contentContainerStyle={styles.ScrollView}>\n                { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                <Button\n                    title={QuizLang[props.lang].ImportFile}\n                    buttonStyle={{ borderRadius: 15 }}\n                    onPress={pickFile}\n                />\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].ReferenceFile}\n                </Text>\n                <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                    <Input\n                        value={props.question}\n                        inputStyle={{fontSize: 14}}\n                        containerStyle={{marginBottom: 50}}\n                        placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                        onChangeText={(e) => props.setQuestion(e)}\n                    />\n                    <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                    <Input\n                        placeholder={QuizLang[props.lang].AddAnswer}\n                        inputStyle={{fontSize: 14}}\n                        value={answer}\n                        onChangeText={(e) => setAnswer(e)}\n                    />\n                    <Button\n                        icon={\n                            <Icon\n                                name={'add-circle'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={18}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => addAnswer()}\n                        disabled={props.answers.length >= 10}\n                    />\n                    </View>\n                </View>\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].WhatIsAnswer}\n                </Text>\n                <View style={styles.badgesView}>\n                    {props.answers.map( (el, i) => {\n                        return(\n                            <Badge\n                                key={i}\n                                value={el}\n                                badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                onPress={() => pickOutAnswer(i)}\n                            />\n                        )\n                    })}\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    SafeAreaView,\n    ScrollView,\n    Alert,\n    Modal,\n    Text\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay } from 'react-native-elements';\n\nimport QuestionList from './Creation/QuestionList';\nimport ViewQuizList from './ViewQuizList';\n\nimport * as API from '../../../data/quizApi';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport FormQuizContent from './Creation/FormQuizContent';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n    // if the user is editing or not an existing quiz\n    const [edit, setEdit] = useState(false);\n\n    // if the user want to add a question to an existing quiz\n    const [newQuestion, setNewQuestion] = useState(false);\n\n    // if the user want to edit an existing question to an existing quiz\n    const [editContent, setEditContent] = useState();\n\n    // the existing quiz to edit\n    const [quizEdit, setQuizEdit] = useState();\n\n    // the new content to add in an existing quiz\n    const [newContent, setNewContent] = useState([]);\n\n    // check if something has been edited\n    const [editedQuiz, setEditedQuiz] = useState(false);\n\n    // open the modal of going back without saving confirmation\n    const [modal, setModal] = useState(false);\n\n    // the states for the quiz edition (add / edit question)\n    const [question, setQuestion] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const push = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setNewContent([...newContent, push]);\n        setEditedQuiz(true);\n        setSuccess(true);\n    };\n\n    const saveContent = () => {\n        let content;\n        let index;\n        if (Number.isInteger(editContent)) {\n            // edit newContent array\n            content = newContent[editContent - quizEdit?.content?.length];\n        } else {\n            // edit quizEdit array\n\n            // for already in api content -- think of reuploading the file\n            // if there's a new one, or to delete it\n            index = quizEdit.content.findIndex(el => el.id == editContent);\n            content = quizEdit.content[index];\n            if (fileType != content.fileType || uri != content.uri)\n                content.editedFile = true;\n        }\n        content.filename= filename;\n        content.fileType = fileType;\n        content.uri = uri;\n        content.answers = answers;\n        content.question = question;\n        setEditedQuiz(true);\n        setSuccess(true);\n        if (Number.isInteger(editContent)) {\n            if (newContent.length == 1)\n                setNewContent([content]);\n            else\n                setNewContent([...content]);\n        } else {\n            quizEdit.content[index] = content;\n            setQuizEdit(quizEdit);\n        }\n    };\n\n    // clear the states before edition or creation of a content\n    const clearState = () => {\n        setAnswers([]);\n        setQuestion();\n        setFileType();\n        setFilename();\n        setUri();\n        setSound(new Audio.Sound());\n    };\n\n    // Save the edited quiz\n    const saveQuiz = () => {\n        if (!editedQuiz) return;\n        const content = quizEdit.content.concat(newContent);\n        API.saveQuiz(props.personId, quizEdit._id, content).then((data) => {\n            return Alert.alert(\n                QuizLang[props.lang].EditedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            props.setReload(!props.reload);\n                            setNewContent([]);\n                            goBack();\n                        },\n                    }\n                ]\n            );\n        });\n    }\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const viewPage = () => {\n        if (editContent && !newQuestion) {\n            if (success) setSuccess(false);\n            let content;\n            if (Number.isInteger(editContent)) {\n                content = newContent[editContent - quizEdit?.content?.length];\n            } else {\n                const index = quizEdit.content.findIndex(el => el.id == editContent);\n                content = quizEdit.content[index];\n            }\n            if (!content) return;\n            setFilename(content.filename);\n            setFileType(content.fileType);\n            setUri(content.uri);\n            setQuestion(content.question);\n            setAnswers([...content.answers]);\n            setNewQuestion(true);\n        } else if (newQuestion) { // if the user wants to set a new question for quiz edition\n            return (<FormQuizContent\n                        lang={props.lang}\n                        setAnswers={setAnswers}\n                        setFileType={setFileType}\n                        setQuestion={setQuestion}\n                        setUri={setUri}\n                        setFilename={setFilename}\n                        setSuccess={setSuccess}\n                        setSound={setSound}\n                        setIsPlaying={setIsPlaying}\n                        pauseSound={pauseSound}\n                        uri={uri}\n                        filename={filename}\n                        answers={answers}\n                        fileType={fileType}\n                        question={question}\n                        success={success}\n                        sound={sound}\n                        isPlaying={isPlaying}\n                />);\n        } else if (edit && !newQuestion) {\n             // if the user want to see all the question for the quiz edition\n            return (quizEdit.content)?.concat(newContent)?.map((el, i) => {\n                return (<QuestionList\n                    index={i}\n                    key={i}\n                    id={quizEdit._id || 0}\n                    quizEdit={quizEdit}\n                    newContent={newContent}\n                    content={el}\n                    lang={props.lang}\n                    questionId={el.id || i}\n                    quizEdition={true}\n                    reload={props.reload}\n                    setReload={props.setReload}\n                    setEditedQuiz={setEditedQuiz}\n                    setEditContent={setEditContent}\n                    setQuizEdit={setQuizEdit}\n                    setNewContent={setNewContent}\n                />);\n            })\n        } else {\n             // if the user want to see all the existing quiz for the quiz edition\n            return (<ViewQuizList\n                quiz={props.quiz}\n                loading={props.loading}\n                lang={props.lang}\n                personId={props.personId}\n                setEdit={setEdit}\n                setQuizEdit={setQuizEdit}\n                setReload={props.setReload}\n            />);\n        }\n    };\n\n    const goBack = () => {\n\n        if (!success) setSuccess(false);\n\n        if ( (editedQuiz && !newQuestion) || newContent.length > 0) {\n            setModal(true);\n            return;\n        }\n\n        if (editContent) {\n            clearState();\n            setEditContent();\n            setNewQuestion(false);\n        } else if (newQuestion)\n            setNewQuestion(false);\n        else if (edit) {\n            setEditedQuiz(false);\n            setEdit(false);\n        } else\n            props.setTab(0);\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return saveContent();\n        } else if (newQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].AddContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return pushContent();\n        } else if (edit) {\n            // save the quiz button\n            if (mode == 'title') return QuizLang[props.lang].Save;\n            else if (mode == 'disabled') return !(editedQuiz);\n            else if (mode == 'onpress') return saveQuiz();\n        } else {\n            // create a quiz button\n            if (mode == 'title') return QuizLang[props.lang].Create;\n            else if (mode == 'disabled') false;\n            else if (mode == 'onpress') return props.setTab(4);\n        }\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => setModal(false)}\n                    ModalComponent={Modal}\n                >\n                    <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                    <View style={{ flexDirection: 'row' }}>\n                        <Button\n                            title={QuizLang[props.lang].Cancel}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{ marginRight: 10 }}\n                            onPress={() => setModal(false)}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].GoBack}\n                            buttonStyle={{ fontWeight: 'bold' }}\n                            onPress={() => {\n                                setEditedQuiz(false);\n                                setEditContent();\n                                setEdit(false);\n                                setNewContent([]);\n                                setModal(false);\n                            } }\n                        />\n                    </View>\n                </Overlay>\n\n\n                <Button\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={edit ? 'save-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        buttonTop('onpress')\n                    }}\n                    disabled={ buttonTop('disabled') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => goBack() }\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                {\n                    edit && !newQuestion && !editContent ?\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setNewQuestion(true) }\n                    /> : <></>\n                }\n                <ScrollView style={{marginBottom: 40}}>\n                { viewPage() }\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContent from './FormQuizContent';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\nimport { Audio } from 'expo-av';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n    const [modalConfirmation, setModalConfirmation] = useState(false);\n\n    const [editContent, setEditContent] = useState();\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name.substring(0, 23),\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    // Save an existing question\n    const saveContent = () => {\n        content[editContent].fileType = fileType;\n        content[editContent].filename = filename;\n        content[editContent].uri = uri;\n        content[editContent].question = question;\n        content[editContent].answers = answers;\n        setContent([...content]);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        if (isPlaying) setIsPlaying(false);\n    };\n\n    const clearState = () => {\n        setAnswers([]);\n        setFileType();\n        setFilename();\n        setUri();\n        setQuestion();\n        setSuccess(false);\n    };\n\n    const printQuestionList = () => {\n        if (content.length === 0) {\n            return (<Text style={styles.nothingYet}>\n                {QuizLang[props.lang].NoQuestionYet}\n            </Text>);\n        } else {\n            return content?.map((el, i) => {\n                return (\n                    <QuestionList\n                        index={i}\n                        key={i}\n                        id={i}\n                        content={el}\n                        lang={props.lang}\n                        setContent={setContent}\n                        setEditContent={setEditContent}\n                        questionId={i}\n                        contentList={content}\n                    />\n                );\n            });\n        }\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent !== undefined) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); return saveContent(); }\n        } else if (createQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].OK;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); setModal(false); return pushContent(); }\n        } else {\n            if (mode == 'title') return QuizLang[props.lang].Complete;\n            else if (mode == 'disabled') return !(content.length > 0);\n            else if (mode == 'onpress') { return setModal(true);  }\n        }\n    };\n\n    const printPage = () => {\n        if (editContent !== undefined && !createQuestion) {\n            if (success) setSuccess(false);\n            setAnswers(content[editContent].answers);\n            setFileType(content[editContent].fileType);\n            setFilename(content[editContent].filename);\n            setUri(content[editContent].uri);\n            setQuestion(content[editContent].question);\n            setCreateQuestion(true);\n        }\n        if (createQuestion) { // if the user is creating a new question\n            return <FormQuizContent\n                /* Form to create a quiz */\n                lang={props.lang}\n                setAnswers={setAnswers}\n                setFileType={setFileType}\n                setQuestion={setQuestion}\n                setUri={setUri}\n                setFilename={setFilename}\n                setSuccess={setSuccess}\n                setSound={setSound}\n                setIsPlaying={setIsPlaying}\n                pauseSound={pauseSound}\n                uri={uri}\n                filename={filename}\n                answers={answers}\n                fileType={fileType}\n                question={question}\n                success={success}\n                sound={sound}\n                isPlaying={isPlaying}\n            />\n        } else {\n            return <SafeAreaView style={styles.safeArea}>\n                <Button\n                    title={QuizLang[props.lang].AddQuestion}\n                    icon={\n                        <Icon\n                            name={'add-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => setCreateQuestion(true)}\n                />\n                <ScrollView style={{marginBottom: 40}}>\n                    { props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : printQuestionList() }\n                </ScrollView>    \n            </SafeAreaView>\n        }\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button containerStyle={{ marginTop: 10, width: 40 }} title={{}} icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    } disabled={name?.length < 3 || name.length > 23 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            {/* Confirmation give up quiz creation */}\n            <Overlay\n                visible={modalConfirmation}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => setModalConfirmation(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={QuizLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={() => setModalConfirmation(false)}\n                    />\n                    <Button\n                        title={QuizLang[props.lang].GoBack}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={() => {\n                            setModalConfirmation(false);\n                            props.setTab(2);\n                        } }\n                    />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ buttonTop('disabled') }\n                    onPress={ () => buttonTop('onpress') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearState();\n                        pauseSound();\n                        if (createQuestion)\n                            setCreateQuestion(!createQuestion);\n                        else if (content.length == 0) props.setTab(2);\n                        else setModalConfirmation(true)\n                    }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            { printPage() }\n        </>\n    );\n}\n","import React from 'react';\nimport { Text, Button, Icon, FAB } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif');\n    return (\n    <>\n        { props.quizLength > 1 ? <FAB\n            style={{marginTop: 140, position: 'absolute', zIndex: 10}}\n            containerStyle={{marginLeft: 120}}\n            size=\"small\"\n            icon={{name: 'repeat-sharp', type: 'ionicon', color:'white' }}\n            onPress={() => props.pickRandomQuizz()}\n        /> : <></> }\n        <Lottie LottieSource={ThinkingLottie} ImageSource={ThinkingImage} LottieStyle={{marginTop: -25, height: 250, marginBottom: -30}} />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButton}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            buttonStyle={{ backgroundColor: 'red' }}\n            containerStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, Alert, View, Modal } from 'react-native';\nimport { Text, Image, Input, Button, Icon, Overlay } from 'react-native-elements';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../../assets/img/activities/sad.gif';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport Lottie from '../../../utils/Lottie';\nimport { Audio } from 'expo-av';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n    const [modal, setModal] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const [success, setSuccess] = useState(0);\n    const [fail, setFail] = useState(0);\n    const [confetti, setConfetti] = useState(false);\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const TrophyLottie = require('../../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../../assets/lottie/sad.json');\n\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const stopSound = async () => {\n        await pauseSound();\n        setSound(new Audio.Sound());\n        await sound?.unloadAsync();\n    }\n\n    const playSound = async () => {\n        setIsPlaying(true);\n        await Audio.setAudioModeAsync({\n            staysActiveInBackground: true,\n            shouldDuckAndroid: true,\n        });\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus?.isLoaded === false) {\n            await sound.loadAsync({ uri: game[current].uri });\n            setSound(sound);\n        }\n        await sound.playAsync();\n        sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n            if (playbackStatus.didJustFinish) {\n                await sound.unloadAsync();\n                setIsPlaying(false);\n            }\n        });\n    };\n\n    const setMediaType = () => {\n        if (!game[current]) return;\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <Icon onPress={() => isPlaying ? pauseSound() : playSound() } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30}} />\n            default:\n                return <></>;\n        }\n    };\n\n    const openAlertResultQuestion = (result) => {\n        return (\n            Alert.alert(\n                result ? QuizLang[props.lang].SuccessTitle : QuizLang[props.lang].FailedTitle,\n                result ? QuizLang[props.lang].Success : QuizLang[props.lang].Failed(game[current].answers),\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: async () => {\n                            if (current + 1 <= game.length - 1)\n                                setCurrent(current + 1);\n                            else {\n                                const path = success >= fail ? require(`../../../../assets/sound/global/applause.mp3`) : require(`../../../../assets/sound/global/you_lose.mp3`);\n                                if (success >= fail) setConfetti(true);\n                                const { sound } = await Audio.Sound.createAsync(path);\n                                setSound(sound);\n                                sound.playAsync();\n                                setModal(true);\n                            }\n                        },\n                    }\n                ]\n            )\n        )\n    };\n\n    const answerQuestion = async () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        stopSound();\n        setAnswer('');\n        const result = game[current].answers.includes(answerTrimedLowercase);\n        if (result === false) {\n            // increment the fail and update the API\n            setFail(fail + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, false);\n        } else {\n            // increment the success and update the API\n            setSuccess(success + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, true)\n        }\n        openAlertResultQuestion(result);\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                {confetti && success >= fail ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n                )}\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => props.setTab(0)}\n                    ModalComponent={Modal}\n                >\n                    {success >= fail ? \n                        <>\n                            <Lottie LottieSource={TrophyLottie} ImageSource={TrophyImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} loop={false} />\n                            <Text style={{color:'blue', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].SuccessQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].SuccessQuiz(fail, success)}</Text>\n                        </>\n                    :\n                        <>\n                            <Lottie LottieSource={SadLottie} ImageSource={SadImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} />\n                            <Text style={{color:'red', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].FailQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].FailQuiz(fail, success)}</Text>\n                        </>\n                    }\n                    <Button title={QuizLang[props.lang].Leave} onPress={() => props.setTab(0)} containerStyle={styles.leaveButton} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </Overlay>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button buttonStyle={styles.buttonQuizGameOK} title={QuizLang[props.lang].OK} onPress={() => { answerQuestion() }} />\n                </View>\n            </>\n        }\n    </>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\n// This component is mounted when the user clicks on 'Play' in the main quiz menu\nexport default function Play(props) {\n    const [play, setPlay] = useState(false);\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quizId={props.quiz._id}\n                personId={props.personId}\n                quiz={props.quiz.content}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n                quizLength={props.quizLength}\n            />\n        }\n    </View>);\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{QuizLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Rules()}</Text>\n\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].CustomHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Custom()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler, Alert } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber, randomArrayElement } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Creation/CreateQuiz';\nimport Play from './Play';\nimport Help from './Help';\n\nimport * as API from '../../../data/quizApi';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1) {\n                    Alert.alert(\n                        QuizLang[props.lang].GiveUpQuizTitle,\n                        QuizLang[props.lang].GiveUpQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    setTab(0);\n                                }\n                            },\n                        ]\n                    )\n                }\n                else setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            let rand = randomArrayElement(random, 0, quiz.length - 1);\n            setRandom(rand);\n        }\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    isLoading={isLoading}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                quizLength={quiz.length}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    setReload={setReload}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return <View style={styles.view}>{printPage()}</View>;\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Essai${tries > 1 ? 's' : ''} restant${tries > 1 ? 's' : ''}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Score actuel: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Commencer\",\n        GiveUp: \"Abandonner\",\n        Reinit: \"Nouveau modèle\",\n        TitleGiveUp: \"Abandonner la partie\",\n        SureToGiveUp: \"Êtes-vous sûr(e) de vouloir abandonner la partie? Votre score sera enregistré.\",\n        Congratulations: 'Félicitations !!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: \"Recommencer\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'Le jeu des pairs, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu des pairs est assez connu et classique. Lorsque vous commencerez la partie, vous aurez un {0}. Cliquez alors sur le bouton \"{1}\" sur le bas de l’écran pour retourner les cartes face verso.\\n\\nVous devrez alors {2}. Par exemple, si vous cliquez sur une carte rouge, vous devrez cliquer sur l’autre carte rouge ensuite.\\n\\nPlus vous grimpez dans le score, plus le nombre de paires s’ajoutent au schéma. Il peut y avoir jusqu’à {3} au total.`,\n                boldText: [\"schéma de plusieurs paires de cartes face recto\", \"Commencer\", \"retourner les paires l'une après l’autre\", \"6 paires\"],\n            });\n        },\n        ScoreHead: \"Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois qu’un schéma est complété (c'est-à-dire que toutes les cartes ont été retournées), {0} et passez à un schéma suivant, {1}.\\n\\nLes points peuvent vous servir à avoir un joli score, mais aussi à recréer un nouveau schéma si vous l’avez complètement oublié. A chaque re-création d’un schéma, {2}. Et vous ne pouvez pas recréer un schéma s’il ne vous reste {3}.`,\n                boldText: [\"vous gagnez un point\", \"potentiellement plus difficile\", \"vous perdez un point\", \"qu’un essai pour le schéma actuel\"],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'How does it work',\n        Leave: 'Back',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Remaning tr${tries > 1 ? 'ies' : 'y'}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Actual score: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Start\",\n        GiveUp: \"Give up\",\n        Reinit: \"New model\",\n        TitleGiveUp: \"Give up the game\",\n        SureToGiveUp: \"Are you sure to give up this party? Your score will be saved.\",\n        Congratulations: 'Congratulations!!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        SoBad: 'So sad...',\n        ScoreNotBeated: 'Your daily score has not been beaten... But you can retry!',\n        Retry: \"Retry\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Best score made today: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'The double memory, how does it works?',\n        RulesHead: \"The rules\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The game of peers (or double memory) is quite familiar and classic. When you start the game, you will have a {0}. Then click on the \"{1}\" button at the bottom of the screen to turn the cards face up.\\n\\nFor example, if you click on a red card, you will have to click on the other red card next.\\n\\nThere can be up to {3} in total.`,\n                boldText: [\"pattern of several pairs of cards face up\", \"Start\", \"turn over the pairs one after the other\", \"6 pairs\"],\n            });\n        },\n        ScoreHead: \"Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `Each time a pattern is completed (i.e., all the cards have been turned over), {0} and move on to the next pattern, {1}.\\n\\nThe points can be used to get a nice score, but they can also be used to recreate a new pattern if you've completely forgotten about it. Each time you re-create a pattern, {2}. And you can't recreate a pattern if you don't have {3} left.`,\n                boldText: [\"you earn a point\", \"potentially more challenging\", \"you lose a point\", \"than a try for the current pattern\"],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        height: 100 + '%',\n        paddingBottom: 40,\n        flex: 1,\n    },\n    logo: {\n        width: 120,\n        height: undefined,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n        resizeMode: \"center\",\n        aspectRatio: 1\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n        marginBottom: 20\n    },\n    RectoCard: {\n        width: 80,\n        height: 80,\n        backgroundColor: '#C3C3CF',\n        borderRadius: 20,\n        borderColor: '#858593',\n        borderWidth: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    PlayingCard: {\n        width: 80,\n        height: 80,\n        borderRadius: 20,\n        borderColor: '#68FF5C',\n        borderWidth: 5,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    VersoCard: {\n        width: 80,\n        height: 80,\n        borderRadius: 20,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    IconCard: {\n        marginTop: 23\n    },\n    viewGame: {\n        marginTop: 20,\n        width: 300,\n        height: 370,\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    buttonViewPlay: {\n        flexDirection: 'row',\n        width: 100 + '%',\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: 10\n    },\n    playButtons: {\n        alignContent: 'center',\n        textAlign: 'center',\n        paddingHorizontal: 30,\n        borderRadius: 10,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        paddingTop: 20,\n        width: 100 + '%',\n        height: 120 + '%',\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DoubleSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={DoubleLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{DoubleLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].Rules()}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].ScoreHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].ScoreHelp()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React from 'react';\nimport { Image, View } from 'react-native';\nimport { Button, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport DoubleLogo from '../../../assets/img/activities/double/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={DoubleLogo} style={styles.logo} resizeMode={'cover'} />\n\n            <Button\n                title={DoubleLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={DoubleLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <View>\n\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: -50,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                        type: 'ionicon',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.ambiantSoundPlay() }\n            />\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 20,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.soundEnabled ? 'sound' : 'sound-mute',\n                        type: 'entypo',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.setSoundEnabled(prev => !prev) }\n            />\n            </View>\n\n            <Button\n                title={DoubleLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => {\n                    props.ambiant.unloadAsync();\n                    props.setPage(null);\n                }}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}","const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};\n\nexport const generateRandomPair = (length) => {\n    const colors = [\n        '#791414',\n        '#143479',\n        '#791462',\n        '#147920',\n        '#797714',\n        '#14AB9D'\n    ];\n    const icons = [\n        'airplane',\n        'boat',\n        'bulb',\n        'color-palette',\n        'earth',\n        'gift',\n        'happy',\n        'heart-circle',\n        'restaurant',\n        'ribbon'\n    ]\n    var arr = [];\n    for (let i = 0; i < length / 2; i++) {\n        var indexColor = Math.floor(Math.random() * colors.length);\n        var indexIcon = Math.floor(Math.random() * icons.length);\n        arr.push({ color: colors[indexColor], icon: icons[indexIcon] }, { color: colors[indexColor], icon: icons[indexIcon] });\n        colors.splice(indexColor, 1);\n        icons.splice(indexIcon, 1);\n    }\n    arr = shuffle(arr);\n    for (let i = 0; i < arr.length; i++) {\n        const el = arr[i];\n        el.idx = i\n    }\n\n    return (arr);\n};","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements';\n\nimport styles from '../styles';\n\nexport default function Card(props) {\n    var cardStyles;\n    if (props.inPlay) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.PlayingCard]];\n    else if (props.inFound || props.show) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.VersoCard]];\n    else cardStyles = styles.RectoCard\n\n    const icon = !props.inFound && !props.inPlay && !props.show ? 'help-circle-outline' : props.icon;\n\n    return (\n        <>\n            <TouchableOpacity style={ cardStyles } onPress={() => {\n                if (!props.inPlay && !props.inFound) props.ReturnCard(props.index);\n            }}>\n                <Icon\n                    name={icon}\n                    size={props.inFound || props.show || props.inPlay ? 30 : 24}\n                    color={props.inFound || props.show || props.inPlay ? 'white' : 'grey'}\n                    type=\"ionicon\"\n                    style={styles.IconCard}\n                />\n            </TouchableOpacity>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { View, Text, Modal } from 'react-native';\n\nimport { Button, Overlay, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../assets/img/activities/sad.gif';\n\nimport Lottie from '../../utils/Lottie';\n\nimport styles from './styles';\n\nimport { generateRandomPair } from './subs/helpers';\n\nimport Card from './subs/Card';\n\nexport default function Play(props) {\n    const [game, setGame] = useState([...generateRandomPair(4)]); // the current map game\n    const [found, setFound] = useState([]);\n    const [tries, setTries] = useState(3);\n    const [play, setPlay] = useState([]); // the current play of the player, an array with two values max, corresponding to the cards the player played\n    const [show, setShow] = useState(true);\n    const [confetti, setConfetti] = useState(false);\n    const [pause, setPause] = useState(false);\n\n    const TrophyLottie = require('../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../assets/lottie/sad.json');\n\n    const setLengthGame = () => {\n        if (props.score <= 8)\n            return 4;\n        else if (props.score <= 15)\n            return 6;\n        else if (props.score <= 30)\n            return 8;\n        else if (props.score <= 45)\n            return 10;\n        else\n            return 12;\n    }\n\n    // Exemple game element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null },\n            { idx: 2, color: '#ffffff', icon: null },\n            { idx: 3, color: '#ferdnc', icon: null }\n        ]\n    */\n\n        // each play, we push the current card to the play state, and check if the first element exists in the\n        // game state, and if the second element is the same as the first one, if so => success for a round, and push\n        // this pair in the found state. If fail => clear the play && found states\n\n    // Exemple play element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 2, color: '#ffffff', icon: null }\n        ] // this is a successful array\n\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null }\n        ] // this is a fail array\n    */\n\n    const failOverlay = () => {\n        if (props.modal == false) return;\n        return (\n            <>\n                <Lottie\n                    LottieSource={SadLottie}\n                    ImageSource={SadImage}\n                    autoplay={true}\n                    loop={true}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const successOverlay = () => {\n        if (!confetti) setConfetti(true);\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].BestScoreToday(props.bestScoreDay)}\n                </Text>\n                <Lottie\n                    LottieSource={TrophyLottie}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n    \n    const newModel = () => {\n        if (props.score == 0) return;\n        const currentGameLength = game.length;\n        props.setScore(prevScore => prevScore - 1);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(currentGameLength)]);\n    };\n\n    const printButton = () => {\n        if (show) {\n            return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={DoubleLang[props.lang].Start} onPress={() => setShow(false) } buttonStyle={styles.playButtons} />\n            <Button title={DoubleLang[props.lang].Leave} onPress={() => props.giveUp() } buttonStyle={[styles.playButtons, , {backgroundColor: 'red', marginLeft: 10}]} />\n            </View>);\n        } else {\n            return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={DoubleLang[props.lang].Reinit} buttonStyle={[styles.playButtons, {backgroundColor: 'green'}]} onPress={() => newModel() } disabled={props.score === 0 || tries <= 1} />\n                <Button title={DoubleLang[props.lang].GiveUp} buttonStyle={[styles.playButtons, {backgroundColor: 'red', marginLeft: 10}] } onPress={() => props.giveUp() } />\n            </View>);\n        }\n    };\n    \n    const ReturnCard = (key) => {\n        if (pause || show) return;\n        const currentPlay = play;\n        const indexGame = game[key];\n        const playing = [...currentPlay, indexGame];\n        if (playing.length == 2) {\n            // check if same card or return all and lose a try\n            if (playing[0].color === playing[1].color && playing[0].icon === playing[1].icon) {\n                const currentGameLength = game.length;\n                const nFound = [...found, playing[0], playing[1]];\n                if (nFound.length == currentGameLength) {\n                    props.playSound('next');\n                    props.setScore(prevScore => prevScore + 1);\n                    setShow(true);\n                    setTries(3);\n                    setGame([...generateRandomPair(setLengthGame())]);\n                    setFound([]);\n                } else {\n                    props.playSound('success');\n                    setFound(nFound);\n                }\n                setPlay([]);\n            } else {\n                setPlay(playing);\n                props.playSound('fail');\n                setPause(true);\n                setTimeout(() => {\n                    if (tries != 0) setTries(prevTries => prevTries - 1);\n                    if (tries === 0)\n                        props.endGame();\n                    else {\n                        setPlay([]);\n                        setFound([]);\n                    }\n                    setPause(false);\n                }, 1000);\n            }\n        } else {\n            setPlay(playing);\n            props.playSound('play');\n        }\n    };\n\n    const printCards = () => {\n        return game.map( (el, i) => {\n            var inFound = false;\n            var inPlay = false;\n            if (found.find(element => element.idx === i )) inFound = true;\n            else if (play.find(element => element.idx === i )) inPlay = true;\n            return (<Card show={show} key={i} index={i} inFound={inFound} inPlay={inPlay} backgroundColor={el.color} icon={el.icon} ReturnCard={ReturnCard} />);\n        });\n    };\n\n    const newGame = () => {\n        if (confetti) setConfetti(false);\n        props.setModal(false);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(4)]);\n    };\n\n    return (\n        <>\n            <View>\n                <FAB\n                    color='#2089dc'\n                    style={{\n                        position: 'absolute',\n                        marginLeft: 130,\n                        marginTop: 390\n                    }}\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.ambiantSoundPlay() }\n                />\n                <FAB\n                    color='#2089dc'\n                    style={{\n                        position: 'absolute',\n                        marginLeft: 85,\n                        marginTop: 390\n                    }}\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.soundEnabled ? 'sound' : 'sound-mute',\n                            type: 'entypo',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.setSoundEnabled(prev => !prev) }\n                />\n            </View>\n            {confetti ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n            )}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                { props.success && props.modal ? successOverlay() : failOverlay() }\n                <View style={{flexDirection: 'row', marginTop: 20}}>\n                    <Button title={DoubleLang[props.lang].Retry} onPress={() => newGame()} buttonStyle={{marginRight: 10}} icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n\n                    <Button title={DoubleLang[props.lang].Leave} onPress={() => { \n                        if (confetti) setConfetti(false);\n                        props.setModal(false);\n                        props.setTab(0);\n                    }} buttonStyle={{backgroundColor: 'red'}} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </View>\n            </Overlay>\n            <View style={styles.viewGame}>\n                { printCards() }\n            </View>\n            <View style={{alignItems: 'center', width: 100 + '%', marginTop: -10}}>\n                <Text>{DoubleLang[props.lang].Score(props.score)}</Text>\n                <Text>{DoubleLang[props.lang].BestDayScore(props.bestScoreDay)}</Text>\n                <Text>{DoubleLang[props.lang].RemaningTries(tries)}</Text>\n                { printButton() }\n            </View>\n        </>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport {\n    Text,\n    BackHandler,\n    ScrollView,\n    Alert\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport styles from './styles';\n\nimport * as API from '../../../data/doubleApi';\n\nimport Help from './Help';\nimport Menu from './Menu';\nimport Play from './Play';\n\nconst currentDate = new Date().toLocaleDateString('fr-FR');\n\nexport default function Double(props) {\n    const [tab, setTab] = useState(0);\n    const [score, setScore] = useState(0);\n    const [bestScoreDay, setBestScoreDay] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [ambiant, setAmbiant] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n    const [soundEnabled, setSoundEnabled] = useState(true);\n    const [ambiantEnabled, setAmbiantEnabled] = useState(true);\n\n    useEffect( async () => {\n        // API.clear();\n\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by MCOCHET - check his soundcloud here: https://soundcloud.com/mcochet\n            require(`../../../assets/sound/double/ambiant.mp3`)\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n\n        API.getScoreDay(props.personId, currentDate).then((data) => {\n            if (data.length > 0) setBestScoreDay(data[0].score);\n        });\n\n        API.getBestScore(props.personId).then((data) => {\n            if (data.length > 0) setBestScore(data[0].score);\n        });\n\n    }, []);\n\n    useEffect(() => {\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1 && score > 0) {  \n                    giveUp()\n                    return ;\n                }\n                setTab(0);\n            } else {\n                ambiant.unloadAsync();\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, ambiant]);\n\n    const endGame = async () => {\n        setModal(true);\n        let bestDayScore = false;\n        let bestScore = false;\n        if (score > bestScoreDay) { \n            playSound('applause');\n            setSuccess(true);\n            setBestScoreDay(score);\n            bestDayScore = true;\n            if (score > bestScore) {\n                bestScore = true;\n                setBestScore(score);\n            }\n        } else {\n            playSound('lose');\n            setSuccess(false);\n        }\n        await API.insertScore(props.personId, score, currentDate, bestDayScore, bestScore);\n        setScore(0);\n    };\n\n    const ambiantSoundPlay = () => {\n        if (ambiantEnabled) ambiant.pauseAsync();\n        else ambiant.playAsync();\n        setAmbiantEnabled(prevEnable => !prevEnable);\n    };\n    \n    const giveUp = () => {\n        if (score === 0) setTab(0);\n        else return Alert.alert(\n            DoubleLang[props.lang].TitleGiveUp,\n            DoubleLang[props.lang].SureToGiveUp,\n            [\n                {\n                    text: DoubleLang[props.lang].Leave,\n                    onPress: () => { null },\n                    style: 'cancel'\n                },\n                {\n                    text: DoubleLang[props.lang].GiveUp,\n                    onPress: () => {\n                        endGame();\n                    }\n                },\n            ]\n        )\n    };\n\n    const playSound = async (type) => {\n        if (!soundEnabled && !['applause', 'lose'].includes(type)) return;\n        if (sound) sound?.unloadAsync();\n        let choosenSound;\n        switch (type) {\n            case \"success\":\n                choosenSound = require(`../../../assets/sound/double/success.mp3`);\n                break;\n            case \"fail\":\n                choosenSound = require(`../../../assets/sound/double/fail.mp3`);\n                break;\n            case \"play\":\n                choosenSound = require(`../../../assets/sound/double/play.mp3`);\n                break;\n            case \"next\":\n                choosenSound = require(`../../../assets/sound/double/next.mp3`);\n                break;\n            case \"applause\":\n                choosenSound = require(`../../../assets/sound/global/applause.mp3`);\n                break;\n            case \"lose\":\n                choosenSound = require(`../../../assets/sound/global/you_lose.mp3`);\n                break;\n            default:\n                break;\n        }\n        const { sound } = await Audio.Sound.createAsync(choosenSound);\n        setSound(sound);\n        sound.playAsync();\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    ambiant={ambiant}\n                    setSoundEnabled={setSoundEnabled}\n                    soundEnabled={soundEnabled}\n                    ambiantEnabled={ambiantEnabled}\n                    ambiantSoundPlay={ambiantSoundPlay}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                        lang={props.lang}\n                        setTab={setTab}\n                        score={score}\n                        setScore={setScore}\n                        giveUp={giveUp}\n                        modal={modal}\n                        setModal={setModal}\n                        bestScoreDay={bestScoreDay}\n                        success={success}\n                        endGame={endGame}\n                        playSound={playSound}\n                        ambiantSoundPlay={ambiantSoundPlay}\n                        ambiantEnabled={ambiantEnabled}\n                        soundEnabled={soundEnabled}\n                        setSoundEnabled={setSoundEnabled}\n                    />;\n        } else if (tab === 2) {\n            return (<Help lang={props.lang} setTab={setTab} />);\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <ScrollView style={styles.view} contentContainerStyle={{alignItems: 'center'}}>\n            { printPage() }\n        </ScrollView>\n    );\n};","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\nimport Double from '../components/activities/Double';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return <Double lang={lang} setPage={setPage} personId={personId} />;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    scoreRow: {\n        flex: 1,\n        height: 180,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreRowSimon: {\n        flex: 1,\n        height: 250,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreHeading: {\n        fontSize: 18,\n        color: '#2089dc',\n        fontWeight: 'bold',\n        margin: 5\n    },\n    NoScore: {\n        color: 'grey',\n        fontStyle: 'italic',\n        marginTop: 45,\n        marginLeft: 45\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\nimport { Badge } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport { ScoreRatio } from '../../../../components/activities/Quiz/utils/scoreFunc';\nimport * as API from '../../../../data/quizApi';\n\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nexport default function QuizScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [quizScore, setQuizScore] = useState([]);\n\n    useEffect( () => {\n        API.get(props.personId).then((data) => {\n            const arr = [];\n            for (let i = 0; i < data.length; i++) {\n                const el = data[i];\n                arr.push({score: ScoreRatio(el.content, props.personId), name: el.name});\n            }\n            setQuizScore(arr);\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (quizScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            return quizScore.map( (el,i) => {\n                return (\n                    <View style={{marginHorizontal: 15}} key={i}>\n                        <Badge\n                            value={el.name}\n                            textStyle={{textAlign: 'center'}}\n                            badgeStyle={{position:'absolute', paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 100, zIndex: 3}}\n                        />\n                        <CircularProgress\n                            value={el.score}\n                            textStyle={{marginBottom: -10}}\n                            title={ActivitiesLang[props.lang].Success}\n                            valueSuffix={'%'}\n                            titleStyle={{marginBottom: 10}}\n\n                            activeStrokeColor={'#2089dc'}\n                            radius={65}\n                            inActiveStrokeColor={'#9b59b6'}\n                            inActiveStrokeOpacity={0.5}\n                            inActiveStrokeWidth={6}\n                            activeStrokeWidth={12}\n                        />\n                    </View>\n                );\n            });\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRow} horizontal={true}>\n            <View>\n                <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].QuizScore}</Text>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} /> :\n                    <ScrollView horizontal={true}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/simonApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function SimonScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [simonScore, setSimonScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setSimonScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (simonScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = simonScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].SimonScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React from 'react';\nimport { ScrollView } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\n\nimport QuizScore from './QuizScore';\nimport SimonScore from './SimonScore';\n\nimport styles from './styles';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <SimonScore lang={props.lang} personId={props.personId} />\n            <QuizScore lang={props.lang} personId={props.personId} />\n        </ScrollView>\n    );\n}\n","import React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    \n    const navigate = useNavigate();\n\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: 60, color: '#5bc0de' }],\n                tabBarLabelStyle: [{ color: '#5bc0de', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} personId={props.personId} /> }\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        marginBottom: 20,\n        width: 100 + '%',\n        backgroundColor: 'white',\n    },\n    topLottie: {\n        marginTop: -20,\n        width: 200,\n        height: 200,\n        marginBottom: -90,\n    },\n    bgLottie: {\n        width: 100 + '%',\n        opacity: 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: 100 + '%',\n        height: 100 + '%',\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: 'white',\n    },\n    heading: {\n        fontSize: 24,\n        color: '#3B8EFF',\n        marginTop: 10,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport SuccessImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/home');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/home', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/home', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={SuccessImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport Home from './pages/Home';\nimport Activities from './pages/Activities';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    useEffect( () => {\n        console.log('- Imported config file -');\n    }, [config])\n\n    let local = Localization.locale?.split('-')[0] || 'fr';\n    const lang = ['en', 'fr'].includes(local) ? local : 'fr';\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={\n                                <Home\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}