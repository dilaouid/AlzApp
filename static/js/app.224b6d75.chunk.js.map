{"version":3,"sources":["assets/img/activities/trophy.gif","assets/img/activities/help/question_mark.gif","assets/img/activities/brain.gif","assets/img/interface/profile.jpg","assets/img/activities/sad.gif","assets/sound/global/applause.mp3","assets/sound/global/you_lose.mp3","assets/sound/simon/green.mp3","assets/img/alzheimapp_logo.png","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/tutorial/swipe-right.gif","assets/img/username/chooseusername.gif","assets/img/loading.gif","assets/img/selection/addedUser.gif","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/quiz/logo.png","assets/img/activities/quiz/success.gif","assets/img/activities/double/logo.png","assets/sound/ambiant.mp3","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","assets/img/activities/quiz/thinking.gif","assets/sound/double/ambiant.mp3","assets/sound/double/success.mp3","assets/sound/double/fail.mp3","assets/sound/double/play.mp3","assets/sound/double/next.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","language/home/index.js","pages/Home/styles.js","pages/Home/Menu.js","utils/dilacrypt.js","data/dictaphoneApi.js","data/simonApi.js","data/quizApi.js","data/doubleApi.js","utils/helpers.js","data/personApi.js","utils/share.js","pages/Home/ImportData.js","components/utils/Lottie.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","pages/Home/index.js","pages/ChooseUsername/styles.js","pages/ChooseUsername/index.js","components/utils/Loading.js","components/utils/HomeOrTutorial.js","language/selection/index.js","components/selection/Rows.js","components/selection/styles.js","components/selection/PersonCreation/Success.js","components/selection/PersonCreation/Form.js","components/selection/PersonCreation/CreatePerson.js","pages/SelectionMenu/styles.js","pages/SelectionMenu/index.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/Help.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/utils/quizFunc.js","components/activities/Quiz/Creation/QuestionList.js","components/activities/Quiz/utils/scoreFunc.js","components/activities/Quiz/QuizList.js","components/activities/Quiz/ViewQuizList.js","components/activities/Quiz/SuccessContent.js","components/activities/Quiz/Creation/FormQuizContent.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Creation/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/Help.js","components/activities/Quiz/index.js","language/activities/double/index.js","components/activities/Double/styles.js","components/activities/Double/Help.js","components/activities/Double/Menu.js","components/activities/Double/subs/helpers.js","components/activities/Double/subs/Card.js","components/activities/Double/Play.js","components/activities/Double/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/QuizScore/index.js","pages/Activities/Score/SimonScore/index.js","pages/Activities/Score/DoubleScore/index.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","Select","Import","Introduction","Source","License","Language","Step1","Step2","Step3","Step4","Step5","Step6","Step7","Step8","Step9","Step10","Step11","Step12","Step13","Step14","GoBack","InvalidFile","InvalidPersonFile","IncorrectPersonFile","ErrorChekingPerson","InvalidActivitiesLength","InvalidQuizData","InvalidLogData","InvalidDoubleData","InvalidSimonData","StyleSheet","create","container","height","backgroundColor","alignItems","header","marginTop","textAlign","logo","width","menu","flex","marginBottom","button","color","justifyContent","buttonContainer","borderRadius","copyleft","fontSize","fontStyle","ErrorMessage","marginHorizontal","Menu","props","navigate","useNavigate","ScrollView","styles","title","HomeLang","buttonStyle","titleStyle","containerStyle","icon","name","type","size","marginRight","marginLeft","raised","onPress","ambiant","unloadAsync","state","setLang","iconContainerStyle","DocumentPicker","multiple","e","setImportFile","uri","prev","Linking","openURL","encrypt","string","key","encryptedString","j","String","fromCharCode","charCodeAt","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","createQuizContent","el","id","uuidv4","success","failed","includes","fileType","uploadQuizFile","path","FileSystem","from","to","updateScore","quizId","contentId","_id","quiz","contentIndex","content","findIndex","scoreIndex","getBestScore","insertScore","dailyScoreBeaten","globalScoreBeaten","pushErrors","errors","field","msg","hasOwnProperty","randomNumber","min","max","Math","floor","random","person","fullname","trim","description","Object","keys","picture","edit","upd","$set","catch","log","isValidDate","d","n","Date","isNaN","fileToBase64","encoding","formatQuiz","formatLog","scoreVerification","checkPersonInformations","checkPersonExists","personAPI","checkQuiz","quizKeys","contentKeys","k","l","answers","question","foundInScore","checkDouble","double","checkSimon","simon","checkDictaphone","dictaphone","importPerson","exists","intermediates","importQuiz","res","filePath","quizAPI","quizFindAsync","importDouble","doubleAPI","importSimon","simonAPI","importLog","dictaphoneAPI","writeDataFile","fileUri","exportPerson","personFind","personData","simonData","doubleData","quizData","dictaphoneData","JSON","stringify","activities","dilacrypt","ImportData","useState","step","setStep","setError","useEffect","importFile","parsed","parseJSON","dataImport","found","CannotCreatePerson","inputString","parse","stepStyle","idx","clr","display","alignContent","map","ActivityIndicator","disabled","Lottie","Platform","OS","LottieStyle","source","LottieSource","loop","autoPlay","resizeMode","Image","ImageSource","ImageStyle","wrapper","slide","padding","slideOdd","titleOdd","textOdd","image","paddingTop","paddingBottom","borderColor","borderWidth","buttonText","Tutorial","showsButtons","showsPagination","View","StepOne","TutorialLang","SwipeImage","position","opacity","StepTwo","StepThree","StepFour","StepFive","StepSixth","component","TouchableOpacity","Config","activeOpacity","s","Home","setAmbiant","Audio","setIsEnabledAsync","Sound","createAsync","isLooping","sound","playAsync","useLocation","AlzheimApp","heading","textInput","paddingHorizontal","shadowOpacity","shadowRadius","shadowOffset","elevation","viewrow","flexDirection","flexWrap","input","setInput","isLoading","setIsLoading","loadPage","setLoadPage","confirmed","setConfirmed","redirect","setRedirect","setUsername","backHandler","BackHandler","addEventListener","remove","parseUsername","insertUsername","response","ChooseUsernameGIF","TextInput","underlineColorAndroid","value","placeholder","InterfaceLang","maxLength","onChangeText","animating","Loading","LoadingImage","HomeOrTutorial","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","TouchableScale","default","mod","index","componentProps","Component","bottomDivider","DefaultProfilePicture","rounded","Content","Title","Subtitle","Chevron","rightButton","minHeight","imageSuccess","leftButton","view","alignSelf","marginVertical","btnImport","btnSave","profilePicture","successPageTitle","Success","SuccessImage","close","Form","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","fsRead","setImage","leftIcon","label","errorStyle","renderErrorMessage","errorMessage","inputStyle","setFullname","setDescription","cb","Person","imgName","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","zIndex","topBanner","topImage","boldtext","subtitle","overflow","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","searchBar","searchInputStyle","SelectionMenu","search","setSearch","setIndex","SelectionMenuLang","btnText","setBtnTxt","active","setActive","swiper","useRef","regex","RegExp","$regex","list","LoadingBrain","current","scrollBy","SafeAreaView","ref","scrollEnabled","pagingEnabled","onIndexChanged","setTimeout","inputContainerStyle","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","QuizScore","SimonScore","DoubleScore","NoScore","Global","BestScoreByDay","ExportedProfile","ReturnList","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","load","setLoad","deletePerson","SimonDB","removeAsync","DictaphoneDB","DoubleDB","QuizDB","deleted","ActivitiesLang","Sharing","Alert","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","isPlaying","setIsPlaying","progress","setProgress","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","positionMillis","playableDurationMillis","variant","animation","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","getURI","folder","record","DictaphoneLang","created","deleteRecord","goBack","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","Head","RulesHead","TriesHead","Rules","TriesExplain","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","viewHelpPage","leaveButtonHelpPage","helpHead","helpStepHead","textTransform","helpStep","helpQuestionMark","SimonLogo","SimonLang","setTab","Game","start","setStart","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","QuestionMark","tab","pos","Create","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","GiveUpQuizTitle","GiveUpQuiz","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","EditedQuiz","QuizListRedirection","selectedQuizz","quizName","Questions","SuccessTitle","FailedTitle","join","SuccessQuizTitle","SuccessQuiz","fail","FailQuizTitle","FailQuiz","SaveContent","AddContent","SureCancelEdition","CustomHead","Custom","answersText","leaveButtonPlay","createButton","overlayDescriptionReference","ScrollViewSuccess","modalTitle","modalDescription","quizTitleInputContainer","quizTitleInput","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","QuizLogo","QuizLang","printFile","clearFile","pauseSound","playSound","QuestionList","quizEdit","newContent","quizEdition","Number","isInteger","questionId","tmp","setNewContent","setQuizEdit","setReload","reload","setEditedQuiz","contentList","setContent","pickOutQuestion","setEditContent","ScoreRatio","filter","parseInt","total","toFixed","QuizList","ViewQuizList","SuccessContent","FormQuizContent","answer","setAnswer","contentContainerStyle","setFileType","setFilename","setUri","mimeType","flexShrink","setQuestion","toLowerCase","setAnswers","addAnswer","badgeStyle","pickOutAnswer","ViewQuiz","newQuestion","setNewQuestion","editContent","editedQuiz","saveQuiz","concat","editedFile","buttonTop","mode","saveContent","pushContent","viewPage","CreateQuiz","createQuestion","setCreateQuestion","setName","modalConfirmation","setModalConfirmation","undefined","substring","ThinkingImage","quizLength","pickRandomQuizz","ThinkingLottie","setPlay","setCurrent","setFail","arr","shuffle","TrophyLottie","SadLottie","openAlertResultQuestion","SadImage","setMediaType","answerTrimedLowercase","answerQuestion","play","setQuiz","setRandom","rand","randomArrayElement","exclude","randNumber","RemaningTries","Reinit","TitleGiveUp","SureToGiveUp","BestDayScore","ScoreHead","ScoreHelp","hp","aspectRatio","RectoCard","wp","PlayingCard","VersoCard","IconCard","viewGame","buttonViewPlay","playButtons","DoubleLang","DoubleLogo","ambiantEnabled","ambiantSoundPlay","soundEnabled","setSoundEnabled","generateRandomPair","colors","icons","indexColor","indexIcon","Card","cardStyles","inPlay","inFound","show","ReturnCard","setFound","setShow","currentPlay","indexGame","playing","currentGameLength","nFound","setScore","prevScore","prevTries","endGame","bestScoreDay","failOverlay","element","newModel","giveUp","Double","setBestScoreDay","setAmbiantEnabled","bestDayScore","prevEnable","choosenSound","returnComponent","page","ActivitiesList","iconPosition","scoreRow","scoreRowSimon","scoreHeading","margin","quizScore","setQuizScore","horizontal","textStyle","valueSuffix","initialValue","delay","activeStrokeColor","radius","inActiveStrokeColor","inActiveStrokeOpacity","inActiveStrokeWidth","activeStrokeWidth","simonScore","setSimonScore","btnIndex","setBtnIndex","buttons","TotalScore","selectedIndex","global","days","item","highestToLowest","b","labels","datasets","fromZero","showValuesOnTopOfBars","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","printScore","doubleScore","setDoubleScore","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","unmountOnBlur","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","setPerson","BgSource","navTheme","DefaultTheme","background","TopImage","BackgroundImage","NavigationContainer","theme","defaultProps","allowFontScaling","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact"],"mappings":"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","file":"static/js/app.224b6d75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/question_mark.c1494184.gif\";","module.exports = __webpack_public_path__ + \"static/media/brain.abdab59b.gif\";","module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sad.bfdab12f.gif\";","module.exports = __webpack_public_path__ + \"static/media/applause.3560ad8b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/you_lose.e1f971d7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/alzheimapp_logo.e07c8c32.png\";","module.exports = __webpack_public_path__ + \"static/media/1.5ec5d57f.png\";","module.exports = __webpack_public_path__ + \"static/media/2.de882169.png\";","module.exports = __webpack_public_path__ + \"static/media/3.d9d4fbec.png\";","module.exports = __webpack_public_path__ + \"static/media/4.bf12d899.png\";","module.exports = __webpack_public_path__ + \"static/media/5.ec18db81.png\";","module.exports = __webpack_public_path__ + \"static/media/6.28b6e6fb.png\";","module.exports = __webpack_public_path__ + \"static/media/swipe-right.6dde9c7c.gif\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.097ce51b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.348cd96d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.5d28b463.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.acbb69fd.png\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.e46e92e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e82f415e.gif\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.af08ce07.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.d73909c9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fail.4f8cf1ae.mp3\";","module.exports = __webpack_public_path__ + \"static/media/play.25c902a7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.44546c82.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n}\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n}\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n}\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n}\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n}\n\nexport function reset() {\n    return AsyncStorage.clear();\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retourner sur le formulaire',\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet requise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? Il est possible {0} la donnée d'une personne et {1} dans un autre appareil !\",\n                boldText: [\"d'exporter\", \"d'importer\"],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can {0} a person's data and {1} it in another device!\",\n                boldText: ['export', 'import'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer {0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Select: \"Sélection des personnes\",\n        Import: \"Importer un profil\",\n        Introduction: \"Introduction\",\n        Source: \"Accès au code source\",\n        License: \"Code sous licence GPL v3.\\nCréation originale par Diyaeddine LAOUID.\",\n        Language: \"Changer la langue\",\n        Step1: \"Vérification du format ... \",\n        Step2: \"Vérification du format de l'identité ... \",\n        Step3: \"Vérification d'une personne similaire ...\",\n        Step4: \"Vérification des activités ...\",\n        Step5: \"Vérification des quiz ...\",\n        Step6: \"Vérification des jeux des pairs ...\",\n        Step7: \"Vérification du Simon ...\",\n        Step8: \"Vérification du Journal vocal ...\",\n        Step9: \"Création de la personne ...\",\n        Step10: \"Création des quiz ...\",\n        Step11: \"Création des jeux des pairs ...\",\n        Step12: \"Création du Simon ...\",\n        Step13: \"Création du Dictaphone ...\",\n        Step14: \"L'importation s'est déroulée sans encombre ! :-)\",\n        GoBack: \"Retour\",\n        InvalidFile: \"Le fichier a été supprimé du cache\",\n        InvalidPersonFile: \"Le fichier importé est invalide !\",\n        IncorrectPersonFile: \"L'identité de la personne est mal saisie !\",\n        ErrorChekingPerson: \"Une erreur est survenue au moment de la vérification de la personne dans le système ...\",\n        InvalidActivitiesLength: \"Le nombre d'activités dans le tableau du fichier est beaucoup trop grand.\",\n        InvalidQuizData: \"Les données du quiz sont incorrectes ...\",\n        InvalidLogData: \"Les données du dictaphone sont incorrectes ...\",\n        InvalidDoubleData: \"Les données du jeu des pairs sont incorrectes ...\",\n        InvalidSimonData: \"Les données du Simon sont incorrectes ...\",\n        \n    },\n    en: {\n        Select: \"Select a person\",\n        Import: \"Import a profil\",\n        Introduction: \"Introduction\",\n        Source: \"Source code on GitHub\",\n        License: \"Licensed GPL v3 source code.\\nOriginally created by Diyaeddine LAOUID.\",\n        Language: \"Change language\",\n        Step1: \"Format checking ... \",\n        Step2: \"Identity format checking ... \",\n        Step3: \"Checking if person already registered ...\",\n        Step4: \"Activities length checking ...\",\n        Step5: \"Quiz checking ...\",\n        Step6: \"Double Memory checking ...\",\n        Step7: \"Simon checking ...\",\n        Step8: \"Journal log checking ...\",\n        Step9: \"Person creation ...\",\n        Step10: \"Quiz creation ...\",\n        Step11: \"Double Memory creation ...\",\n        Step12: \"Simon Memory creation ...\",\n        Step13: \"Journal log creation ...\",\n        Step14: \"The person has been successfully imported! :-)\",\n        GoBack: \"Back\",\n        InvalidFile: \"The file has been deleted from the cache\",\n        InvalidPersonFile: \"The imported file is invalid!\",\n        IncorrectPersonFile: \"The format of the imported person is invalid!\",\n        ErrorChekingPerson: \"Error when checking if this person exists...\",\n        InvalidActivitiesLength: \"The activities length on the file array is too big\",\n        InvalidQuizData: \"The quiz datas are invalid...\",\n        InvalidLogData: \"The journal logs datas are invalid...\",\n        InvalidDoubleData: \"The double memory game datas are invalid...\",\n        InvalidSimonData: \"The Simon datas are invalid...\",\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        height: 100 + '%',\n        backgroundColor: '#355c7d',\n        alignItems: 'center'\n    },\n    header: {\n        marginTop: 10 + '%',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    logo: {\n        width: 130,\n        height: 130\n    },\n    menu: {\n        marginTop: 10 + '%',\n        flex: 1,\n        marginBottom: 20\n    },\n    button: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'white',\n        color: '#355c7d',\n        justifyContent: 'flex-start'\n    },\n    buttonContainer: {\n        borderRadius: 25,\n        alignItems: 'center',\n        marginBottom: 20\n    },\n    copyleft: {\n        marginTop: 10 + '%',\n        fontSize: 11,\n        color: 'white',\n        textAlign: 'center',\n        fontStyle: 'italic'\n    },\n    ErrorMessage: {\n        color: 'red',\n        fontWeight: 'bold',\n        textAlign:'center',\n        marginTop: 20,\n        marginHorizontal: 40\n    }\n});\n","import React from 'react';\nimport {\n    ScrollView,\n    Linking\n} from 'react-native';\n\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\nimport * as DocumentPicker from 'expo-document-picker';\n\nimport { lang as HomeLang } from '../../language/home';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    const navigate = useNavigate();\n\n    return (\n        <ScrollView style={styles.menu}>\n            <Button\n                title={HomeLang[props.lang].Select}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', textAlign: 'center' }}\n                containerStyle={styles.buttonContainer}\n                icon={\n                    <Icon\n                        name={'person-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    await props.ambiant.unloadAsync()\n                    navigate('/selection', {\n                        state: { username: props.username, lang: props.lang, setLang: props.setLang }\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Import}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'person-add-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => {\n                    DocumentPicker.getDocumentAsync({multiple: false}).then( e => {\n                        props.setImportFile(e.uri);\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Language}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'world-o'}\n                        type={'fontisto'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                onPress={() => props.setLang(prev => prev == 'fr' ? 'en' : 'fr')}\n                raised\n            />\n            <Button\n                title={HomeLang[props.lang].Introduction}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={[styles.buttonContainer, {marginBottom: 20}]}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    await props.ambiant.unloadAsync()\n                    navigate('/tutorial');\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Source}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'logo-github'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => Linking.openURL('https://github.com/dilaouid/AlzheimApp')}\n            />\n            <Text style={styles.copyleft} >{HomeLang[props.lang].License}</Text>\n        </ScrollView>\n    );\n}\n","export const encrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let encryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        encryptedString += String.fromCharCode( string.charCodeAt(i) - key.charCodeAt(j) - key.length );\n    }\n    return (encryptedString);\n};\n\nexport const decrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let decryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        decryptedString += String.fromCharCode( string.charCodeAt(i) + key.charCodeAt(j) + key.length );\n    }\n    return (decryptedString);\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nconst createQuizContent = async (personId, el) => {\n    el.id = uuidv4();\n    el.score = [{personId: personId, success: 0, failed: 0}];\n    if (['audio', 'image'].includes(el.fileType)) {\n        await uploadQuizFile(el);\n    }\n};\n\nconst uploadQuizFile = async (el) => {\n    const filename = `${uuidv4()}${el.fileType == 'audio' ? '.m4a' : '.png'}`;\n    const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n    await FileSystem.copyAsync({\n        from: el.uri,\n        to: `${path}${filename}`\n    });\n    await FileSystem.deleteAsync(el.uri);\n    el.uri = `${path}${filename}`;\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        await createQuizContent(personId, el);\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport async function updateScore(personId, quizId, contentId, success) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    const contentIndex = quiz[0].content.findIndex(el => el.id == contentId );\n    const scoreIndex = quiz[0].content[contentIndex].score.findIndex(el => el.personId = personId);\n    if (success) quiz[0].content[contentIndex].score[scoreIndex].success++\n    else quiz[0].content[contentIndex].score[scoreIndex].failed++\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function deleteId(personId, quizId) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n};\n\nexport async function deleteQuestion(quizId, questionId) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    const content = quiz[0].content;\n    const contentIndex = content.findIndex(el => el.id == questionId );\n    if (['audio', 'image'].includes(content[contentIndex]))\n        await FileSystem.deleteAsync(content.uri);\n    quiz[0].content = content.splice(0, contentIndex);\n    return db.updateAsync({_id: quizId}, {...quiz[0]})\n};\n\nexport async function getById(quizId) {\n    return db.findAsync({ _id: quizId }, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n};\n\nexport async function saveQuiz(personId, quizId, content) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    if (!quiz) return;\n    for (let i = 0; i < content.length; i++) {\n        const el = content[i];\n        if (!el.id)\n            await createQuizContent(personId, el);\n        else if (el.id && el.editedFile) {\n            await uploadQuizFile(el);\n            delete el.editedFile;\n        }\n    }\n    quiz[0].content = content;\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function reset() {\n    return db.removeAsync({}, { multi: true });\n};\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DoubleSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nexport const randomArrayElement = (exclude, min, max) => {\n    randNumber = randomNumber(min, max);\n    if (randNumber == exclude)\n        return randomArrayElement(exclude, min, max);\n    return randNumber;\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\nimport { db as QuizDB } from './quizApi'\nimport { db as DoubleDB } from './doubleApi';\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await DoubleDB.removeAsync({ personId: id });\n    await QuizDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return db.removeAsync({ _id: id });\n};\n\nexport async function reset() {\n    return FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(async res => {\n        await SimonDB.removeAsync({}, { multi: true });\n        await QuizDB.removeAsync({}, { multi: true });\n        await DictaphoneDB.removeAsync({}, { multi: true });\n        return db.removeAsync({}, { multi: true });\n    });\n};","/**\n * Model is like:\n * {\n *      personId: 'xxx',\n *      name: 'xxx',\n *      description: 'xxx',\n *      picture: 'b64' || null,\n *      activities: {\n *          quiz: [\n *              // all quizz contents //\n *          ],\n *          log: [\n *              // all logs contents\n *          ],\n *          double: [\n *              // all double contents\n *          ],\n *          simon: [\n *              // all simon score\n *          ]\n *      }\n * }\n */\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as dilacrypt from './dilacrypt';\n\nimport { db as personAPI } from '../data/personApi';\nimport { db as dictaphoneAPI } from '../data/dictaphoneApi';\nimport { db as simonAPI } from '../data/simonApi';\nimport { db as quizAPI } from '../data/quizApi';\nimport { db as doubleAPI } from '../data/doubleApi';\n\nconst isValidDate = (d) => {\n    let n = new Date(d);\n    return n instanceof Date && !isNaN(n);\n};\n\nconst fileToBase64 = async (uri) => {\n    return await FileSystem.readAsStringAsync(uri, {\n        encoding: 'base64',\n    });\n};\n\nconst formatQuiz = async (quiz) => {\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < el.content.length; j++) {\n            const e = el.content[j];\n            if (e.uri)\n                e.uri = await fileToBase64(e.uri);\n        }\n    }\n    return (quiz);\n};\n\nconst formatLog = async (log) => {\n    for (let i = 0; i < log.length; i++) {\n        const el = log[i];\n        el.path = await fileToBase64(el.path);\n    }\n    return (log);\n};\n\nconst scoreVerification = (el, personId) => {\n    if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n    if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    if (!el.hasOwnProperty('score') || typeof el.score !== 'number') return false;\n    if (!el.hasOwnProperty('dailyScoreBeaten') || typeof el.dailyScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('globalScoreBeaten') || typeof el.globalScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n    return true;\n};\n\n\n\nexport const checkPersonInformations = (person) => {\n    const keys = ['_id', 'description', 'fullname', 'picture', 'activities'];\n    for (let i = 0; i < keys.length; i++) {\n        const el = keys[i];\n        if (person.hasOwnProperty(el) === false)\n            return false;\n    }\n    return true;\n};\n\nexport const checkPersonInformationsLength = (person) => {\n    return person.fullname.length <= 25 && person.description.length <= 100;\n};\n\nexport const checkPersonExists = async (personId) => {\n    return await personAPI.findAsync({ _id: personId });\n}\n\nexport const checkQuiz = async (quiz, personId) => {\n    const quizKeys = ['name', 'content', 'personId', '_id'];\n    const contentKeys = ['answers', 'question', 'id', 'score']\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < quizKeys.length; j++) {\n            const k = quizKeys[j];\n            if (el.hasOwnProperty(k) === false) return false;\n        }\n        for (let d = 0; d < el.content.length; d++) {\n            const content = el.content[d];\n            if (content.hasOwnProperty('uri') || content.hasOwnProperty('filename') || content.hasOwnProperty('fileType')) {\n                if (!content.hasOwnProperty('uri')) return false;\n                else if (!content.hasOwnProperty('filename')) return false;\n                else if (!content.hasOwnProperty('fileType')) return false;\n            }\n            for (let j = 0; j < contentKeys.length; j++) {\n                const l = contentKeys[j];\n                if (content.hasOwnProperty(l) === false) return false;\n            }\n            if (typeof content.answers !== 'object' || content.answers?.length === 0) return false;\n            if (typeof content.question !== 'string' || typeof content.question?.length > 23) return false;\n            if (typeof content.score !== 'object' || content.answers?.length === 0) return false;\n            let foundInScore = false\n            for (let n = 0; n < content.score.length; n++) {\n                const score = content.score[n];\n                if (score.personId === personId) foundInScore = true;\n                if (!score.hasOwnProperty('personId')) return false;\n                if (!score.hasOwnProperty('success') || typeof score.success !== 'number') return false;\n                if (!score.hasOwnProperty('failed') || typeof score.success !== 'number') return false;\n            }\n            if (!foundInScore) return false;\n        }\n    }\n    return true;\n};\n\nexport const checkDouble = (double, personId) => {\n    if (typeof double !== 'object') return false;\n    for (let i = 0; i < double.length; i++)\n        if (!scoreVerification(double[i], personId)) return false;\n    return true;\n};\n\nexport const checkSimon = (simon, personId) => {\n    if (typeof simon !== 'object') return false;\n    for (let i = 0; i < simon.length; i++)\n        if (!scoreVerification(simon[i], personId)) return false;\n    return true;\n};\n\nexport const checkDictaphone = (dictaphone, personId) => {\n    if (typeof dictaphone !== 'object') return false;\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n        if (!el.hasOwnProperty('name') || typeof el.name !== 'string' || el.name.length < 2) return false;\n        if (!el.hasOwnProperty('path') || typeof el.path !== 'string' || el.path.length < 100) return false;\n        if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n        if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    }\n    return true;\n};\n\nexport const importPerson = async (person, exists) => {\n\n    if (exists === false) {\n        await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${person._id}`, {intermediates: true});\n    }\n\n    let picture = null;\n    if (person.picture) {\n        picture = uuidv4();\n        const path = `${FileSystem.documentDirectory}persons/${person._id}/pp`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        await FileSystem.writeAsStringAsync(path + `/${picture}.jpg`, person.picture, { encoding: 'base64' }).then(el => {\n            picture = path + `/${picture}.jpg`;\n        }).catch(err => {\n            picture = null;\n        });\n    }\n\n    if (exists === false)\n        return personAPI.insertAsync(\n            {\n                _id: person._id,\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        );\n    else\n        return personAPI.updateAsync({_id: person._id}, {\n            $set: {\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        });\n};\n\nexport const importQuiz = async (quiz) => {\n    let res = true;\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        const path = `${FileSystem.documentDirectory}persons/${el.personId}/quiz`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        for (let j = 0; j < quiz[i].content.length; j++) {\n            const e = quiz[i].content[j];\n            if (e.hasOwnProperty('uri')) {\n                // Import and write file\n                let filename = uuidv4();\n                let filePath;\n                await FileSystem.writeAsStringAsync(path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`, e.uri, { encoding: 'base64' }).then(el => {\n                    filePath = path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`;\n                    filename = filePath;\n                    e.uri = filePath;\n                }).catch(err => {\n                    filename = null;\n                    e.uri = null;\n                });\n            }\n        }\n        const quizFindAsync = await quizAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        const quizExists = quizFindAsync.length > 0;\n        if (quizExists) {\n            await quizAPI.updateAsync( {_id: el._id}, {\n                $set: {\n                    name: el.name,\n                    content: el.content\n                }\n            }).catch(err => {\n                res = false;\n            })\n        } else {\n            await quizAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importDouble = async (double) => {\n    let res = true;\n    for (let i = 0; i < double.length; i++) {\n        const el = double[i];\n        const doubleExists = await doubleAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (doubleExists.length === 0) {\n            await doubleAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importSimon = async (simon) => {\n    let res = true;\n    for (let i = 0; i < simon.length; i++) {\n        const el = simon[i];\n        const simonExists = await simonAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (simonExists.length === 0) {\n            await simonAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importLog = async (dictaphone, personId) => {\n    let res = true;\n    const path = `${FileSystem.documentDirectory}persons/${personId}/recordings`;\n    await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n        console.log('[!] Directory already exists');\n    });\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        const logExists = await dictaphoneAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (logExists.length === 0) {\n            el.date = new Date(el.date);\n            let filename = uuidv4();\n            let filePath;\n            await FileSystem.writeAsStringAsync(path + `/${filename}.m4a`, el.path, { encoding: 'base64' }).then(e => {\n                filePath = path + `/${filename}.m4a`;\n                filename = filePath;\n                el.path = filePath;\n            }).catch(err => {\n                console.log(err);\n                filename = null;\n                el.path = null;\n            });\n            await dictaphoneAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const writeDataFile = async (fullname, content) => {\n    let fileUri = FileSystem.documentDirectory + `${fullname}.alz`;\n    return await FileSystem.writeAsStringAsync(fileUri, content).catch(err => {\n        console.log(err);\n    }).then( (e) => {\n        return (fileUri);\n    });\n};\n\nexport const exportPerson = async (personId, key) => {\n    const personFind = await personAPI.findAsync({ _id: personId });\n    if (!personFind) return ('PERSON_NOT_FOUND');\n    const person = personFind[0];\n    if (!person._id || !person.fullname) return ('INVALID_PERSON');\n    const personData = {\n        _id: person._id,\n        description: person.description,\n        fullname: person.fullname,\n        picture: person.picture ? await fileToBase64(person.picture) : null\n    };\n    const simonData = await simonAPI.findAsync({ personId: personId });\n    const doubleData = await doubleAPI.findAsync({ personId: personId });\n    const quiz = await quizAPI.findAsync({ personId: personId });\n    const quizData = quiz ? await formatQuiz(quiz) : []; // converting files into base64 here\n\n    const dictaphone = await dictaphoneAPI.findAsync({ personId: personId });\n    const dictaphoneData = dictaphone ? await formatLog(dictaphone) : []; // converting files into base64 here\n\n    const result = JSON.stringify({\n        _id: personData._id,\n        description: personData.description,\n        fullname: personData.fullname,\n        picture: personData.picture,\n        activities: {\n            quiz: quizData,\n            double: doubleData,\n            simon: simonData,\n            dictaphone: dictaphoneData\n        }\n    });\n    const uri = await writeDataFile(personData.fullname, key ? dilacrypt.encrypt(result, key) : result);\n    return (uri);\n};","import React, { useEffect, useState } from 'react';\nimport {\n    ActivityIndicator,\n    ScrollView\n} from 'react-native';\n\nimport { Text, Button } from 'react-native-elements';\n\nimport { lang as HomeLang } from '../../language/home';\nimport * as FileSystem from 'expo-file-system';\nimport * as dataImport from '../../utils/share'\n\nimport styles from './styles';\n\nexport default function ImportData(props) {\n    const [step, setStep] = useState(1);\n    const [error, setError] = useState();\n    \n    useEffect( async () => {\n        try {\n\n            // Import and check file data\n            const content = await FileSystem.readAsStringAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidFile;\n            });\n            const parsed = parseJSON(content);\n            if (!parsed) throw HomeLang[props.lang].InvalidPersonFile;\n            if (typeof parsed !== 'object' || !parsed._id)\n                throw HomeLang[props.lang].InvalidPersonFile;\n\n            // Checking the personal infos\n            setStep(2);\n            if (dataImport.checkPersonInformations(parsed) === false)\n                throw HomeLang[props.lang].InvalidPersonFile;\n            if (dataImport.checkPersonInformationsLength(parsed) === false)\n                throw HomeLang[props.lang].IncorrectPersonFile;\n\n            // Checking if this userId is registered in the local db\n            setStep(3);\n            const found = await dataImport.checkPersonExists(parsed._id);\n            \n            // Checking activities length\n            setStep(4);\n            if (parsed.activities.length > 4) throw HomeLang[props.lang].InvalidActivitiesLength;\n\n            // Checking quiz format\n            setStep(5);\n            if (await dataImport.checkQuiz(parsed.activities.quiz, parsed._id) === false) throw HomeLang[props.lang].InvalidQuizData;\n\n            // Checking double format\n            setStep(6);\n            if (await dataImport.checkDouble(parsed.activities.double, parsed._id) === false) throw HomeLang[props.lang].InvalidDoubleData;\n\n            // Checking simon format\n            setStep(7);\n            if (await dataImport.checkSimon(parsed.activities.simon, parsed._id) === false) throw HomeLang[props.lang].InvalidSimonData;\n      \n            // Checking dictaphone format\n            setStep(8);\n            if (await dataImport.checkDictaphone(parsed.activities.dictaphone, parsed._id) === false) throw HomeLang[props.lang].InvalidLogData;\n\n            // <! -------- Creation process starts ---------- !>\n\n            // Person creation\n            setStep(9);\n            dataImport.importPerson(parsed, found.length > 0).catch( (err) => {\n                throw HomeLang[props.lang].CannotCreatePerson;\n            });\n\n            // Quiz creation\n            setStep(10);\n            dataImport.importQuiz(parsed.activities.quiz).catch(err => {\n                throw HomeLang[props.lang].InvalidQuizData;\n            });\n\n            // Double creation\n            setStep(11);\n            dataImport.importDouble(parsed.activities.double).catch(err => {\n                throw HomeLang[props.lang].InvalidDoubleData;\n            });\n\n            // Simon creation\n            setStep(12);\n            dataImport.importSimon(parsed.activities.simon).catch(err => {\n                throw HomeLang[props.lang].InvalidSimonData;\n            });\n\n            // Journal log creation\n            setStep(13);\n            dataImport.importLog(parsed.activities.dictaphone, parsed._id).catch(err => {\n                throw HomeLang[props.lang].InvalidLogData;\n            });\n\n            // SUCCESS !!\n            setStep(14);\n\n            await FileSystem.deleteAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidPersonFile;\n            });\n\n\n        } catch (e) {\n            setError(e);\n            return false;\n            // props.setImportFile(null);\n        }\n    }, [])\n\n    const parseJSON = (inputString) => {\n        if (inputString) {\n          try {\n            return JSON.parse(inputString);\n          } catch (e) {\n            return false;\n          }\n        }\n    };\n\n    const stepStyle = (idx) => {\n        let clr = idx === step ? 'white' : '#89ff91';\n        if (error && idx === step) clr = 'red';\n        if (step === 14) clr = '#89ff91';\n        return {\n            color: clr,\n            fontStyle: idx === step || error ? 'italic' : 'normal',\n            marginBottom: idx === 13 ? 30 : 0,\n            display: step >= idx ? 'flex' : 'none',\n            alignContent: 'center',\n            textAlign: 'center',\n            fontSize: idx === step ? 14 : 9\n        }\n    } \n\n    const printActivity = (idx) => {\n        if (idx === step && !error && step !== 14)\n            return <ActivityIndicator color={'white'} size={'small'} />\n        return <></>\n    };\n\n    return (\n        <ScrollView style={styles.menu}>\n            { [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14].map( (e, i) => {\n                return <Text key={i} style={ stepStyle(e) }> { HomeLang[props.lang]['Step' + e] } { printActivity(e) }</Text>\n            }) }\n            { error ? <Text style={styles.ErrorMessage}>{ error }</Text> :  <></> }\n            <Button disabled={!error && step < 14} containerStyle={{marginTop: 150, borderRadius: 15}} title={HomeLang[props.lang].GoBack} onPress={() => props.setImportFile(null)}/>\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    slideOdd: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#355c7d',\n    },\n    title: {\n        color: 'black',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center',\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center',\n    },\n    titleOdd: {\n        color: 'white',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center',\n    },\n    textOdd: {\n        color: 'white',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center',\n    },\n    image: {\n        flex: 3,\n        width: 100 + '%',\n        height: 400,\n    },\n    buttonContainer: {\n        flex: 2,\n        marginTop: -40,\n    },\n    button: {\n        marginTop: 10,\n        paddingTop: 15,\n        paddingBottom: 15,\n        marginLeft: 30,\n        marginRight: 30,\n        backgroundColor: '#6396c0',\n        borderRadius: 10,\n        borderColor: 'white',\n        borderWidth: 1\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        fontWeight: 'bold'\n    },\n});\n","import React from 'react';\nimport { Text, View, Image, TouchableOpacity } from 'react-native';\n\nimport { Link } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport SwipeImage from '../../assets/img/tutorial/swipe-right.gif';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport Lottie from '../../components/utils/Lottie';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\n\nexport default function Tutorial(props) {\n    const LottieSource = require('../../assets/lottie/swipe-right.json');\n\n    return (\n        <>\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                    <Lottie\n                        LottieSource={LottieSource}\n                        ImageSource={SwipeImage}\n                        LottieStyle={{\n                            position: 'absolute',\n                            height: 80,\n                            marginTop: 280,\n                            marginLeft: 80,\n                            opacity: 0.8,\n                        }}\n                        ImageStyle={{\n                            position: 'absolute',\n                            height: 80,\n                            marginTop: 280,\n                            marginLeft: 80,\n                            opacity: 0.8,\n                        }}\n                    />\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Link\n                            to=\"/username\"\n                            component={TouchableOpacity}\n                            style={styles.button}\n                            onPress={(e) => {\n                                Config.SawTutorial(true);\n                            }}\n                            activeOpacity={0.5}s\n                            state={\n                                { setLang: props.setLang }\n                            }\n                        >\n                            <Text style={styles.buttonText}>\n                                {' '}\n                                {TutorialLang[props.lang].LastStepButton}{' '}\n                            </Text>\n                        </Link>\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Image\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\n\nimport { useLocation } from 'react-router-native';\n\nimport AlzheimApp from '../../assets/img/alzheimapp_logo.png';\nimport Menu from './Menu'\nimport ImportData from './ImportData';\nimport Tutorial from '../Tutorial';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [importFile, setImportFile] = useState();\n    const [ambiant, setAmbiant] = useState();\n    Audio.setIsEnabledAsync(true);\n\n    useEffect( async () => {\n        if (ambiant) return;\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by MCOCHET - check his soundcloud here: https://soundcloud.com/mcochet\n            require('../../assets/sound/ambiant.mp3'),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n    }, []);\n\n    const state = useLocation()?.state;\n\n    const username = props.username || state?.username;\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Image source={AlzheimApp} style={styles.logo} resizeMode={'cover'} />\n            </View>\n            { importFile ?\n                <ImportData lang={props.lang} importFile={importFile} setImportFile={setImportFile} /> :\n                <Menu lang={props.lang} username={username} setLang={props.setLang} setImportFile={setImportFile} ambiant={ambiant} />\n            }\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 40,\n        borderColor: 'gray',\n        borderRadius: 20,\n        paddingHorizontal: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        elevation: 2,\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n    },\n    buttonText: {\n        paddingTop: 10,\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    TouchableOpacity,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername as insertUsername, SawTutorial, getUsername } from '../../data/configApi';\n\nimport Home from '../Home';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [loadPage, setLoadPage] = useState(true);\n    const [confirmed, setConfirmed] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const [username, setUsername] = useState('');\n\n    useEffect(() => {\n        getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    setUsername(res[0].username);\n                    setRedirect(true);\n                }\n                setLoadPage(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoadPage(false);\n            });\n    }, []);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            insertUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setUsername(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (redirect)\n        return <Home lang={props.lang} username={username} setLang={props.setLang} />\n\n    if (loadPage)\n        return <View style={styles.container}></View>\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <TouchableOpacity\n                        style={styles.button}\n                        activeOpacity={0.5}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                    >\n                        <Text style={styles.buttonText}>\n                            {' '}\n                            {isLoading ? (\n                                <ActivityIndicator\n                                    color=\"white\"\n                                    size=\"small\"\n                                    animating={true}\n                                />\n                            ) : (\n                                'OK'\n                            )}\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        );\n    } else {\n        return <Home lang={props.lang} username={username} setLang={props.setLang} />;\n    }\n}\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} setLang={props.setLang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} setLang={props.setLang} />;\n    }\n    return <Home lang={props.lang} username={props.username} setLang={props.setLang} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to produce today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport { View, Text, Platform } from 'react-native';\nimport { Button, Image } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/selection/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/selection/addedUser.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <Button\n                title={InterfaceLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0)\n                personId = result._id;\n            await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${personId}`, {intermediates: true});\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n        zIndex: 1,\n    },\n    wrapper: {\n        marginTop: 20,\n        textAlign: 'center',\n        alignItems: 'center',\n        zIndex: 1,\n    },\n    topBanner: {\n        backgroundColor:'#355c7d'\n    },\n    topImage: {\n        // flex: 1,\n        height: 70,\n        //marginTop: -10,\n    },\n    heading: {\n        marginTop: 10,\n        fontSize: 20,\n        zIndex: 2,\n        color: 'white'\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    subtitle: {\n        textAlign: 'center',\n        color: 'white'\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: 10,\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1,\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Text,\n    View,\n    Image,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    BackHandler,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB } from 'react-native-elements';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport LoadingBrain from '../../assets/img/activities/brain.gif';\nimport { lang as SelectionMenuLang } from '../../language/selection';\nimport Rows from '../../components/selection/Rows';\nimport CreatePerson from '../../components/selection/PersonCreation/CreatePerson';\n\nimport Lottie from '../../components/utils/Lottie';\n\nimport * as Person from '../../data/personApi';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function SelectionMenu(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        SelectionMenuLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const swiper = useRef(null);\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n    const setLang = state?.setLang || props.setLang;\n\n    useEffect(() => {\n        Audio.setIsEnabledAsync(false);\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - index, true);\n    };\n\n    const changeIndex = (idx) => {\n        setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                setBtnTxt(SelectionMenuLang[lang].AddAPerson);\n            } else if (idx === 1) {\n                setBtnTxt(SelectionMenuLang[lang].ReturnToList);\n            }\n            setActive(true);\n        }, 400);\n    };\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 305,\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home', {\n                    state: { username: username, setLang: setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n            <View style={styles.wrapper}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={LoadingBrain}\n                    LottieStyle={styles.topImage}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[lang].Hello(username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (active === false) {\n                            return;\n                        }\n                        setActive(false);\n                        setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={SelectionMenuLang[lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    setSearch(e);\n                                }}\n                                value={search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {persons && persons.length > 0 ? (\n                                printRows(persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={persons}\n                                setPersons={setPersons}\n                                lang={lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: 'white' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        Home: 'Accueil',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n        QuizScore: \"Score des quiz\",\n        SimonScore: \"Score du Simon\",\n        DoubleScore: \"Score du jeu des pairs\",\n        NoScore: \"Aucun score enregistré pour cette activité...\",\n        Success: 'réussite',\n        Global: \"Vue d'ensemble\",\n        BestScoreByDay: 'Meilleur score du jour',\n        ExportedProfile: 'Profil exporté',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        Home: 'Home',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n        QuizScore: \"Quiz Score\",\n        SimonScore: \"Simon Score\",\n        DoubleScore: \"Double Memory Score\",\n        NoScore: \"No score registered for this activity...\",\n        Success: 'success',\n        Global: \"Global view\",\n        BestScoreByDay: 'Best score by day',\n        ExportedProfile: 'Profile exported',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\n\nimport { ScrollView, Alert, View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/selection/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\nimport { exportPerson } from '../../../utils/share';\nimport * as Sharing from 'expo-sharing';\n\nimport * as FileSystem from 'expo-file-system';\n\nimport styles from './styles';\nimport Form from '../../../components/selection/PersonCreation/Form';\nimport { ActivityIndicator } from 'react-native';\n\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n    const [load, setLoad] = useState(false);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname(props.person.fullname);\n        setUriPreview(props.person.picture);\n        setImage('');\n        setDescription(props.person.description);\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/selection');\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.username),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: load ? '' : 'share-alt',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={load ? <ActivityIndicator color={'white'} size={'small'} /> : ActivitiesLang[props.lang]?.ShareProfile}\n                        onPress={async () => {\n                            setLoad(true)\n                            console.log('[~] Pressing export button');\n                            console.log('[+] Exporting person...');\n                            const uri = await exportPerson(props.personId, null);\n                            console.log('[+] Exported person! uri is: ' + uri);\n                            Sharing.shareAsync(uri).then( async (e) => {\n                                await FileSystem.deleteAsync(uri);\n                                setLoad(false);\n                            });\n                        }}\n                        disabled={load}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/selection', {\n                                state: { username: props.username, lang: props.lang }\n                            });\n                        }}\n                    />\n                </ScrollView>\n            ) : (\n                <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => setEdit(false)}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </ScrollView>\n            )}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync().then( () => {\n                console.log('[+] Permission granted!');\n            })\n            .catch(e => {\n                console.error(e);\n            });            \n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const goBack = async () => {\n        if (recording) await recording?.stopAndUnloadAsync();\n        stopPlayingSounds();\n        props.setPage(0);\n    }\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            if (el) el?.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                    <Button\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'caret-back-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        buttonStyle={styles.recordButton}\n                        title={{}}\n                        titleStyle={styles.titleButton}\n                        onPress={() => goBack()}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <View style={styles.actionButtonsView}>\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n                <Button\n                    containerStyle={styles.actionButtons}\n                    icon={{\n                        name: 'caret-back-outline',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={{}}\n                    titleStyle={styles.titleButton}\n                    onPress={() => goBack()}\n                />\n                </View>\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n\n\n\n\n        // Help section\n        Head: \"Le Simon, comment ça marche ?\",\n        RulesHead: \"Les règles\",\n        TriesHead: \"Les essais\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu Simon est un {0} de forme circulaire comportant quatre gros boutons de couleurs différentes: rouge, vert, jaune et bleu.\\n\\nLe jeu {1} une des quatres couleurs et {2} toujours associé à cette couleur. Le joueur doit alors {3}.\\n\\nLe jeu {4}, puis {5} une nouvelle couleur. Le jour doit reproduire cette nouvelle séquence. Chaque fois que le joueur reproduit correctement la séquence, le jeu ajoute une nouvelle couleur.`,\n                boldText: ['jeu de mémoire', 'éclaire', 'produit un son', \"appuyer sur la touche de la couleur qui vient de s'allumer\", 'répète la même couleur et le même son', 'ajoute'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois que vous ratez une séquence, vous {0}. Au cours d'une partie, vous avez le droit à seulement {1}.\\n\\nUne fois les quatre erreurs faites, ou alors lorsque vous {2}, votre score est compatibilisé en fonction du nombre de touches dans la séquence actuelle.\\n\\nChaque jour, {3}.`,\n                boldText: ['perdez un essai', 'quatre erreurs', 'abandonnez la partie en cours', 'votre score journalier est remit à zéro'],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n\n\n\n\n        // Help section\n        Head: `The Simon, how does it works?`,\n        RulesHead: \"The rules\",\n        TriesHead: \"The tries\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The Simon is a circular shaped {0} with four different colored buttons: red, green, yellow and blue.\\n\\nThe game {1} one of the four colors and {2} always associated to this color. The player shall {3}.\\n\\nThe game {4}, then {5} another color. The player will have to reproduces this sequence. Each time the player successfully reproduces the sequence, the game adds another color in this sequence.`,\n                boldText: ['memory game', 'lighten', 'produces a sound', \"press the colored button which has just turned on\", 'repeat the same color with the same sound', 'add'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `Each time you fail a sequence, you {0}. In a game, you are allowed up to {1}.\\n\\nOnce the four fails made, or when you {2}, you will have the number of elements in the current sequence saved as your score.\\n\\nEach day, {3}.`,\n                boldText: ['lose a try', 'four maximum fails', 'give up the current game', 'your daily score is reset to zero'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        paddingTop: 20,\n        flex: 1,\n        alignItems: 'center'\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        // flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        //flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    // Help section\n    viewHelpPage: {\n        marginTop: -20,\n        backgroundColor: 'white',\n        width: 100 + '%',\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .4,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate, dailyScore < order.length - 1, bestScore < order.length - 1);\n        setCanPlay(false);\n        setSuccess(true);\n        const path = dailyScore < order.length - 1 ? require(`../../../assets/sound/global/applause.mp3`) : require(`../../../assets/sound/global/you_lose.mp3`);\n        const { sound } = await Audio.Sound.createAsync(path);\n        props.setSound(sound);\n        sound.playAsync();\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            <Overlay\n                visible={success}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => setSuccess(false)}\n                ModalComponent={Modal}\n            >\n                {scoreBeaten ? successOverlay() : failOverlay()}\n                <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            retryGame();\n                        }}\n                        title={SimonLang[props.lang].Retry}\n                        containerStyle={{\n                            borderRadius: 13,\n                            marginRight: 10,\n                        }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setTab(0);\n                        }}\n                        title={SimonLang[props.lang].Exit}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React from 'react';\nimport { View, ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView>\n                <Button\n                    title={SimonLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{SimonLang[props.lang].Head}</Text>\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].Rules()}</Text>\n\n                \n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].TriesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].TriesExplain()}</Text>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\nimport Help from './Help';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr, pos) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: i == pos ? color : '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        Cancel: 'Annuler',\n        GoBack: \"Oui, j'annule l'édition du quiz\",\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Abandonner le quiz\",\n        GiveUpQuiz: \"Êtes-vous sûr de vouloir abandonner ce quiz? Le score restera enregistré.\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        EditedQuiz: \"Quiz modifié avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Bien joué !! 😄\",\n        Success: \"Bien joué ! C'est la bonne réponse !! Vous pouvez maintenant passer à la suite !\",\n        FailedTitle: \"Dommage... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Dommage, mais ce n'était pas la bonne réponse ! Les réponses possibles étaient: ${answersText}.`\n        },\n        SuccessQuizTitle: \"Haut la main !\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Fantastique !! Vous avez réussi ce quiz ! Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Dommage... Vous avez raté ce quiz ! ... Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Sauvegarder le quiz',\n        SaveContent: \"Sauvegarder la question\",\n        AddContent: \"Ajouter la question\",\n        SureCancelEdition: \"Êtes-vous sûr de bien vouloir abandonner l'édition de ce quiz? Vous ne pourrez pas récupérer vos modifications.\",\n\n        // Help page related\n        Head: 'Le quiz, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        CustomHead: \"Personnalisation\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Les règles du quiz sont basiques: il y a des questions {0}, et le joueur doit y répondre. Il peut y avoir {1} réponses possibles, une bonne réponse et c'est un point ajouté au score.\\n\\nIl n'y a pas de perte de points suite à une mauvaise réponse.`,\n                boldText: [\"facultativement accompagnées d'une image ou d'un son\", \"plusieurs\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `Il n'y a pas de quiz par défaut. C'est à vous d'en {0} et de les {1} à votre guise !\\nPour cela, vous devez vous rendre dans la partie \"{2}\".\\n\\nVous aurez là la liste des quiz que vous avez préalablement crée. Si vous n'en avez encore créé aucun, façonnez votre premier quiz avec le bouton \"{3}\".\\n\\nIci vous pourrez ajouter des question avec le bouton \"{4}\". Il vous est demandé {5} (facultatif), qui correspond à un son ou une image pour illustrer votre question.\\n\\nEnsuite, vous devez {6}. Ce sera cette question qui sera ensuite demandée au joueur.\\n\\nEt enfin, {7}. Une fois une réponse valide renseignée, cliquez sur le symbole {8} à côté, et votre réponse est ajoutée à la liste des réponses valides à la question. Vous pouvez en avoir 10 maximum.\\n\\nSi vous avez fait une erreur sur une des réponses, {9} pour la retirer de la liste.\\n\\nUne fois tous les éléments de la question renseignées, cliquez sur \"{10}\" au dessus pour enregistrer la question et retourner à la liste des questions précédemment crées. Ajoutez-en autant que vous voulez pour un quiz.\\n\\nVous pouvez également {11}.\\n\\nUne fois le quiz complet, cliquez sur \"{12}\", et voilà ! Renseignez le nom de ce quiz et c'est terminé, le quiz est désormais jouable !`,\n                boldText: [\"créer\",\n                    \"personnaliser\",\n                    \"Voir les quiz\",\n                    \"Créer un quiz\",\n                    \"Ajouter une question\",\n                    \"d'importer un fichier de référence\",\n                    \"renseigner la question\",\n                    \"ajouter les réponses éventuelles\",\n                    \"( + )\",\n                    \"cliquez simplement dessus\",\n                    \"Valider\",\n                    \"cliquer sur une question pour la modifier\",\n                    \"Terminer la création\"\n                ],\n            });\n        }\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizzes',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        Cancel: 'Cancel',\n        GoBack: 'Yes, I want to go back',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'of success',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Submit\",\n        GiveUpQuizTitle: \"Give up\",\n        GiveUpQuiz: \"Are you sure to give up this quiz? The score will be saved.\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        EditedQuiz: \"Quiz successfuly edited!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Well played!! 😄\",\n        Success: \"Well played! That's the good answer!! You can now go to the next question!\",\n        FailedTitle: \"Oops... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Oops, that's not a valid answer... the valid answer${answers.length > 0 ? 's were' : ' was'} : ${answersText}.`\n        },\n        SuccessQuizTitle: \"Easy peasy!\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Congratulations!! You won this quiz! Your score is for {0} good answer(s) for {1} mistake!',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Better next time! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: \"It's alright... You failed this quiz!... Your score is for {0} good answer(s) for {1} mistake!\",\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Save the quiz',\n        SaveContent: \"Save the question\",\n        AddContent: \"Add the question\",\n        SureCancelEdition: \"Are you sure to cancel this quiz edition? Your modification would not be saved\",\n\n        // Help page related\n        Head: 'The quiz, how does it works?',\n        RulesHead: \"The rules\",\n        CustomHead: \"Customization\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `This is a basic quiz game: there are questions {1}, and the player must answer them. There can be {1} answers, one correct answer and it's a point added to the score.\\n\\nThere is no loss of points for a wrong answer.`,\n                boldText: [\"optionally accompanied by an image or a sound\", \"several possible\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `There are no default quizzes. It is up to you to {0} and {1} them as you wish!\\nTo do this, you must go to the \"{2}\" section.\\nThere you will see the list of quizzes that you have already created. If you haven't created any yet, create your first quiz with the \"{3}\" button.\\n\\nHere you can add questions with the \"{4}\" button. You are asked to {5} (optional), which is a sound or image file to illustrate your question.\\n\\nThen you have to {6}. This question will be asked to the player.\\n\\nAnd finally, {7}. Once you have entered a valid answer, click on the {8} symbol next to it, and your answer would be added to the list of the valid answers to the question. You can have a maximum of 10 possible answers.\\n\\nIf you made a mistake on one of the answers, {9} to remove it from the list.\\n\\nOnce you have filled in all the elements of the question, click \"{10}\" above to save the question and return to the list of questions. Add as many as you want to this quiz.\\n\\nYou can also {11}.\\n\\nOnce the quiz is completed, click \"{12}\" and that's it! Fill in the name of this quiz and it's done, the quiz is now playable!`,\n                boldText: [\"create\",\n                    \"customize\",\n                    \"View quizzes\",\n                    \"Create a quiz\",\n                    \"Add a question\",\n                    \"import a reference file\",\n                    \"fill in the question\",\n                    \"add the possible answers\",\n                    \"( + )\",\n                    \"simply click on it\",\n                    \"Submit\",\n                    \"click on a question to edit it\",\n                    \"Complete the quiz creation\"\n                ],\n            });\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginTop: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: 235,\n        marginTop: 20,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: 235,\n        marginTop: 10,\n        backgroundColor: 'blue',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: 30,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    modalDescription: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: 290,\n        marginTop: 10\n    },\n    quizTitleInput: {\n        fontSize: 15\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 50\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        width: 250\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: 250,\n        height: 250\n    },\n    gameQuestion: {\n        fontSize: 25,\n        marginTop: 10,\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey'\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15\n    },\n\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n        textAlign: 'center'\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image, ActivityIndicator } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            <Button\n                title={props.isLoading ? <ActivityIndicator color={'blue'} size={'small'} /> : QuizLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n                disabled={props.quiz.length === 0}\n            />\n\n            <Button\n                title={QuizLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import {\n    View,\n    Image\n} from 'react-native';\nimport { Icon, FAB, Avatar } from 'react-native-elements';\nimport { Audio } from 'expo-av';\n\nexport const printFile = (fileType, uri, clearFile, isPlaying, pauseSound, setIsPlaying, sound, setSound) => {\n    if (fileType === 'image') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Image source={{uri: uri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n            </View>\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 100, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Icon onPress={() => isPlaying ? pauseSound() : playSound(setIsPlaying, sound, setSound, uri) } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30, zIndex: 2}} />\n            </View>\n        );\n    }\n};\n\nexport const playSound = async (setIsPlaying, sound, setSound, uri) => {\n    setIsPlaying(true);\n    await Audio.setAudioModeAsync({\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n    });\n    const getSoundStatus = await sound?.getStatusAsync();\n    if (getSoundStatus?.isLoaded === false) {\n        await sound.loadAsync({ uri: uri });\n        setSound(sound);\n    }\n    await sound.playAsync();\n    sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n        if (playbackStatus.didJustFinish) {\n            await sound.unloadAsync();\n            setIsPlaying(false);\n        }\n    });\n};\n\nexport const pickCorrectIcon = (fileType, uri) => {\n    if (fileType === 'image') {\n        return (\n            <Avatar\n                source={{ uri: uri }}\n                rounded\n                size={'medium'}\n                containerStyle={{marginHorizontal: 8}}\n            />\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <Icon\n                raised\n                name={'musical-notes-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    } else {\n        return (\n            <Icon\n                raised\n                name={'text-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    }\n};","import React, { useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nimport { pickCorrectIcon } from '../utils/quizFunc';\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n\n    const length = props.quizEdit?.content?.length + props.newContent?.length;\n\n    const pickOutQuestion = () => {\n        if (length <= 2 && props.quizEdition) return;\n        if (props.quizEdition === true) {\n            if (Number.isInteger(props.questionId)) {\n                // if the questionId is an integer, it means it has not\n                // been added to the api yet, so it's an index of the\n                // newContent array passed in the props from the ViewQuiz Component\n\n                const index = props.questionId - props.quizEdit?.content?.length;\n                const tmp = props.newContent;\n                tmp.splice(index, 1);\n                // take out the new content from the newContent state in the\n                // parent component\n                props.setNewContent([...tmp]);\n            } else {\n                // todo not get by api but update quizedit state\n                // update api only when saving quiz\n                const index = props.quizEdit.content.findIndex(el => el.id == props.questionId );\n                const tmp = props.quizEdit;\n                tmp.content.splice(index, 1);\n                props.setQuizEdit(tmp);\n                props.setReload(!props.reload)\n                props.setEditedQuiz(true);\n            }\n        } else {\n            const tmp = props.quizEdition ? props.content : props.contentList;\n            tmp.splice(props.index, 1)\n            props.setContent([...tmp]);\n        }\n        setModal(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{ marginRight: 10 }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={{ fontWeight: 'bold' }}\n                    onPress={() => pickOutQuestion() }\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { props.setEditContent(props.questionId) }} >\n                { pickCorrectIcon(props.content.fileType, props.content.uri) }\n                <ListItem.Content>\n                    <ListItem.Title>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon disabled={props.quizEdition == true && length <= 2} reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","export function ScoreRatio (content, personId) {\n    var success = 0;\n    var fail = 0;\n    content.map( (el, i) => {\n        const score = el.score.filter( (el) => el.personId == personId );\n        score.map( (el, i) => {\n            success += parseInt(el.success);\n            fail += parseInt(el.failed);\n        });\n    });\n    const total = success + fail;\n    if (total == 0)\n        return 0;\n    const score = ((success / total) * 100).toFixed(2);\n    return score;\n};","import React from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport { ScoreRatio } from './utils/scoreFunc';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n\n    return (\n        <ListItem {...componentProps} onPress={() => {\n                props.setEdit(true);\n                props.setQuizEdit(props.quiz);\n            }}>\n            <ListItem.Content>\n                <ListItem.Title>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    { ScoreRatio(props.quiz.content, props.personId) }{'% '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Text,\n    ScrollView,\n} from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport QuizList from './QuizList';\nimport styles from './styles';\n\nimport * as API from '../../../data/quizApi';\n\nexport default function ViewQuizList(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <ScrollView>\n            {props.loading ? (\n                <ActivityIndicator\n                    color={'blue'}\n                    size={'small'}\n                    style={styles.loading}\n                />\n            ) : props.quiz?.length > 0 ? (\n                props.quiz?.map((el, i) => {\n                    return (\n                        <QuizList\n                            index={i}\n                            key={el._id}\n                            quiz={el}\n                            lang={props.lang}\n                            deleteId={deleteId}\n                            personId={props.personId}\n                            setEdit={props.setEdit}\n                            setQuizEdit={props.setQuizEdit}\n                        />\n                    );\n                })\n            ) : (\n                <Text style={styles.nothingYet}>\n                    {QuizLang[props.lang].NothingYet}\n                </Text>\n            )}\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/activities/quiz/success.gif';\n\nimport styles from './styles';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge, FAB } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContent(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <ScrollView contentContainerStyle={styles.ScrollView}>\n                { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                <Button\n                    title={QuizLang[props.lang].ImportFile}\n                    buttonStyle={{ borderRadius: 15 }}\n                    onPress={pickFile}\n                />\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].ReferenceFile}\n                </Text>\n                <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                    <Input\n                        value={props.question}\n                        inputStyle={{fontSize: 14}}\n                        containerStyle={{marginBottom: 50}}\n                        placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                        onChangeText={(e) => props.setQuestion(e)}\n                    />\n                    <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                    <Input\n                        placeholder={QuizLang[props.lang].AddAnswer}\n                        inputStyle={{fontSize: 14}}\n                        value={answer}\n                        onChangeText={(e) => setAnswer(e)}\n                    />\n                    <Button\n                        icon={\n                            <Icon\n                                name={'add-circle'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={18}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => addAnswer()}\n                        disabled={props.answers.length >= 10}\n                    />\n                    </View>\n                </View>\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].WhatIsAnswer}\n                </Text>\n                <View style={styles.badgesView}>\n                    {props.answers.map( (el, i) => {\n                        return(\n                            <Badge\n                                key={i}\n                                value={el}\n                                badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                onPress={() => pickOutAnswer(i)}\n                            />\n                        )\n                    })}\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    SafeAreaView,\n    ScrollView,\n    Alert,\n    Modal,\n    Text\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay } from 'react-native-elements';\n\nimport QuestionList from './Creation/QuestionList';\nimport ViewQuizList from './ViewQuizList';\n\nimport * as API from '../../../data/quizApi';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport FormQuizContent from './Creation/FormQuizContent';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n    // if the user is editing or not an existing quiz\n    const [edit, setEdit] = useState(false);\n\n    // if the user want to add a question to an existing quiz\n    const [newQuestion, setNewQuestion] = useState(false);\n\n    // if the user want to edit an existing question to an existing quiz\n    const [editContent, setEditContent] = useState();\n\n    // the existing quiz to edit\n    const [quizEdit, setQuizEdit] = useState();\n\n    // the new content to add in an existing quiz\n    const [newContent, setNewContent] = useState([]);\n\n    // check if something has been edited\n    const [editedQuiz, setEditedQuiz] = useState(false);\n\n    // open the modal of going back without saving confirmation\n    const [modal, setModal] = useState(false);\n\n    // the states for the quiz edition (add / edit question)\n    const [question, setQuestion] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const push = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setNewContent([...newContent, push]);\n        setEditedQuiz(true);\n        setSuccess(true);\n    };\n\n    const saveContent = () => {\n        let content;\n        let index;\n        if (Number.isInteger(editContent)) {\n            // edit newContent array\n            content = newContent[editContent - quizEdit?.content?.length];\n        } else {\n            // edit quizEdit array\n\n            // for already in api content -- think of reuploading the file\n            // if there's a new one, or to delete it\n            index = quizEdit.content.findIndex(el => el.id == editContent);\n            content = quizEdit.content[index];\n            if (fileType != content.fileType || uri != content.uri)\n                content.editedFile = true;\n        }\n        content.filename= filename;\n        content.fileType = fileType;\n        content.uri = uri;\n        content.answers = answers;\n        content.question = question;\n        setEditedQuiz(true);\n        setSuccess(true);\n        if (Number.isInteger(editContent)) {\n            if (newContent.length == 1)\n                setNewContent([content]);\n            else\n                setNewContent([...content]);\n        } else {\n            quizEdit.content[index] = content;\n            setQuizEdit(quizEdit);\n        }\n    };\n\n    // clear the states before edition or creation of a content\n    const clearState = () => {\n        setAnswers([]);\n        setQuestion();\n        setFileType();\n        setFilename();\n        setUri();\n        setSound(new Audio.Sound());\n    };\n\n    // Save the edited quiz\n    const saveQuiz = () => {\n        if (!editedQuiz) return;\n        const content = quizEdit.content.concat(newContent);\n        API.saveQuiz(props.personId, quizEdit._id, content).then((data) => {\n            return Alert.alert(\n                QuizLang[props.lang].EditedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            props.setReload(!props.reload);\n                            setNewContent([]);\n                            goBack();\n                        },\n                    }\n                ]\n            );\n        });\n    }\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const viewPage = () => {\n        if (editContent && !newQuestion) {\n            if (success) setSuccess(false);\n            let content;\n            if (Number.isInteger(editContent)) {\n                content = newContent[editContent - quizEdit?.content?.length];\n            } else {\n                const index = quizEdit.content.findIndex(el => el.id == editContent);\n                content = quizEdit.content[index];\n            }\n            if (!content) return;\n            setFilename(content.filename);\n            setFileType(content.fileType);\n            setUri(content.uri);\n            setQuestion(content.question);\n            setAnswers([...content.answers]);\n            setNewQuestion(true);\n        } else if (newQuestion) { // if the user wants to set a new question for quiz edition\n            return (<FormQuizContent\n                        lang={props.lang}\n                        setAnswers={setAnswers}\n                        setFileType={setFileType}\n                        setQuestion={setQuestion}\n                        setUri={setUri}\n                        setFilename={setFilename}\n                        setSuccess={setSuccess}\n                        setSound={setSound}\n                        setIsPlaying={setIsPlaying}\n                        pauseSound={pauseSound}\n                        uri={uri}\n                        filename={filename}\n                        answers={answers}\n                        fileType={fileType}\n                        question={question}\n                        success={success}\n                        sound={sound}\n                        isPlaying={isPlaying}\n                />);\n        } else if (edit && !newQuestion) {\n             // if the user want to see all the question for the quiz edition\n            return (quizEdit.content)?.concat(newContent)?.map((el, i) => {\n                return (<QuestionList\n                    index={i}\n                    key={i}\n                    id={quizEdit._id || 0}\n                    quizEdit={quizEdit}\n                    newContent={newContent}\n                    content={el}\n                    lang={props.lang}\n                    questionId={el.id || i}\n                    quizEdition={true}\n                    reload={props.reload}\n                    setReload={props.setReload}\n                    setEditedQuiz={setEditedQuiz}\n                    setEditContent={setEditContent}\n                    setQuizEdit={setQuizEdit}\n                    setNewContent={setNewContent}\n                />);\n            })\n        } else {\n             // if the user want to see all the existing quiz for the quiz edition\n            return (<ViewQuizList\n                quiz={props.quiz}\n                loading={props.loading}\n                lang={props.lang}\n                personId={props.personId}\n                setEdit={setEdit}\n                setQuizEdit={setQuizEdit}\n                setReload={props.setReload}\n            />);\n        }\n    };\n\n    const goBack = () => {\n\n        if (!success) setSuccess(false);\n\n        if ( (editedQuiz && !newQuestion) || newContent.length > 0) {\n            setModal(true);\n            return;\n        }\n\n        if (editContent) {\n            clearState();\n            setEditContent();\n            setNewQuestion(false);\n        } else if (newQuestion)\n            setNewQuestion(false);\n        else if (edit) {\n            setEditedQuiz(false);\n            setEdit(false);\n        } else\n            props.setTab(0);\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return saveContent();\n        } else if (newQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].AddContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return pushContent();\n        } else if (edit) {\n            // save the quiz button\n            if (mode == 'title') return QuizLang[props.lang].Save;\n            else if (mode == 'disabled') return !(editedQuiz);\n            else if (mode == 'onpress') return saveQuiz();\n        } else {\n            // create a quiz button\n            if (mode == 'title') return QuizLang[props.lang].Create;\n            else if (mode == 'disabled') false;\n            else if (mode == 'onpress') return props.setTab(4);\n        }\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => setModal(false)}\n                    ModalComponent={Modal}\n                >\n                    <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                    <View style={{ flexDirection: 'row' }}>\n                        <Button\n                            title={QuizLang[props.lang].Cancel}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{ marginRight: 10 }}\n                            onPress={() => setModal(false)}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].GoBack}\n                            buttonStyle={{ fontWeight: 'bold' }}\n                            onPress={() => {\n                                setEditedQuiz(false);\n                                setEditContent();\n                                setEdit(false);\n                                setNewContent([]);\n                                setModal(false);\n                            } }\n                        />\n                    </View>\n                </Overlay>\n\n\n                <Button\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={edit ? 'save-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        buttonTop('onpress')\n                    }}\n                    disabled={ buttonTop('disabled') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => goBack() }\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                {\n                    edit && !newQuestion && !editContent ?\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setNewQuestion(true) }\n                    /> : <></>\n                }\n                <ScrollView style={{marginBottom: 40}}>\n                { viewPage() }\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContent from './FormQuizContent';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\nimport { Audio } from 'expo-av';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n    const [modalConfirmation, setModalConfirmation] = useState(false);\n\n    const [editContent, setEditContent] = useState();\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name.substring(0, 23),\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    // Save an existing question\n    const saveContent = () => {\n        content[editContent].fileType = fileType;\n        content[editContent].filename = filename;\n        content[editContent].uri = uri;\n        content[editContent].question = question;\n        content[editContent].answers = answers;\n        setContent([...content]);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        if (isPlaying) setIsPlaying(false);\n    };\n\n    const clearState = () => {\n        setAnswers([]);\n        setFileType();\n        setFilename();\n        setUri();\n        setQuestion();\n        setSuccess(false);\n    };\n\n    const printQuestionList = () => {\n        if (content.length === 0) {\n            return (<Text style={styles.nothingYet}>\n                {QuizLang[props.lang].NoQuestionYet}\n            </Text>);\n        } else {\n            return content?.map((el, i) => {\n                return (\n                    <QuestionList\n                        index={i}\n                        key={i}\n                        id={i}\n                        content={el}\n                        lang={props.lang}\n                        setContent={setContent}\n                        setEditContent={setEditContent}\n                        questionId={i}\n                        contentList={content}\n                    />\n                );\n            });\n        }\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent !== undefined) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); return saveContent(); }\n        } else if (createQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].OK;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); setModal(false); return pushContent(); }\n        } else {\n            if (mode == 'title') return QuizLang[props.lang].Complete;\n            else if (mode == 'disabled') return !(content.length > 0);\n            else if (mode == 'onpress') { return setModal(true);  }\n        }\n    };\n\n    const printPage = () => {\n        if (editContent !== undefined && !createQuestion) {\n            if (success) setSuccess(false);\n            setAnswers(content[editContent].answers);\n            setFileType(content[editContent].fileType);\n            setFilename(content[editContent].filename);\n            setUri(content[editContent].uri);\n            setQuestion(content[editContent].question);\n            setCreateQuestion(true);\n        }\n        if (createQuestion) { // if the user is creating a new question\n            return <FormQuizContent\n                /* Form to create a quiz */\n                lang={props.lang}\n                setAnswers={setAnswers}\n                setFileType={setFileType}\n                setQuestion={setQuestion}\n                setUri={setUri}\n                setFilename={setFilename}\n                setSuccess={setSuccess}\n                setSound={setSound}\n                setIsPlaying={setIsPlaying}\n                pauseSound={pauseSound}\n                uri={uri}\n                filename={filename}\n                answers={answers}\n                fileType={fileType}\n                question={question}\n                success={success}\n                sound={sound}\n                isPlaying={isPlaying}\n            />\n        } else {\n            return <SafeAreaView style={styles.safeArea}>\n                <Button\n                    title={QuizLang[props.lang].AddQuestion}\n                    icon={\n                        <Icon\n                            name={'add-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => setCreateQuestion(true)}\n                />\n                <ScrollView style={{marginBottom: 40}}>\n                    { props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : printQuestionList() }\n                </ScrollView>    \n            </SafeAreaView>\n        }\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button containerStyle={{ marginTop: 10, width: 40 }} title={{}} icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    } disabled={name?.length < 3 || name.length > 23 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            {/* Confirmation give up quiz creation */}\n            <Overlay\n                visible={modalConfirmation}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => setModalConfirmation(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={QuizLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={() => setModalConfirmation(false)}\n                    />\n                    <Button\n                        title={QuizLang[props.lang].GoBack}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={() => {\n                            setModalConfirmation(false);\n                            props.setTab(2);\n                        } }\n                    />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ buttonTop('disabled') }\n                    onPress={ () => buttonTop('onpress') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearState();\n                        pauseSound();\n                        if (createQuestion)\n                            setCreateQuestion(!createQuestion);\n                        else if (content.length == 0) props.setTab(2);\n                        else setModalConfirmation(true)\n                    }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            { printPage() }\n        </>\n    );\n}\n","import React from 'react';\nimport { Text, Button, Icon, FAB } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif');\n    return (\n    <>\n        { props.quizLength > 1 ? <FAB\n            style={{marginTop: 140, position: 'absolute', zIndex: 10}}\n            containerStyle={{marginLeft: 120}}\n            size=\"small\"\n            icon={{name: 'repeat-sharp', type: 'ionicon', color:'white' }}\n            onPress={() => props.pickRandomQuizz()}\n        /> : <></> }\n        <Lottie LottieSource={ThinkingLottie} ImageSource={ThinkingImage} LottieStyle={{marginTop: -25, height: 250, marginBottom: -30}} />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButton}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            buttonStyle={{ backgroundColor: 'red' }}\n            containerStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, Alert, View, Modal } from 'react-native';\nimport { Text, Image, Input, Button, Icon, Overlay } from 'react-native-elements';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../../assets/img/activities/sad.gif';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport Lottie from '../../../utils/Lottie';\nimport { Audio } from 'expo-av';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n    const [modal, setModal] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const [success, setSuccess] = useState(0);\n    const [fail, setFail] = useState(0);\n    const [confetti, setConfetti] = useState(false);\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const TrophyLottie = require('../../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../../assets/lottie/sad.json');\n\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const stopSound = async () => {\n        await pauseSound();\n        setSound(new Audio.Sound());\n        await sound?.unloadAsync();\n    }\n\n    const playSound = async () => {\n        setIsPlaying(true);\n        await Audio.setAudioModeAsync({\n            staysActiveInBackground: true,\n            shouldDuckAndroid: true,\n        });\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus?.isLoaded === false) {\n            await sound.loadAsync({ uri: game[current].uri });\n            setSound(sound);\n        }\n        await sound.playAsync();\n        sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n            if (playbackStatus.didJustFinish) {\n                await sound.unloadAsync();\n                setIsPlaying(false);\n            }\n        });\n    };\n\n    const setMediaType = () => {\n        if (!game[current]) return;\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <Icon onPress={() => isPlaying ? pauseSound() : playSound() } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30}} />\n            default:\n                return <></>;\n        }\n    };\n\n    const openAlertResultQuestion = (result) => {\n        return (\n            Alert.alert(\n                result ? QuizLang[props.lang].SuccessTitle : QuizLang[props.lang].FailedTitle,\n                result ? QuizLang[props.lang].Success : QuizLang[props.lang].Failed(game[current].answers),\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: async () => {\n                            if (current + 1 <= game.length - 1)\n                                setCurrent(current + 1);\n                            else {\n                                const path = success >= fail ? require(`../../../../assets/sound/global/applause.mp3`) : require(`../../../../assets/sound/global/you_lose.mp3`);\n                                if (success >= fail) setConfetti(true);\n                                const { sound } = await Audio.Sound.createAsync(path);\n                                setSound(sound);\n                                sound.playAsync();\n                                setModal(true);\n                            }\n                        },\n                    }\n                ]\n            )\n        )\n    };\n\n    const answerQuestion = async () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        stopSound();\n        setAnswer('');\n        const result = game[current].answers.includes(answerTrimedLowercase);\n        if (result === false) {\n            // increment the fail and update the API\n            setFail(fail + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, false);\n        } else {\n            // increment the success and update the API\n            setSuccess(success + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, true)\n        }\n        openAlertResultQuestion(result);\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                {confetti && success >= fail ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n                )}\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => props.setTab(0)}\n                    ModalComponent={Modal}\n                >\n                    {success >= fail ? \n                        <>\n                            <Lottie LottieSource={TrophyLottie} ImageSource={TrophyImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} loop={false} />\n                            <Text style={{color:'blue', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].SuccessQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].SuccessQuiz(fail, success)}</Text>\n                        </>\n                    :\n                        <>\n                            <Lottie LottieSource={SadLottie} ImageSource={SadImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} />\n                            <Text style={{color:'red', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].FailQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].FailQuiz(fail, success)}</Text>\n                        </>\n                    }\n                    <Button title={QuizLang[props.lang].Leave} onPress={() => props.setTab(0)} containerStyle={styles.leaveButton} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </Overlay>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button buttonStyle={styles.buttonQuizGameOK} title={QuizLang[props.lang].OK} onPress={() => { answerQuestion() }} />\n                </View>\n            </>\n        }\n    </>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\n// This component is mounted when the user clicks on 'Play' in the main quiz menu\nexport default function Play(props) {\n    const [play, setPlay] = useState(false);\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quizId={props.quiz._id}\n                personId={props.personId}\n                quiz={props.quiz.content}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n                quizLength={props.quizLength}\n            />\n        }\n    </View>);\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{QuizLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Rules()}</Text>\n\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].CustomHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Custom()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler, Alert } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber, randomArrayElement } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Creation/CreateQuiz';\nimport Play from './Play';\nimport Help from './Help';\n\nimport * as API from '../../../data/quizApi';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1) {\n                    Alert.alert(\n                        QuizLang[props.lang].GiveUpQuizTitle,\n                        QuizLang[props.lang].GiveUpQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    setTab(0);\n                                }\n                            },\n                        ]\n                    )\n                }\n                else setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            let rand = randomArrayElement(random, 0, quiz.length - 1);\n            setRandom(rand);\n        }\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    isLoading={isLoading}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                quizLength={quiz.length}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    setReload={setReload}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return <View style={styles.view}>{printPage()}</View>;\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Essai${tries > 1 ? 's' : ''} restant${tries > 1 ? 's' : ''}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Score actuel: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Commencer \",\n        GiveUp: \"Abandonner\",\n        Reinit: \"Nouveau modèle\",\n        TitleGiveUp: \"Abandonner la partie\",\n        SureToGiveUp: \"Êtes-vous sûr(e) de vouloir abandonner la partie? Votre score sera enregistré.\",\n        Congratulations: 'Félicitations !!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: \"Recommencer\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'Le jeu des pairs, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu des pairs est assez connu et classique. Lorsque vous commencerez la partie, vous aurez un {0}. Cliquez alors sur le bouton \"{1}\" sur le bas de l’écran pour retourner les cartes face verso.\\n\\nVous devrez alors {2}. Par exemple, si vous cliquez sur une carte rouge, vous devrez cliquer sur l’autre carte rouge ensuite.\\n\\nPlus vous grimpez dans le score, plus le nombre de paires s’ajoutent au schéma. Il peut y avoir jusqu’à {3} au total.`,\n                boldText: [\"schéma de plusieurs paires de cartes face recto\", \"Commencer\", \"retourner les paires l'une après l’autre\", \"6 paires\"],\n            });\n        },\n        ScoreHead: \"Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois qu’un schéma est complété (c'est-à-dire que toutes les cartes ont été retournées), {0} et passez à un schéma suivant, {1}.\\n\\nLes points peuvent vous servir à avoir un joli score, mais aussi à recréer un nouveau schéma si vous l’avez complètement oublié. A chaque re-création d’un schéma, {2}. Et vous ne pouvez pas recréer un schéma s’il ne vous reste {3}.`,\n                boldText: [\"vous gagnez un point\", \"potentiellement plus difficile\", \"vous perdez un point\", \"qu’un essai pour le schéma actuel\"],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'How does it work',\n        Leave: 'Back',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Remaning tr${tries > 1 ? 'ies' : 'y'}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Actual score: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Start \",\n        GiveUp: \"Give up\",\n        Reinit: \"New model\",\n        TitleGiveUp: \"Give up the game\",\n        SureToGiveUp: \"Are you sure to give up this party? Your score will be saved.\",\n        Congratulations: 'Congratulations!!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        SoBad: 'So sad...',\n        ScoreNotBeated: 'Your daily score has not been beaten... But you can retry!',\n        Retry: \"Retry\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Best score made today: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'The double memory, how does it works?',\n        RulesHead: \"The rules\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The game of peers (or double memory) is quite familiar and classic. When you start the game, you will have a {0}. Then click on the \"{1}\" button at the bottom of the screen to turn the cards face up.\\n\\nFor example, if you click on a red card, you will have to click on the other red card next.\\n\\nThere can be up to {3} in total.`,\n                boldText: [\"pattern of several pairs of cards face up\", \"Start\", \"turn over the pairs one after the other\", \"6 pairs\"],\n            });\n        },\n        ScoreHead: \"The score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `Each time a pattern is completed (i.e., all the cards have been turned over), {0} and move on to the next pattern, {1}.\\n\\nThe points can be used to get a nice score, but they can also be used to recreate a new pattern if you've completely forgotten about it. Each time you re-create a pattern, {2}. And you can't recreate a pattern if you don't have {3} left.`,\n                boldText: [\"you earn a point\", \"potentially more challenging\", \"you lose a point\", \"than a try for the current pattern\"],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    view: {\n        height: hp('100%'),\n        paddingBottom: 40,\n        flex: 1\n    },\n    logo: {\n        width: 120,\n        height: undefined,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n        resizeMode: \"center\",\n        aspectRatio: 1\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n        marginBottom: 20\n    },\n    RectoCard: {\n        width: wp('21%'),\n        height: 0,\n        backgroundColor: '#C3C3CF',\n        borderRadius: 20,\n        borderColor: '#858593',\n        borderWidth: 1,\n        aspectRatio: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    PlayingCard: {\n        width: wp('21%'),\n        height: 0,\n        borderRadius: 20,\n        aspectRatio: 1,\n        borderColor: '#68FF5C',\n        borderWidth: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    VersoCard: {\n        width: wp('21%'),\n        height: 0,\n        borderRadius: 20,\n        opacity: .8,\n        marginHorizontal: 5,\n        aspectRatio: 1,\n        marginVertical: 5\n    },\n    IconCard: {\n        marginTop: 23\n    },\n    viewGame: {\n        marginTop: 10,\n        width: wp('95%'),\n        height: hp('55%'),\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    buttonViewPlay: {\n        flexDirection: 'row',\n        width: wp('100%'),\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: 10\n    },\n    playButtons: {\n        alignContent: 'center',\n        textAlign: 'center',\n        paddingHorizontal: 30,\n        borderRadius: 10,\n        marginHorizontal: 5\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        paddingTop: 20,\n        width: wp('100%'),\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={DoubleLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{DoubleLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].Rules()}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].ScoreHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].ScoreHelp()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React from 'react';\nimport { Image, View } from 'react-native';\nimport { Button, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport DoubleLogo from '../../../assets/img/activities/double/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={DoubleLogo} style={styles.logo} resizeMode={'cover'} />\n\n            <Button\n                title={DoubleLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={DoubleLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <View>\n\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: -50,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                        type: 'ionicon',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.ambiantSoundPlay() }\n            />\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 20,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.soundEnabled ? 'sound' : 'sound-mute',\n                        type: 'entypo',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.setSoundEnabled(prev => !prev) }\n            />\n            </View>\n\n            <Button\n                title={DoubleLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => {\n                    props.ambiant.unloadAsync();\n                    props.setPage(null);\n                }}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}","const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};\n\nexport const generateRandomPair = (length) => {\n    const colors = [\n        '#791414',\n        '#143479',\n        '#791462',\n        '#147920',\n        '#797714',\n        '#14AB9D'\n    ];\n    const icons = [\n        'airplane',\n        'boat',\n        'bulb',\n        'color-palette',\n        'earth',\n        'gift',\n        'happy',\n        'heart-circle',\n        'restaurant',\n        'ribbon'\n    ]\n    var arr = [];\n    for (let i = 0; i < length / 2; i++) {\n        var indexColor = Math.floor(Math.random() * colors.length);\n        var indexIcon = Math.floor(Math.random() * icons.length);\n        arr.push({ color: colors[indexColor], icon: icons[indexIcon] }, { color: colors[indexColor], icon: icons[indexIcon] });\n        colors.splice(indexColor, 1);\n        icons.splice(indexIcon, 1);\n    }\n    arr = shuffle(arr);\n    for (let i = 0; i < arr.length; i++) {\n        const el = arr[i];\n        el.idx = i\n    }\n\n    return (arr);\n};","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements';\n\nimport styles from '../styles';\n\nexport default function Card(props) {\n    var cardStyles;\n    if (props.inPlay) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.PlayingCard]];\n    else if (props.inFound || props.show) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.VersoCard]];\n    else cardStyles = styles.RectoCard\n\n    const icon = !props.inFound && !props.inPlay && !props.show ? 'help-circle-outline' : props.icon;\n\n    return (\n        <>\n            <TouchableOpacity style={ cardStyles } onPress={() => {\n                if (!props.inPlay && !props.inFound) props.ReturnCard(props.index);\n            }}>\n                <Icon\n                    name={icon}\n                    size={props.inFound || props.show || props.inPlay ? 30 : 24}\n                    color={props.inFound || props.show || props.inPlay ? 'white' : 'grey'}\n                    type=\"ionicon\"\n                    style={styles.IconCard}\n                />\n            </TouchableOpacity>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { View, Text, Modal } from 'react-native';\n\nimport { Button, Overlay, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../assets/img/activities/sad.gif';\n\nimport Lottie from '../../utils/Lottie';\n\nimport styles from './styles';\n\nimport { generateRandomPair } from './subs/helpers';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport Card from './subs/Card';\n\nexport default function Play(props) {\n    const [game, setGame] = useState([...generateRandomPair(4)]); // the current map game\n    const [found, setFound] = useState([]);\n    const [tries, setTries] = useState(3);\n    const [play, setPlay] = useState([]); // the current play of the player, an array with two values max, corresponding to the cards the player played\n    const [show, setShow] = useState(true);\n    const [confetti, setConfetti] = useState(false);\n    const [pause, setPause] = useState(false);\n\n    const TrophyLottie = require('../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../assets/lottie/sad.json');\n\n    const setLengthGame = () => {\n        if (props.score <= 8)\n            return 4;\n        else if (props.score <= 15)\n            return 6;\n        else if (props.score <= 30)\n            return 8;\n        else if (props.score <= 45)\n            return 10;\n        else\n            return 12;\n    }\n\n    // Exemple game element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null },\n            { idx: 2, color: '#ffffff', icon: null },\n            { idx: 3, color: '#ferdnc', icon: null }\n        ]\n    */\n\n        // each play, we push the current card to the play state, and check if the first element exists in the\n        // game state, and if the second element is the same as the first one, if so => success for a round, and push\n        // this pair in the found state. If fail => clear the play && found states\n\n    // Exemple play element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 2, color: '#ffffff', icon: null }\n        ] // this is a successful array\n\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null }\n        ] // this is a fail array\n    */\n\n    const failOverlay = () => {\n        if (props.modal == false) return;\n        return (\n            <>\n                <Lottie\n                    LottieSource={SadLottie}\n                    ImageSource={SadImage}\n                    autoplay={true}\n                    loop={true}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const successOverlay = () => {\n        if (!confetti) setConfetti(true);\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].BestScoreToday(props.bestScoreDay)}\n                </Text>\n                <Lottie\n                    LottieSource={TrophyLottie}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n    \n    const newModel = () => {\n        if (props.score == 0) return;\n        const currentGameLength = game.length;\n        props.setScore(prevScore => prevScore - 1);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(currentGameLength)]);\n    };\n\n    const printButton = () => {\n        return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={show ? DoubleLang[props.lang].Start : DoubleLang[props.lang].Reinit} onPress={() => { if (show) setShow(false); else newModel(); }} buttonStyle={[styles.playButtons, {backgroundColor: show ? '#208bdc' : 'green'}]} icon={\n                    <Icon\n                    name={show ? \"play\" : ''}\n                    size={18}\n                    color=\"white\"\n                    type=\"ionicon\"\n                />\n                } iconRight={true} disabled={!show && props.score === 0 || tries <= 1} />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.ambiantSoundPlay() }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.soundEnabled ? 'sound' : 'sound-mute',\n                            type: 'entypo',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.setSoundEnabled(prev => !prev) }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='red'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: 'caret-back',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.giveUp() }\n                    style={{marginHorizontal: 5}}\n                />\n            </View>);\n    };\n    \n    const ReturnCard = (key) => {\n        if (pause || show) return;\n        const currentPlay = play;\n        const indexGame = game[key];\n        const playing = [...currentPlay, indexGame];\n        if (playing.length == 2) {\n            // check if same card or return all and lose a try\n            if (playing[0].color === playing[1].color && playing[0].icon === playing[1].icon) {\n                const currentGameLength = game.length;\n                const nFound = [...found, playing[0], playing[1]];\n                if (nFound.length == currentGameLength) {\n                    props.playSound('next');\n                    props.setScore(prevScore => prevScore + 1);\n                    setShow(true);\n                    setTries(3);\n                    setGame([...generateRandomPair(setLengthGame())]);\n                    setFound([]);\n                } else {\n                    props.playSound('success');\n                    setFound(nFound);\n                }\n                setPlay([]);\n            } else {\n                setPlay(playing);\n                props.playSound('fail');\n                setPause(true);\n                setTimeout(() => {\n                    if (tries != 0) setTries(prevTries => prevTries - 1);\n                    if (tries === 0)\n                        props.endGame();\n                    else {\n                        setPlay([]);\n                        setFound([]);\n                    }\n                    setPause(false);\n                }, 1000);\n            }\n        } else {\n            setPlay(playing);\n            props.playSound('play');\n        }\n    };\n\n    const printCards = () => {\n        return game.map( (el, i) => {\n            var inFound = false;\n            var inPlay = false;\n            if (found.find(element => element.idx === i )) inFound = true;\n            else if (play.find(element => element.idx === i )) inPlay = true;\n            return (<Card show={show} key={i} index={i} inFound={inFound} inPlay={inPlay} backgroundColor={el.color} icon={el.icon} ReturnCard={ReturnCard} />);\n        });\n    };\n\n    const newGame = () => {\n        if (confetti) setConfetti(false);\n        props.setModal(false);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(4)]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n            )}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                { props.success && props.modal ? successOverlay() : failOverlay() }\n                <View style={{flexDirection: 'row', marginTop: 20}}>\n                    <Button title={DoubleLang[props.lang].Retry} onPress={() => newGame()} buttonStyle={{marginRight: 10}} icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n\n                    <Button title={DoubleLang[props.lang].Leave} onPress={() => { \n                        if (confetti) setConfetti(false);\n                        props.setModal(false);\n                        props.setTab(0);\n                    }} buttonStyle={{backgroundColor: 'red'}} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </View>\n            </Overlay>\n            <View style={styles.viewGame}>\n                { printCards() }\n            </View>\n            <View style={{alignItems: 'center', width: wp('100%'), marginTop: -10}}>\n                <Text>{DoubleLang[props.lang].Score(props.score)}</Text>\n                <Text>{DoubleLang[props.lang].BestDayScore(props.bestScoreDay)}</Text>\n                <Text>{DoubleLang[props.lang].RemaningTries(tries)}</Text>\n                { printButton() }\n            </View>\n        </>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport {\n    Text,\n    BackHandler,\n    ScrollView,\n    Alert\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport styles from './styles';\n\nimport * as API from '../../../data/doubleApi';\n\nimport Help from './Help';\nimport Menu from './Menu';\nimport Play from './Play';\n\nconst currentDate = new Date().toLocaleDateString('fr-FR');\n\nexport default function Double(props) {\n    const [tab, setTab] = useState(0);\n    const [score, setScore] = useState(0);\n    const [bestScoreDay, setBestScoreDay] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [ambiant, setAmbiant] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n    const [soundEnabled, setSoundEnabled] = useState(true);\n    const [ambiantEnabled, setAmbiantEnabled] = useState(true);\n\n    useEffect( async () => {\n        // API.clear();\n\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by kilo\n            require(`../../../assets/sound/double/ambiant.mp3`),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n\n        API.getScoreDay(props.personId, currentDate).then((data) => {\n            if (data.length > 0) setBestScoreDay(data[0].score);\n        });\n\n        API.getBestScore(props.personId).then((data) => {\n            if (data.length > 0) setBestScore(data[0].score);\n        });\n\n    }, []);\n\n    useEffect(() => {\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1 && score > 0) {  \n                    giveUp()\n                    return ;\n                }\n                setTab(0);\n            } else {\n                ambiant.unloadAsync();\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, ambiant]);\n\n    const endGame = async () => {\n        setModal(true);\n        let bestDayScore = false;\n        let bestScore = false;\n        if (score > bestScoreDay) { \n            playSound('applause');\n            setSuccess(true);\n            setBestScoreDay(score);\n            bestDayScore = true;\n            if (score > bestScore) {\n                bestScore = true;\n                setBestScore(score);\n            }\n        } else {\n            playSound('lose');\n            setSuccess(false);\n        }\n        await API.insertScore(props.personId, score, currentDate, bestDayScore, bestScore);\n        setScore(0);\n    };\n\n    const ambiantSoundPlay = () => {\n        if (ambiantEnabled) ambiant.pauseAsync();\n        else ambiant.playAsync();\n        setAmbiantEnabled(prevEnable => !prevEnable);\n    };\n    \n    const giveUp = () => {\n        if (score === 0) setTab(0);\n        else return Alert.alert(\n            DoubleLang[props.lang].TitleGiveUp,\n            DoubleLang[props.lang].SureToGiveUp,\n            [\n                {\n                    text: DoubleLang[props.lang].Leave,\n                    onPress: () => { null },\n                    style: 'cancel'\n                },\n                {\n                    text: DoubleLang[props.lang].GiveUp,\n                    onPress: () => {\n                        endGame();\n                    }\n                },\n            ]\n        )\n    };\n\n    const playSound = async (type) => {\n        if (!soundEnabled && !['applause', 'lose'].includes(type)) return;\n        if (sound) sound?.unloadAsync();\n        let choosenSound;\n        switch (type) {\n            case \"success\":\n                choosenSound = require(`../../../assets/sound/double/success.mp3`);\n                break;\n            case \"fail\":\n                choosenSound = require(`../../../assets/sound/double/fail.mp3`);\n                break;\n            case \"play\":\n                choosenSound = require(`../../../assets/sound/double/play.mp3`);\n                break;\n            case \"next\":\n                choosenSound = require(`../../../assets/sound/double/next.mp3`);\n                break;\n            case \"applause\":\n                choosenSound = require(`../../../assets/sound/global/applause.mp3`);\n                break;\n            case \"lose\":\n                choosenSound = require(`../../../assets/sound/global/you_lose.mp3`);\n                break;\n            default:\n                break;\n        }\n        const { sound } = await Audio.Sound.createAsync(choosenSound);\n        setSound(sound);\n        sound.playAsync();\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    ambiant={ambiant}\n                    setSoundEnabled={setSoundEnabled}\n                    soundEnabled={soundEnabled}\n                    ambiantEnabled={ambiantEnabled}\n                    ambiantSoundPlay={ambiantSoundPlay}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                        lang={props.lang}\n                        setTab={setTab}\n                        score={score}\n                        setScore={setScore}\n                        giveUp={giveUp}\n                        modal={modal}\n                        setModal={setModal}\n                        bestScoreDay={bestScoreDay}\n                        success={success}\n                        endGame={endGame}\n                        playSound={playSound}\n                        ambiantSoundPlay={ambiantSoundPlay}\n                        ambiantEnabled={ambiantEnabled}\n                        soundEnabled={soundEnabled}\n                        setSoundEnabled={setSoundEnabled}\n                    />;\n        } else if (tab === 2) {\n            return (<Help lang={props.lang} setTab={setTab} />);\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <ScrollView style={styles.view} contentContainerStyle={{alignItems: 'center'}}>\n            { printPage() }\n        </ScrollView>\n    );\n};","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\nimport Double from '../components/activities/Double';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return <Double lang={lang} setPage={setPage} personId={personId} />;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n        /* {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        }, */\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nimport { Audio } from 'expo-av';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n\n    useEffect( () => {\n        Audio.setIsEnabledAsync(true);\n    }, [])\n\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    scoreRow: {\n        flex: 1,\n        height: 180,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreRowSimon: {\n        flex: 1,\n        height: 250,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreHeading: {\n        fontSize: 18,\n        color: '#2089dc',\n        fontWeight: 'bold',\n        margin: 5\n    },\n    NoScore: {\n        color: 'grey',\n        fontStyle: 'italic',\n        marginTop: 45,\n        marginLeft: 45\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\nimport { Badge } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport { ScoreRatio } from '../../../../components/activities/Quiz/utils/scoreFunc';\nimport * as API from '../../../../data/quizApi';\n\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nexport default function QuizScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [quizScore, setQuizScore] = useState([]);\n\n    useEffect( () => {\n        API.get(props.personId).then((data) => {\n            const arr = [];\n            for (let i = 0; i < data.length; i++) {\n                const el = data[i];\n                arr.push({score: ScoreRatio(el.content, props.personId), name: el.name});\n            }\n            setQuizScore(arr);\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (quizScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            return quizScore.map( (el,i) => {\n                return (\n                    <View style={{marginHorizontal: 15}} key={i}>\n                        <Badge\n                            value={el.name}\n                            textStyle={{textAlign: 'center'}}\n                            badgeStyle={{position:'absolute', paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 100, zIndex: 3}}\n                        />\n                        <CircularProgress\n                            value={el.score}\n                            textStyle={{marginBottom: -10}}\n                            title={ActivitiesLang[props.lang].Success}\n                            valueSuffix={'%'}\n                            titleStyle={{marginBottom: 10}}\n                            initialValue={0}\n                            \n                            delay={500}\n                            activeStrokeColor={'#2089dc'}\n                            radius={65}\n                            inActiveStrokeColor={'#9b59b6'}\n                            inActiveStrokeOpacity={0.5}\n                            inActiveStrokeWidth={6}\n                            activeStrokeWidth={12}\n                        />\n                    </View>\n                );\n            });\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRow} horizontal={true}>\n            <View>\n                <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].QuizScore}</Text>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} /> :\n                    <ScrollView horizontal={true}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/simonApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function SimonScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [simonScore, setSimonScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setSimonScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (simonScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = simonScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].SimonScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/doubleApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function DoubleScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [doubleScore, setDoubleScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setDoubleScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (doubleScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = doubleScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].DoubleScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React from 'react';\nimport { ScrollView } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\n\nimport QuizScore from './QuizScore';\nimport SimonScore from './SimonScore';\nimport DoubleScore from './DoubleScore';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <QuizScore lang={props.lang} personId={props.personId} />\n            <DoubleScore lang={props.lang} personId={props.personId} />\n            <SimonScore lang={props.lang} personId={props.personId} />\n        </ScrollView>\n    );\n}\n","import React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    \n    const navigate = useNavigate();\n\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: 60, color: '#3B8EFF', backgroundColor: '#355c7d' }],\n                tabBarLabelStyle: [{ color: 'white', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} personId={props.personId} /> }\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        paddingBottom: 10,\n        width: wp('100%'),\n        backgroundColor: '#355c7d'\n    },\n    topLottie: {\n        marginTop: 10,\n        width: 60,\n        height: undefined,\n        marginBottom: 15,\n        backgroundColor: '#355c7d'\n    },\n    bgLottie: {\n        width: wp('100%'),\n        opacity: 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: wp('100%'),\n        height: hp('100%'),\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: '#355c7d'\n    },\n    heading: {\n        fontSize: 20,\n        color: 'white',\n        marginTop: 0,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%'\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport TopImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/selection');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/selection', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/selection', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TopImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\nimport React from 'react';\n\nimport { Text } from 'react-native'\nimport App from './App';\n\nText.defaultProps = Text.defaultProps || {};\nText.defaultProps.allowFontScaling = false\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig, reset } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport SelectionMenu from './pages/SelectionMenu';\nimport Activities from './pages/Activities';\nimport Home from './pages/Home';\nimport Tutorial from './pages/Tutorial';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [lang, setLang] = useState('fr');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        // reset();\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    useEffect( () => {\n        let local = Localization.locale?.split('-')[0] || 'fr';\n        setLang(['en', 'fr'].includes(local) ? local : 'fr');\n        console.log('- Imported config file -');\n    }, [config]);\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                    setLang={setLang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/tutorial\"\n                            element={\n                                <Tutorial\n                                    lang={lang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={<Home lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/selection\"\n                            element={\n                                <SelectionMenu\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}