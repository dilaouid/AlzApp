{"version":3,"sources":["assets/img/interface/profile.jpg","assets/sound/simon/green.mp3","assets/img/activities/quiz/thinking.gif","assets/img/username/chooseusername.gif","assets/img/home/loading_brain.gif","assets/img/home/addedUser.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/tutorial/swipe-right.gif","assets/img/activities/brain.gif","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/simon/trophy.gif","assets/img/activities/quiz/logo.png","assets/img/activities/quiz/success.gif","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","pages/ChooseUsername/styles.js","language/home/index.js","components/home/Rows.js","components/home/styles.js","components/utils/Lottie.js","components/home/PersonCreation/Success.js","data/dictaphoneApi.js","data/simonApi.js","utils/helpers.js","data/personApi.js","components/home/PersonCreation/Form.js","components/home/PersonCreation/CreatePerson.js","pages/Home/styles.js","pages/Home/index.js","pages/ChooseUsername/index.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","components/utils/HomeOrTutorial.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/QuizList.js","data/quizApi.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Edition/QuestionList.js","components/activities/Quiz/Edition/SuccessContent.js","components/activities/Quiz/Edition/FormQuizContent.js","components/activities/Quiz/Edition/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","StyleSheet","create","wrapper","height","marginTop","container","flex","alignItems","alignContent","heading","fontSize","marginBottom","marginHorizontal","textAlign","color","description","textInput","borderColor","borderRadius","paddingHorizontal","backgroundColor","shadowOpacity","shadowRadius","shadowOffset","width","elevation","image","buttonContainer","button","marginLeft","buttonText","paddingTop","slide","padding","viewrow","flexDirection","flexWrap","justifyContent","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","props","navigate","useNavigate","TouchableScale","Platform","OS","default","mod","index","componentProps","Component","key","id","bottomDivider","containerStyle","onPress","state","source","picture","uri","DefaultProfilePicture","rounded","Content","Title","fullname","Subtitle","Chevron","rightButton","minHeight","imageSuccess","leftButton","view","alignSelf","marginVertical","btnImport","btnSave","profilePicture","successPageTitle","Lottie","LottieStyle","LottieSource","loop","hasOwnProperty","autoPlay","resizeMode","Image","ImageSource","ImageStyle","Success","View","SuccessImage","styles","edit","InterfaceLang","title","e","close","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","pushErrors","errors","field","msg","randomNumber","min","max","Math","floor","random","person","trim","Object","keys","success","upd","_id","$set","catch","log","Form","useState","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","FileSystem","encoding","fsRead","setImage","titleStyle","buttonStyle","icon","name","size","placeholder","leftIcon","label","errorStyle","renderErrorMessage","maxLength","errorMessage","inputStyle","value","onChangeText","setFullname","setDescription","raised","cb","Person","imgName","uuidv4","path","intermediates","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","topImage","zIndex","boldtext","subtitle","overflow","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","fontStyle","searchBar","searchInputStyle","Home","isLoading","setIsLoading","search","setSearch","setIndex","HomeLang","btnText","setBtnTxt","active","setActive","swiper","useRef","useLocation","useEffect","regex","RegExp","$regex","backHandler","BackHandler","addEventListener","remove","list","LoadingBrain","TouchableOpacity","activeOpacity","idx","ActivityIndicator","current","scrollBy","SafeAreaView","ref","showsButtons","scrollEnabled","pagingEnabled","showsPagination","onIndexChanged","setTimeout","ScrollView","inputContainerStyle","map","el","input","setInput","confirmed","setConfirmed","parseUsername","setUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","animating","Loading","LoadingImage","slideOdd","paddingBottom","marginRight","borderWidth","Tutorial","res","SwipeImage","position","opacity","StepOne","StepTwo","StepThree","StepFour","StepFive","StepSixth","to","component","Config","HomeOrTutorial","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","ReturnList","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","deletePerson","SimonDB","removeAsync","DictaphoneDB","deleted","type","iconContainerStyle","ActivitiesLang","Alert","multi","clear","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","isPlaying","setIsPlaying","progress","setProgress","Audio","Sound","sound","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","playAsync","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","unloadAsync","positionMillis","playableDurationMillis","variant","animation","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","getURI","folder","from","record","DictaphoneLang","Date","created","deleteRecord","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","createAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","clr","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","logo","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","Menu","SimonLogo","SimonLang","setTab","Game","start","setStart","failed","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","disabled","tab","Create","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","QuizListRedirection","selectedQuizz","quizzName","Questions","leaveButtonPlay","createButton","overlayDescriptionReference","ScrollViewSuccess","modalTitle","modalDescription","quizTitleInputContainer","quizTitleInput","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","QuizLogo","quiz","QuizLang","QuizList","content","Datastore","ViewQuiz","quizId","includes","fileType","setReload","reload","QuestionList","tmp","contentList","setContent","question","answers","SuccessContent","FormQuizContent","answer","setAnswer","contentContainerStyle","setFileType","setFilename","setUri","printFile","DocumentPicker","mimeType","flexShrink","setQuestion","toLowerCase","setAnswers","addAnswer","badgeStyle","pickOutAnswer","CreateQuiz","createQuestion","setCreateQuestion","disable","setDisable","setName","newContent","pushContent","ThinkingImage","pickRandomQuizz","ThinkingLottie","setPlay","setCurrent","arr","j","shuffle","transition","setMediaType","answerTrimedLowercase","answerQuestion","play","setQuiz","setRandom","returnComponent","page","ActivitiesList","iconPosition","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","setPerson","BgSource","navTheme","DefaultTheme","colors","background","BackgroundImage","NavigationContainer","theme","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact","element"],"mappings":"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","file":"static/js/app.e3ab99b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e82f415e.gif\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading_brain.ef5884d9.gif\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.ede08671.png\";","module.exports = __webpack_public_path__ + \"static/media/2.b87932e3.png\";","module.exports = __webpack_public_path__ + \"static/media/3.3ed4e762.png\";","module.exports = __webpack_public_path__ + \"static/media/4.80535fcd.png\";","module.exports = __webpack_public_path__ + \"static/media/5.da0bedf3.png\";","module.exports = __webpack_public_path__ + \"static/media/6.7911d645.png\";","module.exports = __webpack_public_path__ + \"static/media/swipe-right.6dde9c7c.gif\";","module.exports = __webpack_public_path__ + \"static/media/brain.70fc8c58.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.097ce51b.png\";","module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.348cd96d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.5d28b463.gif\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n}\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n}\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n}\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n}\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n}\n\nexport function reset() {\n    return AsyncStorage.clear();\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retourner sur le formulaire',\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet requise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? C'est possible, le partage est réalisable entre deux appareils par {0} !\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caretaker'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can share data between two devices with {0} technology!\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer ${0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caretaker'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 40,\n        borderColor: 'gray',\n        borderRadius: 20,\n        paddingHorizontal: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        elevation: 2,\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n    },\n    buttonText: {\n        paddingTop: 10,\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to produce today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text, Platform } from 'react-native';\nimport { Button, Image } from 'react-native-elements';\nimport Lottie from '../../../components/utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/home/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/home/addedUser.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <Button\n                title={InterfaceLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`);\n    return db.removeAsync({ _id: id });\n};\n\nexport function reset() {\n    return FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(res => {\n        return db.removeAsync({}, { multi: true });\n    });\n};","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0) {\n                personId = result._id;\n            }\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    wrapper: {\n        marginTop: 100,\n        textAlign: 'center',\n        alignItems: 'center',\n    },\n    topImage: {\n        flex: 1,\n        width: 80,\n        marginTop: -270,\n    },\n    heading: {\n        marginTop: -190,\n        fontSize: 20,\n        zIndex: 2,\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: '#3B8EFF',\n    },\n    subtitle: {\n        textAlign: 'center',\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: 10,\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1,\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Text,\n    View,\n    Image,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    BackHandler,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input } from 'react-native-elements';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport LoadingBrain from '../../assets/img/home/loading_brain.gif';\nimport { lang as HomeLang } from '../../language/home';\nimport Rows from '../../components/home/Rows';\nimport CreatePerson from '../../components/home/PersonCreation/CreatePerson';\n\nimport * as Person from '../../data/personApi';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        HomeLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const swiper = useRef(null);\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n\n    useEffect(() => {\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - index, true);\n    };\n\n    const changeIndex = (idx) => {\n        setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                setBtnTxt(HomeLang[lang].AddAPerson);\n            } else if (idx === 1) {\n                setBtnTxt(HomeLang[lang].ReturnToList);\n            }\n            setActive(true);\n        }, 400);\n    };\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.wrapper}>\n                <Image\n                    source={LoadingBrain}\n                    resizeMode=\"contain\"\n                    style={styles.topImage}\n                />\n                <Text style={styles.heading}>\n                    {HomeLang[lang].Hello(username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{HomeLang[lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (active === false) {\n                            return;\n                        }\n                        setActive(false);\n                        setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={HomeLang[lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    setSearch(e);\n                                }}\n                                value={search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {persons && persons.length > 0 ? (\n                                printRows(persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {HomeLang[lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={persons}\n                                setPersons={setPersons}\n                                lang={lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    TouchableOpacity,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername, SawTutorial } from '../../data/configApi';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\nimport Home from '../Home';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [confirmed, setConfirmed] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            setUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <TouchableOpacity\n                        style={styles.button}\n                        activeOpacity={0.5}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                    >\n                        <Text style={styles.buttonText}>\n                            {' '}\n                            {isLoading ? (\n                                <ActivityIndicator\n                                    color=\"white\"\n                                    size=\"small\"\n                                    animating={true}\n                                />\n                            ) : (\n                                'OK'\n                            )}\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        );\n    } else {\n        return <Home username={input} lang={props.lang} />;\n    }\n}\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    slideOdd: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#C8EEFF',\n    },\n    title: {\n        color: 'black',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center',\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center',\n    },\n    image: {\n        flex: 3,\n        width: 100 + '%',\n        height: 400,\n    },\n    buttonContainer: {\n        flex: 2,\n        marginTop: -40,\n    },\n    button: {\n        marginTop: 10,\n        paddingTop: 15,\n        paddingBottom: 15,\n        marginLeft: 30,\n        marginRight: 30,\n        backgroundColor: '#00BCD4',\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: '#fff',\n    },\n    buttonText: {\n        color: '#fff',\n        textAlign: 'center',\n    },\n});\n","import React, { useEffect } from 'react';\nimport { Text, View, Image, TouchableOpacity } from 'react-native';\n\nimport { Link } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport SwipeImage from '../../assets/img/tutorial/swipe-right.gif';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport Lottie from '../../components/utils/Lottie';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\nimport Home from '../Home';\n\nexport default function Tutorial(props) {\n    const LottieSource = require('../../assets/lottie/swipe-right.json');\n\n    useEffect(() => {\n        Config.getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    return <Home username={res} lang={props.lang} />;\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SwipeImage}\n                LottieStyle={{\n                    position: 'absolute',\n                    height: 80,\n                    marginTop: 280,\n                    marginLeft: 80,\n                    opacity: 0.8,\n                }}\n                ImageStyle={{\n                    position: 'absolute',\n                    height: 80,\n                    marginTop: 280,\n                    marginLeft: 80,\n                    opacity: 0.8,\n                }}\n            />\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Link\n                            to=\"/username\"\n                            component={TouchableOpacity}\n                            style={styles.button}\n                            onPress={(e) => {\n                                Config.SawTutorial(true);\n                            }}\n                            activeOpacity={0.5}\n                        >\n                            <Text style={styles.buttonText}>\n                                {' '}\n                                {TutorialLang[props.lang].LastStepButton}{' '}\n                            </Text>\n                        </Link>\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} />;\n    }\n    return <Home lang={props.lang} username={props.username} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#5EA1E4',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { ScrollView, Alert, SafeAreaView, View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/home/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\n\nimport styles from './styles';\nimport Form from '../../../components/home/PersonCreation/Form';\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname(props.person.fullname);\n        setUriPreview(props.person.picture);\n        setImage('');\n        setDescription(props.person.description);\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    const debug = async () => {\n        await Person.reset();\n        await AsyncStorage.clear();\n        navigate('/home');\n        return true;\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/home');\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.username),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: 'bluetooth',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ShareProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/home');\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'bug',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDebug}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ResetAccount}\n                        onPress={debug}\n                    />\n                </ScrollView>\n            ) : (\n                <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => setEdit(false)}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </ScrollView>\n            )}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync();\n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            el.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Aide',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated:\n            \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        flex: 1,\n        width: 250,\n        height: 250,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        flex: 1,\n        width: 50,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'help-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/simon/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate);\n        setCanPlay(false);\n        setSuccess(true);\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            {success ? (\n                <Overlay\n                    visible={success}\n                    overlayStyle={styles.overlayStyle}\n                    onBackdropPress={() => setSuccess(false)}\n                    ModalComponent={Modal}\n                >\n                    {scoreBeaten ? successOverlay() : failOverlay()}\n                    <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                        <Button\n                            raised\n                            onPress={() => {\n                                retryGame();\n                            }}\n                            title={SimonLang[props.lang].Retry}\n                            containerStyle={{\n                                borderRadius: 13,\n                                marginRight: 10,\n                            }}\n                        />\n                        <Button\n                            raised\n                            onPress={() => {\n                                props.setTab(0);\n                            }}\n                            title={SimonLang[props.lang].Exit}\n                            containerStyle={{ borderRadius: 13 }}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                        />\n                    </View>\n                </Overlay>\n            ) : (\n                <></>\n            )}\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Text>Tab 2 (Help)</Text>;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'Ratio de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizzName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizzName],\n            });\n        },\n        Questions: \"question(s)\",\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quiz',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'Success ratio',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Valider\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizzName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizzName],\n            });\n        },\n        Questions: \"question(s)\",\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: 235,\n        marginTop: 20,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: 235,\n        marginTop: 10,\n        backgroundColor: 'blue',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: 30,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    modalDescription: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: 290,\n        marginTop: 10\n    },\n    quizTitleInput: {\n        fontSize: 15\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 50\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        width: 250\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: 250,\n        height: 250\n    },\n    gameQuestion: {\n        fontSize: 25,\n        marginTop: 10,\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey'\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15\n    }\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            {props.quiz?.length > 0 ? (\n                <Button\n                    title={QuizLang[props.lang].Play}\n                    containerStyle={styles.button}\n                    onPress={() => props.setTab(1)}\n                    icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n            ) : (\n                <></>\n            )}\n\n            <Button\n                title={QuizLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'help-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport { ScoreRatio } from './utils/scoreFunc';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem {...componentProps}>\n            <ListItem.Content>\n                <ListItem.Title>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    {props.quiz?.score?.length || 1}{' '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\nexport const ContentDB = new Datastore({\n    filename: 'ContentQuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getContent(quizId) {\n    return ContentDB.findAsync({ quizId: quizId });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        el.id = uuidv4();\n        el.score = [{personId: personId, success: 0, failed: 0}];\n        if (['audio', 'image'].includes(el.fileType)) {\n            const filename = uuidv4() + el.type === 'audio' ? '.m4a' : 'png';\n            const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n            await FileSystem.copyAsync({\n                from: el.uri,\n                to: path + filename\n            });\n            await FileSystem.deleteAsync(el.uri);\n            el.uri = path + filename;\n        }\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport function addContent(quizId, personId, content) {\n    const data = db.find({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) {\n            console.error(err);\n        } else {\n            return data;\n        }\n    });\n    if (!data)\n        return null;\n    if (['audio', 'image'].includes(content.type) && content.path === null) {\n        console.error('A path is required when the type is \"audio\" or \"image\".');\n        return null;\n    } else if (!content.question || content.answers?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    return db.insertAsync({ ...content }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n}\n\nexport async function deleteId(personId, quizId) {\n    // await ContentDB.removeAsync({ quizId: quizId }, { multi: true });\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n}\n\nexport async function reset() {\n    await ContentDB.removeAsync({}, { multi: true });\n    return db.removeAsync({}, { multi: true });\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n} from 'react-native';\nimport { Button, Icon, Divider, FAB } from 'react-native-elements';\n\nimport QuizList from './QuizList';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport * as API from '../../../data/quizApi';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Create}\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        props.setTab(4);\n                    }}\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => props.setTab(0)}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView>\n                    {props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : props.quiz?.length > 0 ? (\n                        props.quiz?.map((el, i) => {\n                            return (\n                                <QuizList\n                                    index={i}\n                                    key={el._id}\n                                    quiz={el}\n                                    lang={props.lang}\n                                    deleteId={deleteId}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {QuizLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Avatar,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n    const [edit, setEdit] = useState(false);\n\n    const pickOutQuestion = () => {\n        const tmp = props.contentList;\n        tmp.splice(props.index, 1)\n        props.setContent([...tmp]);\n    };\n\n    const pickCorrectIcon = () => {\n        if (props.content.fileType === 'image') {\n            return (\n                <Avatar\n                    source={{ uri: props.content.uri }}\n                    rounded\n                    size={'medium'}\n                    containerStyle={{marginHorizontal: 8}}\n                />\n            );\n        } else if (props.content.fileType === 'audio') {\n            return (\n                <Icon\n                    raised\n                    name={'musical-notes-outline'}\n                    type={'ionicon'}\n                    color={'#8F9EB0'}\n                />\n            );\n        } else {\n            return (\n                <Icon\n                    raised\n                    name={'text-outline'}\n                    type={'ionicon'}\n                    color={'#8F9EB0'}\n                />\n            );\n        }\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{ marginRight: 10 }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={{ fontWeight: 'bold' }}\n                    onPress={pickOutQuestion}\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { setEdit(true) }} >\n                { pickCorrectIcon() }\n                <ListItem.Content>\n                    <ListItem.Title>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","import React from 'react';\nimport { View, Text, Platform } from 'react-native';\nimport { Button, Image } from 'react-native-elements';\nimport Lottie from '../../../utils/Lottie';\n\nimport SuccessImage from '../../../../assets/img/activities/quiz/success.gif';\n\nimport styles from '../styles';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useEffect, useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Image\n} from 'react-native';\nimport { Button, Icon, Input, Badge, FAB } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from './SuccessContent';\n\nimport * as API from '../../../../data/quizApi';\n\nimport styles from '../styles';\n\nexport default function FormQuizContent(props) {\n    const [answer, setAnswer] = useState();\n\n    const addAnswer = () => {\n        if (!answer?.trim()) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const printFile = () => {\n        if (props.fileType == 'image') {\n            return (\n                <View>\n                    <FAB\n                        color='red'\n                        style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                        size=\"small\"\n                        icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                        onPress={() => {\n                            clearFile();\n                        }}\n                    />\n                    <Image source={{uri: props.uri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n                </View>\n            )\n        }\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <ScrollView contentContainerStyle={styles.ScrollView}>\n                { printFile() }\n                <Button\n                    title={QuizLang[props.lang].ImportFile}\n                    buttonStyle={{ borderRadius: 15 }}\n                    onPress={pickFile}\n                />\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].ReferenceFile}\n                </Text>\n                <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                    <Input\n                        value={props.question}\n                        inputStyle={{fontSize: 14}}\n                        containerStyle={{marginBottom: 50}}\n                        placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                        onChangeText={(e) => props.setQuestion(e)}\n                    />\n                    <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                    <Input\n                        placeholder={QuizLang[props.lang].AddAnswer}\n                        inputStyle={{fontSize: 14}}\n                        value={answer}\n                        onChangeText={(e) => setAnswer(e)}\n                    />\n                    <Button\n                        icon={\n                            <Icon\n                                name={'add-circle'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={18}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => addAnswer()}\n                    />\n                    </View>\n                </View>\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].WhatIsAnswer}\n                </Text>\n                <View style={styles.badgesView}>\n                    {props.answers.map( (el, i) => {\n                        return(\n                            <Badge\n                                key={i}\n                                value={el}\n                                badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                onPress={() => pickOutAnswer(i)}\n                            />\n                        )\n                    })}\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n};","import React, { useEffect, useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContent from './FormQuizContent';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [disable, setDisable] = useState(true);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n\n    useEffect( () => {\n        if (answers?.length > 0 && question) {\n            setDisable(false);\n        } else {\n            setDisable(true);\n        }\n    }, [answers, question]);\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name,\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button containerStyle={{ marginTop: 10, width: 40 }} title={{}} icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    } disabled={name?.length < 3 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={createQuestion ? QuizLang[props.lang].OK : QuizLang[props.lang].Complete}\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ (createQuestion && disable) || (!createQuestion && content?.length === 0) ? true : false}\n                    onPress={() => {\n                        if (createQuestion) pushContent();\n                        else setModal(true);\n                    }}\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => { createQuestion ? setCreateQuestion(false) : props.setTab(2) }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n                {createQuestion === true ?\n                <FormQuizContent\n                    /* Form to create a quiz */\n                    lang={props.lang}\n                    setCreateQuestion={setCreateQuestion}\n                    setAnswers={setAnswers}\n                    setFileType={setFileType}\n                    setQuestion={setQuestion}\n                    setUri={setUri}\n                    setFilename={setFilename}\n                    setSuccess={setSuccess}\n                    uri={uri}\n                    filename={filename}\n                    answers={answers}\n                    fileType={fileType}\n                    question={question}\n                    success={success}\n                /> :\n                <SafeAreaView style={styles.safeArea}>\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setCreateQuestion(true)}\n                    />\n                    <ScrollView style={{marginBottom: 40}}>\n                        {props.loading ? (\n                            <ActivityIndicator\n                                color={'blue'}\n                                size={'small'}\n                                style={styles.loading}\n                            />\n                        ) : content?.length > 0 ? (\n                            content?.map((el, i) => {\n                                return (\n                                    <QuestionList\n                                        index={i}\n                                        key={i}\n                                        content={el}\n                                        lang={props.lang}\n                                        setContent={setContent}\n                                        contentList={content}\n                                    />\n                                );\n                            })\n                        ) : (\n                            <Text style={styles.nothingYet}>\n                                {QuizLang[props.lang].NoQuestionYet}\n                            </Text>\n                        )}\n                    </ScrollView>    \n                </SafeAreaView>\n            }\n        </>\n    );\n}\n","import React from 'react';\nimport { Text, Button, Icon, FAB } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif')\n\n    return (\n    <>\n        <FAB\n            style={{marginTop: 140, position: 'absolute', zIndex: 10}}\n            containerStyle={{marginLeft: 120}}\n            size=\"small\"\n            icon={{name: 'repeat-sharp', type: 'ionicon', color:'white' }}\n            onPress={() => props.pickRandomQuizz()}\n        />\n        <Lottie LottieSource={ThinkingLottie} ImageSource={ThinkingImage} LottieStyle={{marginTop: -25, height: 250, marginBottom: -30}} />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButton}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            buttonStyle={{ backgroundColor: 'red' }}\n            containerStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, View } from 'react-native';\nimport { Text, Image, Input, Button } from 'react-native-elements';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const setMediaType = () => {\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image transition={true} source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <></>;\n            default:\n                return <></>;\n        }\n    };\n\n    const answerQuestion = () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        setAnswer('');\n        if (game[current].answers.includes(answerTrimedLowercase) === false) {\n            // increment the success and update the API\n            alert('wrong answer');\n        } else {\n            // increment the fail and update the API\n            alert('good answer');\n        }\n        if (current + 1 <= game.length - 1)\n            setCurrent(current + 1);\n        else\n            alert('game over')\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button buttonStyle={styles.buttonQuizGameOK} title={QuizLang[props.lang].OK} onPress={() => { answerQuestion() }} />\n                </View>\n            </>\n        }\n    </>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useEffect, useState } from 'react';\nimport { View } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\nexport default function Play(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [play, setPlay] = useState(false);\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif')\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quiz={props.quiz.content}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n        }\n    </View>);\n};","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Edition/CreateQuiz';\nimport Play from './Play';\n\nimport * as API from '../../../data/quizApi';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            setRandom(randomNumber(0, quiz.length - 1));\n        }\n    }\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Text>Tab 3 (Help?)</Text>;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return <View style={styles.view}>{printPage()}</View>;\n}\n","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({});\n","import React from 'react';\nimport { ScrollView, Text } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport styles from './styles';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <Text>todo</Text>\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: 60, color: '#5bc0de' }],\n                tabBarLabelStyle: [{ color: '#5bc0de', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} />}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        marginBottom: 20,\n        width: 100 + '%',\n        backgroundColor: 'white',\n    },\n    topLottie: {\n        marginTop: -20,\n        width: 200,\n        height: 200,\n        marginBottom: -90,\n    },\n    bgLottie: {\n        width: 100 + '%',\n        opacity: 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: 100 + '%',\n        height: 100 + '%',\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: 'white',\n    },\n    heading: {\n        fontSize: 24,\n        color: '#3B8EFF',\n        marginTop: 10,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport SuccessImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/home');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/home', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/home', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={SuccessImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport Home from './pages/Home';\nimport Activities from './pages/Activities';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    let local = Localization.locale?.split('-')[0] || 'fr';\n    const lang = ['en', 'fr'].includes(local) ? local : 'fr';\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={\n                                <Home\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}