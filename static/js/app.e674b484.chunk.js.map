{"version":3,"sources":["assets/img/activities/trophy.gif","assets/img/activities/help/question_mark.gif","assets/img/interface/profile.jpg","assets/img/activities/sad.gif","assets/sound/global/applause.mp3","assets/sound/global/you_lose.mp3","assets/sound/simon/green.mp3","assets/img/alzheimapp_logo.png","assets/img/username/chooseusername.gif","assets/img/selection/loading_brain.gif","assets/img/selection/addedUser.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/tutorial/swipe-right.gif","assets/img/activities/brain.gif","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/quiz/logo.png","assets/img/activities/quiz/success.gif","assets/img/activities/double/logo.png","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","assets/img/activities/quiz/thinking.gif","assets/sound/double/ambiant.mp3","assets/sound/double/success.mp3","assets/sound/double/fail.mp3","assets/sound/double/play.mp3","assets/sound/double/next.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","language/home/index.js","pages/Home/styles.js","pages/Home/index.js","pages/ChooseUsername/styles.js","language/selection/index.js","components/selection/Rows.js","components/selection/styles.js","components/utils/Lottie.js","components/selection/PersonCreation/Success.js","data/dictaphoneApi.js","data/simonApi.js","data/quizApi.js","utils/helpers.js","data/personApi.js","components/selection/PersonCreation/Form.js","components/selection/PersonCreation/CreatePerson.js","pages/SelectionMenu/styles.js","pages/SelectionMenu/index.js","pages/ChooseUsername/index.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","components/utils/HomeOrTutorial.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/Help.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/utils/quizFunc.js","components/activities/Quiz/Creation/QuestionList.js","components/activities/Quiz/utils/scoreFunc.js","components/activities/Quiz/QuizList.js","components/activities/Quiz/ViewQuizList.js","components/activities/Quiz/SuccessContent.js","components/activities/Quiz/Creation/FormQuizContent.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Creation/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/Help.js","components/activities/Quiz/index.js","language/activities/double/index.js","components/activities/Double/styles.js","data/doubleApi.js","components/activities/Double/Help.js","components/activities/Double/Menu.js","components/activities/Double/subs/helpers.js","components/activities/Double/subs/Card.js","components/activities/Double/Play.js","components/activities/Double/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/QuizScore/index.js","pages/Activities/Score/SimonScore/index.js","pages/Activities/Score/DoubleScore/index.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","Select","Import","Introduction","Source","License","Language","StyleSheet","create","container","height","backgroundColor","alignItems","header","marginTop","textAlign","logo","width","menu","flex","marginBottom","button","color","justifyContent","buttonContainer","borderRadius","copyleft","fontSize","fontStyle","Home","props","navigate","useNavigate","View","styles","Image","source","AlzheimApp","resizeMode","ScrollView","title","HomeLang","buttonStyle","titleStyle","containerStyle","icon","name","type","size","marginRight","marginLeft","raised","onPress","state","iconContainerStyle","setLang","prev","wrapper","alignContent","heading","marginHorizontal","description","textInput","borderColor","paddingHorizontal","shadowOpacity","shadowRadius","shadowOffset","elevation","image","buttonText","paddingTop","slide","padding","viewrow","flexDirection","flexWrap","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","TouchableScale","Platform","OS","default","mod","index","componentProps","Component","key","id","bottomDivider","picture","uri","DefaultProfilePicture","rounded","Content","Title","fullname","Subtitle","Chevron","rightButton","minHeight","imageSuccess","leftButton","view","alignSelf","marginVertical","btnImport","btnSave","profilePicture","successPageTitle","Lottie","LottieStyle","LottieSource","loop","hasOwnProperty","autoPlay","ImageSource","ImageStyle","Success","SuccessImage","edit","InterfaceLang","e","close","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","createQuizContent","el","uuidv4","success","failed","includes","fileType","uploadQuizFile","path","FileSystem","from","to","updateScore","quizId","contentId","_id","quiz","contentIndex","content","findIndex","scoreIndex","pushErrors","errors","field","msg","randomNumber","min","max","Math","floor","random","person","trim","Object","keys","upd","$set","catch","log","Form","useState","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","encoding","fsRead","setImage","placeholder","leftIcon","label","errorStyle","renderErrorMessage","maxLength","errorMessage","inputStyle","value","onChangeText","setFullname","setDescription","cb","Person","intermediates","imgName","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","topImage","zIndex","boldtext","subtitle","overflow","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","searchBar","searchInputStyle","SelectionMenu","isLoading","setIsLoading","search","setSearch","setIndex","SelectionMenuLang","btnText","setBtnTxt","active","setActive","swiper","useRef","useLocation","useEffect","Audio","setIsEnabledAsync","regex","RegExp","$regex","backHandler","BackHandler","addEventListener","remove","list","position","LoadingBrain","TouchableOpacity","activeOpacity","idx","ActivityIndicator","current","scrollBy","SafeAreaView","ref","showsButtons","scrollEnabled","pagingEnabled","showsPagination","onIndexChanged","setTimeout","inputContainerStyle","map","input","setInput","loadPage","setLoadPage","confirmed","setConfirmed","parseUsername","setUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","animating","Loading","LoadingImage","slideOdd","titleOdd","textOdd","paddingBottom","borderWidth","Tutorial","res","StepOne","SwipeImage","opacity","StepTwo","StepThree","StepFour","StepFive","StepSixth","component","Config","HomeOrTutorial","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","QuizScore","SimonScore","DoubleScore","NoScore","Global","BestScoreByDay","ReturnList","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","deletePerson","SimonDB","removeAsync","DictaphoneDB","deleted","ActivitiesLang","Alert","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","isPlaying","setIsPlaying","progress","setProgress","Sound","sound","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","playAsync","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","unloadAsync","positionMillis","playableDurationMillis","variant","animation","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","getURI","folder","record","DictaphoneLang","Date","created","deleteRecord","goBack","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","createAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","clr","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","Head","RulesHead","TriesHead","Rules","TriesExplain","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","viewHelpPage","leaveButtonHelpPage","helpHead","helpStepHead","textTransform","helpStep","helpQuestionMark","Menu","SimonLogo","SimonLang","setTab","Game","start","setStart","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","dailyScoreBeaten","globalScoreBeaten","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","disabled","QuestionMark","tab","pos","Create","GoBack","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","GiveUpQuizTitle","GiveUpQuiz","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","EditedQuiz","QuizListRedirection","selectedQuizz","quizName","Questions","SuccessTitle","FailedTitle","answers","join","SuccessQuizTitle","SuccessQuiz","fail","FailQuizTitle","FailQuiz","SaveContent","AddContent","SureCancelEdition","CustomHead","Custom","answersText","leaveButtonPlay","createButton","overlayDescriptionReference","ScrollViewSuccess","modalTitle","modalDescription","quizTitleInputContainer","quizTitleInput","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","QuizLogo","QuizLang","printFile","clearFile","pauseSound","playSound","QuestionList","quizEdit","newContent","quizEdition","Number","isInteger","questionId","tmp","setNewContent","setQuizEdit","setReload","reload","setEditedQuiz","contentList","setContent","pickOutQuestion","setEditContent","question","ScoreRatio","filter","parseInt","total","toFixed","QuizList","ViewQuizList","SuccessContent","FormQuizContent","answer","setAnswer","contentContainerStyle","setFileType","setFilename","setUri","DocumentPicker","mimeType","flexShrink","setQuestion","toLowerCase","setAnswers","addAnswer","badgeStyle","pickOutAnswer","ViewQuiz","newQuestion","setNewQuestion","editContent","editedQuiz","saveQuiz","concat","editedFile","buttonTop","mode","saveContent","pushContent","viewPage","CreateQuiz","createQuestion","setCreateQuestion","setName","modalConfirmation","setModalConfirmation","undefined","substring","ThinkingImage","quizLength","pickRandomQuizz","ThinkingLottie","setPlay","setCurrent","setFail","arr","j","shuffle","TrophyLottie","SadLottie","openAlertResultQuestion","SadImage","setMediaType","answerTrimedLowercase","answerQuestion","play","setQuiz","setRandom","rand","randomArrayElement","exclude","randNumber","RemaningTries","Reinit","TitleGiveUp","SureToGiveUp","BestDayScore","ScoreHead","ScoreHelp","aspectRatio","RectoCard","PlayingCard","VersoCard","IconCard","viewGame","buttonViewPlay","playButtons","getBestScore","insertScore","DoubleLang","DoubleLogo","ambiantEnabled","ambiantSoundPlay","soundEnabled","setSoundEnabled","ambiant","generateRandomPair","colors","icons","indexColor","indexIcon","Card","cardStyles","inPlay","inFound","show","ReturnCard","found","setFound","setShow","currentPlay","indexGame","playing","currentGameLength","nFound","setScore","prevScore","prevTries","endGame","bestScoreDay","failOverlay","element","giveUp","newModel","Double","setBestScoreDay","setAmbiant","setAmbiantEnabled","bestDayScore","prevEnable","choosenSound","returnComponent","page","ActivitiesList","iconPosition","scoreRow","scoreRowSimon","scoreHeading","margin","quizScore","setQuizScore","horizontal","textStyle","valueSuffix","activeStrokeColor","radius","inActiveStrokeColor","inActiveStrokeOpacity","inActiveStrokeWidth","activeStrokeWidth","simonScore","setSimonScore","btnIndex","setBtnIndex","buttons","TotalScore","selectedIndex","global","days","item","highestToLowest","b","labels","datasets","fromZero","showValuesOnTopOfBars","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","printScore","doubleScore","setDoubleScore","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","unmountOnBlur","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","setPerson","BgSource","navTheme","DefaultTheme","background","BackgroundImage","NavigationContainer","theme","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact"],"mappings":"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","file":"static/js/app.e674b484.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/question_mark.c1494184.gif\";","module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sad.bfdab12f.gif\";","module.exports = __webpack_public_path__ + \"static/media/applause.bfbba08b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/you_lose.c6b6ef1b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/alzheimapp_logo.e07c8c32.png\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading_brain.ef5884d9.gif\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.ede08671.png\";","module.exports = __webpack_public_path__ + \"static/media/2.b87932e3.png\";","module.exports = __webpack_public_path__ + \"static/media/3.3ed4e762.png\";","module.exports = __webpack_public_path__ + \"static/media/4.80535fcd.png\";","module.exports = __webpack_public_path__ + \"static/media/5.da0bedf3.png\";","module.exports = __webpack_public_path__ + \"static/media/6.7911d645.png\";","module.exports = __webpack_public_path__ + \"static/media/swipe-right.6dde9c7c.gif\";","module.exports = __webpack_public_path__ + \"static/media/brain.70fc8c58.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.097ce51b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.348cd96d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.5d28b463.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.acbb69fd.png\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e82f415e.gif\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.e46e92e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.83357dfb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fail.60814d28.mp3\";","module.exports = __webpack_public_path__ + \"static/media/play.25c902a7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.c7b1e976.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n}\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n}\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n}\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n}\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n}\n\nexport function reset() {\n    return AsyncStorage.clear();\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retourner sur le formulaire',\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet requise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? C'est possible, le partage est réalisable entre deux appareils par {0} !\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can share data between two devices with {0} technology!\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer {0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Select: \"Sélection des personnes\",\n        Import: \"Importer un profil\",\n        Introduction: \"Introduction\",\n        Source: \"Accès au code source\",\n        License: \"Code sous license GPL v3.\\nCréation originale par Diyaeddine LAOUID.\",\n        Language: \"Changer la langue\"\n    },\n    en: {\n        Select: \"Select a person\",\n        Import: \"Import a profil\",\n        Introduction: \"Introduction\",\n        Source: \"Source code on GitHub\",\n        License: \"Licensed GPL v3 source code.\\nOriginally created by Diyaeddine LAOUID.\",\n        Language: \"Change language\"\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        height: 120 + '%',\n        backgroundColor: '#355c7d',\n        alignItems: 'center'\n    },\n    header: {\n        marginTop: 30,\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    logo: {\n        width: 180,\n        height: 180\n    },\n    menu: {\n        marginTop: 30,\n        flex: 1,\n        marginBottom: 20\n    },\n    button: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'white',\n        color: '#355c7d',\n        justifyContent: 'flex-start'\n    },\n    buttonContainer: {\n        borderRadius: 25,\n        alignItems: 'center',\n        marginBottom: 20\n    },\n    copyleft: {\n        marginTop: 60,\n        fontSize: 11,\n        color: 'white',\n        textAlign: 'center',\n        fontStyle: 'italic'\n    }\n});\n","import React, { useEffect } from 'react';\nimport {\n    View,\n    ScrollView,\n    Image\n} from 'react-native';\n\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport { lang as HomeLang } from '../../language/home';\nimport AlzheimApp from '../../assets/img/alzheimapp_logo.png';\n\nimport styles from './styles';\n\nexport default function Home(props) { \n\n    const navigate = useNavigate();\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Image source={AlzheimApp} style={styles.logo} resizeMode={'cover'} />\n            </View>\n            <ScrollView style={styles.menu}>\n                <Button\n                    title={HomeLang[props.lang].Select}\n                    buttonStyle={styles.button}\n                    titleStyle={{ color: '#355c7d', textAlign: 'center' }}\n                    containerStyle={styles.buttonContainer}\n                    icon={\n                        <Icon\n                            name={'person-outline'}\n                            type={'ionicon'}\n                            color={'#355c7d'}\n                            size={15}\n                            style={{ marginRight: 20, marginLeft: 10 }}\n                        />\n                    }\n                    raised\n                    onPress={() => navigate('/selection', {\n                        state: { username: props.username, lang: props.lang }\n                    })}\n                />\n                <Button\n                    title={HomeLang[props.lang].Import}\n                    buttonStyle={styles.button}\n                    titleStyle={{ color: '#355c7d' }}\n                    containerStyle={styles.buttonContainer}\n                    iconContainerStyle={{ marginRight: 50 }}\n                    icon={\n                        <Icon\n                            name={'person-add-outline'}\n                            type={'ionicon'}\n                            color={'#355c7d'}\n                            size={15}\n                            style={{ marginRight: 20, marginLeft: 10 }}\n                        />\n                    }\n                    raised\n                />\n                <Button\n                    title={HomeLang[props.lang].Language}\n                    buttonStyle={styles.button}\n                    titleStyle={{ color: '#355c7d' }}\n                    containerStyle={styles.buttonContainer}\n                    iconContainerStyle={{ marginRight: 50 }}\n                    icon={\n                        <Icon\n                            name={'world-o'}\n                            type={'fontisto'}\n                            color={'#355c7d'}\n                            size={15}\n                            style={{ marginRight: 20, marginLeft: 10 }}\n                        />\n                    }\n                    onPress={() => props.setLang(prev => prev == 'fr' ? 'en' : 'fr')}\n                    raised\n                />\n                <Button\n                    title={HomeLang[props.lang].Introduction}\n                    buttonStyle={styles.button}\n                    titleStyle={{ color: '#355c7d' }}\n                    containerStyle={[styles.buttonContainer, {marginBottom: 80}]}\n                    iconContainerStyle={{ marginRight: 50 }}\n                    icon={\n                        <Icon\n                            name={'book-outline'}\n                            type={'ionicon'}\n                            color={'#355c7d'}\n                            size={15}\n                            style={{ marginRight: 20, marginLeft: 10 }}\n                        />\n                    }\n                    raised\n                    onPress={() => navigate('/tutorial') }\n                />\n                <Button\n                    title={HomeLang[props.lang].Source}\n                    buttonStyle={styles.button}\n                    titleStyle={{ color: '#355c7d' }}\n                    containerStyle={styles.buttonContainer}\n                    iconContainerStyle={{ marginRight: 50 }}\n                    icon={\n                        <Icon\n                            name={'logo-github'}\n                            type={'ionicon'}\n                            color={'#355c7d'}\n                            size={15}\n                            style={{ marginRight: 20, marginLeft: 10 }}\n                        />\n                    }\n                    raised\n                />\n                <Text style={styles.copyleft} >{HomeLang[props.lang].License}</Text>\n            </ScrollView>\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 40,\n        borderColor: 'gray',\n        borderRadius: 20,\n        paddingHorizontal: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        elevation: 2,\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n    },\n    buttonText: {\n        paddingTop: 10,\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to produce today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text, Platform } from 'react-native';\nimport { Button, Image } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/selection/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/selection/addedUser.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <Button\n                title={InterfaceLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nconst createQuizContent = async (personId, el) => {\n    el.id = uuidv4();\n    el.score = [{personId: personId, success: 0, failed: 0}];\n    if (['audio', 'image'].includes(el.fileType)) {\n        await uploadQuizFile(el);\n    }\n};\n\nconst uploadQuizFile = async (el) => {\n    const filename = `${uuidv4()}${el.fileType == 'audio' ? '.m4a' : '.png'}`;\n    const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n    await FileSystem.copyAsync({\n        from: el.uri,\n        to: `${path}${filename}`\n    });\n    await FileSystem.deleteAsync(el.uri);\n    el.uri = `${path}${filename}`;\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        await createQuizContent(personId, el);\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport async function updateScore(personId, quizId, contentId, success) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    const contentIndex = quiz[0].content.findIndex(el => el.id == contentId );\n    const scoreIndex = quiz[0].content[contentIndex].score.findIndex(el => el.personId = personId);\n    if (success) quiz[0].content[contentIndex].score[scoreIndex].success++\n    else quiz[0].content[contentIndex].score[scoreIndex].failed++\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function deleteId(personId, quizId) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n};\n\nexport async function deleteQuestion(quizId, questionId) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    const content = quiz[0].content;\n    const contentIndex = content.findIndex(el => el.id == questionId );\n    if (['audio', 'image'].includes(content[contentIndex]))\n        await FileSystem.deleteAsync(content.uri);\n    quiz[0].content = content.splice(0, contentIndex);\n    return db.updateAsync({_id: quizId}, {...quiz[0]})\n};\n\nexport async function getById(quizId) {\n    return db.findAsync({ _id: quizId }, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n};\n\nexport async function saveQuiz(personId, quizId, content) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    if (!quiz) return;\n    for (let i = 0; i < content.length; i++) {\n        const el = content[i];\n        if (!el.id)\n            await createQuizContent(personId, el);\n        else if (el.id && el.editedFile) {\n            await uploadQuizFile(el);\n            delete el.editedFile;\n        }\n    }\n    quiz[0].content = content;\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function reset() {\n    return db.removeAsync({}, { multi: true });\n};\n","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nexport const randomArrayElement = (exclude, min, max) => {\n    randNumber = randomNumber(min, max);\n    if (randNumber == exclude)\n        return randomArrayElement(exclude, min, max);\n    return randNumber;\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\nimport { db as QuizDB } from './quizApi'\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return db.removeAsync({ _id: id });\n};\n\nexport async function reset() {\n    return FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(async res => {\n        await SimonDB.removeAsync({}, { multi: true });\n        await QuizDB.removeAsync({}, { multi: true });\n        await DictaphoneDB.removeAsync({}, { multi: true });\n        return db.removeAsync({}, { multi: true });\n    });\n};","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0)\n                personId = result._id;\n            await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${personId}`, {intermediates: true})\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    wrapper: {\n        marginTop: 100,\n        textAlign: 'center',\n        alignItems: 'center',\n    },\n    topImage: {\n        flex: 1,\n        width: 80,\n        marginTop: -270,\n    },\n    heading: {\n        marginTop: -190,\n        fontSize: 20,\n        zIndex: 2,\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: '#3B8EFF',\n    },\n    subtitle: {\n        textAlign: 'center',\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: 10,\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1,\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Text,\n    View,\n    Image,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    BackHandler,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB } from 'react-native-elements';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport LoadingBrain from '../../assets/img/selection/loading_brain.gif';\nimport { lang as SelectionMenuLang } from '../../language/selection';\nimport Rows from '../../components/selection/Rows';\nimport CreatePerson from '../../components/selection/PersonCreation/CreatePerson';\n\nimport * as Person from '../../data/personApi';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function SelectionMenu(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        SelectionMenuLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const swiper = useRef(null);\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n\n    useEffect(() => {\n        Audio.setIsEnabledAsync(false);\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - index, true);\n    };\n\n    const changeIndex = (idx) => {\n        setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                setBtnTxt(SelectionMenuLang[lang].AddAPerson);\n            } else if (idx === 1) {\n                setBtnTxt(SelectionMenuLang[lang].ReturnToList);\n            }\n            setActive(true);\n        }, 400);\n    };\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 305,\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home') }\n            />\n            <View style={styles.wrapper}>\n                <Image\n                    source={LoadingBrain}\n                    resizeMode=\"contain\"\n                    style={styles.topImage}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[lang].Hello(username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (active === false) {\n                            return;\n                        }\n                        setActive(false);\n                        setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={SelectionMenuLang[lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    setSearch(e);\n                                }}\n                                value={search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {persons && persons.length > 0 ? (\n                                printRows(persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={persons}\n                                setPersons={setPersons}\n                                lang={lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    TouchableOpacity,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername, SawTutorial } from '../../data/configApi';\nimport Home from '../Home';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\nimport SelectionMenu from '../SelectionMenu';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [loadPage, setLoadPage] = useState(true);\n    const [confirmed, setConfirmed] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (props.username?.length > 0)\n            navigate('/home');\n        setLoadPage(false);\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            setUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (loadPage)\n        return <View style={styles.container}></View>\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <TouchableOpacity\n                        style={styles.button}\n                        activeOpacity={0.5}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                    >\n                        <Text style={styles.buttonText}>\n                            {' '}\n                            {isLoading ? (\n                                <ActivityIndicator\n                                    color=\"white\"\n                                    size=\"small\"\n                                    animating={true}\n                                />\n                            ) : (\n                                'OK'\n                            )}\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        );\n    } else {\n        return <Home lang={props.lang} />;\n    }\n}\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    slideOdd: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#355c7d',\n    },\n    title: {\n        color: 'black',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center',\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center',\n    },\n    titleOdd: {\n        color: 'white',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center',\n    },\n    textOdd: {\n        color: 'white',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center',\n    },\n    image: {\n        flex: 3,\n        width: 100 + '%',\n        height: 400,\n    },\n    buttonContainer: {\n        flex: 2,\n        marginTop: -40,\n    },\n    button: {\n        marginTop: 10,\n        paddingTop: 15,\n        paddingBottom: 15,\n        marginLeft: 30,\n        marginRight: 30,\n        backgroundColor: '#6396c0',\n        borderRadius: 10,\n        borderColor: 'white',\n        borderWidth: 1\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        fontWeight: 'bold'\n    },\n});\n","import React, { useEffect } from 'react';\nimport { Text, View, Image, TouchableOpacity } from 'react-native';\n\nimport { Link } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport SwipeImage from '../../assets/img/tutorial/swipe-right.gif';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport Lottie from '../../components/utils/Lottie';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\nimport SelectionMenu from '../SelectionMenu';\n\nexport default function Tutorial(props) {\n    const LottieSource = require('../../assets/lottie/swipe-right.json');\n\n    useEffect(() => {\n        Config.getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    return <SelectionMenu username={res} lang={props.lang} />;\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <>\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                    <Lottie\n                        LottieSource={LottieSource}\n                        ImageSource={SwipeImage}\n                        LottieStyle={{\n                            position: 'absolute',\n                            height: 80,\n                            marginTop: 280,\n                            marginLeft: 80,\n                            opacity: 0.8,\n                        }}\n                        ImageStyle={{\n                            position: 'absolute',\n                            height: 80,\n                            marginTop: 280,\n                            marginLeft: 80,\n                            opacity: 0.8,\n                        }}\n                    />\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Link\n                            to=\"/username\"\n                            component={TouchableOpacity}\n                            style={styles.button}\n                            onPress={(e) => {\n                                Config.SawTutorial(true);\n                            }}\n                            activeOpacity={0.5}\n                        >\n                            <Text style={styles.buttonText}>\n                                {' '}\n                                {TutorialLang[props.lang].LastStepButton}{' '}\n                            </Text>\n                        </Link>\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport SelectionMenu from '../../pages/SelectionMenu';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} />;\n    }\n    return <SelectionMenu lang={props.lang} username={props.username} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        Home: 'Accueil',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n        QuizScore: \"Score des quiz\",\n        SimonScore: \"Score du Simon\",\n        DoubleScore: \"Score du jeu des pairs\",\n        NoScore: \"Aucun score enregistré pour cette activité...\",\n        Success: 'réussite',\n        Global: \"Vue d'ensemble\",\n        BestScoreByDay: 'Meilleur score du jour',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        Home: 'Home',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n        QuizScore: \"Quiz Score\",\n        SimonScore: \"Simon Score\",\n        DoubleScore: \"Double Memory Score\",\n        NoScore: \"No score registered for this activity...\",\n        Success: 'success',\n        Global: \"Global view\",\n        BestScoreByDay: 'Best score by day',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#5EA1E4',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\n\nimport { ScrollView, Alert, View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/selection/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\n\nimport styles from './styles';\nimport Form from '../../../components/selection/PersonCreation/Form';\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname(props.person.fullname);\n        setUriPreview(props.person.picture);\n        setImage('');\n        setDescription(props.person.description);\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/selection');\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.username),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: 'bluetooth',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ShareProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/selection');\n                        }}\n                    />\n                </ScrollView>\n            ) : (\n                <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => setEdit(false)}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </ScrollView>\n            )}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync();\n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const goBack = async () => {\n        await recording?.stopAndUnloadAsync();\n        stopPlayingSounds();\n        props.setPage(0);\n    }\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            el.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                    <Button\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'caret-back-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        buttonStyle={styles.recordButton}\n                        title={{}}\n                        titleStyle={styles.titleButton}\n                        onPress={() => goBack()}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <View style={styles.actionButtonsView}>\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n                <Button\n                    containerStyle={styles.actionButtons}\n                    icon={{\n                        name: 'caret-back-outline',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={{}}\n                    titleStyle={styles.titleButton}\n                    onPress={() => goBack()}\n                />\n                </View>\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n\n\n\n\n        // Help section\n        Head: \"Le Simon, comment ça marche ?\",\n        RulesHead: \"Les règles\",\n        TriesHead: \"Les essais\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu Simon est un {0} de forme circulaire comportant quatre gros boutons de couleurs différentes: rouge, vert, jaune et bleu.\\n\\nLe jeu {1} une des quatres couleurs et {2} toujours associé à cette couleur. Le joueur doit alors {3}.\\n\\nLe jeu {4}, puis {5} une nouvelle couleur. Le jour doit reproduire cette nouvelle séquence. Chaque fois que le joueur reproduit correctement la séquence, le jeu ajoute une nouvelle couleur.`,\n                boldText: ['jeu de mémoire', 'éclaire', 'produit un son', \"appuyer sur la touche de la couleur qui vient de s'allumer\", 'répète la même couleur et le même son', 'ajoute'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois que vous ratez une séquence, vous {0}. Au cours d'une partie, vous avez le droit à seulement {1}.\\n\\nUne fois les quatre erreurs faites, ou alors lorsque vous {2}, votre score est compatibilisé en fonction du nombre de touches dans la séquence actuelle.\\n\\nChaque jour, {3}.`,\n                boldText: ['perdez un essai', 'quatre erreurs', 'abandonnez la partie en cours', 'votre score journalier est remit à zéro'],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n\n\n\n\n        // Help section\n        Head: `The Simon, how does it works?`,\n        RulesHead: \"The rules\",\n        TriesHead: \"The tries\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The Simon is a circular shaped {0} with four different colored buttons: red, green, yellow and blue.\\n\\nThe game {1} one of the four colors and {2} always associated to this color. The player shall {3}.\\n\\nThe game {4}, then {5} another color. The player will have to reproduces this sequence. Each time the player successfully reproduces the sequence, the game adds another color in this sequence.`,\n                boldText: ['memory game', 'lighten', 'produces a sound', \"press the colored button which has just turned on\", 'repeat the same color with the same sound', 'add'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `Each time you fail a sequence, you {0}. In a game, you are allowed up to {1}.\\n\\nOnce the four fails made, or when you {2}, you will have the number of elements in the current sequence saved as your score.\\n\\nEach day, {3}.`,\n                boldText: ['lose a try', 'four maximum fails', 'give up the current game', 'your daily score is reset to zero'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        paddingTop: 20,\n        flex: 1,\n        alignItems: 'center'\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        // flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        //flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    // Help section\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .4,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate, dailyScore < order.length - 1, bestScore < order.length - 1);\n        setCanPlay(false);\n        setSuccess(true);\n        const path = dailyScore < order.length - 1 ? require(`../../../assets/sound/global/applause.mp3`) : require(`../../../assets/sound/global/you_lose.mp3`);\n        const { sound } = await Audio.Sound.createAsync(path);\n        props.setSound(sound);\n        sound.playAsync();\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            <Overlay\n                visible={success}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => setSuccess(false)}\n                ModalComponent={Modal}\n            >\n                {scoreBeaten ? successOverlay() : failOverlay()}\n                <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            retryGame();\n                        }}\n                        title={SimonLang[props.lang].Retry}\n                        containerStyle={{\n                            borderRadius: 13,\n                            marginRight: 10,\n                        }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setTab(0);\n                        }}\n                        title={SimonLang[props.lang].Exit}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React from 'react';\nimport { View, ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView>\n                <Button\n                    title={SimonLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{SimonLang[props.lang].Head}</Text>\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].Rules()}</Text>\n\n                \n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].TriesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].TriesExplain()}</Text>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\nimport Help from './Help';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr, pos) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: i == pos ? color : '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        Cancel: 'Annuler',\n        GoBack: \"Oui, j'annule l'édition du quiz\",\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Abandonner le quiz\",\n        GiveUpQuiz: \"Êtes-vous sûr de vouloir abandonner ce quiz? Le score restera enregistré.\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        EditedQuiz: \"Quiz modifié avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Bien joué !! 😄\",\n        Success: \"Bien joué ! C'est la bonne réponse !! Vous pouvez maintenant passer à la suite !\",\n        FailedTitle: \"Dommage... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Dommage, mais ce n'était pas la bonne réponse ! Les réponses possibles étaient: ${answersText}.`\n        },\n        SuccessQuizTitle: \"Haut la main !\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Fantastique !! Vous avez réussi ce quiz ! Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Dommage... Vous avez raté ce quiz ! ... Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Sauvegarder le quiz',\n        SaveContent: \"Sauvegarder la question\",\n        AddContent: \"Ajouter la question\",\n        SureCancelEdition: \"Êtes-vous sûr de bien vouloir abandonner l'édition de ce quiz? Vous ne pourrez pas récupérer vos modifications.\",\n\n        // Help page related\n        Head: 'Le quiz, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        CustomHead: \"Personnalisation\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Les règles du quiz sont basiques: il y a des questions {0}, et le joueur doit y répondre. Il peut y avoir {1} réponses possibles, une bonne réponse et c'est un point ajouté au score.\\n\\nIl n'y a pas de perte de points suite à une mauvaise réponse.`,\n                boldText: [\"facultativement accompagnées d'une image ou d'un son\", \"plusieurs\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `Il n'y a pas de quiz par défaut. C'est à vous d'en {0} et de les {1} à votre guise !\\nPour cela, vous devez vous rendre dans la partie \"{2}\".\\n\\nVous aurez là la liste des quiz que vous avez préalablement crée. Si vous n'en avez encore créé aucun, façonnez votre premier quiz avec le bouton \"{3}\".\\n\\nIci vous pourrez ajouter des question avec le bouton \"{4}\". Il vous est demandé {5} (facultatif), qui correspond à un son ou une image pour illustrer votre question.\\n\\nEnsuite, vous devez {6}. Ce sera cette question qui sera ensuite demandée au joueur.\\n\\nEt enfin, {7}. Une fois une réponse valide renseignée, cliquez sur le symbole {8} à côté, et votre réponse est ajoutée à la liste des réponses valides à la question. Vous pouvez en avoir 10 maximum.\\n\\nSi vous avez fait une erreur sur une des réponses, {9} pour la retirer de la liste.\\n\\nUne fois tous les éléments de la question renseignées, cliquez sur \"{10}\" au dessus pour enregistrer la question et retourner à la liste des questions précédemment crées. Ajoutez-en autant que vous voulez pour un quiz.\\n\\nVous pouvez également {11}.\\n\\nUne fois le quiz complet, cliquez sur \"{12}\", et voilà ! Renseignez le nom de ce quiz et c'est terminé, le quiz est désormais jouable !`,\n                boldText: [\"créer\",\n                    \"personnaliser\",\n                    \"Voir les quiz\",\n                    \"Créer un quiz\",\n                    \"Ajouter une question\",\n                    \"d'importer un fichier de référence\",\n                    \"renseigner la question\",\n                    \"ajouter les réponses éventuelles\",\n                    \"( + )\",\n                    \"cliquez simplement dessus\",\n                    \"Valider\",\n                    \"cliquer sur une question pour la modifier\",\n                    \"Terminer la création\"\n                ],\n            });\n        }\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizzes',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        Cancel: 'Cancel',\n        GoBack: 'Yes, I want to go back',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'of success',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Submit\",\n        GiveUpQuizTitle: \"Give up\",\n        GiveUpQuiz: \"Are you sure to give up this quiz? The score will be saved.\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        EditedQuiz: \"Quiz successfuly edited!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Well played!! 😄\",\n        Success: \"Well played! That's the good answer!! You can now go to the next question!\",\n        FailedTitle: \"Oops... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Oops, that's not a valid answer... the valid answer${answers.length > 0 ? 's were' : ' was'} : ${answersText}.`\n        },\n        SuccessQuizTitle: \"Easy peasy!\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Congratulations!! You won this quiz! Your score is for {0} good answer(s) for {1} mistake!',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: \"It's alright... You failed this quiz!... Your score is for {0} good answer(s) for {1} mistake!\",\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Save the quiz',\n        SaveContent: \"Save the question\",\n        AddContent: \"Add the question\",\n        SureCancelEdition: \"Are you sure to cancel this quiz edition? Your modification would not be saved\",\n\n        // Help page related\n        Head: 'The quiz, how does it works?',\n        RulesHead: \"The rules\",\n        CustomHead: \"Customization\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `This is a basic quiz game: there are questions {1}, and the player must answer them. There can be {1} answers, one correct answer and it's a point added to the score.\\n\\nThere is no loss of points for a wrong answer.`,\n                boldText: [\"optionally accompanied by an image or a sound\", \"several possible\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `There are no default quizzes. It is up to you to {0} and {1} them as you wish!\\nTo do this, you must go to the \"{2}\" section.\\nThere you will see the list of quizzes that you have already created. If you haven't created any yet, create your first quiz with the \"{3}\" button.\\n\\nHere you can add questions with the \"{4}\" button. You are asked to {5} (optional), which is a sound or image file to illustrate your question.\\n\\nThen you have to {6}. This question will be asked to the player.\\n\\nAnd finally, {7}. Once you have entered a valid answer, click on the {8} symbol next to it, and your answer would be added to the list of the valid answers to the question. You can have a maximum of 10 possible answers.\\n\\nIf you made a mistake on one of the answers, {9} to remove it from the list.\\n\\nOnce you have filled in all the elements of the question, click \"{10}\" above to save the question and return to the list of questions. Add as many as you want to this quiz.\\n\\nYou can also {11}.\\n\\nOnce the quiz is completed, click \"{12}\" and that's it! Fill in the name of this quiz and it's done, the quiz is now playable!`,\n                boldText: [\"create\",\n                    \"customize\",\n                    \"View quizzes\",\n                    \"Create a quiz\",\n                    \"Add a question\",\n                    \"import a reference file\",\n                    \"fill in the question\",\n                    \"add the possible answers\",\n                    \"( + )\",\n                    \"simply click on it\",\n                    \"Submit\",\n                    \"click on a question to edit it\",\n                    \"Complete the quiz creation\"\n                ],\n            });\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: 235,\n        marginTop: 20,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: 235,\n        marginTop: 10,\n        backgroundColor: 'blue',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: 30,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    modalDescription: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: 290,\n        marginTop: 10\n    },\n    quizTitleInput: {\n        fontSize: 15\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 50\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        width: 250\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: 250,\n        height: 250\n    },\n    gameQuestion: {\n        fontSize: 25,\n        marginTop: 10,\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey'\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15\n    },\n\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n        height: 120 + '%',\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image, ActivityIndicator } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            <Button\n                title={props.isLoading ? <ActivityIndicator color={'blue'} size={'small'} /> : QuizLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n                disabled={props.quiz.length === 0}\n            />\n\n            <Button\n                title={QuizLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import {\n    View,\n    Image\n} from 'react-native';\nimport { Icon, FAB, Avatar } from 'react-native-elements';\nimport { Audio } from 'expo-av';\n\nexport const printFile = (fileType, uri, clearFile, isPlaying, pauseSound, setIsPlaying, sound, setSound) => {\n    if (fileType === 'image') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Image source={{uri: uri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n            </View>\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 100, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Icon onPress={() => isPlaying ? pauseSound() : playSound(setIsPlaying, sound, setSound, uri) } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30, zIndex: 2}} />\n            </View>\n        );\n    }\n};\n\nexport const playSound = async (setIsPlaying, sound, setSound, uri) => {\n    setIsPlaying(true);\n    await Audio.setAudioModeAsync({\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n    });\n    const getSoundStatus = await sound?.getStatusAsync();\n    if (getSoundStatus?.isLoaded === false) {\n        await sound.loadAsync({ uri: uri });\n        setSound(sound);\n    }\n    await sound.playAsync();\n    sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n        if (playbackStatus.didJustFinish) {\n            await sound.unloadAsync();\n            setIsPlaying(false);\n        }\n    });\n};\n\nexport const pickCorrectIcon = (fileType, uri) => {\n    if (fileType === 'image') {\n        return (\n            <Avatar\n                source={{ uri: uri }}\n                rounded\n                size={'medium'}\n                containerStyle={{marginHorizontal: 8}}\n            />\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <Icon\n                raised\n                name={'musical-notes-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    } else {\n        return (\n            <Icon\n                raised\n                name={'text-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    }\n};","import React, { useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nimport { pickCorrectIcon } from '../utils/quizFunc';\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n\n    const length = props.quizEdit?.content?.length + props.newContent?.length;\n\n    const pickOutQuestion = () => {\n        if (length <= 2 && props.quizEdition) return;\n        if (props.quizEdition === true) {\n            if (Number.isInteger(props.questionId)) {\n                // if the questionId is an integer, it means it has not\n                // been added to the api yet, so it's an index of the\n                // newContent array passed in the props from the ViewQuiz Component\n\n                const index = props.questionId - props.quizEdit?.content?.length;\n                const tmp = props.newContent;\n                tmp.splice(index, 1);\n                // take out the new content from the newContent state in the\n                // parent component\n                props.setNewContent([...tmp]);\n            } else {\n                // todo not get by api but update quizedit state\n                // update api only when saving quiz\n                const index = props.quizEdit.content.findIndex(el => el.id == props.questionId );\n                const tmp = props.quizEdit;\n                tmp.content.splice(index, 1);\n                props.setQuizEdit(tmp);\n                props.setReload(!props.reload)\n                props.setEditedQuiz(true);\n            }\n        } else {\n            const tmp = props.quizEdition ? props.content : props.contentList;\n            tmp.splice(props.index, 1)\n            props.setContent([...tmp]);\n        }\n        setModal(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{ marginRight: 10 }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={{ fontWeight: 'bold' }}\n                    onPress={() => pickOutQuestion() }\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { props.setEditContent(props.questionId) }} >\n                { pickCorrectIcon(props.content.fileType, props.content.uri) }\n                <ListItem.Content>\n                    <ListItem.Title>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon disabled={props.quizEdition == true && length <= 2} reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","export function ScoreRatio (content, personId) {\n    var success = 0;\n    var fail = 0;\n    content.map( (el, i) => {\n        const score = el.score.filter( (el) => el.personId == personId );\n        score.map( (el, i) => {\n            success += parseInt(el.success);\n            fail += parseInt(el.failed);\n        });\n    });\n    const total = success + fail;\n    if (total == 0)\n        return 0;\n    const score = ((success / total) * 100).toFixed(2);\n    return score;\n};","import React from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport { ScoreRatio } from './utils/scoreFunc';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n\n    return (\n        <ListItem {...componentProps} onPress={() => {\n                props.setEdit(true);\n                props.setQuizEdit(props.quiz);\n            }}>\n            <ListItem.Content>\n                <ListItem.Title>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    { ScoreRatio(props.quiz.content, props.personId) }{'% '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Text,\n    ScrollView,\n} from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport QuizList from './QuizList';\nimport styles from './styles';\n\nimport * as API from '../../../data/quizApi';\n\nexport default function ViewQuizList(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <ScrollView>\n            {props.loading ? (\n                <ActivityIndicator\n                    color={'blue'}\n                    size={'small'}\n                    style={styles.loading}\n                />\n            ) : props.quiz?.length > 0 ? (\n                props.quiz?.map((el, i) => {\n                    return (\n                        <QuizList\n                            index={i}\n                            key={el._id}\n                            quiz={el}\n                            lang={props.lang}\n                            deleteId={deleteId}\n                            personId={props.personId}\n                            setEdit={props.setEdit}\n                            setQuizEdit={props.setQuizEdit}\n                        />\n                    );\n                })\n            ) : (\n                <Text style={styles.nothingYet}>\n                    {QuizLang[props.lang].NothingYet}\n                </Text>\n            )}\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/activities/quiz/success.gif';\n\nimport styles from './styles';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge, FAB } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContent(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <ScrollView contentContainerStyle={styles.ScrollView}>\n                { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                <Button\n                    title={QuizLang[props.lang].ImportFile}\n                    buttonStyle={{ borderRadius: 15 }}\n                    onPress={pickFile}\n                />\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].ReferenceFile}\n                </Text>\n                <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                    <Input\n                        value={props.question}\n                        inputStyle={{fontSize: 14}}\n                        containerStyle={{marginBottom: 50}}\n                        placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                        onChangeText={(e) => props.setQuestion(e)}\n                    />\n                    <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                    <Input\n                        placeholder={QuizLang[props.lang].AddAnswer}\n                        inputStyle={{fontSize: 14}}\n                        value={answer}\n                        onChangeText={(e) => setAnswer(e)}\n                    />\n                    <Button\n                        icon={\n                            <Icon\n                                name={'add-circle'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={18}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => addAnswer()}\n                        disabled={props.answers.length >= 10}\n                    />\n                    </View>\n                </View>\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].WhatIsAnswer}\n                </Text>\n                <View style={styles.badgesView}>\n                    {props.answers.map( (el, i) => {\n                        return(\n                            <Badge\n                                key={i}\n                                value={el}\n                                badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                onPress={() => pickOutAnswer(i)}\n                            />\n                        )\n                    })}\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    SafeAreaView,\n    ScrollView,\n    Alert,\n    Modal,\n    Text\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay } from 'react-native-elements';\n\nimport QuestionList from './Creation/QuestionList';\nimport ViewQuizList from './ViewQuizList';\n\nimport * as API from '../../../data/quizApi';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport FormQuizContent from './Creation/FormQuizContent';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n    // if the user is editing or not an existing quiz\n    const [edit, setEdit] = useState(false);\n\n    // if the user want to add a question to an existing quiz\n    const [newQuestion, setNewQuestion] = useState(false);\n\n    // if the user want to edit an existing question to an existing quiz\n    const [editContent, setEditContent] = useState();\n\n    // the existing quiz to edit\n    const [quizEdit, setQuizEdit] = useState();\n\n    // the new content to add in an existing quiz\n    const [newContent, setNewContent] = useState([]);\n\n    // check if something has been edited\n    const [editedQuiz, setEditedQuiz] = useState(false);\n\n    // open the modal of going back without saving confirmation\n    const [modal, setModal] = useState(false);\n\n    // the states for the quiz edition (add / edit question)\n    const [question, setQuestion] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const push = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setNewContent([...newContent, push]);\n        setEditedQuiz(true);\n        setSuccess(true);\n    };\n\n    const saveContent = () => {\n        let content;\n        let index;\n        if (Number.isInteger(editContent)) {\n            // edit newContent array\n            content = newContent[editContent - quizEdit?.content?.length];\n        } else {\n            // edit quizEdit array\n\n            // for already in api content -- think of reuploading the file\n            // if there's a new one, or to delete it\n            index = quizEdit.content.findIndex(el => el.id == editContent);\n            content = quizEdit.content[index];\n            if (fileType != content.fileType || uri != content.uri)\n                content.editedFile = true;\n        }\n        content.filename= filename;\n        content.fileType = fileType;\n        content.uri = uri;\n        content.answers = answers;\n        content.question = question;\n        setEditedQuiz(true);\n        setSuccess(true);\n        if (Number.isInteger(editContent)) {\n            if (newContent.length == 1)\n                setNewContent([content]);\n            else\n                setNewContent([...content]);\n        } else {\n            quizEdit.content[index] = content;\n            setQuizEdit(quizEdit);\n        }\n    };\n\n    // clear the states before edition or creation of a content\n    const clearState = () => {\n        setAnswers([]);\n        setQuestion();\n        setFileType();\n        setFilename();\n        setUri();\n        setSound(new Audio.Sound());\n    };\n\n    // Save the edited quiz\n    const saveQuiz = () => {\n        if (!editedQuiz) return;\n        const content = quizEdit.content.concat(newContent);\n        API.saveQuiz(props.personId, quizEdit._id, content).then((data) => {\n            return Alert.alert(\n                QuizLang[props.lang].EditedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            props.setReload(!props.reload);\n                            setNewContent([]);\n                            goBack();\n                        },\n                    }\n                ]\n            );\n        });\n    }\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const viewPage = () => {\n        if (editContent && !newQuestion) {\n            if (success) setSuccess(false);\n            let content;\n            if (Number.isInteger(editContent)) {\n                content = newContent[editContent - quizEdit?.content?.length];\n            } else {\n                const index = quizEdit.content.findIndex(el => el.id == editContent);\n                content = quizEdit.content[index];\n            }\n            if (!content) return;\n            setFilename(content.filename);\n            setFileType(content.fileType);\n            setUri(content.uri);\n            setQuestion(content.question);\n            setAnswers([...content.answers]);\n            setNewQuestion(true);\n        } else if (newQuestion) { // if the user wants to set a new question for quiz edition\n            return (<FormQuizContent\n                        lang={props.lang}\n                        setAnswers={setAnswers}\n                        setFileType={setFileType}\n                        setQuestion={setQuestion}\n                        setUri={setUri}\n                        setFilename={setFilename}\n                        setSuccess={setSuccess}\n                        setSound={setSound}\n                        setIsPlaying={setIsPlaying}\n                        pauseSound={pauseSound}\n                        uri={uri}\n                        filename={filename}\n                        answers={answers}\n                        fileType={fileType}\n                        question={question}\n                        success={success}\n                        sound={sound}\n                        isPlaying={isPlaying}\n                />);\n        } else if (edit && !newQuestion) {\n             // if the user want to see all the question for the quiz edition\n            return (quizEdit.content)?.concat(newContent)?.map((el, i) => {\n                return (<QuestionList\n                    index={i}\n                    key={i}\n                    id={quizEdit._id || 0}\n                    quizEdit={quizEdit}\n                    newContent={newContent}\n                    content={el}\n                    lang={props.lang}\n                    questionId={el.id || i}\n                    quizEdition={true}\n                    reload={props.reload}\n                    setReload={props.setReload}\n                    setEditedQuiz={setEditedQuiz}\n                    setEditContent={setEditContent}\n                    setQuizEdit={setQuizEdit}\n                    setNewContent={setNewContent}\n                />);\n            })\n        } else {\n             // if the user want to see all the existing quiz for the quiz edition\n            return (<ViewQuizList\n                quiz={props.quiz}\n                loading={props.loading}\n                lang={props.lang}\n                personId={props.personId}\n                setEdit={setEdit}\n                setQuizEdit={setQuizEdit}\n                setReload={props.setReload}\n            />);\n        }\n    };\n\n    const goBack = () => {\n\n        if (!success) setSuccess(false);\n\n        if ( (editedQuiz && !newQuestion) || newContent.length > 0) {\n            setModal(true);\n            return;\n        }\n\n        if (editContent) {\n            clearState();\n            setEditContent();\n            setNewQuestion(false);\n        } else if (newQuestion)\n            setNewQuestion(false);\n        else if (edit) {\n            setEditedQuiz(false);\n            setEdit(false);\n        } else\n            props.setTab(0);\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return saveContent();\n        } else if (newQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].AddContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return pushContent();\n        } else if (edit) {\n            // save the quiz button\n            if (mode == 'title') return QuizLang[props.lang].Save;\n            else if (mode == 'disabled') return !(editedQuiz);\n            else if (mode == 'onpress') return saveQuiz();\n        } else {\n            // create a quiz button\n            if (mode == 'title') return QuizLang[props.lang].Create;\n            else if (mode == 'disabled') false;\n            else if (mode == 'onpress') return props.setTab(4);\n        }\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => setModal(false)}\n                    ModalComponent={Modal}\n                >\n                    <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                    <View style={{ flexDirection: 'row' }}>\n                        <Button\n                            title={QuizLang[props.lang].Cancel}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{ marginRight: 10 }}\n                            onPress={() => setModal(false)}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].GoBack}\n                            buttonStyle={{ fontWeight: 'bold' }}\n                            onPress={() => {\n                                setEditedQuiz(false);\n                                setEditContent();\n                                setEdit(false);\n                                setNewContent([]);\n                                setModal(false);\n                            } }\n                        />\n                    </View>\n                </Overlay>\n\n\n                <Button\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={edit ? 'save-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        buttonTop('onpress')\n                    }}\n                    disabled={ buttonTop('disabled') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => goBack() }\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                {\n                    edit && !newQuestion && !editContent ?\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setNewQuestion(true) }\n                    /> : <></>\n                }\n                <ScrollView style={{marginBottom: 40}}>\n                { viewPage() }\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContent from './FormQuizContent';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\nimport { Audio } from 'expo-av';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n    const [modalConfirmation, setModalConfirmation] = useState(false);\n\n    const [editContent, setEditContent] = useState();\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name.substring(0, 23),\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    // Save an existing question\n    const saveContent = () => {\n        content[editContent].fileType = fileType;\n        content[editContent].filename = filename;\n        content[editContent].uri = uri;\n        content[editContent].question = question;\n        content[editContent].answers = answers;\n        setContent([...content]);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        if (isPlaying) setIsPlaying(false);\n    };\n\n    const clearState = () => {\n        setAnswers([]);\n        setFileType();\n        setFilename();\n        setUri();\n        setQuestion();\n        setSuccess(false);\n    };\n\n    const printQuestionList = () => {\n        if (content.length === 0) {\n            return (<Text style={styles.nothingYet}>\n                {QuizLang[props.lang].NoQuestionYet}\n            </Text>);\n        } else {\n            return content?.map((el, i) => {\n                return (\n                    <QuestionList\n                        index={i}\n                        key={i}\n                        id={i}\n                        content={el}\n                        lang={props.lang}\n                        setContent={setContent}\n                        setEditContent={setEditContent}\n                        questionId={i}\n                        contentList={content}\n                    />\n                );\n            });\n        }\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent !== undefined) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); return saveContent(); }\n        } else if (createQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].OK;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); setModal(false); return pushContent(); }\n        } else {\n            if (mode == 'title') return QuizLang[props.lang].Complete;\n            else if (mode == 'disabled') return !(content.length > 0);\n            else if (mode == 'onpress') { return setModal(true);  }\n        }\n    };\n\n    const printPage = () => {\n        if (editContent !== undefined && !createQuestion) {\n            if (success) setSuccess(false);\n            setAnswers(content[editContent].answers);\n            setFileType(content[editContent].fileType);\n            setFilename(content[editContent].filename);\n            setUri(content[editContent].uri);\n            setQuestion(content[editContent].question);\n            setCreateQuestion(true);\n        }\n        if (createQuestion) { // if the user is creating a new question\n            return <FormQuizContent\n                /* Form to create a quiz */\n                lang={props.lang}\n                setAnswers={setAnswers}\n                setFileType={setFileType}\n                setQuestion={setQuestion}\n                setUri={setUri}\n                setFilename={setFilename}\n                setSuccess={setSuccess}\n                setSound={setSound}\n                setIsPlaying={setIsPlaying}\n                pauseSound={pauseSound}\n                uri={uri}\n                filename={filename}\n                answers={answers}\n                fileType={fileType}\n                question={question}\n                success={success}\n                sound={sound}\n                isPlaying={isPlaying}\n            />\n        } else {\n            return <SafeAreaView style={styles.safeArea}>\n                <Button\n                    title={QuizLang[props.lang].AddQuestion}\n                    icon={\n                        <Icon\n                            name={'add-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => setCreateQuestion(true)}\n                />\n                <ScrollView style={{marginBottom: 40}}>\n                    { props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : printQuestionList() }\n                </ScrollView>    \n            </SafeAreaView>\n        }\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button containerStyle={{ marginTop: 10, width: 40 }} title={{}} icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    } disabled={name?.length < 3 || name.length > 23 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            {/* Confirmation give up quiz creation */}\n            <Overlay\n                visible={modalConfirmation}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => setModalConfirmation(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={QuizLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={() => setModalConfirmation(false)}\n                    />\n                    <Button\n                        title={QuizLang[props.lang].GoBack}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={() => {\n                            setModalConfirmation(false);\n                            props.setTab(2);\n                        } }\n                    />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ buttonTop('disabled') }\n                    onPress={ () => buttonTop('onpress') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearState();\n                        pauseSound();\n                        if (createQuestion)\n                            setCreateQuestion(!createQuestion);\n                        else if (content.length == 0) props.setTab(2);\n                        else setModalConfirmation(true)\n                    }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            { printPage() }\n        </>\n    );\n}\n","import React from 'react';\nimport { Text, Button, Icon, FAB } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif');\n    return (\n    <>\n        { props.quizLength > 1 ? <FAB\n            style={{marginTop: 140, position: 'absolute', zIndex: 10}}\n            containerStyle={{marginLeft: 120}}\n            size=\"small\"\n            icon={{name: 'repeat-sharp', type: 'ionicon', color:'white' }}\n            onPress={() => props.pickRandomQuizz()}\n        /> : <></> }\n        <Lottie LottieSource={ThinkingLottie} ImageSource={ThinkingImage} LottieStyle={{marginTop: -25, height: 250, marginBottom: -30}} />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButton}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            buttonStyle={{ backgroundColor: 'red' }}\n            containerStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, Alert, View, Modal } from 'react-native';\nimport { Text, Image, Input, Button, Icon, Overlay } from 'react-native-elements';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../../assets/img/activities/sad.gif';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport Lottie from '../../../utils/Lottie';\nimport { Audio } from 'expo-av';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n    const [modal, setModal] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const [success, setSuccess] = useState(0);\n    const [fail, setFail] = useState(0);\n    const [confetti, setConfetti] = useState(false);\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const TrophyLottie = require('../../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../../assets/lottie/sad.json');\n\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const stopSound = async () => {\n        await pauseSound();\n        setSound(new Audio.Sound());\n        await sound?.unloadAsync();\n    }\n\n    const playSound = async () => {\n        setIsPlaying(true);\n        await Audio.setAudioModeAsync({\n            staysActiveInBackground: true,\n            shouldDuckAndroid: true,\n        });\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus?.isLoaded === false) {\n            await sound.loadAsync({ uri: game[current].uri });\n            setSound(sound);\n        }\n        await sound.playAsync();\n        sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n            if (playbackStatus.didJustFinish) {\n                await sound.unloadAsync();\n                setIsPlaying(false);\n            }\n        });\n    };\n\n    const setMediaType = () => {\n        if (!game[current]) return;\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <Icon onPress={() => isPlaying ? pauseSound() : playSound() } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30}} />\n            default:\n                return <></>;\n        }\n    };\n\n    const openAlertResultQuestion = (result) => {\n        return (\n            Alert.alert(\n                result ? QuizLang[props.lang].SuccessTitle : QuizLang[props.lang].FailedTitle,\n                result ? QuizLang[props.lang].Success : QuizLang[props.lang].Failed(game[current].answers),\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: async () => {\n                            if (current + 1 <= game.length - 1)\n                                setCurrent(current + 1);\n                            else {\n                                const path = success >= fail ? require(`../../../../assets/sound/global/applause.mp3`) : require(`../../../../assets/sound/global/you_lose.mp3`);\n                                if (success >= fail) setConfetti(true);\n                                const { sound } = await Audio.Sound.createAsync(path);\n                                setSound(sound);\n                                sound.playAsync();\n                                setModal(true);\n                            }\n                        },\n                    }\n                ]\n            )\n        )\n    };\n\n    const answerQuestion = async () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        stopSound();\n        setAnswer('');\n        const result = game[current].answers.includes(answerTrimedLowercase);\n        if (result === false) {\n            // increment the fail and update the API\n            setFail(fail + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, false);\n        } else {\n            // increment the success and update the API\n            setSuccess(success + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, true)\n        }\n        openAlertResultQuestion(result);\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                {confetti && success >= fail ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n                )}\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => props.setTab(0)}\n                    ModalComponent={Modal}\n                >\n                    {success >= fail ? \n                        <>\n                            <Lottie LottieSource={TrophyLottie} ImageSource={TrophyImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} loop={false} />\n                            <Text style={{color:'blue', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].SuccessQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].SuccessQuiz(fail, success)}</Text>\n                        </>\n                    :\n                        <>\n                            <Lottie LottieSource={SadLottie} ImageSource={SadImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} />\n                            <Text style={{color:'red', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].FailQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].FailQuiz(fail, success)}</Text>\n                        </>\n                    }\n                    <Button title={QuizLang[props.lang].Leave} onPress={() => props.setTab(0)} containerStyle={styles.leaveButton} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </Overlay>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button buttonStyle={styles.buttonQuizGameOK} title={QuizLang[props.lang].OK} onPress={() => { answerQuestion() }} />\n                </View>\n            </>\n        }\n    </>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\n// This component is mounted when the user clicks on 'Play' in the main quiz menu\nexport default function Play(props) {\n    const [play, setPlay] = useState(false);\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quizId={props.quiz._id}\n                personId={props.personId}\n                quiz={props.quiz.content}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n                quizLength={props.quizLength}\n            />\n        }\n    </View>);\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{QuizLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Rules()}</Text>\n\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].CustomHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Custom()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler, Alert } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber, randomArrayElement } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Creation/CreateQuiz';\nimport Play from './Play';\nimport Help from './Help';\n\nimport * as API from '../../../data/quizApi';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1) {\n                    Alert.alert(\n                        QuizLang[props.lang].GiveUpQuizTitle,\n                        QuizLang[props.lang].GiveUpQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    setTab(0);\n                                }\n                            },\n                        ]\n                    )\n                }\n                else setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            let rand = randomArrayElement(random, 0, quiz.length - 1);\n            setRandom(rand);\n        }\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    isLoading={isLoading}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                quizLength={quiz.length}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    setReload={setReload}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return <View style={styles.view}>{printPage()}</View>;\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Essai${tries > 1 ? 's' : ''} restant${tries > 1 ? 's' : ''}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Score actuel: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Commencer\",\n        GiveUp: \"Abandonner\",\n        Reinit: \"Nouveau modèle\",\n        TitleGiveUp: \"Abandonner la partie\",\n        SureToGiveUp: \"Êtes-vous sûr(e) de vouloir abandonner la partie? Votre score sera enregistré.\",\n        Congratulations: 'Félicitations !!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: \"Recommencer\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'Le jeu des pairs, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu des pairs est assez connu et classique. Lorsque vous commencerez la partie, vous aurez un {0}. Cliquez alors sur le bouton \"{1}\" sur le bas de l’écran pour retourner les cartes face verso.\\n\\nVous devrez alors {2}. Par exemple, si vous cliquez sur une carte rouge, vous devrez cliquer sur l’autre carte rouge ensuite.\\n\\nPlus vous grimpez dans le score, plus le nombre de paires s’ajoutent au schéma. Il peut y avoir jusqu’à {3} au total.`,\n                boldText: [\"schéma de plusieurs paires de cartes face recto\", \"Commencer\", \"retourner les paires l'une après l’autre\", \"6 paires\"],\n            });\n        },\n        ScoreHead: \"Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois qu’un schéma est complété (c'est-à-dire que toutes les cartes ont été retournées), {0} et passez à un schéma suivant, {1}.\\n\\nLes points peuvent vous servir à avoir un joli score, mais aussi à recréer un nouveau schéma si vous l’avez complètement oublié. A chaque re-création d’un schéma, {2}. Et vous ne pouvez pas recréer un schéma s’il ne vous reste {3}.`,\n                boldText: [\"vous gagnez un point\", \"potentiellement plus difficile\", \"vous perdez un point\", \"qu’un essai pour le schéma actuel\"],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'How does it work',\n        Leave: 'Back',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Remaning tr${tries > 1 ? 'ies' : 'y'}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Actual score: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Start\",\n        GiveUp: \"Give up\",\n        Reinit: \"New model\",\n        TitleGiveUp: \"Give up the game\",\n        SureToGiveUp: \"Are you sure to give up this party? Your score will be saved.\",\n        Congratulations: 'Congratulations!!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        SoBad: 'So sad...',\n        ScoreNotBeated: 'Your daily score has not been beaten... But you can retry!',\n        Retry: \"Retry\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Best score made today: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'The double memory, how does it works?',\n        RulesHead: \"The rules\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The game of peers (or double memory) is quite familiar and classic. When you start the game, you will have a {0}. Then click on the \"{1}\" button at the bottom of the screen to turn the cards face up.\\n\\nFor example, if you click on a red card, you will have to click on the other red card next.\\n\\nThere can be up to {3} in total.`,\n                boldText: [\"pattern of several pairs of cards face up\", \"Start\", \"turn over the pairs one after the other\", \"6 pairs\"],\n            });\n        },\n        ScoreHead: \"Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `Each time a pattern is completed (i.e., all the cards have been turned over), {0} and move on to the next pattern, {1}.\\n\\nThe points can be used to get a nice score, but they can also be used to recreate a new pattern if you've completely forgotten about it. Each time you re-create a pattern, {2}. And you can't recreate a pattern if you don't have {3} left.`,\n                boldText: [\"you earn a point\", \"potentially more challenging\", \"you lose a point\", \"than a try for the current pattern\"],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        height: 100 + '%',\n        paddingBottom: 40,\n        flex: 1,\n    },\n    logo: {\n        width: 120,\n        height: undefined,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n        resizeMode: \"center\",\n        aspectRatio: 1\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n        marginBottom: 20\n    },\n    RectoCard: {\n        width: 80,\n        height: 80,\n        backgroundColor: '#C3C3CF',\n        borderRadius: 20,\n        borderColor: '#858593',\n        borderWidth: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    PlayingCard: {\n        width: 80,\n        height: 80,\n        borderRadius: 20,\n        borderColor: '#68FF5C',\n        borderWidth: 5,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    VersoCard: {\n        width: 80,\n        height: 80,\n        borderRadius: 20,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    IconCard: {\n        marginTop: 23\n    },\n    viewGame: {\n        marginTop: 20,\n        width: 300,\n        height: 370,\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    buttonViewPlay: {\n        flexDirection: 'row',\n        width: 100 + '%',\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: 10\n    },\n    playButtons: {\n        alignContent: 'center',\n        textAlign: 'center',\n        paddingHorizontal: 30,\n        borderRadius: 10,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        paddingTop: 20,\n        width: 100 + '%',\n        height: 120 + '%',\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DoubleSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={DoubleLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{DoubleLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].Rules()}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].ScoreHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].ScoreHelp()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React from 'react';\nimport { Image, View } from 'react-native';\nimport { Button, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport DoubleLogo from '../../../assets/img/activities/double/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={DoubleLogo} style={styles.logo} resizeMode={'cover'} />\n\n            <Button\n                title={DoubleLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={DoubleLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <View>\n\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: -50,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                        type: 'ionicon',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.ambiantSoundPlay() }\n            />\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 20,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.soundEnabled ? 'sound' : 'sound-mute',\n                        type: 'entypo',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.setSoundEnabled(prev => !prev) }\n            />\n            </View>\n\n            <Button\n                title={DoubleLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => {\n                    props.ambiant.unloadAsync();\n                    props.setPage(null);\n                }}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}","const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};\n\nexport const generateRandomPair = (length) => {\n    const colors = [\n        '#791414',\n        '#143479',\n        '#791462',\n        '#147920',\n        '#797714',\n        '#14AB9D'\n    ];\n    const icons = [\n        'airplane',\n        'boat',\n        'bulb',\n        'color-palette',\n        'earth',\n        'gift',\n        'happy',\n        'heart-circle',\n        'restaurant',\n        'ribbon'\n    ]\n    var arr = [];\n    for (let i = 0; i < length / 2; i++) {\n        var indexColor = Math.floor(Math.random() * colors.length);\n        var indexIcon = Math.floor(Math.random() * icons.length);\n        arr.push({ color: colors[indexColor], icon: icons[indexIcon] }, { color: colors[indexColor], icon: icons[indexIcon] });\n        colors.splice(indexColor, 1);\n        icons.splice(indexIcon, 1);\n    }\n    arr = shuffle(arr);\n    for (let i = 0; i < arr.length; i++) {\n        const el = arr[i];\n        el.idx = i\n    }\n\n    return (arr);\n};","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements';\n\nimport styles from '../styles';\n\nexport default function Card(props) {\n    var cardStyles;\n    if (props.inPlay) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.PlayingCard]];\n    else if (props.inFound || props.show) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.VersoCard]];\n    else cardStyles = styles.RectoCard\n\n    const icon = !props.inFound && !props.inPlay && !props.show ? 'help-circle-outline' : props.icon;\n\n    return (\n        <>\n            <TouchableOpacity style={ cardStyles } onPress={() => {\n                if (!props.inPlay && !props.inFound) props.ReturnCard(props.index);\n            }}>\n                <Icon\n                    name={icon}\n                    size={props.inFound || props.show || props.inPlay ? 30 : 24}\n                    color={props.inFound || props.show || props.inPlay ? 'white' : 'grey'}\n                    type=\"ionicon\"\n                    style={styles.IconCard}\n                />\n            </TouchableOpacity>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { View, Text, Modal } from 'react-native';\n\nimport { Button, Overlay, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../assets/img/activities/sad.gif';\n\nimport Lottie from '../../utils/Lottie';\n\nimport styles from './styles';\n\nimport { generateRandomPair } from './subs/helpers';\n\nimport Card from './subs/Card';\n\nexport default function Play(props) {\n    const [game, setGame] = useState([...generateRandomPair(4)]); // the current map game\n    const [found, setFound] = useState([]);\n    const [tries, setTries] = useState(3);\n    const [play, setPlay] = useState([]); // the current play of the player, an array with two values max, corresponding to the cards the player played\n    const [show, setShow] = useState(true);\n    const [confetti, setConfetti] = useState(false);\n    const [pause, setPause] = useState(false);\n\n    const TrophyLottie = require('../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../assets/lottie/sad.json');\n\n    const setLengthGame = () => {\n        if (props.score <= 8)\n            return 4;\n        else if (props.score <= 15)\n            return 6;\n        else if (props.score <= 30)\n            return 8;\n        else if (props.score <= 45)\n            return 10;\n        else\n            return 12;\n    }\n\n    // Exemple game element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null },\n            { idx: 2, color: '#ffffff', icon: null },\n            { idx: 3, color: '#ferdnc', icon: null }\n        ]\n    */\n\n        // each play, we push the current card to the play state, and check if the first element exists in the\n        // game state, and if the second element is the same as the first one, if so => success for a round, and push\n        // this pair in the found state. If fail => clear the play && found states\n\n    // Exemple play element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 2, color: '#ffffff', icon: null }\n        ] // this is a successful array\n\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null }\n        ] // this is a fail array\n    */\n\n    const failOverlay = () => {\n        if (props.modal == false) return;\n        return (\n            <>\n                <Lottie\n                    LottieSource={SadLottie}\n                    ImageSource={SadImage}\n                    autoplay={true}\n                    loop={true}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const successOverlay = () => {\n        if (!confetti) setConfetti(true);\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].BestScoreToday(props.bestScoreDay)}\n                </Text>\n                <Lottie\n                    LottieSource={TrophyLottie}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n    \n    const newModel = () => {\n        if (props.score == 0) return;\n        const currentGameLength = game.length;\n        props.setScore(prevScore => prevScore - 1);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(currentGameLength)]);\n    };\n\n    const printButton = () => {\n        if (show) {\n            return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={DoubleLang[props.lang].Start} onPress={() => setShow(false) } buttonStyle={styles.playButtons} />\n            <Button title={DoubleLang[props.lang].Leave} onPress={() => props.giveUp() } buttonStyle={[styles.playButtons, , {backgroundColor: 'red', marginLeft: 10}]} />\n            </View>);\n        } else {\n            return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={DoubleLang[props.lang].Reinit} buttonStyle={[styles.playButtons, {backgroundColor: 'green'}]} onPress={() => newModel() } disabled={props.score === 0 || tries <= 1} />\n                <Button title={DoubleLang[props.lang].GiveUp} buttonStyle={[styles.playButtons, {backgroundColor: 'red', marginLeft: 10}] } onPress={() => props.giveUp() } />\n            </View>);\n        }\n    };\n    \n    const ReturnCard = (key) => {\n        if (pause || show) return;\n        const currentPlay = play;\n        const indexGame = game[key];\n        const playing = [...currentPlay, indexGame];\n        if (playing.length == 2) {\n            // check if same card or return all and lose a try\n            if (playing[0].color === playing[1].color && playing[0].icon === playing[1].icon) {\n                const currentGameLength = game.length;\n                const nFound = [...found, playing[0], playing[1]];\n                if (nFound.length == currentGameLength) {\n                    props.playSound('next');\n                    props.setScore(prevScore => prevScore + 1);\n                    setShow(true);\n                    setTries(3);\n                    setGame([...generateRandomPair(setLengthGame())]);\n                    setFound([]);\n                } else {\n                    props.playSound('success');\n                    setFound(nFound);\n                }\n                setPlay([]);\n            } else {\n                setPlay(playing);\n                props.playSound('fail');\n                setPause(true);\n                setTimeout(() => {\n                    if (tries != 0) setTries(prevTries => prevTries - 1);\n                    if (tries === 0)\n                        props.endGame();\n                    else {\n                        setPlay([]);\n                        setFound([]);\n                    }\n                    setPause(false);\n                }, 1000);\n            }\n        } else {\n            setPlay(playing);\n            props.playSound('play');\n        }\n    };\n\n    const printCards = () => {\n        return game.map( (el, i) => {\n            var inFound = false;\n            var inPlay = false;\n            if (found.find(element => element.idx === i )) inFound = true;\n            else if (play.find(element => element.idx === i )) inPlay = true;\n            return (<Card show={show} key={i} index={i} inFound={inFound} inPlay={inPlay} backgroundColor={el.color} icon={el.icon} ReturnCard={ReturnCard} />);\n        });\n    };\n\n    const newGame = () => {\n        if (confetti) setConfetti(false);\n        props.setModal(false);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(4)]);\n    };\n\n    return (\n        <>\n            <View>\n                <FAB\n                    color='#2089dc'\n                    style={{\n                        position: 'absolute',\n                        marginLeft: 130,\n                        marginTop: 390\n                    }}\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.ambiantSoundPlay() }\n                />\n                <FAB\n                    color='#2089dc'\n                    style={{\n                        position: 'absolute',\n                        marginLeft: 85,\n                        marginTop: 390\n                    }}\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.soundEnabled ? 'sound' : 'sound-mute',\n                            type: 'entypo',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.setSoundEnabled(prev => !prev) }\n                />\n            </View>\n            {confetti ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n            )}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                { props.success && props.modal ? successOverlay() : failOverlay() }\n                <View style={{flexDirection: 'row', marginTop: 20}}>\n                    <Button title={DoubleLang[props.lang].Retry} onPress={() => newGame()} buttonStyle={{marginRight: 10}} icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n\n                    <Button title={DoubleLang[props.lang].Leave} onPress={() => { \n                        if (confetti) setConfetti(false);\n                        props.setModal(false);\n                        props.setTab(0);\n                    }} buttonStyle={{backgroundColor: 'red'}} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </View>\n            </Overlay>\n            <View style={styles.viewGame}>\n                { printCards() }\n            </View>\n            <View style={{alignItems: 'center', width: 100 + '%', marginTop: -10}}>\n                <Text>{DoubleLang[props.lang].Score(props.score)}</Text>\n                <Text>{DoubleLang[props.lang].BestDayScore(props.bestScoreDay)}</Text>\n                <Text>{DoubleLang[props.lang].RemaningTries(tries)}</Text>\n                { printButton() }\n            </View>\n        </>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport {\n    Text,\n    BackHandler,\n    ScrollView,\n    Alert\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport styles from './styles';\n\nimport * as API from '../../../data/doubleApi';\n\nimport Help from './Help';\nimport Menu from './Menu';\nimport Play from './Play';\n\nconst currentDate = new Date().toLocaleDateString('fr-FR');\n\nexport default function Double(props) {\n    const [tab, setTab] = useState(0);\n    const [score, setScore] = useState(0);\n    const [bestScoreDay, setBestScoreDay] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [ambiant, setAmbiant] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n    const [soundEnabled, setSoundEnabled] = useState(true);\n    const [ambiantEnabled, setAmbiantEnabled] = useState(true);\n\n    useEffect( async () => {\n        // API.clear();\n\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by MCOCHET - check his soundcloud here: https://soundcloud.com/mcochet\n            require(`../../../assets/sound/double/ambiant.mp3`)\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n\n        API.getScoreDay(props.personId, currentDate).then((data) => {\n            if (data.length > 0) setBestScoreDay(data[0].score);\n        });\n\n        API.getBestScore(props.personId).then((data) => {\n            if (data.length > 0) setBestScore(data[0].score);\n        });\n\n    }, []);\n\n    useEffect(() => {\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1 && score > 0) {  \n                    giveUp()\n                    return ;\n                }\n                setTab(0);\n            } else {\n                ambiant.unloadAsync();\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, ambiant]);\n\n    const endGame = async () => {\n        setModal(true);\n        let bestDayScore = false;\n        let bestScore = false;\n        if (score > bestScoreDay) { \n            playSound('applause');\n            setSuccess(true);\n            setBestScoreDay(score);\n            bestDayScore = true;\n            if (score > bestScore) {\n                bestScore = true;\n                setBestScore(score);\n            }\n        } else {\n            playSound('lose');\n            setSuccess(false);\n        }\n        await API.insertScore(props.personId, score, currentDate, bestDayScore, bestScore);\n        setScore(0);\n    };\n\n    const ambiantSoundPlay = () => {\n        if (ambiantEnabled) ambiant.pauseAsync();\n        else ambiant.playAsync();\n        setAmbiantEnabled(prevEnable => !prevEnable);\n    };\n    \n    const giveUp = () => {\n        if (score === 0) setTab(0);\n        else return Alert.alert(\n            DoubleLang[props.lang].TitleGiveUp,\n            DoubleLang[props.lang].SureToGiveUp,\n            [\n                {\n                    text: DoubleLang[props.lang].Leave,\n                    onPress: () => { null },\n                    style: 'cancel'\n                },\n                {\n                    text: DoubleLang[props.lang].GiveUp,\n                    onPress: () => {\n                        endGame();\n                    }\n                },\n            ]\n        )\n    };\n\n    const playSound = async (type) => {\n        if (!soundEnabled && !['applause', 'lose'].includes(type)) return;\n        if (sound) sound?.unloadAsync();\n        let choosenSound;\n        switch (type) {\n            case \"success\":\n                choosenSound = require(`../../../assets/sound/double/success.mp3`);\n                break;\n            case \"fail\":\n                choosenSound = require(`../../../assets/sound/double/fail.mp3`);\n                break;\n            case \"play\":\n                choosenSound = require(`../../../assets/sound/double/play.mp3`);\n                break;\n            case \"next\":\n                choosenSound = require(`../../../assets/sound/double/next.mp3`);\n                break;\n            case \"applause\":\n                choosenSound = require(`../../../assets/sound/global/applause.mp3`);\n                break;\n            case \"lose\":\n                choosenSound = require(`../../../assets/sound/global/you_lose.mp3`);\n                break;\n            default:\n                break;\n        }\n        const { sound } = await Audio.Sound.createAsync(choosenSound);\n        setSound(sound);\n        sound.playAsync();\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    ambiant={ambiant}\n                    setSoundEnabled={setSoundEnabled}\n                    soundEnabled={soundEnabled}\n                    ambiantEnabled={ambiantEnabled}\n                    ambiantSoundPlay={ambiantSoundPlay}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                        lang={props.lang}\n                        setTab={setTab}\n                        score={score}\n                        setScore={setScore}\n                        giveUp={giveUp}\n                        modal={modal}\n                        setModal={setModal}\n                        bestScoreDay={bestScoreDay}\n                        success={success}\n                        endGame={endGame}\n                        playSound={playSound}\n                        ambiantSoundPlay={ambiantSoundPlay}\n                        ambiantEnabled={ambiantEnabled}\n                        soundEnabled={soundEnabled}\n                        setSoundEnabled={setSoundEnabled}\n                    />;\n        } else if (tab === 2) {\n            return (<Help lang={props.lang} setTab={setTab} />);\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <ScrollView style={styles.view} contentContainerStyle={{alignItems: 'center'}}>\n            { printPage() }\n        </ScrollView>\n    );\n};","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\nimport Double from '../components/activities/Double';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return <Double lang={lang} setPage={setPage} personId={personId} />;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        },\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nimport { Audio } from 'expo-av';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n\n    useEffect( () => {\n        Audio.setIsEnabledAsync(true);\n    }, [])\n\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    scoreRow: {\n        flex: 1,\n        height: 180,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreRowSimon: {\n        flex: 1,\n        height: 250,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreHeading: {\n        fontSize: 18,\n        color: '#2089dc',\n        fontWeight: 'bold',\n        margin: 5\n    },\n    NoScore: {\n        color: 'grey',\n        fontStyle: 'italic',\n        marginTop: 45,\n        marginLeft: 45\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\nimport { Badge } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport { ScoreRatio } from '../../../../components/activities/Quiz/utils/scoreFunc';\nimport * as API from '../../../../data/quizApi';\n\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nexport default function QuizScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [quizScore, setQuizScore] = useState([]);\n\n    useEffect( () => {\n        API.get(props.personId).then((data) => {\n            const arr = [];\n            for (let i = 0; i < data.length; i++) {\n                const el = data[i];\n                arr.push({score: ScoreRatio(el.content, props.personId), name: el.name});\n            }\n            setQuizScore(arr);\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (quizScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            return quizScore.map( (el,i) => {\n                return (\n                    <View style={{marginHorizontal: 15}} key={i}>\n                        <Badge\n                            value={el.name}\n                            textStyle={{textAlign: 'center'}}\n                            badgeStyle={{position:'absolute', paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 100, zIndex: 3}}\n                        />\n                        <CircularProgress\n                            value={el.score}\n                            textStyle={{marginBottom: -10}}\n                            title={ActivitiesLang[props.lang].Success}\n                            valueSuffix={'%'}\n                            titleStyle={{marginBottom: 10}}\n\n                            activeStrokeColor={'#2089dc'}\n                            radius={65}\n                            inActiveStrokeColor={'#9b59b6'}\n                            inActiveStrokeOpacity={0.5}\n                            inActiveStrokeWidth={6}\n                            activeStrokeWidth={12}\n                        />\n                    </View>\n                );\n            });\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRow} horizontal={true}>\n            <View>\n                <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].QuizScore}</Text>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} /> :\n                    <ScrollView horizontal={true}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/simonApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function SimonScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [simonScore, setSimonScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setSimonScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (simonScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = simonScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].SimonScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/doubleApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function DoubleScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [doubleScore, setDoubleScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setDoubleScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (doubleScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = doubleScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].DoubleScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React from 'react';\nimport { ScrollView } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\n\nimport QuizScore from './QuizScore';\nimport SimonScore from './SimonScore';\nimport DoubleScore from './DoubleScore';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <QuizScore lang={props.lang} personId={props.personId} />\n            <DoubleScore lang={props.lang} personId={props.personId} />\n            <SimonScore lang={props.lang} personId={props.personId} />\n        </ScrollView>\n    );\n}\n","import React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    \n    const navigate = useNavigate();\n\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: 60, color: '#5bc0de' }],\n                tabBarLabelStyle: [{ color: '#5bc0de', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} personId={props.personId} /> }\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        marginBottom: 20,\n        width: 100 + '%',\n        backgroundColor: 'white',\n    },\n    topLottie: {\n        marginTop: -20,\n        width: 200,\n        height: 200,\n        marginBottom: -90,\n    },\n    bgLottie: {\n        width: 100 + '%',\n        opacity: 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: 100 + '%',\n        height: 100 + '%',\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: 'white',\n    },\n    heading: {\n        fontSize: 24,\n        color: '#3B8EFF',\n        marginTop: 10,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport SuccessImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/selection');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/selection', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/selection', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={SuccessImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport SelectionMenu from './pages/SelectionMenu';\nimport Activities from './pages/Activities';\nimport Home from './pages/Home';\nimport Tutorial from './pages/Tutorial';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [lang, setLang] = useState('fr');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    useEffect( () => {\n        let local = Localization.locale?.split('-')[0] || 'fr';\n        setLang(['en', 'fr'].includes(local) ? local : 'fr');\n        console.log('- Imported config file -');\n    }, [config]);\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/tutorial\"\n                            element={\n                                <Tutorial\n                                    lang={lang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={<Home lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} username={config?.username} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/selection\"\n                            element={\n                                <SelectionMenu\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}