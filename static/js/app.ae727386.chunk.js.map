{"version":3,"sources":["assets/img/interface/profile.jpg","assets/img/activities/trophy.gif","assets/sound/simon/green.mp3","assets/img/username/chooseusername.gif","assets/img/home/loading_brain.gif","assets/img/home/addedUser.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/tutorial/swipe-right.gif","assets/img/activities/brain.gif","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/quiz/logo.png","assets/img/activities/quiz/success.gif","assets/img/activities/sad.gif","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","assets/img/activities/quiz/thinking.gif","data/configApi.js","language/interface/index.js","language/tutorial/index.js","pages/ChooseUsername/styles.js","language/home/index.js","components/home/Rows.js","components/home/styles.js","components/utils/Lottie.js","components/home/PersonCreation/Success.js","data/dictaphoneApi.js","data/simonApi.js","data/quizApi.js","utils/helpers.js","data/personApi.js","components/home/PersonCreation/Form.js","components/home/PersonCreation/CreatePerson.js","pages/Home/styles.js","pages/Home/index.js","pages/ChooseUsername/index.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","components/utils/HomeOrTutorial.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/utils/quizFunc.js","components/activities/Quiz/Creation/QuestionList.js","components/activities/Quiz/utils/scoreFunc.js","components/activities/Quiz/QuizList.js","components/activities/Quiz/ViewQuizList.js","components/activities/Quiz/SuccessContent.js","components/activities/Quiz/Creation/FormQuizContent.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Creation/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","StyleSheet","create","wrapper","height","marginTop","container","flex","alignItems","alignContent","heading","fontSize","marginBottom","marginHorizontal","textAlign","color","description","textInput","borderColor","borderRadius","paddingHorizontal","backgroundColor","shadowOpacity","shadowRadius","shadowOffset","width","elevation","image","buttonContainer","button","marginLeft","buttonText","paddingTop","slide","padding","viewrow","flexDirection","flexWrap","justifyContent","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","props","navigate","useNavigate","TouchableScale","Platform","OS","default","mod","index","componentProps","Component","key","id","bottomDivider","containerStyle","onPress","state","source","picture","uri","DefaultProfilePicture","rounded","Content","Title","fullname","Subtitle","Chevron","rightButton","minHeight","imageSuccess","leftButton","view","alignSelf","marginVertical","btnImport","btnSave","profilePicture","successPageTitle","Lottie","LottieStyle","LottieSource","loop","hasOwnProperty","autoPlay","resizeMode","Image","ImageSource","ImageStyle","Success","View","SuccessImage","styles","edit","InterfaceLang","title","e","close","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","updateScore","quizId","contentId","success","_id","quiz","contentIndex","content","findIndex","el","scoreIndex","failed","pushErrors","errors","field","msg","randomNumber","min","max","Math","floor","random","person","trim","Object","keys","upd","$set","catch","log","Form","useState","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","FileSystem","encoding","fsRead","setImage","titleStyle","buttonStyle","icon","name","size","placeholder","leftIcon","label","errorStyle","renderErrorMessage","maxLength","errorMessage","inputStyle","value","onChangeText","setFullname","setDescription","raised","cb","Person","intermediates","imgName","uuidv4","path","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","topImage","zIndex","boldtext","subtitle","overflow","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","fontStyle","searchBar","searchInputStyle","Home","isLoading","setIsLoading","search","setSearch","setIndex","HomeLang","btnText","setBtnTxt","active","setActive","swiper","useRef","useLocation","useEffect","regex","RegExp","$regex","backHandler","BackHandler","addEventListener","remove","list","LoadingBrain","TouchableOpacity","activeOpacity","idx","ActivityIndicator","current","scrollBy","SafeAreaView","ref","showsButtons","scrollEnabled","pagingEnabled","showsPagination","onIndexChanged","setTimeout","ScrollView","inputContainerStyle","map","input","setInput","confirmed","setConfirmed","parseUsername","setUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","animating","Loading","LoadingImage","slideOdd","paddingBottom","marginRight","borderWidth","Tutorial","res","SwipeImage","position","opacity","StepOne","StepTwo","StepThree","StepFour","StepFive","StepSixth","to","component","Config","HomeOrTutorial","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","ReturnList","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","deletePerson","SimonDB","removeAsync","DictaphoneDB","deleted","type","iconContainerStyle","ActivitiesLang","Alert","multi","QuizDB","clear","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","isPlaying","setIsPlaying","progress","setProgress","Audio","Sound","sound","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","playAsync","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","unloadAsync","positionMillis","playableDurationMillis","variant","animation","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","getURI","folder","from","record","DictaphoneLang","Date","created","deleteRecord","goBack","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","createAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","clr","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","logo","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","Menu","SimonLogo","SimonLang","setTab","Game","start","setStart","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","disabled","tab","pos","Create","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","GiveUpQuizTitle","GiveUpQuiz","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","QuizListRedirection","selectedQuizz","quizName","Questions","SuccessTitle","FailedTitle","answers","join","SuccessQuizTitle","SuccessQuiz","fail","FailQuizTitle","FailQuiz","SaveContent","AddContent","answersText","leaveButtonPlay","createButton","overlayDescriptionReference","ScrollViewSuccess","modalTitle","modalDescription","quizTitleInputContainer","quizTitleInput","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","QuizLogo","QuizLang","printFile","fileType","clearFile","pauseSound","playSound","QuestionList","quizEdit","newContent","quizEdition","Number","isInteger","questionId","tmp","setNewContent","setQuizEdit","setReload","reload","setEditedQuiz","contentList","setContent","pickOutQuestion","question","ScoreRatio","filter","parseInt","QuizList","ViewQuizList","includes","SuccessContent","FormQuizContent","answer","setAnswer","contentContainerStyle","setFileType","setFilename","setUri","DocumentPicker","mimeType","flexShrink","setQuestion","toLowerCase","setAnswers","addAnswer","badgeStyle","pickOutAnswer","ViewQuiz","newQuestion","setNewQuestion","editedQuiz","pushContent","buttonTop","mode","concat","viewPage","CreateQuiz","createQuestion","setCreateQuestion","disable","setDisable","setName","ThinkingImage","quizLength","pickRandomQuizz","ThinkingLottie","setPlay","setCurrent","setFail","arr","j","shuffle","TrophyLottie","SadLottie","openAlertResultQuestion","SadImage","setMediaType","answerTrimedLowercase","answerQuestion","play","setQuiz","setRandom","rand","randomArrayElement","exclude","randNumber","returnComponent","page","ActivitiesList","iconPosition","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","setPerson","BgSource","navTheme","DefaultTheme","colors","background","BackgroundImage","NavigationContainer","theme","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact","element"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,ktyBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,u9fCA3CD,EAAOC,QAAU,IAA0B,iC,y24CCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,khqBCA3CD,EAAOC,QAAU,IAA0B,sC,k+vJCI9BC,EAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,eACVC,QAASC,IACTC,UAAU,IAGP,SAASC,EAAYC,GACxB,OAAOP,EAAGQ,YACN,CAAEC,gBAAiB,CAAEC,SAAS,IAC9B,CAAED,gBAAiBF,IAcpB,SAAeI,IAAf,iBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAGoBZ,EAClBc,UAAU,CAAEC,SAAU,CAAEL,SAAS,KAAU,SAACM,EAAKC,GAC9C,OAAoB,IAAhBA,EAAKC,QACLlB,EAAGmB,YAAY,CACXJ,SAAU,KAEP,MAEAE,EAAK,GAAGF,YAGtBK,MAAK,SAACC,GAAU,IAAD,EACZ,OAAO,SAAAA,EAAK,SAAL,IAASN,WAAY,SAfjC,cAGGA,EAHH,kBAAAH,EAAA,MAkB2BZ,EACzBc,UAAU,CAAEL,gBAAiB,CAAEC,SAAS,KAAU,SAACM,EAAKC,GACrD,OAAoB,IAAhBA,EAAKC,QACLlB,EAAGmB,YAAY,CACXV,iBAAiB,KAEd,GAEAQ,EAAK,GAAGR,mBAGtBW,MAAK,SAACC,GAAU,IAAD,EACZ,OAAO,SAAAA,EAAK,SAAL,IAASZ,mBAAmB,MA9BxC,cAkBGA,EAlBH,yBAgCI,CAAEM,WAAUN,oBAhChB,4D,mBCVMa,EAAO,CAChBC,GAAI,CAEAC,aAAc,0BACdC,YAAa,qBACbC,SAAU,cACVC,YAAa,wCACbC,YAAa,2BACbC,eAAgB,uCAChBC,cACI,6DACJC,mBAAoB,SAACC,GACjB,MAAM,qCAAmCA,EAAzC,kBAEJC,KAAM,cACNC,cAAe,8DACfC,aAAc,oDACdC,aAAc,8BAGdC,IAAK,MACLC,GAAI,MACJC,WAAY,2BACZC,aAAc,SAACzB,GACX,MAAM,uDAAqDA,EAA3D,kLAIJ0B,cAAe,yCAEnBC,GAAI,CAEAlB,aAAc,gBACdC,YAAa,mBACbC,SAAU,YACVC,YAAa,0CACbC,YAAa,yBACbC,eAAgB,kCAChBC,cAAe,yBACfC,mBAAoB,SAACC,GACjB,MAAM,4BAA6BA,EAAnC,eAEJC,KAAM,OACNC,cAAe,uDACfC,aAAc,4CACdC,aAAc,qBAGdC,IAAK,MACLC,GAAI,KACJC,WAAY,gBACZC,aAAc,SAACzB,GACX,MAAM,2BAA4BA,EAAlC,yHAIJ0B,cAAe,2B,wCCvEjBE,EAAiB,SAACC,GACpB,IAAIC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,QAAnC,SACKN,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLxB,EAAO,CAChBC,GAAI,CAEAiC,YAAa,2BACbC,aAAc,WACV,OAAOd,EAAe,CAClBI,SACI,iNACJE,SAAU,CAAC,iBAKnBS,YAAa,oCACbC,aACI,iNAGJC,YAAa,oBACbC,aAAc,WACV,OAAOlB,EAAe,CAClBI,SACI,0LACJE,SAAU,CAAC,gBAKnBa,YAAa,eACbC,aAAc,WACV,OAAOpB,EAAe,CAClBI,SACI,4JACJE,SAAU,CAAC,gDAKnBe,YAAa,mBACbC,aACI,kLAGJC,eAAgB,8BAChBC,eAAgB,aAEhBC,eAAgB,qCAChBC,eAAgB,WACZ,OAAO1B,EAAe,CAClBI,SACI,+LACJE,SAAU,CAAC,iBAIvBP,GAAI,CAEAc,YAAa,wBACbC,aAAc,WACV,OAAOd,EAAe,CAClBI,SACI,6KACJE,SAAU,CAAC,iBAKnBS,YAAa,kCACbC,aACI,qKAGJC,YAAa,sBACbC,aAAc,WACV,OAAOlB,EAAe,CAClBI,SACI,qKACJE,SAAU,CAAC,gBAKnBa,YAAa,YACbC,aAAc,WACV,OAAOpB,EAAe,CAClBI,SACI,yHACJE,SAAU,CAAC,qCAKnBe,YAAa,kBACbC,aACI,oJAGJC,eAAgB,kBAChBC,eAAgB,QAEhBC,eAAgB,uBAChBC,eAAgB,WACZ,OAAO1B,EAAe,CAClBI,SACI,wJACJE,SAAU,CAAC,kB,yBCxHZqB,MAAWC,OAAO,CAC7BC,QAAS,CACLC,OAAQ,IACRC,UAAW,IAEfC,UAAW,CACPC,KAAM,EACNC,WAAY,SACZC,aAAc,UAElBC,QAAS,CACLC,SAAU,GACVzB,WAAY,OACZ0B,aAAc,GACdC,iBAAkB,GAClBA,iBAAkB,GAClBC,UAAW,SACXC,MAAO,SAEXC,YAAa,CACTL,SAAU,GACVC,aAAc,GACdC,iBAAkB,GAClBA,iBAAkB,GAClBC,UAAW,SACXC,MAAO,QAEXE,UAAW,CACPb,OAAQ,GACRc,YAAa,OACbC,aAAc,GACdC,kBAAmB,GACnBL,MAAO,QACPM,gBAAiB,QACjBC,cAAe,GACfC,aAAc,EACdC,aAAc,CACVpB,OAAQ,EACRqB,MAAO,GAEXC,UAAW,GAEfC,MAAO,CACHpB,KAAM,EACNkB,MAAO,KAEXG,gBAAiB,CACbpB,WAAY,UACZiB,MAAO,KAEXI,OAAQ,CACJR,gBAAiB,yBACjBF,aAAc,GACdM,MAAO,GACPK,WAAY,IAEhBC,WAAY,CACRC,WAAY,GACZjB,MAAO,QACPD,UAAW,UAEfmB,MAAO,CACH1B,KAAM,EACN2B,QAAS,IAEbC,QAAS,CACL1B,aAAc,SACdgB,MAAO,OACPW,cAAe,MACfC,SAAU,SACVC,eAAgB,Y,kDCtElBhE,EAAiB,SAACC,GACpB,IAAIC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQ6B,MAAO,WAAlD,SACKnC,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLxB,EAAO,CAChBC,GAAI,CACAqF,MAAO,SAAC7F,GACJ,OAAO4B,EAAe,CAClBI,SAAU,gBACVE,SAAU,CAAClC,MAGnB8F,QAAS,yCACTC,WAAY,uBACZC,KAAM,YACNC,OAAQ,YACRC,aAAc,uBACdC,UAAW,wCACXC,cACI,8EACJC,OAAQ,2BAEZ1E,GAAI,CACAkE,MAAO,SAAC7F,GACJ,OAAO4B,EAAe,CAClBI,SAAU,aACVE,SAAU,CAAClC,MAGnB8F,QAAS,uCACTC,WAAY,eACZC,KAAM,OACNC,OAAQ,SACRC,aAAc,qBACdC,UAAW,wCACXC,cACI,0EACJC,OAAQ,oB,0mBC3CD,SAASC,EAAKC,GACzB,IAAMC,EAAWC,cAEbC,EACgB,QAAhBC,IAASC,GACH1H,EAAQ,KAAgC2H,QACxC,KACNC,EACAP,EAAMQ,MAAQ,IAAM,EACd,CAAEpC,gBAAiB,SACnB,CAAEA,gBAAiB,WACzBqC,EACgB,QAAhBL,IAASC,GACH,CACIK,UAAWP,EACXQ,IAAKX,EAAMY,GACXC,eAAe,EACfC,eAAgBP,GAEpB,CAAEI,IAAKX,EAAMY,GAAIC,eAAe,EAAMC,eAAgBP,GAChE,OACI,eAAC,IAAD,OACQE,GADR,IAEIM,QAAS,WAAO,IAAD,EACXd,EAAS,eAAeD,EAAMY,GAAM,CAChCI,MAAO,CACHhH,KAAI,SAAEgG,EAAMhG,MAAR,EAAgB,KACpBP,SAAUuG,EAAMvG,aANhC,UAWI,cAAC,IAAD,CACIwH,OACS,MAALjB,KAAOkB,QACD,CAAEC,IAAKnB,EAAMkB,SACbE,IAEVC,SAAO,IAEX,eAAC,IAASC,QAAV,WACI,cAAC,IAASC,MAAV,UAAiBvB,EAAMwB,WACvB,cAAC,IAASC,SAAV,UAAoBzB,EAAMjC,iBAE9B,cAAC,IAAS2D,QAAV,CAAkB5D,MAAM,aCjDrBd,UAAWC,OAAO,CAC7B0E,YAAa,CACTC,UAAW,OACXxD,gBAAiB,OAErByD,aAAc,CACVrD,MAAO,IACPrB,OAAQ,KAEZ2E,WAAY,CACRF,UAAW,QAEfG,KAAM,CACFxE,WAAY,SACZyE,UAAW,SACXC,eAAgB,GAChBzD,MAAO,QAEX0D,UAAW,CACPhE,aAAc,GACdM,MAAO,KAEX2D,QAAS,CACL3D,MAAO,KAEX4D,eAAgB,CACZ5D,MAAO,IACPrB,OAAQ,IACRe,aAAc,IACdP,aAAc,IAElB0E,iBAAkB,CACdL,UAAW,SACXxD,MAAO,IACPX,UAAW,SACX5B,WAAY,OACZyB,SAAU,GACVI,MAAO,UACPH,aAAc,M,kBClBP2E,EAlBA,SAACtC,GAER,MAAuB,QAAhBI,IAASC,GACZ,cAAC,IAAD,CACIrE,MAAOgE,EAAMuC,YACbtB,OAAQjB,EAAMwC,aACdC,MAAMzC,EAAM0C,eAAe,SAAU1C,EAAMyC,KAC3CE,UACI3C,EAAM0C,eAAe,aAAc1C,EAAM2C,SAE7CC,WAAW,UAGf,cAACC,EAAA,EAAD,CAAO5B,OAAQjB,EAAM8C,YAAa9G,MAAOgE,EAAM+C,c,kBCN5C,SAASC,GAAQhD,GAC5B,IAAMwC,EAAe7J,EAAQ,KAE7B,OACI,eAACsK,EAAA,EAAD,WACI,cAAC,EAAD,CACIT,aAAcA,EACdM,YAAaI,IACbX,YAAaY,EAAOtB,aACpBkB,WAAYI,EAAOtB,aACnBY,MAAM,EACNE,UAAU,IAEd,cAAC5G,EAAA,EAAD,CAAMC,MAAOmH,EAAOd,iBAApB,UACoB,IAAfrC,EAAMoD,KACDC,EAAcrD,EAAMhG,MAAMY,cAC1ByI,EAAcrD,EAAMhG,MAAMa,eAEpC,cAAC,IAAD,CACIyI,MAAOD,EAAcrD,EAAMhG,MAAMc,aACjCkB,MAAO,CAAEoC,gBAAiB,QAC1B2C,QAAS,SAACwC,GACNvD,EAAMwD,c,8DC5Bb9K,GAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,mBACVC,QAASC,IACTC,UAAU,IAYP,SAAS0K,GAAIC,GAChB,OAAOhL,GACFiL,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEC,MAAO,IACdC,MAAK,SAACpK,EAAKqK,GACR,OAAOA,KCvBnB,IAEarL,GAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,cACVC,QAASC,IACTC,UAAU,IAeP,SAASiL,GAAYN,EAAUG,GAClC,OAAOnL,GACFiL,KAAK,CAAED,SAAUA,EAAUG,KAAMA,IACjCD,KAAK,CAAEK,OAAQ,IACfH,MAAK,SAACpK,EAAKwK,GAIR,OAHIxK,GACAyK,QAAQC,MAAM1K,GAEXwK,K,qkBCzBnB,IA2CaxL,GAAK,IA3CAC,EAAQ,KA2CR,CAAc,CAC5BC,SAAU,aACVC,QAASC,IACTC,UAAU,IA6CP,SAAesL,GAAYX,EAAUY,EAAQC,EAAWC,GAAxD,mBAAAlL,EAAAC,OAAA,kEAAAD,EAAA,MACgBZ,GAAGc,UAAU,CAAEiL,IAAKH,EAAQZ,SAAUA,IAAY,SAAChK,EAAKwK,GAEvE,OADIxK,GAAKyK,QAAQC,MAAM1K,GAChBwK,MAHR,cACGQ,EADH,OAKGC,EAAeD,EAAK,GAAGE,QAAQC,WAAU,SAAAC,GAAE,OAAIA,EAAGlE,IAAM2D,KACxDQ,EAAaL,EAAK,GAAGE,QAAQD,GAAcV,MAAMY,WAAU,SAAAC,GAAE,OAAIA,EAAGpB,SAAWA,KACjFc,EAASE,EAAK,GAAGE,QAAQD,GAAcV,MAAMc,GAAYP,UACxDE,EAAK,GAAGE,QAAQD,GAAcV,MAAMc,GAAYC,SARlD,kBASItM,GAAGQ,YAAY,CAACuL,IAAKH,GAArB,MAAkCI,EAAK,MAT3C,4DChGA,IAAMO,GAAa,SAACC,EAAQC,EAAOC,GAMtC,OALIF,EAAOxC,eAAeyC,GACtBD,EAAOC,GAASC,EAIbF,GAGEG,GAAe,SAACC,EAAKC,GAC9B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,I,qkBCDxD,IAEa5M,GAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,eACVC,QAASC,IACTC,UAAU,IAGP,SAASkE,GAAO0I,GAAS,IAAD,gBACvBjM,EAAM,GAWV,IATI,MAACiM,MAAQnE,WACT,SAAAmE,EAAOnE,WAAP,WAAiBoE,aAAjB,IAAyBhM,QAAS,KAClC,SAAA+L,EAAOnE,WAAP,WAAiBoE,aAAjB,IAAyBhM,QAAS,IAElCqL,GAAWvL,EAAK,WAAY,MAEtB,MAANiM,KAAQ5H,cAAe,SAAA4H,EAAO5H,cAAP,WAAoB6H,aAApB,IAA4BhM,QAAS,KAC5DqL,GAAWvL,EAAK,cAAe,MAE/BmM,OAAOC,KAAKpM,GAAKE,OAAS,EAC1B,MAAO,CAAE4K,SAAS,EAAON,KAAMxK,GAEnC,IAAMwK,EAAO,CACT1C,SAAQ,SAAEmE,EAAOnE,eAAT,EAAE,EAAiBoE,OAC3B7H,YAAW,SAAE4H,EAAO5H,kBAAT,EAAE,EAAoB6H,OACjC1E,QAAS,MAEb,OAAOxI,GAAGmB,YAAH,MAAoBqK,IAAQ,SAACxK,EAAK8B,GACrC,OAAI9B,EACO,CAAE8K,SAAS,EAAON,KAAM,IAE5B,CACHM,SAAS,EACTN,KAAM1I,MAKX,SAAS4H,GAAKxC,EAAImF,GACrB,IACoC,EAGG,EAGJ,EAP/B7B,EAAO,GACP6B,EAAIrD,eAAe,cACnBwB,EAAK1C,SAAL,SAAgBuE,EAAIvE,eAApB,EAAgB,EAAcoE,QAE9BG,EAAIrD,eAAe,iBACnBwB,EAAKnG,YAAL,SAAmBgI,EAAIhI,kBAAvB,EAAmB,EAAiB6H,QAEpCG,EAAIrD,eAAe,aACnBwB,EAAKhD,QAAL,SAAe6E,EAAI7E,cAAnB,EAAe,EAAa0E,QAEhC,OAAOlN,GAAGQ,YAAY,CAAEuL,IAAK7D,GAAM,CAAEoF,KAAK,MAAM9B,KAAU+B,OAAM,SAACvM,GAC7DyK,QAAQ+B,IAAIxM,MC/CL,SAASyM,GAAKnG,GACzB,MAA0CoG,mBAAS,IAAnD,WAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAgDF,mBAAS,IAAzD,WAAOG,EAAP,KAAyBC,EAAzB,KAgHA,OACI,eAACvD,EAAA,EAAD,CAAMjH,MAAOmH,EAAOpB,KAApB,UACI,cAACc,EAAA,EAAD,CACI5B,OACIjB,EAAMyG,WACA,CAAEtF,IAAKnB,EAAMyG,YACbC,IAEV1K,MAAOmH,EAAOf,iBAElB,cAAC,IAAD,CACIkB,MAAOD,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMG,YAClC4G,QA1CM,8BAAAzH,EAAAC,OAAA,kEAAAD,EAAA,MACKqN,KAAoC,CACnDC,WAAYD,KAA6BE,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,KALC,WAQW,KAPrBxL,EADU,QAQHyL,UARG,oDAYM,QAAhB7G,IAASC,GAZC,gBAaV6G,MAAM,QAbI,uCAgBF/F,EAAM3F,EAAO2F,IACjBnB,EAAMmH,cAAchG,GAjBd,YAAA7H,EAAA,MAkBe8N,KAA6BjG,EAAK,CACnDkG,SAAU,WACXpB,OAAM,SAACvM,GACNyK,QAAQ+B,IAAIxM,OArBV,QAkBA4N,EAlBA,OAuBNtH,EAAMuH,SAASD,GAvBT,kDAyBNnD,QAAQ+B,IAAR,MAzBM,kEA2CNsB,WAAY,CAAE9J,SAAU,IACxB+J,YAAatE,EAAOjB,UACpBwF,KACI,cAAC,IAAD,CACIC,KAAK,QACLC,KAAM,GACN9J,MAAM,QACN9B,MAAO,CAAE4B,iBAAkB,OAIvC,cAAC,IAAD,CACI5B,MAAO,CAAEwC,MAAO,OAAWyD,eAAgB,IAC3CzD,MAAO,IAEX,cAAC,IAAD,CACIqJ,YAAaxE,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMK,YACxCyN,SAAU,cAAC,IAAD,CAAMH,KAAK,SAASC,KAAM,GAAI9J,MAAM,SAC9CiK,MAAO1E,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMI,SAClC4N,WAAY,CAAElK,MAAO,OACrBmK,oBAAoB,EACpBC,UAAW,GACXC,aAAc9B,EACd+B,WAAY,CAAE1K,SAAU,GAAIE,iBAAkB,IAC9CyK,MAAOrI,EAAMwB,SACbV,eAAgB,CAAEtC,MAAO,IAAKpB,WAAY,IAC1CkL,aAAc,SAAC/E,GACXvD,EAAMuI,YAAYhF,MAI1B,cAAC,IAAD,CACIsE,YAAaxE,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMO,eACxCuN,SAAU,cAAC,IAAD,CAAMH,KAAK,OAAOC,KAAM,GAAI9J,MAAM,SAC5CiK,MAAO1E,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMM,YAClC0N,WAAY,CAAElK,MAAO,OACrBoK,UAAW,IACXD,oBAAoB,EACpBE,aAAc5B,EACd6B,WAAY,CAAE1K,SAAU,GAAIE,iBAAkB,IAC9CkD,eAAgB,CAAEtC,MAAO,IAAKb,aAAc,GAC5C0K,MAAOrI,EAAMjC,YACbuK,aAAc,SAAC/E,GACXvD,EAAMwI,eAAejF,MAI7B,cAAC,IAAD,CACIkF,QAAQ,EACRnF,MAAOD,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMW,KAClCoG,QAAS,SAACwC,IA7KN,iCAAAjK,EAAAC,OAAA,uDACRmK,EADQ,SACG1D,EAAM0D,UADT,EACqB,EAC3BgF,GACa,IAAf1I,EAAMoD,KACAuF,GAAY3I,EAAM0D,SAAU,CACxBlC,SAAUxB,EAAMwB,SAChBzD,YAAaiC,EAAMjC,cAEvB4K,GACI,CACInH,SAAUxB,EAAMwB,SAChBzD,YAAaiC,EAAMjC,aAEvBiC,EAAMhG,MAbR,WAAAV,EAAA,MAeSoP,GAfT,WAgBW,KADjBlN,EAfM,QAgBDgJ,QAhBC,wBAiBJhJ,EAAOkH,eAAe,aACtB4D,EAAiBjD,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMQ,eAE5CgB,EAAOkH,eAAe,gBACtB8D,EACInD,EAAa,MAACrD,OAAD,EAACA,EAAOhG,MAAMS,mBAAmB,MAtB9C,mBAyBD,GAzBC,eA2BS,IAAbiJ,IACAA,EAAWlI,EAAOiJ,KA5Bd,YAAAnL,EAAA,MA6BF8N,KAAiCA,KAAjC,WAAwE1D,EAAY,CAACkF,eAAe,KA7BlG,cA8BJ,SAAA5I,EAAMtB,YAAN,IAAa9E,QAAS,GA9BlB,wBA+BAiP,EAAUC,gBACRC,EAAU3B,KAhCZ,WAgCmD1D,EAhCnD,kBAAApK,EAAA,MAiCE8N,KAA8B2B,EAAM,CAACH,eAAe,IAAO3C,OAAM,SAACvM,GACpEyK,QAAQ+B,IAAI,gCAlCZ,QAoCJkB,KACI2B,EAAI,IAAOF,EAAP,OACJ7I,EAAMtB,MACN,CACI2I,SAAU,WAGbvN,MAAK,WACF6O,GAAYjF,EAAU,CAClBxC,QAAS6H,EAAI,IAAOF,EAAP,SAEZ/O,MAAK,SAACoK,GAOK,IAAD,GANY,IAAflE,EAAMoD,MACN5H,EAAO0F,QAAU6H,EAAI,IAAOF,EAAP,OACrB7I,EAAMgJ,WAAU,SAACC,GAAD,qBACTA,GADS,CAEZzN,QAGJwE,EAAMkJ,kBAAN,SACIlJ,EAAMwB,eADV,EACI,EAAgBoE,QAGxB5F,EAAMmJ,SAETlD,OAAM,SAACvM,GAEJ,OADAyK,QAAQ+B,IAAI,YAAaxM,IAClB,QAGlBuM,OAAM,SAACvM,GACJyK,QAAQ+B,IAAI,kBAAmBxM,MAnEnC,yBAsEe,IAAfsG,EAAMoD,KACNpD,EAAMgJ,WAAU,SAACC,GAAD,qBAAiBA,GAAjB,CAA0BzN,OAE1CwE,EAAMkJ,kBAAN,SAAwBlJ,EAAMwB,eAA9B,EAAwB,EAAgBoE,QAE5C5F,EAAMmJ,MA3EF,6DA8KAC,IAEJ5B,WAAY,CAAE9J,SAAU,IACxB+J,YAAatE,EAAOhB,QACpBkH,WAAW,EACX3B,KACI,cAAC,IAAD,CACIC,KAAK,OACLC,KAAM,GACN9J,MAAM,QACN9B,MAAO,CAAE4B,iBAAkB,U,qkBClMpC,SAAS0L,GAAatJ,GACjC,MAA0BoG,qBAA1B,WAAO1H,EAAP,KAAc6I,EAAd,KACA,EAAgCnB,mBAAS,IAAzC,WAAO5E,EAAP,KAAiB+G,EAAjB,KACA,EAAoCnC,qBAApC,WAAOK,EAAP,KAAmBU,EAAnB,KACA,EAAsCf,mBAAS,IAA/C,WAAOrI,EAAP,KAAoByK,EAApB,KACA,EAA8BpC,oBAAS,GAAvC,WAAO5B,EAAP,KAAgB+E,EAAhB,KAcMC,EAAY,CACdxP,KAAMgG,EAAMhG,KAEZwH,SAAUA,EACV+G,YAAaA,EAEb7J,MAAOA,EACP6I,SAAUA,EAEVd,WAAYA,EACZU,cAAeA,EAEfpJ,YAAaA,EACbyK,eAAgBA,GAGpB,OACI,cAACvF,EAAA,EAAD,CAAMjH,MAAOmH,EAAOpB,KAApB,SACKyC,EACG,cAACxB,GAAD,SAAawG,GAAb,IAAwBhG,MA3BtB,WACV+E,EAAY,IACZpB,EAAc,IACdI,EAAS,IACTiB,EAAe,IACfe,GAAW,IAsBmCnG,MAAM,KAE5C,cAAC+C,GAAD,SACQqD,GADR,IAEIpG,MAAM,EACN6F,QAASjJ,EAAMiJ,QACfD,UAAWhJ,EAAMyJ,WACjBN,IAtCH,WACTI,GAAW,SCbJvM,WAAWC,OAAO,CAC7BI,UAAW,CACPC,KAAM,GAEVJ,QAAS,CACLE,UAAW,IACXS,UAAW,SACXN,WAAY,UAEhBmM,SAAU,CACNpM,KAAM,EACNkB,MAAO,GACPpB,WAAY,KAEhBK,QAAS,CACLL,WAAY,IACZM,SAAU,GACViM,OAAQ,GAEZC,SAAU,CACN3N,WAAY,OACZ6B,MAAO,WAEX+L,SAAU,CACNhM,UAAW,UAEfa,MAAO,CACHpB,KAAM,EACNkB,MAAO,KAEXI,OAAQ,CACJR,gBAAiB,UACjB6D,eAAgB,GAChB9E,OAAQ,GACRqB,MAAO,IACPN,aAAc,GACd4L,SAAU,UAEdhL,WAAY,CACRhB,MAAO,QACPD,UAAW,SACXT,UAAW,IAEf2M,SAAU,CACNlM,UAAW,SACXN,WAAY,SACZyM,kBAAmB,OACnBC,kBAAmB,GACnBH,SAAU,UAEdI,cAAe,CACX5M,KAAM,GAEV6M,UAAW,CACPtM,UAAW,SACXoE,eAAgB,GAChBnE,MAAO,OACPsM,UAAW,UAEfC,UAAW,CACP1M,cAAe,IAEnB2M,iBAAkB,CACdzM,UAAW,SACXC,MAAO,UACPJ,SAAU,MC3CH,SAAS6M,GAAKvK,GAAQ,IAAD,EAChC,EAAkCoG,oBAAS,GAA3C,WAAOoE,EAAP,KAAkBC,EAAlB,KACA,EAA8BrE,qBAA9B,WAAO6C,EAAP,KAAgBQ,EAAhB,KACA,EAA4BrD,qBAA5B,WAAOsE,EAAP,KAAeC,EAAf,KACA,EAA0BvE,mBAAS,GAAnC,WAAO5F,EAAP,KAAcoK,EAAd,KACA,EAA6BxE,mBACzByE,EAAS7K,EAAMhG,MAAQA,GAAMwF,YADjC,WAAOsL,EAAP,KAAgBC,EAAhB,KAGA,EAA4B3E,oBAAS,GAArC,WAAO4E,EAAP,KAAeC,EAAf,KAEMC,EAASC,iBAAO,MAChBnK,EAAK,SAAGoK,oBAAH,EAAG,EAAepK,MACvBf,EAAWC,cAEXzG,GAAgB,MAALuH,OAAA,EAAAA,EAAOvH,WAAYuG,EAAMvG,SACpCO,GAAY,MAALgH,OAAA,EAAAA,EAAOhH,OAAQgG,EAAMhG,KAElCqR,qBAAU,WAAO,IAAD,GACP5R,IAAoB,MAARA,GAAA,SAAAA,EAAUmM,aAAV,IAAkBhM,QAAS,EACxCqG,EAAS,KJqBd,SAAa0H,GAChB,IAAM2D,EAAQ,IAAIC,OAAO5D,EAAM,KAC/B,OAAOjP,GAAGc,UAAU,CAAEgI,SAAU,CAAEgK,OAAQF,KIrBlC3C,CAAW+B,GAAQ5Q,MAAK,SAACoK,GACrBuF,EAAWvF,GACXuG,GAAa,MAGrB,IAAMgB,EAAcC,IAAYC,iBAC5B,qBACA,WACI,OAAO,KAGf,OAAO,kBAAMF,EAAYG,YAC1B,CAAClB,EAAQjR,EAAUwG,IAEtB,IAmBmB4L,EAiBnB,OACI,eAAC5I,EAAA,EAAD,CAAMjH,MAAOmH,GAAO9F,UAApB,UACI,eAAC4F,EAAA,EAAD,CAAMjH,MAAOmH,GAAOjG,QAApB,UACI,cAAC2F,EAAA,EAAD,CACI5B,OAAQ6K,IACRlJ,WAAW,UACX5G,MAAOmH,GAAOuG,WAElB,cAAC3N,EAAA,EAAD,CAAMC,MAAOmH,GAAO1F,QAApB,SACKoN,EAAS7Q,GAAMsF,MAAM7F,QAG9B,cAACsC,EAAA,EAAD,CAAMC,MAAOmH,GAAO0G,SAApB,SAA+BgB,EAAS7Q,GAAMuF,UAC9C,cAAC0D,EAAA,EAAD,CAAMjH,MAAOmH,GAAO4G,SAApB,SACI,cAACgC,EAAA,EAAD,CACI/P,MAAOmH,GAAOvE,OACdoN,cAAe,GACfjL,QAAS,SAACwC,GArDR,IAAC0I,GAsDgB,IAAXjB,IAGJC,GAAU,GACVF,EACI,cAACmB,EAAA,EAAD,CAAmBpO,MAAO,QAAS8J,KAAM,YA1DhD,KADEqE,EA6DWzL,EAAQ,KA3D9ByL,EAAM,GAEVf,EAAOiB,QAAQC,SAASH,EAAMzL,GAAO,KA8C7B,SAcI,cAACzE,EAAA,EAAD,CAAMC,MAAOmH,GAAOrE,WAApB,SAAiCgM,QAGzC,cAACuB,EAAA,EAAD,CAAcrQ,MAAOmH,GAAO+G,cAA5B,SACKM,EACG,cAAC0B,EAAA,EAAD,CACIpO,MAAO,OACP9B,MAAO,CAAEoB,UAAW,MAGxB,eAAC,IAAD,CACIkP,IAAKpB,EACLqB,cAAc,EACdC,eAAe,EACf/J,MAAI,EACJgK,eAAa,EACbjM,MAAO,EACPkM,iBAAiB,EACjBC,eAAgB,SAACpJ,GA3EjB,IAAC0I,EACjBrB,EADiBqB,EA4Ee1I,GA1EhCqJ,YAAW,WACK,IAARX,EACAlB,EAAUF,EAAS7Q,GAAMwF,YACV,IAARyM,GACPlB,EAAUF,EAAS7Q,GAAM2F,cAE7BsL,GAAU,KACX,MA0DS,UAYI,eAAC4B,EAAA,EAAD,WACI,cAAC,IAAD,CACIhF,YAAagD,EAAS7Q,GAAM8F,OAC5BgN,oBAAqB3J,GAAOkH,UAC5B/B,aAAc,SAAC/E,GACXoH,EAAUpH,IAEd8E,MAAOqC,EACPtC,WAAYjF,GAAOmH,mBAEtBrB,GAAWA,EAAQrP,OAAS,GA7ElCiS,EA8EmB5C,EA7E3B4C,EAAKkB,KAAI,SAACjI,EAAIjJ,GACjB,OACI,cAACkE,EAAD,CACIS,MAAO3E,EAEPpC,SAAUA,EACVmH,GAAIkE,EAAGL,IACPjD,SAAUsD,EAAGtD,SACbzD,YAAa+G,EAAG/G,YAChBmD,QAAS4D,EAAG5D,QACZlH,KAAMA,GAND8K,EAAGL,SA2EI,cAAC1I,EAAA,EAAD,CAAMC,MAAOmH,GAAOgH,UAApB,SACKU,EAAS7Q,GAAM4F,eAI5B,cAACiN,EAAA,EAAD,UACI,cAACvD,GAAD,CACIL,QAASA,EACTQ,WAAYA,EACZzP,KAAMA,MAGd,cAAC6S,EAAA,EAAD,YCrJT,SAAS/P,GAAekD,GACnC,MAA0BoG,mBAAS,IAAnC,WAAO4G,EAAP,KAAcC,EAAd,KACA,EAAkC7G,oBAAS,GAA3C,WAAOoE,EAAP,KAAkBC,EAAlB,KACA,EAAkCrE,oBAAS,GAA3C,WAAO8G,EAAP,KAAkBC,EAAlB,KACMlN,EAAWC,cAEjBmL,qBAAU,WACN,IAUMI,EAAcC,IAAYC,iBAC5B,qBAXe,WACf,OAAO3S,GAAY,GACdc,MAAK,WAEF,OADAmG,EAAS,MACF,KAEVgG,OAAM,SAACvM,GACJ,OAAO,QAOnB,OAAO,kBAAM+R,EAAYG,YAC1B,IAEH,IAAMwB,EAAgB,SAACJ,GACnBvC,GAAa,GACb,IAAIhR,GAAgB,MAALuT,OAAA,EAAAA,EAAOpH,SAAU,KAC5BnM,IAAoB,MAARA,OAAA,EAAAA,EAAUG,SAAU,IAAa,MAARH,OAAA,EAAAA,EAAUG,QAAS,GlB/B7D,SAA2BoT,GAA3B,SAAA1T,EAAAC,OAAA,yEACIb,EAAGQ,YAAY,CAAEO,SAAU,CAAEL,SAAS,IAAU,CAAEK,SAAUuT,KADhE,4DkBgCKK,CAAY5T,GACPK,MAAK,SAACwT,GACH7C,GAAa,GACbwC,EAASxT,GACT0T,GAAa,MAEhBlH,OAAM,SAACvM,GACJyK,QAAQ+B,IAAIxM,MAGpB+Q,GAAa,IAIrB,OAAKyC,EAmDM,cAAC3C,GAAD,CAAM9Q,SAAUuT,EAAOhT,KAAMgG,EAAMhG,OAjDtC,eAACiJ,EAAA,EAAD,CAAMjH,MAAOmH,EAAO9F,UAApB,UACI,cAAC4F,EAAA,EAAD,CAAMjH,MAAOmH,EAAOjG,QAApB,SACI,cAAC2F,EAAA,EAAD,CACI5B,OAAQsM,IACR3K,WAAW,UACX5G,MAAOmH,EAAOzE,UAGtB,cAAC3C,EAAA,EAAD,CAAMC,MAAOmH,EAAO1F,QAApB,SACK+P,EAAaxN,EAAMhG,MAAM8C,iBAE9B,cAACf,EAAA,EAAD,CAAMC,MAAOmH,EAAOpF,YAApB,SACKyP,EAAaxN,EAAMhG,MAAM+C,mBAE9B,eAACkG,EAAA,EAAD,CAAMjH,MAAOmH,EAAOjE,QAApB,UACI,cAACuO,EAAA,EAAD,CACIC,sBAAsB,cACtB1R,MAAOmH,EAAOnF,UACdqK,MAAO2E,EACPnF,YAAaxE,EAAcrD,EAAMhG,MAAME,aACvCgO,UAAW,GACXI,aAAc,SAAC/E,GACX0J,EAAS1J,MAGjB,cAACwI,EAAA,EAAD,CACI/P,MAAOmH,EAAOvE,OACdoN,cAAe,GACfjL,QAAS,SAACwC,GACN6J,EAAcJ,IAJtB,SAOI,eAACjR,EAAA,EAAD,CAAMC,MAAOmH,EAAOrE,WAApB,UACK,IACA0L,EACG,cAAC0B,EAAA,EAAD,CACIpO,MAAM,QACN8J,KAAK,QACL+F,WAAW,IAGf,gB,yBCpEjBC,GAhCC,SAAC5N,GACb,IAAMwC,EAAe7J,EAAQ,KACvBwK,EAAS,CAAE3E,MAAO,IAAKpB,UAAW,KACxC,OACI,eAAC6F,EAAA,EAAD,CAAMjH,MAAOgE,EAAMhE,MAAnB,UACI,cAAC,EAAD,CACIwG,aAAcA,EACdD,YAAaY,EACbJ,WAAYI,EACZL,YAAa+K,OAEjB,cAAC9R,EAAA,EAAD,CACIC,MAAO,CACHoB,UAAW,IACXU,MAAO,UACPU,MAAO,IACPX,UAAW,UALnB,SAQKmC,EAAM1E,OAEX,cAACS,EAAA,EAAD,CAAMC,MAAO,CAAEoB,UAAW,KAA1B,SACI,cAAC8O,EAAA,EAAD,CACIpO,MAAO,UACP8J,KAAM,QACN5L,MAAO,CAAEoB,UAAW,Y,mJC7BzBJ,OAAWC,OAAO,CAC7BC,QAAS,CACLmC,eAAgB,SAChB9B,WAAY,UAEhByB,MAAO,CACH1B,KAAM,EACN2B,QAAS,IAEb6O,SAAU,CACNxQ,KAAM,EACN2B,QAAS,GACTb,gBAAiB,WAErBkF,MAAO,CACHxF,MAAO,QACPR,KAAM,EACNI,SAAU,GACVzB,WAAY,OACZmB,WAAY,GACZS,UAAW,UAEfvC,KAAM,CACFwC,MAAO,QACPJ,SAAU,GACVJ,KAAM,EACNF,WAAY,GACZS,UAAW,UAEfa,MAAO,CACHpB,KAAM,EACNkB,MAAO,OACPrB,OAAQ,KAEZwB,gBAAiB,CACbrB,KAAM,EACNF,WAAY,IAEhBwB,OAAQ,CACJxB,UAAW,GACX2B,WAAY,GACZgP,cAAe,GACflP,WAAY,GACZmP,YAAa,GACb5P,gBAAiB,UACjBF,aAAc,GACd+P,YAAa,EACbhQ,YAAa,QAEjBa,WAAY,CACRhB,MAAO,OACPD,UAAW,YC9BJ,SAASqQ,GAASlO,GAC7B,IAAMwC,EAAe7J,EAAQ,KAc7B,OAZA0S,qBAAU,WrBLP,EAAA/R,EAAAC,OAAA,yEACIb,EAAGc,UAAU,CAAEC,SAAU,CAAEL,SAAS,KAAU,SAACM,EAAKC,GACvD,OAAOA,MAFR,4DqBOMG,MAAK,SAACqU,GAAS,IAAD,EACX,YAAIA,EAAI,KAAJ,EAAQ1U,SACR,OAAO,cAAC8Q,GAAD,CAAM9Q,SAAU0U,EAAKnU,KAAMgG,EAAMhG,UAG/CiM,OAAM,SAACvM,GACJyK,QAAQ+B,IAAIxM,QAErB,IAGC,qCACI,cAAC,EAAD,CACI8I,aAAcA,EACdM,YAAasL,KACb7L,YAAa,CACT8L,SAAU,WACVlR,OAAQ,GACRC,UAAW,IACXyB,WAAY,GACZyP,QAAS,IAEbvL,WAAY,CACRsL,SAAU,WACVlR,OAAQ,GACRC,UAAW,IACXyB,WAAY,GACZyP,QAAS,MAGjB,eAAC,IAAD,CACItS,MAAOmH,GAAOjG,QACdqP,cAAc,EACdG,iBAAiB,EACjBjK,MAAM,EAJV,UAMI,eAACQ,EAAA,EAAD,CAAMjH,MAAOmH,GAAOnE,MAApB,UACI,cAAC6D,EAAA,EAAD,CACI5B,OAAQsN,KACR3L,WAAW,UACX5G,MAAOmH,GAAOzE,QAElB,cAAC3C,EAAA,EAAD,CAAMC,MAAOmH,GAAOG,MAApB,SACKkK,EAAaxN,EAAMhG,MAAMkC,cAE9B,cAACH,EAAA,EAAD,CAAMC,MAAOmH,GAAO7H,KAApB,SACKkS,EAAaxN,EAAMhG,MAAMmC,oBAIlC,eAAC8G,EAAA,EAAD,CAAMjH,MAAOmH,GAAO2K,SAApB,UACI,cAACjL,EAAA,EAAD,CACI5B,OAAQuN,KACR5L,WAAW,UACX5G,MAAOmH,GAAOzE,QAElB,cAAC3C,EAAA,EAAD,CAAMC,MAAOmH,GAAOG,MAApB,SACKkK,EAAaxN,EAAMhG,MAAMoC,cAE9B,cAACL,EAAA,EAAD,CAAMC,MAAOmH,GAAO7H,KAApB,SACKkS,EAAaxN,EAAMhG,MAAMqC,kBAIlC,eAAC4G,EAAA,EAAD,CAAMjH,MAAOmH,GAAOnE,MAApB,UACI,cAAC6D,EAAA,EAAD,CACI5B,OAAQwN,KACR7L,WAAW,UACX5G,MAAOmH,GAAOzE,QAElB,cAAC3C,EAAA,EAAD,CAAMC,MAAOmH,GAAOG,MAApB,SACKkK,EAAaxN,EAAMhG,MAAMsC,cAE9B,cAACP,EAAA,EAAD,CAAMC,MAAOmH,GAAO7H,KAApB,SACKkS,EAAaxN,EAAMhG,MAAMuC,oBAIlC,eAAC0G,EAAA,EAAD,CAAMjH,MAAOmH,GAAO2K,SAApB,UACI,cAACjL,EAAA,EAAD,CACI5B,OAAQyN,KACR9L,WAAW,UACX5G,MAAOmH,GAAOzE,QAElB,cAAC3C,EAAA,EAAD,CAAMC,MAAOmH,GAAOG,MAApB,SACKkK,EAAaxN,EAAMhG,MAAMwC,cAE9B,cAACT,EAAA,EAAD,CAAMC,MAAOmH,GAAO7H,KAApB,SACKkS,EAAaxN,EAAMhG,MAAMyC,oBAIlC,eAACwG,EAAA,EAAD,CAAMjH,MAAOmH,GAAOnE,MAApB,UACI,cAAC6D,EAAA,EAAD,CACI5B,OAAQ0N,KACR/L,WAAW,UACX5G,MAAOmH,GAAOzE,QAElB,cAAC3C,EAAA,EAAD,CAAMC,MAAOmH,GAAOG,MAApB,SACKkK,EAAaxN,EAAMhG,MAAM0C,cAE9B,cAACX,EAAA,EAAD,CAAMC,MAAOmH,GAAO7H,KAApB,SACKkS,EAAaxN,EAAMhG,MAAM2C,kBAIlC,eAACsG,EAAA,EAAD,CAAMjH,MAAOmH,GAAO2K,SAApB,UACI,cAACjL,EAAA,EAAD,CACI5B,OAAQ2N,KACRhM,WAAW,UACX5G,MAAOmH,GAAOzE,QAElB,cAAC3C,EAAA,EAAD,CAAMC,MAAOmH,GAAOG,MAApB,SACKkK,EAAaxN,EAAMhG,MAAM4C,iBAE9B,cAACqG,EAAA,EAAD,CAAMjH,MAAOmH,GAAOxE,gBAApB,SACI,cAAC,IAAD,CACIkQ,GAAG,YACHC,UAAW/C,IACX/P,MAAOmH,GAAOvE,OACdmC,QAAS,SAACwC,GACNwL,GAAmB,IAEvB/C,cAAe,GAPnB,SASI,eAACjQ,EAAA,EAAD,CAAMC,MAAOmH,GAAOrE,WAApB,UACK,IACA0O,EAAaxN,EAAMhG,MAAM6C,eAAgB,oBCrJ1E,IAUemS,GAVQ,SAAChP,GAAW,IAAD,EAC9B,OAAI,MAACA,KAAO7G,gBAGR,MAAC6G,MAAOvG,WAAiB,MAALuG,GAAA,SAAAA,EAAOvG,eAAP,IAAiBG,QAAS,EACvC,cAACkD,GAAD,CAAgB9C,KAAMgG,EAAMhG,OAEhC,cAACuQ,GAAD,CAAMvQ,KAAMgG,EAAMhG,KAAMP,SAAUuG,EAAMvG,WALpC,cAACyU,GAAD,CAAUlU,KAAMgG,EAAMhG,Q,0CCN/BqB,GAAiB,SAACC,GACpB,IAAIC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQ6B,MAAO,WAAlD,SACKnC,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLxB,GAAO,CAChBC,GAAI,CACAqF,MAAO,SAAC7F,GACJ,OAAO4B,GAAe,CAClBI,SAAU,gBACVE,SAAU,CAAClC,MAGnBwV,WAAY,eACZC,MAAO,QACPC,SAAU,gBACVC,cAAe,qBACfC,aAAc,qBACdC,cAAe,sBACfC,aAAc,2BACdC,MAAO,iBACPC,aAAc,gBACdC,WAAY,gBACZC,KAAM,qBACNC,oBAAqB,+BACrBC,KAAM,8BAENC,WAAY,UAEhB1U,GAAI,CACAkE,MAAO,SAAC7F,GACJ,OAAO4B,GAAe,CAClBI,SAAU,aACVE,SAAU,CAAClC,MAGnBwV,WAAY,aACZC,MAAO,QACPC,SAAU,WACVC,cAAe,qBACfC,aAAc,oBACdC,cAAe,qBACfC,aAAc,2BACdC,MAAO,gBACPE,WAAY,YACZC,KAAM,eACNF,aAAc,gBACdG,oBAAqB,uBACrBC,KAAM,0BAENC,WAAY,W,mBC5DL9S,OAAWC,OAAO,CAC7B6D,eAAgB,CACZvD,WAAY,SACZH,UAAW,GACXO,aAAc,IAElB8J,YAAa,CACTjJ,MAAO,IACPrB,OAAQ,IAEZ4S,kBAAmB,CACfvR,MAAO,IACPrB,OAAQ,IAEZ6S,kBAAmB,CACfxR,MAAO,IACPrB,OAAQ,GACRiB,gBAAiB,OAErB6R,gBAAiB,CACbzR,MAAO,IACPrB,OAAQ,GACRiB,gBAAiB,WAErB8R,iBAAkB,CACd1R,MAAO,IACPrB,OAAQ,GACRiB,gBAAiB,Y,qkBCbV,SAAS+Q,GAASnP,GAAQ,IAAD,YACpC,EAAwBoG,oBAAS,GAAjC,WAAOhD,EAAP,KAAa+M,EAAb,KACA,EAA8B/J,oBAAS,GAAvC,WAAO5B,EAAP,KAAgB+E,EAAhB,KACA,EAA0BnD,qBAA1B,WAAO1H,EAAP,KAAc6I,EAAd,KACA,EAAgCnB,mBAASpG,EAAM2F,OAAOnE,UAAtD,WAAOA,EAAP,KAAiB+G,EAAjB,KACA,EAAoCnC,mBAASpG,EAAM2F,OAAOzE,SAA1D,WAAOuF,EAAP,KAAmBU,EAAnB,KACA,EAAsCf,mBAASpG,EAAM2F,OAAO5H,aAA5D,WAAOA,EAAP,KAAoByK,EAApB,KAEMvI,EAAWC,cAcXsJ,EAAY,CACdxP,KAAMgG,EAAMhG,KAEZwH,SAAUA,EACV+G,YAAaA,EAEb7J,MAAOA,EACP6I,SAAUA,EAEVd,WAAYA,EACZU,cAAeA,EAEfpJ,YAAaA,EACbyK,eAAgBA,GAUd4H,EAAe,WZYlB,IAA0BxP,KYXPZ,EAAM0D,SZWzB,EAAApK,EAAAC,OAAA,kEAAAD,EAAA,MACG+W,GAAQC,YAAY,CAAE5M,SAAU9C,KADnC,yBAAAtH,EAAA,MAEGiX,GAAaD,YAAY,CAAE5M,SAAU9C,KAFxC,yBAAAtH,EAAA,MAGG8N,KAA0BA,KAA1B,WAAiExG,GAAMqF,OAAM,SAAAvM,GAC/EyK,QAAQC,MAAM,qBAAqB1K,OAJpC,gCAMIhB,GAAG4X,YAAY,CAAE7L,IAAK7D,KAN1B,6DYXmC9G,MAAK,SAAC0W,GACpCvQ,EAAS,aAqBjB,OACI,cAACgD,EAAA,EAAD,CAAMjH,MAAO,CAAEsB,KAAM,GAArB,UACc,IAAT8F,EACG,eAACyJ,EAAA,EAAD,CAAY7Q,MAAO,CAAEsB,KAAM,GAA3B,UACI,cAAC,IAAD,CACIoK,KAAM,CACFC,KAAM,OACN8I,KAAM,eACN7I,KAAM,GACN9J,MAAO,SAEX4S,mBAAoB,CAAE1C,YAAa,IACnCvG,YAAatE,GAAOsE,YACpB3G,eAAgBqC,GAAOrC,eACvBC,QAAS,WACLoP,GAAQ,IAEZ7M,MAAK,SAAEqN,GAAe3Q,EAAMhG,YAAvB,EAAE,EAA4BoV,gBAEvC,cAAC,IAAD,CACI1H,KAAM,CACFC,KAAM,YACN8I,KAAM,eACN7I,KAAM,GACN9J,MAAO,SAEX4S,mBAAoB,CAAE1C,YAAa,IACnCvG,YAAatE,GAAOsE,YACpB3G,eAAgBqC,GAAOrC,eACvBwC,MAAK,SAAEqN,GAAe3Q,EAAMhG,YAAvB,EAAE,EAA4BqV,eAEvC,cAAC,IAAD,CACI3H,KAAM,CACFC,KAAM,SACN8I,KAAM,eACN7I,KAAM,GACN9J,MAAO,SAEX4S,mBAAoB,CAAE1C,YAAa,IACnCvG,YAAatE,GAAO6M,kBACpBlP,eAAgBqC,GAAOrC,eACvBwC,MAAK,SAAEqN,GAAe3Q,EAAMhG,YAAvB,EAAE,EAA4BsV,cACnCvO,QAAS,WA1DlB6P,KAAM1J,MACT7D,EAAcrD,EAAMhG,MAAMiB,WAC1BoI,EAAcrD,EAAMhG,MAAMkB,aAAa8E,EAAMvG,UAC7C,CACI,CACI6B,KAAM+H,EAAcrD,EAAMhG,MAAMe,IAChCgG,QAAS,WACLqP,MAGR,CACI9U,KAAM+H,EAAcrD,EAAMhG,MAAMgB,SAmDhC,cAAC,IAAD,CACI0M,KAAM,CACFC,KAAM,aACN8I,KAAM,eACN7I,KAAM,GACN9J,MAAO,SAEX4S,mBAAoB,CAAE1C,YAAa,IACnCvG,YAAatE,GAAO8M,gBACpBnP,eAAgBqC,GAAOrC,eACvBwC,MAAK,SAAEqN,GAAe3Q,EAAMhG,YAAvB,EAAE,EAA4B6V,KACnC9O,QAAS,WACLd,EAAS,YAGjB,cAAC,IAAD,CACIyH,KAAM,CACFC,KAAM,MACN8I,KAAM,eACN7I,KAAM,GACN9J,MAAO,SAEX4S,mBAAoB,CAAE1C,YAAa,IACnCvG,YAAatE,GAAO+M,iBACpBpP,eAAgBqC,GAAOrC,eACvBwC,MAAK,SAAEqN,GAAe3Q,EAAMhG,YAAvB,EAAE,EAA4BuV,aACnCxO,QAtGN,oBAAAzH,EAAAC,OAAA,kEAAAD,EAAA,MZ4BX,EAAAA,EAAAC,OAAA,yEACI6N,KAA0BA,KAA1B,WAAiEtN,MAAK,SAAMqU,GAAN,SAAA7U,EAAAC,OAAA,kEAAAD,EAAA,MACnE+W,GAAQC,YAAY,GAAI,CAAEO,OAAO,KADkC,yBAAAvX,EAAA,MAEnEwX,GAAOR,YAAY,GAAI,CAAEO,OAAO,KAFmC,yBAAAvX,EAAA,MAGnEiX,GAAaD,YAAY,GAAI,CAAEO,OAAO,KAH6B,gCAIlEnY,GAAG4X,YAAY,GAAI,CAAEO,OAAO,KAJsC,gEAD1E,6DY5BW,yBAAAvX,EAAA,MAEJR,IAAaiY,SAFT,cAGV9Q,EAAS,SAHC,mBAIH,GAJG,kEA0GF,eAAC4M,EAAA,EAAD,CAAY7Q,MAAO,CAAEsB,KAAM,EAAGc,gBAAiB,SAA/C,UACI,cAAC,IAAD,CACIsJ,KAAM,CACFC,KAAM,oBACN8I,KAAM,eACN7I,KAAM,GACN9J,MAAO,SAEX4S,mBAAoB,CAAE1C,YAAa,IACnCvG,YAAatE,GAAO4M,kBACpBjP,eAAgBqC,GAAOrC,eACvBwC,MAAK,SAAEqN,GAAe3Q,EAAMhG,YAAvB,EAAE,EAA4B8V,WACnC/O,QAAS,kBAAMoP,GAAQ,MAE1B3L,EACG,cAACxB,GAAD,SAAawG,GAAb,IAAwBhG,MAjJ9B,WACV+E,EAAYvI,EAAM2F,OAAOnE,UACzB2F,EAAcnH,EAAM2F,OAAOzE,SAC3BqG,EAAS,IACTiB,EAAexI,EAAM2F,OAAO5H,aAC5BwL,GAAW,IA4I2CnG,MAAM,KAE5C,cAAC+C,GAAD,SACQqD,GADR,IAEIpG,MAAM,EACN6F,QAASjJ,EAAM2F,OACfuD,kBAAmBlJ,EAAMuI,YACzB7E,SAAU1D,EAAM0D,SAChByF,IA7JX,WACTI,GAAW,Y,sBCVNvP,GAAO,CAChBC,GAAI,CACA+W,MAAO,cACPC,MAAO,QACPC,KAAM,OACNC,SAAU,YACVC,SAAU,aACVC,YAAa,uBACbC,mBAAoB,oDACpB/P,MAAO,0BACPgQ,OAAQ,UACR5W,KAAM,cACN6W,YAAa,8CACbC,YAAa,kCACbC,gBACI,qGACJhS,OAAQ,YACRiS,WAAY,sCAEhBvW,GAAI,CACA4V,MAAO,kBACPC,MAAO,kBACPC,KAAM,iBACNC,SAAU,qBACVC,SAAU,WACVC,YAAa,iBACbC,mBAAoB,wCACpB/P,MAAO,cACPgQ,OAAQ,SACR5W,KAAM,OACN6W,YAAa,qCACbC,YAAa,mBACbC,gBACI,oEACJhS,OAAQ,SACRiS,WAAY,sB,qkBC/CL,SAAS5R,GAAKC,GACzB,MAAkCoG,oBAAS,GAA3C,WAAOwL,EAAP,KAAkBC,EAAlB,KACA,EAAgCzL,mBAAS,GAAzC,WAAO0L,EAAP,KAAiBC,EAAjB,KACA,EAA0B3L,mBAAS,IAAI4L,KAAMC,OAA7C,WAAOC,EAAP,KAAcC,EAAd,KAEA9G,qBAAU,WACNwG,GAAa,KACd,CAAC7R,EAAMoS,gBAEV,IA2CIjS,EACgB,QAAhBC,IAASC,GACH1H,EAAQ,KAAgC2H,QACxC,KACNC,EACAP,EAAMQ,MAAQ,IAAM,EACd,CAAEpC,gBAAiB,SACnB,CAAEA,gBAAiB,WACzBqC,EACgB,QAAhBL,IAASC,GACH,CACIK,UAAWP,EACXQ,IAAKX,EAAMyE,IACX5D,eAAe,EACfC,eAAgBP,GAEpB,CAAEI,IAAKX,EAAMyE,IAAK5D,eAAe,EAAMC,eAAgBP,GACjE,OACI,eAAC,IAAD,SACQE,GADR,IAEIM,QAAS6Q,EAzBE,oBAAAtY,EAAAC,OAAA,kEAAAD,EAAA,MACT4Y,EAAMG,cADG,OAEfR,GAAa,GAFE,6DAtCD,0BAAAvY,EAAAC,OAAA,2EAAAD,EAAA,MAEJ0G,EAAMsS,YAFF,yBAAAhZ,EAAA,MAGJ0Y,KAAMO,kBAAkB,CAC1BC,yBAAyB,EACzBC,mBAAmB,KALb,cAOVZ,GAAa,GAPH,WAAAvY,EAAA,YAQmB4Y,OARnB,EAQmBA,EAAOQ,kBAR1B,WASuB,KAAf,OADZC,EARI,aASN,EAAAA,EAAgBC,UATV,oCAAAtZ,EAAA,MAUA4Y,EAAMW,UAAU,CAAE1R,IAAKnB,EAAM+I,QAV7B,QAWNoJ,EAASD,GACTlS,EAAM8S,iBAAN,eAA2B9S,EAAMoS,eAAjC,CAAgDF,KAZ1C,wBAcNlS,EAAM8S,iBAAN,KAA2B9S,EAAMoS,gBAd3B,2BAAA9Y,EAAA,MAgBJ4Y,EAAMa,aAhBF,QAiBVb,EAAMc,2BAA0B,SAAOC,GAAP,SAAA3Z,EAAAC,OAAA,oDACxB0Z,EAAeC,cADS,kCAAA5Z,EAAA,MAElB4Y,EAAMiB,eAFY,OAGxBpB,EAAY,GACZF,GAAa,GAJW,sBAMxBoB,EAAeG,eACXH,EAAeI,uBACnB,GAEAtB,EACIkB,EAAeG,eACXH,EAAeI,wBAZC,+DAgBhCxB,GAAa,GAjCH,kDAmCV1N,QAAQC,MAAR,MAnCU,kEA6Dd,UAII,cAAC,IAAD,CACIqE,QAAM,EACNd,KAAMiK,EAAY,eAAiB,sBACnCnB,KAAM,UACN3S,MAAO,SAEX,eAAC,IAASwD,QAAV,WACI,cAAC,IAASC,MAAV,UAAiBvB,EAAMsD,QACvB,cAAC,IAAS7B,SAAV,UAAoBzB,EAAM6D,OAC1B,cAAC,IAAD,CACI7H,MAAO,CAAEiG,eAAgB,IACzBoG,MAAOyJ,EACPwB,QAAQ,cACRC,UAAW,CAAEC,SAAU,QAG/B,cAAC,IAAD,CACIC,SAAO,EACP7L,KAAM,GACN5L,MAAO,CAAEoC,gBAAiB,OAC1BuJ,KAAM,gBACN8I,KAAM,UACN3S,MAAO,MACPiD,QAAS,SAACwC,GACNvD,EAAM0T,SAAS1T,EAAMyE,YCrG1BzH,WAAWC,OAAO,CAC7B8E,KAAM,CACFE,eAAgB,GAChB3E,KAAM,EACNC,WAAY,UAEhBuD,eAAgB,CACZtC,MAAO,OAEXmV,aAAc,CACVvV,gBAAiB,OAErBwV,YAAa,CACT3X,WAAY,QAEhB4X,kBAAmB,CACf1U,cAAe,OAEnB2U,cAAe,CACXlW,iBAAkB,GAEtBmW,SAAU,CACN3V,gBAAiB,QACjBT,aAAc,GACdR,OAAQ,OACRqB,MAAO,QAEXwV,QAAS,CACLxW,aAAc,SACdJ,UAAW,IAEf6W,WAAY,CACRpW,UAAW,SACXC,MAAO,OACPV,UAAW,IAEf8W,QAAS,CACL1V,MAAO,OACPpB,UAAW,IAEf+W,QAAS,CACLjW,aAAc,GACdC,kBAAmB,GACnBiW,gBAAiB,GACjB7W,WAAY,UAEhB8W,aAAc,CACVpY,WAAY,OACZ4B,UAAW,SACXH,SAAU,GACVuE,eAAgB,IAEpBqS,mBAAoB,CAChBzW,UAAW,SACXoE,eAAgB,GAChBzD,MAAO,KAEX+V,aAAc,CACV7W,SAAU,GACVE,iBAAkB,MC9BX,SAAS8R,GAAW1P,GAC/B,MAAkCoG,qBAAlC,WAAOoO,EAAP,KAAkBC,EAAlB,KACA,EAA8BrO,mBAAS,IAAvC,WAAOsO,EAAP,KAAgBC,EAAhB,KACA,EAA0BvO,qBAA1B,WAAO9C,EAAP,KAAcsR,EAAd,KACA,EAA0CxO,mBAAS,IAAnD,WAAOgM,EAAP,KAAsBU,EAAtB,KACA,EAA0B1M,oBAAS,GAAnC,WAAOyO,EAAP,KAAcC,EAAd,KACA,EAAgC1O,mBAAS,GAAzC,WAAOsN,EAAP,KAAiBqB,EAAjB,KACA,EAAkC3O,oBAAS,GAA3C,WAAOoE,EAAP,KAAkBC,EAAlB,KACA,EAA0BrE,oBAAS,GAAnC,WAAO4O,EAAP,KAAcC,EAAd,KA8CA,SAAeC,IAAf,SAAA5b,EAAAC,OAAA,uDACI0b,GAAS,GADb,WAAA3b,EAAA,MAEUkb,EAAUW,sBAFpB,OAGIL,GAAS,GAHb,4DA5CAzJ,qBAAU,WAIN+J,GAAQpV,EAAM0D,UAAU5J,MAAK,SAACoK,GAC1ByQ,EAAWzQ,GACXuG,GAAa,MAIjB,IAUMgB,EAAcC,IAAYC,iBAC5B,qBAXe,WAQf,OAPI6I,GACAU,KAEa,MAAb9C,OAAA,EAAAA,EAAexY,QAAS,GACxByb,IAEJrV,EAAMsV,QAAQ,OACP,KAMX,OAAO,kBAAM7J,EAAYG,YAC1B,CAAC4I,EAAWpC,IAmCf,IAAMmD,EAAa,8BAAAjc,EAAAC,OAAA,mDACXwP,EAAOyL,EAAUgB,SACD,QAAhBpV,IAASC,GAFE,uBAGLoV,EAAYrO,KAHP,WAG8CpH,EAAM0D,SAHpD,cAIL9K,EAAWkQ,gBAJN,WAAAxP,EAAA,MAKL8N,KAAqB,CACvBsO,KAAM3M,EACN8F,GAAI4G,GAAY7c,EAAN,WAPH,yBAAAU,EAAA,MASL8N,KAAuB2B,IATlB,OAUXA,EAAO0M,GAAY7c,EAAN,QAVF,QpB1FA+c,EoBsGJ,CACPhO,MAAW,MAALrE,OAAA,EAAAA,EAAOsC,SAAUgQ,GAAe5V,EAAMhG,MAAMoX,SAClDrI,KAAMA,EACNrF,SAAU1D,EAAM0D,UpBxGjBhL,GAAGmB,YAAY,CAClB8N,KAAMgO,EAAOhO,KACb9D,KAAM,IAAIgS,KACV9M,KAAM4M,EAAO5M,KACbrF,SAAUiS,EAAOjS,YoBqGd5J,MAAK,SAACgc,GACDhB,GAAS,GACTF,EAAS,IACTH,GAAa,MAClBxO,OAAM,SAACvM,GACNyK,QAAQ+B,IAAIxM,MArBD,kCpB1FhB,IAAgBic,IoB0FA,yBA0BbI,EAAe,YpBlGlB,SAAmBrS,EAAU9C,GAA7B,eAAAtH,EAAAC,OAAA,kEAAAD,EAAA,MACgBZ,GACdiL,KAAK,CAAED,SAAUA,EAAUe,IAAK7D,IAChCkD,MAAK,SAACpK,EAAKyU,GACR,OAAOA,MAJZ,YACGjK,EADH,0CAAA5K,EAAA,MAOO8N,KAAuBlD,EAAK,GAAG6E,OAPtC,gCASIrQ,GAAG4X,YAAY,CAAE7L,IAAK7D,EAAI8C,SAAUA,KATxC,6DoBmGC0R,CAAQpV,EAAM0D,SAAUgQ,GACnB5Z,MAAK,SAACoK,GACH6Q,EAAY,GACZK,GAAQpV,EAAM0D,UACT5J,MAAK,SAACoK,GACHyQ,EAAWzQ,MAEd+B,OAAM,SAACvM,GACJyK,QAAQ+B,IAAIxM,SAGvBuM,OAAM,SAACvM,GACJyK,QAAQ+B,IAAIxM,OAIlBsc,EAAS,oBAAA1c,EAAAC,OAAA,kEAAAD,EAAA,YACLkb,OADK,EACLA,EAAWW,sBADN,OAEXE,IACArV,EAAMsV,QAAQ,GAHH,6DAOTD,EAAoB,WACtBjD,EAAcrF,KAAI,SAACjI,EAAIjJ,GACnBiJ,EAAGqO,kBAKLb,EAAW,oBAAAhZ,EAAAC,OAAA,gDACT6Y,EAAcxY,OAAS,IACV,MAAbwY,KAAerF,KAAI,SAAOjI,EAAIjJ,GAAX,SAAAvC,EAAAC,OAAA,kEAAAD,EAAA,MACTwL,EAAGuN,aAAapM,OAAM,SAACvM,GACzByK,QAAQ+B,IAAI,4BAFD,gEAFV,6DAUjB,OACI,eAACjD,EAAA,EAAD,CAAMjH,MAAOmH,GAAOpB,KAApB,UAEI,eAAC,IAAD,CACIkU,QAASpB,EACTqB,aAAc/S,GAAOgR,QACrBgC,gBAAiB,kBAAMZ,KACvBa,eAAgBC,KAJpB,UAMI,cAAC,IAAD,CAAMra,MAAOmH,GAAOkR,aAApB,SACKuB,GAAe5V,EAAMhG,MAAMqX,cAEhC,cAAC,IAAD,CAAMrV,MAAOmH,GAAOkR,aAApB,SACKuB,GAAe5V,EAAMhG,MAAMsX,qBAEhC,cAAC,IAAD,CACIzJ,YAAa+N,GAAe5V,EAAMhG,MAAMwX,YACxC1J,SACI,cAAC,IAAD,CACIH,KAAK,eACLC,KAAM,GACN9J,MAAM,OACN2S,KAAK,YAGb1I,MAAO6N,GAAe5V,EAAMhG,MAAMuH,MAClC2G,UAAW,GACXE,WAAYjF,GAAOoR,aACnBlM,MAAO/E,EACPgF,aAAc,SAAC/E,GACXqR,EAASrR,MAGjB,eAACN,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UACI,cAAC,IAAD,CACImE,MAAOsS,GAAe5V,EAAMhG,MAAMuX,OAClC9J,YAAa,CAAErJ,gBAAiB,OAChC0C,eAAgB,CAAEkN,YAAa,IAC/BjN,QAASwU,IAEb,cAAC,IAAD,CACIjS,MAAOsS,GAAe5V,EAAMhG,MAAMW,KAClC8M,YAAa,CAAExL,WAAY,QAC3B8E,QAASwU,UAMrB,eAAC,IAAD,CACIU,QAAsB,IAAbvC,EACTwC,aAAc/S,GAAOgR,QACrBiC,eAAgBC,KAHpB,UAKI,cAAC,IAAD,CAAMra,MAAOmH,GAAOkR,aAApB,SACKuB,GAAe5V,EAAMhG,MAAMyX,cAEhC,cAAC,IAAD,CAAMzV,MAAOmH,GAAOmR,mBAApB,SACKsB,GAAe5V,EAAMhG,MAAM0X,kBAEhC,eAACzO,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UACI,cAAC,IAAD,CACImE,MAAOsS,GAAe5V,EAAMhG,MAAMuX,OAClC9J,YAAa,CAAExL,WAAY,QAC3B6E,eAAgB,CAAEkN,YAAa,IAC/BjN,QAAS,SAACwC,GACNwR,EAAY,MAGpB,cAAC,IAAD,CACIzR,MAAOsS,GAAe5V,EAAMhG,MAAM0F,OAClC+H,YAAa,CAAErJ,gBAAiB,OAChC2C,QAAS,SAACwC,GACNwS,aAMfvB,EAEG,eAACvR,EAAA,EAAD,CAAMjH,MAAOmH,GAAO0Q,kBAApB,UACI,cAAC,IAAD,CACIvQ,MACI0R,EACMY,GAAe5V,EAAMhG,MAAMmX,SAC3ByE,GAAe5V,EAAMhG,MAAMiX,MAErCnQ,eAAgBqC,GAAO2Q,cACvBpM,KAAM,CACFC,KAAMqN,EACA,sBACA,uBACNvE,KAAM,UACN7I,KAAM,GACN9J,MAAO,SAEXiD,QAASiU,EAzK7B,oBAAA1b,EAAAC,OAAA,uDACI0b,GAAS,GADb,WAAA3b,EAAA,MAEUkb,EAAU8B,cAFpB,6DALA,oBAAAhd,EAAAC,OAAA,uDACI0b,GAAS,GADb,WAAA3b,EAAA,MAEUkb,EAAUnC,cAFpB,+DAiLgB,cAAC,IAAD,CACI/O,MAAOsS,GAAe5V,EAAMhG,MAAMkX,KAClCpQ,eAAgBqC,GAAO2Q,cACvBpM,KAAM,CACFC,KAAM,sBACN8I,KAAM,UACN7I,KAAM,GACN9J,MAAO,SAEXiD,QAASmU,IAEb,cAAC,IAAD,CACIpU,eAAgBqC,GAAO2Q,cACvBpM,KAAM,CACFC,KAAM,qBACN8I,KAAM,UACN7I,KAAM,GACN9J,MAAO,SAEX2J,YAAatE,GAAOwQ,aACpBrQ,MAAO,GACPkE,WAAYrE,GAAOyQ,YACnB7S,QAAS,kBAAMiV,UAKvB,eAAC/S,EAAA,EAAD,CAAMjH,MAAOmH,GAAO0Q,kBAApB,UACA,cAAC,IAAD,CACI/S,eAAgBqC,GAAOrC,eACvB4G,KAAM,CACFC,KAAM,aACN8I,KAAM,UACN7I,KAAM,GACN9J,MAAO,SAEX2J,YAAatE,GAAOwQ,aACpBrQ,MAAOsS,GAAe5V,EAAMhG,MAAMgX,MAClCxJ,WAAYrE,GAAOyQ,YACnB7S,QA/OhB,4BAAAzH,EAAAC,OAAA,2EAAAD,EAAA,MAEc0Y,KAAMuE,2BAFpB,yBAAAjd,EAAA,MAGc0Y,KAAMO,kBAAkB,CAC1BiE,oBAAoB,EACpBC,sBAAsB,EACtBjE,yBAAyB,KANrC,yBAAAlZ,EAAA,MAQoC0Y,KAAM0E,UAAUC,YACxC3E,KAAM4E,wCATlB,gBAQgBpC,EARhB,EAQgBA,UAGRC,EAAaD,GAXrB,kDAaQrQ,QAAQC,MAAM,4BAAd,MAbR,oEAiPY,cAAC,IAAD,CACItD,eAAgBqC,GAAO2Q,cACvBpM,KAAM,CACFC,KAAM,qBACN8I,KAAM,UACN7I,KAAM,GACN9J,MAAO,SAEX2J,YAAatE,GAAOwQ,aACpBrQ,MAAO,GACPkE,WAAYrE,GAAOyQ,YACnB7S,QAAS,kBAAMiV,UAIvB,cAAC,IAAD,CAASha,MAAOmH,GAAO+Q,QAAS1V,MAAO,IACvC,cAAC6N,EAAA,EAAD,CAAcrQ,MAAOmH,GAAO4Q,SAA5B,SACI,cAAClH,EAAA,EAAD,CAAY7Q,MAAO,CAAC2B,aAAc,IAAlC,SACK6M,EACG,cAAC0B,EAAA,EAAD,CACIpO,MAAO,OACP8J,KAAM,QACN5L,MAAOmH,GAAO6Q,UAElBU,EAAQ9a,OAAS,EACjB8a,EAAQ3H,KAAI,SAACjI,EAAIjJ,GACb,OACI,cAAC,GAAD,CACIyW,SAAUA,EACVF,cAAeA,EACfU,iBAAkBA,EAClBY,SAAUqB,EACVvU,MAAO3E,EAEPyH,MAAOwB,EAAG6C,KACVlD,IAAKK,EAAGL,IACRZ,KAASiB,EAAGjB,KAAKgT,mBACb,SADA,IAEC/R,EAAGjB,KAAKiT,mBAAmB,SAChC/N,KAAMjE,EAAGiE,MANJjE,EAAGL,QAWpB,cAAC,IAAD,CAAMzI,MAAOmH,GAAO8Q,WAApB,SACK2B,GAAe5V,EAAMhG,MAAM2X,oBChWxD,IAAMtW,GAAiB,SAACC,EAAMyb,GAC1B,IAAIjZ,EAAQ,UACA,QAARiZ,EACAjZ,EAAQ,UACO,UAARiZ,IACPjZ,EAAQ,WAEZ,IAAIvC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQ6B,MAAOA,GAAlD,SACKnC,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLxB,GAAO,CAChBC,GAAI,CACA+c,KAAM,QACNC,KAAM,OACNC,MAAO,SACPjc,WAAY,2BACZkc,SACI,gHACJC,UAAW,SAACC,GACR,OAAOhc,GAAe,CAClBI,SAAU,sBACVE,SAAU,CAAC0b,MAGnBC,WAAY,SAACC,GACT,OAAOlc,GAAe,CAClBI,SAAU,8BACVE,SAAU,CAAC4b,MAGnBC,SAAU,WACN,OAAOnc,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,qBAGnB8b,SAAU,WACN,OAAOpc,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,gCAGnB+b,OAAQ,WACJ,OAAOrc,GACH,CACII,SAAU,MACVE,SAAU,CAAC,kBAEf,QAGRgc,QAAS,WACL,OAAOtc,GACH,CACII,SAAU,MACVE,SAAU,CAAC,oBAEf,UAGRic,MAAO,SAACC,GACJ,OAAOxc,GACH,CACII,SAAU,2BACVE,SAAU,CAACkc,IAEf,QAGRC,eAAgB,SAAC7T,GACb,OAAO5I,GAAe,CAClBI,SAAU,oDACVE,SAAU,CAACsI,MAGnB8T,SAAU,SAACC,EAAOC,GACd,OAAO5c,GAAe,CAClBI,SAAS,6BAAwBwc,EAAzB,SACRtc,SAAU,CAACqc,MAGnBE,gBAAiB,sBACjBC,MAAO,aACPC,eACI,yFACJC,MAAO,cACPC,KAAM,mBACNC,OAAQ,aACRvH,MAAO,uBACPO,OAAQ,UACRiH,WAAY,6BAEhBpd,GAAI,CACA4b,KAAM,OACNC,KAAM,OACNC,MAAO,UACPjc,WAAY,gBACZkc,SACI,qGACJC,UAAW,SAACC,GACR,OAAOhc,GAAe,CAClBI,SAAU,kBACVE,SAAU,CAAC0b,MAGnBC,WAAY,SAACC,GACT,OAAOlc,GAAe,CAClBI,SAAU,wBACVE,SAAU,CAAC4b,MAGnBC,SAAU,WACN,OAAOnc,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,iBAGnB8b,SAAU,WACN,OAAOpc,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,wBAGnB+b,OAAQ,WACJ,OAAOrc,GACH,CACII,SAAU,MACVE,SAAU,CAAC,gBAEf,QAGRic,MAAO,SAACC,GACJ,OAAOxc,GACH,CACII,SAAU,uBACVE,SAAU,CAACkc,IAEf,QAGRF,QAAS,WACL,OAAOtc,GACH,CACII,SAAU,MACVE,SAAU,CAAC,gBAEf,UAGRmc,eAAgB,SAAC7T,GACb,OAAO5I,GAAe,CAClBI,SAAU,qCACVE,SAAU,CAACsI,MAGnB8T,SAAU,SAACC,EAAOC,GACd,OAAO5c,GAAe,CAClBI,SAAS,aAAcwc,EAAf,SACRtc,SAAU,CAACqc,MAGnBE,gBAAiB,oBACjBC,MAAO,YACPC,eACI,6DACJC,MAAO,QACPC,KAAM,OACNC,OAAQ,UACRvH,MAAO,eACPO,OAAQ,SACRiH,WAAY,wB,qBCtLLxb,OAAWC,OAAO,CAC7B8E,KAAM,CACFE,eAAgB,GAChB3E,KAAM,EACNC,WAAY,UAEhBkb,KAAM,CACFja,MAAO,GACPrB,OAAQ,GACR8E,eAAgB,GAChBqM,QAAS,GACT3Q,aAAc,IAElBiB,OAAQ,CACJJ,MAAO,IACPb,aAAc,GACdO,aAAc,GACdN,iBAAkB,GAEtB8a,YAAa,CACTla,MAAO,IACPpB,UAAW,GACXgB,gBAAiB,MACjBF,aAAc,GACdN,iBAAkB,GAEtB+a,eAAgB,CACZrb,KAAM,EACNkB,MAAO,IACPrB,OAAQ,IACRe,aAAc,GACdoQ,QAAS,IAEbsK,YAAa,CACTtb,KAAM,EACNkB,MAAO,GACPrB,OAAQ,IACRe,aAAc,GACdoQ,QAAS,IAEbuK,gBAAiB,CACbha,WAAY,GACZmP,YAAa,IAEjB8K,WAAY,CACRC,oBAAqB,GACrB3a,gBAAiB,WAErB4a,SAAU,CACNhL,YAAa,GACbiL,qBAAsB,GACtB7a,gBAAiB,WAErB8a,YAAa,CACTra,WAAY,GACZmP,YAAa,GACbmL,uBAAwB,GACxB/a,gBAAiB,WAErBgb,UAAW,CACPpL,YAAa,GACbqL,sBAAuB,GACvBjb,gBAAiB,WAErBkb,cAAe,CACXhL,QAAS,EACTrQ,YAAa,UACbgQ,YAAa,GAEjBiI,aAAc,CACVjX,QAAS,GACTf,aAAc,GACdf,OAAQ,IACRK,aAAc,SACdD,WAAY,UAEhBgc,cAAe,CACX7b,SAAU,GACVzB,WAAY,QAEhBud,YAAa,CACThb,MAAO,IACPd,SAAU,GACVC,aAAc,GACdE,UAAW,YC5EJ,SAAS4b,GAAKzZ,GACzB,OACI,qCACI,cAAC6C,EAAA,EAAD,CAAO5B,OAAQyY,KAAW1d,MAAOmH,GAAOsV,OACxC,cAAC,IAAD,CACInV,MAAOqW,GAAU3Z,EAAMhG,MAAMgd,KAC7BlW,eAAgBqC,GAAOvE,OACvB6J,QAAM,EACN1H,QAAS,SAACwC,GAAD,OAAOvD,EAAM4Z,OAAO,IAC7BlS,KACI,cAAC,IAAD,CACIC,KAAM,eACN8I,KAAM,UACN3S,MAAO,QACP8J,KAAM,GACN5L,MAAO,CAAE4B,iBAAkB,OAIvC,cAAC,IAAD,CACI0F,MAAOqW,GAAU3Z,EAAMhG,MAAMid,KAC7BnW,eAAgBqC,GAAOvE,OACvB6J,QAAM,EACN1H,QAAS,SAACwC,GAAD,OAAOvD,EAAM4Z,OAAO,IAC7BlS,KACI,cAAC,IAAD,CACIC,KAAM,sBACN8I,KAAM,UACN3S,MAAO,QACP8J,KAAM,GACN5L,MAAO,CAAE4B,iBAAkB,OAIvC,cAAC,IAAD,CACI0F,MAAOqW,GAAU3Z,EAAMhG,MAAMkd,MAC7BzP,YAAa,CAAErJ,gBAAiB,OAChC0C,eAAgBqC,GAAOuV,YACvBjQ,QAAM,EACN1H,QAAS,kBAAMf,EAAMsV,QAAQ,OAC7B5N,KACI,cAAC,IAAD,CACIC,KAAM,qBACN8I,KAAM,UACN3S,MAAO,QACP8J,KAAM,GACN5L,MAAO,CAAE4B,iBAAkB,U,mCCxCpC,SAASic,GAAK7Z,GACzB,MAA0BoG,oBAAS,GAAnC,WAAO0T,EAAP,KAAcC,EAAd,KACA,EAA4B3T,oBAAS,GAArC,WAAOpB,EAAP,KAAegV,EAAf,KACA,EAA8B5T,oBAAS,GAAvC,WAAO6T,EAAP,KAAgBC,EAAhB,KACA,EAA8B9T,oBAAS,GAAvC,WAAO4N,EAAP,KAAgBmG,EAAhB,KACA,EAA0B/T,mBAAS,GAAnC,WAAOyR,EAAP,KAAcuC,EAAd,KACA,EAA0BhU,mBAAS,CAACZ,KAAK6U,MAAsB,EAAhB7U,KAAKE,YAApD,WAAOsS,EAAP,KAAcsC,EAAd,KACA,EAA8BlU,oBAAS,GAAvC,WAAO5B,EAAP,KAAgB+E,EAAhB,KACA,EAA0CnD,oBAAU,GAApD,WAAOmU,EAAP,KAAsBC,EAAtB,KACA,EAAkCpU,mBAAS,GAA3C,WAAOiR,EAAP,KAAkBoD,EAAlB,KACA,EAAoCrU,mBAAS,GAA7C,WAAOmR,EAAP,KAAmBmD,EAAnB,KACA,EAA8BtU,oBAAS,GAAvC,WAAOuU,EAAP,KAAgBC,GAAhB,KACA,GAAgCxU,oBAAS,GAAzC,aAAOyU,GAAP,MAAiBC,GAAjB,MACA,GAAwB1U,mBAAS,IAAI2U,MAAM,IAA3C,aAAO9C,GAAP,MAAa+C,GAAb,MAEA,GAAsC5U,oBAAS,GAA/C,aAAO6U,GAAP,MAAoBC,GAApB,MAEM1Y,GAAe7J,EAAQ,KACvBwiB,IAAc,IAAItF,MAAOgB,mBAAmB,SAE5CuE,GAAkC,OAAfhb,IAASC,GAAc8C,GAAOwV,eAAiBxV,GAAOyV,YAE/EvN,qBAAU,0BAAA/R,EAAAC,OAAA,oDAEQ,IAAVugB,EAFE,gBAGFK,GAAW,IvB/BMzW,EuBgCA1D,EAAM0D,SvB/BxBhL,GACFiL,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEK,OAAQ,IACfH,MAAK,SAACpK,EAAKwK,GAIR,OAHIxK,GACAyK,QAAQC,MAAM1K,GAEXwK,MuBwB0BpK,MAAK,SAACoK,GAC/BA,EAAKtK,OAAS,GACd6gB,EAAavW,EAAK,GAAGD,UAG7BmR,GAAgBpV,EAAM0D,SAAUyX,IAAarhB,MAAK,SAACoK,GAC3CA,EAAKtK,OAAS,GACd8gB,EAAcxW,EAAK,GAAGD,UAG9BkW,GAAW,GAdT,uBAgBFS,IAAW,GACXV,GAAW,GAIFre,EAAI,EArBX,aAqBcA,EAAImc,EAAMpe,QArBxB,oBAsBO4K,EAtBP,oCAAAlL,EAAA,MAuBY+hB,GAAerD,EAAMnc,KAvBjC,QAqBgCA,IArBhC,wBA0BFqe,GAAW,GA1BT,kCvB5BP,IAAsBxW,IuB4Bf,0BA4BP,CAACoW,EAAO9B,IAEX,IAAM3S,GAAe,WACjB,OAAOG,KAAK6U,MAAsB,EAAhB7U,KAAKE,WAGrB4V,GAAmB,SAACrP,GACtB,OAAQA,GACJ,KAAK,EACD,OAAOtT,EAAQ,KACnB,KAAK,EACD,OAAOA,EAAQ,KACnB,KAAK,EACD,OAAOA,EAAQ,KACnB,KAAK,EACD,OAAOA,EAAQ,OAMrB0iB,GAAiB,SAAOpP,GAAP,SAAA3S,EAAAC,OAAA,yEAEZ,IAAIgiB,SAAQ,SAAOC,EAASC,GAAhB,iBAAAniB,EAAAC,OAAA,kEAAAD,EAAA,MACS0Y,KAAMC,MAAM0E,YAChC2E,GAAiBrP,KAFN,uBACPiG,EADO,EACPA,MAGRlS,EAAMmS,SAASD,GACfsI,EAAiBvO,GALF,WAAA3S,EAAA,MAMT4Y,EAAMa,YAAYjZ,MAAK,SAAO4hB,GAAP,SAAApiB,EAAAC,OAAA,gDACzBqT,YAAW,oBAAAtT,EAAAC,OAAA,uDACPihB,GAAkB,GADX,WAAAlhB,EAAA,MAED4Y,EAAMiB,eAFL,OAGPqI,GAAQ,GAHD,8DAIRE,EAAerI,uBAAyB,KALlB,gEANd,gEAFA,6DA4BjBsI,GAAa,SAAO1P,GAAP,qBAAA3S,EAAAC,OAAA,mDACV0gB,EADU,sDAIXhC,GAAKre,QAAUoe,EAAMpe,QAJV,sDAOXqS,GAAO,GAAKA,GAAO,GAPR,qBAQP2P,EAAa3D,IACN4D,KAAK5P,GAChB+O,GAAQY,IAEJ1J,EAZO,oCAAA5Y,EAAA,MAaD4Y,EAAMiB,eAbL,eAeXqH,EAAiBvO,GAfN,YAAA3S,EAAA,MAgBa0Y,KAAMC,MAAM0E,YAChC2E,GAAiBrP,KAjBV,wBAgBHiG,EAhBG,EAgBHA,MAGRlS,EAAMmS,SAASD,GAnBJ,YAAA5Y,EAAA,MAqBM4Y,EAAMa,YAAYjZ,MAAK,SAACoK,GACrC,OAAOA,EAAKmP,2BAtBL,WAqBPyI,EArBO,OA2BXlP,YAAW,oBAAAtT,EAAAC,OAAA,kEAAAD,EAAA,MACD4Y,EAAMiB,eADL,OAEPqH,GAAkB,GAFX,8DAGRsB,EAAO,KACN7D,GAAKA,GAAKre,OAAS,KAAOoe,EAAMC,GAAKre,OAAS,GA/BvC,oCAAAN,EAAA,MAgCDyiB,GAAUD,IAhCT,mCAiCA7D,GAAKre,SAAWoe,EAAMpe,OAjCtB,oCAAAN,EAAA,MAkCD0iB,GAAaF,EAAM5J,IAlClB,8DAuCb6J,GAAY,SAAOD,GAAP,SAAAxiB,EAAAC,OAAA,gDACdygB,GAAU,GACVgB,GAAQ,IACRd,GAAW,GACXE,EAASvC,EAAQ,GACbA,EAAQ,EACRjL,YAAW,0BAAAtT,EAAAC,OAAA,gDACEsC,EAAI,EADN,YACSA,EAAImc,EAAMpe,QADnB,kCAAAN,EAAA,MAEG+hB,GAAerD,EAAMnc,KAFxB,OAC2BA,IAD3B,sBAIPqe,GAAW,GACXF,GAAU,GALH,8DAMR8B,EAAO,KAEVG,KAdU,6DAkBZA,GAAe,oBAAA3iB,EAAAC,OAAA,uDACjByG,EAAM8U,UAAS,GADE,WAAAxb,EAAA,OvB9HGoK,EuBgIE1D,EAAM0D,SvBhIEO,EuBgIQ+T,EAAMpe,OAAS,EvBhIhBiK,EuBgImBsX,GvB/HrDziB,GAAGmB,YAAY,CAClB6J,SAAUA,EACVG,KAAMA,EACNI,MAAOA,MuB0HU,OAGjBiW,GAAW,GACX3Q,GAAW,GACPgO,EAAaS,EAAMpe,OAAS,EAC5BshB,IAAe,GAEfA,IAAe,GARF,iCvB9HlB,IAAqBxX,EAAUO,EAAOJ,IuB8HpB,yBAYfmY,GAAe,SAAOF,EAAM5J,GAAb,SAAA5Y,EAAAC,OAAA,gDACjBqhB,IAAW,GACXV,GAAW,GACXtN,YAAW,oBAAAtT,EAAAC,OAAA,kEAAAD,EAAA,MACD4Y,EAAMiB,eADL,OAEPmH,EAAS,GAAD,YAAKtC,GAAL,CAAY3S,QAFb,8DAGRyW,EAAO,KACVd,GAAQ,IAPS,6DA0DrB,OACI,qCACKH,GACG,cAAC,KAAD,CACIqB,SAAS,EACTC,WAAW,EACXC,UAAW,IACXC,MAAO,GACPC,OAAQ,CAAEC,GAAI,GAAIC,GAAI,MAG1B,6BAIHhY,EACG,eAAC,IAAD,CACIyR,QAASzR,EACT0R,aAAc/S,GAAO+S,aACrBC,gBAAiB,kBAAM5M,GAAW,IAClC6M,eAAgBC,KAJpB,UAMK4E,IArERJ,IACDC,IAAY,GAGZ,qCACI,cAAC,IAAD,CAAM9e,MAAOmH,GAAOoW,cAApB,SACKI,GAAU3Z,EAAMhG,MAAMke,kBAE3B,cAAC,IAAD,CAAMlc,MAAOmH,GAAOqW,YAApB,SACKG,GAAU3Z,EAAMhG,MAAM8d,eAAeE,EAAMpe,OAAS,KAEzD,cAAC,EAAD,CACI4I,aAAcA,GACdM,YAAa2Z,KACbC,UAAU,EACVja,MAAM,EACNF,YAAa,CAAEpF,OAAQ,IACvB4F,WAAY,CAAE5F,OAAQ,UAO9B6W,EACO,cAAC9H,EAAA,EAAD,IAGP,qCACI,cAAC,IAAD,CAAMlQ,MAAOmH,GAAOoW,cAApB,SACKI,GAAU3Z,EAAMhG,MAAMme,QAE3B,cAAC,IAAD,CAAMnc,MAAOmH,GAAOqW,YAApB,SACKG,GAAU3Z,EAAMhG,MAAMoe,oBAqCvB,eAACnV,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,MAAO/B,UAAW,IAAhD,UACI,cAAC,IAAD,CACIqL,QAAM,EACN1H,QAAS,WAjC7B+Z,IAAY,GACZvR,GAAW,GACXyQ,GAAU,GACVI,EAAS,GACTE,EAAS,CAACjV,QAgCU/B,MAAOqW,GAAU3Z,EAAMhG,MAAMqe,MAC7BvX,eAAgB,CACZ5C,aAAc,GACd8P,YAAa,MAGrB,cAAC,IAAD,CACIvF,QAAM,EACN1H,QAAS,WACLf,EAAM4Z,OAAO,IAEjBtW,MAAOqW,GAAU3Z,EAAMhG,MAAMse,KAC7BxX,eAAgB,CAAE5C,aAAc,IAChCuJ,YAAa,CAAErJ,gBAAiB,eAK5C,6BAIJ,eAAC,IAAD,CACI6X,QAASjW,EAAM6U,MACfqB,aAAc/S,GAAO+S,aACrBC,gBAAiB,kBAAMnW,EAAM8U,UAAS,IACtCsB,eAAgBC,KAJpB,UAMI,cAAC,IAAD,CAAMra,MAAOmH,GAAOoW,cAApB,SACKI,GAAU3Z,EAAMhG,MAAMiB,aAE3B,cAAC,IAAD,CAAMe,MAAOmH,GAAOqW,YAApB,SACKG,GAAU3Z,EAAMhG,MAAMmd,WAE3B,eAAClU,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,MAAO/B,UAAW,IAAhD,UACI,cAAC,IAAD,CACIqL,QAAM,EACN1H,QAAS,WACLf,EAAM8U,UAAS,IAEnBxR,MAAOqW,GAAU3Z,EAAMhG,MAAMuX,OAC7BzQ,eAAgB,CAAE5C,aAAc,GAAI8P,YAAa,MAErD,cAAC,IAAD,CACIvF,QAAM,EACN1H,QAAS,WACLkb,MAEJ3Y,MAAOqW,GAAU3Z,EAAMhG,MAAMwe,WAC7B1X,eAAgB,CAAE5C,aAAc,IAChCuJ,YAAa,CAAErJ,gBAAiB,eAM5C,eAAC6E,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,MAAOxB,aAAc,IAAnD,UACI,cAACsF,EAAA,EAAD,CACIjH,MAAO,CACHof,GACAjY,GAAO0V,gBACP1V,GAAO2V,WACW,IAAlByB,EAAsBpX,GAAOmW,cAAgB,IAEjDqD,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMjB,GAAW,MAEvC,cAAC1Y,EAAA,EAAD,CACIjH,MAAO,CACHof,GACAjY,GAAO6V,SACW,IAAlBuB,EAAsBpX,GAAOmW,cAAgB,IAEjDqD,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMjB,GAAW,SAK3C,eAAC1Y,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UACI,cAAC8D,EAAA,EAAD,CACIjH,MAAO,CACHof,GACAjY,GAAO0V,gBACP1V,GAAO+V,YACW,IAAlBqB,EAAsBpX,GAAOmW,cAAgB,IAEjDqD,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMjB,GAAW,MAEvC,cAAC1Y,EAAA,EAAD,CACIjH,MAAO,CACHof,GACAjY,GAAOiW,UACW,IAAlBmB,EAAsBpX,GAAOmW,cAAgB,IAEjDqD,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMjB,GAAW,SAI3C,eAAC1Y,EAAA,EAAD,CAAMjH,MAAO,CAAEoB,UAAW,IAA1B,UACI,cAAC,IAAD,CAAMpB,MAAO,CAAE6B,UAAW,UAA1B,SACK8b,GAAU3Z,EAAMhG,MAAMod,UAAUC,KAErC,cAAC,IAAD,CAAMrb,MAAO,CAAE6B,UAAW,UAA1B,SACK8b,GAAU3Z,EAAMhG,MAAMsd,WAAWC,KAEtC,cAAC,IAAD,CAAMvb,MAAO,CAAE6B,UAAW,SAAUF,aAAc,IAAlD,SACKgc,GAAU3Z,EAAMhG,MAAM4d,MAAMC,KAEhCiC,EACG,eAAC7W,EAAA,EAAD,CACIjH,MAAO,CAAEwB,aAAc,SAAUD,WAAY,UADjD,UAGI,cAAC,IAAD,CAAMvB,MAAO,CAAE6B,UAAW,SAAUH,SAAU,IAA9C,SACKuc,GAAWjV,EAzR5BA,EACO2U,GAAU3Z,EAAMhG,MAAM0d,SACtBiD,EACAhB,GAAU3Z,EAAMhG,MAAM2d,UAEtBgC,GAAU3Z,EAAMhG,MAAMwd,WAsRPmC,GAAU3Z,EAAMhG,MAAMyd,aAEhC,cAAC,IAAD,CAAMzb,MAAO,CAAE6B,UAAW,UAA1B,SACK8b,GAAU3Z,EAAMhG,MAAM+d,SACnBC,EAAMpe,OACNqe,GAAKre,UAGb,cAAC,IAAD,CACIijB,UAAW5C,EACXlZ,QAAS,kBAAMf,EAAM8U,UAAS,IAC9BrN,YAAa,CAAErJ,gBAAiB,OAChC0C,eAAgB,CACZ1D,UAAW,GACXoB,MAAO,IACPN,aAAc,IAElBuK,QAAM,EACNnF,MAAOqW,GAAU3Z,EAAMhG,MAAMue,YAIrC,mCACI,eAACtV,EAAA,EAAD,CACI9D,cAAe,MACfnD,MAAO,CACHwB,aAAc,SACdD,WAAY,UAJpB,UAOI,cAAC,IAAD,CACIkK,YAAa,CACTuG,YAAa,GACb9P,aAAc,IAElBoF,MAAOqW,GAAU3Z,EAAMhG,MAAMgX,MAC7BjQ,QAAS,kBAAMgZ,GAAS,MAE5B,cAAC,IAAD,CACItS,YAAa,CACTvJ,aAAc,GACdE,gBAAiB,OAErBkF,MAAOqW,GAAU3Z,EAAMhG,MAAMkd,MAC7BnW,QAAS,kBAAMf,EAAM4Z,OAAO,iBCra7C,SAASpK,GAAMxP,GAC1B,MAAsBoG,mBAAS,GAA/B,WAAO0W,EAAP,KAAYlD,EAAZ,KACA,EAA0BxT,mBAAS,IAAI4L,KAAMC,OAA7C,WAAOC,EAAP,KAAcC,EAAd,KACA,EAA0B/L,oBAAS,GAAnC,WAAOyO,EAAP,KAAcC,EAAd,KAEAzJ,qBAAU,WAGN,IAeMI,EAAcC,IAAYC,iBAC5B,qBAhBe,WAaf,OAZIuG,GACAA,EAAMiB,cAEN2J,EAAM,EACM,IAARA,EACAlD,EAAO,GAEP9E,GAAS,GAGb9U,EAAMsV,QAAQ,OAEX,KAMX,OAAO,WACH7J,EAAYG,YAEjB,CAACkR,IA8BJ,OACI,mCACI,cAAC7Z,EAAA,EAAD,CAAMjH,MAAOmH,GAAOpB,KAApB,SA7BQ,IAAR+a,EAEI,cAACrD,GAAD,CACIG,OAAQA,EACR5f,KAAMgG,EAAMhG,KACZsb,QAAStV,EAAMsV,UAGR,IAARwH,EAEH,cAACjD,GAAD,CACID,OAAQA,EACR5f,KAAMgG,EAAMhG,KACZ0J,SAAU1D,EAAM0D,SAChBwO,MAAOA,EACPC,SAAUA,EACV0C,MAAOA,EACPC,SAAUA,IAGH,IAARgI,EACA,cAAC,IAAD,2BAEA,cAAC,IAAD,8BClEnB,IAAMzhB,GAAiB,SAACC,EAAMyb,EAAKgG,GAC/B,IAAIjf,EAAQ,UACA,QAARiZ,EACAjZ,EAAQ,UACO,UAARiZ,IACPjZ,EAAQ,WAEZ,IAAIvC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQ6B,MAAOjC,GAAKkhB,EAAMjf,EAAQ,WAArE,SACKnC,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLxB,GAAO,CAChBC,GAAI,CACA+c,KAAM,QACN/T,KAAM,gBACN+Z,OAAQ,mBACR/F,KAAM,uBACNC,MAAO,SACPvF,WAAY,qCACZsL,cAAe,0CACfC,gBAAiB,uBACjBC,YAAa,uBACbC,SAAU,0BACVC,WAAY,yCACZC,cAAe,0NACfC,kBAAmB,2BACnBC,UAAW,yBACXC,aAAc,2PACdC,GAAI,UACJC,gBAAiB,qBACjBC,WAAY,qFACZ9iB,aAAc,0CACd+iB,gBAAiB,mDACjBC,eAAgB,wDAChBC,gBAAiB,4BACjBC,WAAY,oBACZC,eAAgB,0FAChBC,mBAAoB,iGACpBC,wBAAyB,mBACzBC,kBAAmB,6IACnBC,UAAW,cACXC,YAAa,gCACbC,oBAAqB,oEACrBC,cAAe,SAACC,GACZ,OAAOpjB,GAAe,CAClBI,SAAU,sDACVE,SAAU,CAAC8iB,MAGnBC,UAAW,cACXC,aAAc,+BACd3b,QAAS,4FACT4b,YAAa,0BACblH,OAAQ,SAACmH,GAEL,MAAM,+FADYA,EAAQC,KAAK,MAC/B,KAEJC,iBAAkB,iBAClBC,YAAa,SAACC,EAAMza,GAChB,OAAOnJ,GAAe,CAClBI,SAAU,0GACVE,SAAU,CAAC6I,EAASya,IACrB,MAAO,IAEdC,cAAe,uBACfC,SAAU,SAACF,EAAMza,GACb,OAAOnJ,GAAe,CAClBI,SAAU,wGACVE,SAAU,CAAC6I,EAASya,IACrB,MAAO,IAEdtkB,KAAM,sBACNykB,YAAa,0BACbC,WAAY,uBAEhBjkB,GAAI,CACA4b,KAAM,OACN/T,KAAM,YACN+Z,OAAQ,gBACR/F,KAAM,oBACNC,MAAO,QACPvF,WAAY,gCACZsL,cAAe,oCACfC,gBAAiB,gBACjBC,YAAa,iBACbC,SAAU,6BACVC,WAAY,0BACZC,cAAe,gJACfC,kBAAmB,wBACnBC,UAAW,gBACXC,aAAc,wJACdC,GAAI,UACJC,gBAAiB,UACjBC,WAAY,8DACZ9iB,aAAc,iCACd+iB,gBAAiB,6CACjBC,eAAgB,4CAChBC,gBAAiB,qBACjBC,WAAY,gBACZC,eAAgB,kEAChBC,mBAAoB,sEACpBC,wBAAyB,gBACzBC,kBAAmB,iHACnBC,UAAW,aACXC,YAAa,4BACbC,oBAAqB,6CACrBC,cAAe,SAACC,GACZ,OAAOpjB,GAAe,CAClBI,SAAU,qCACVE,SAAU,CAAC8iB,MAGnBC,UAAW,cACXC,aAAc,6BACd3b,QAAS,6EACT4b,YAAa,uBACblH,OAAQ,SAACmH,GACL,IAAIS,EAAcT,EAAQC,KAAK,MAC/B,MAAM,uDAAuDD,EAAQjlB,OAAS,EAAI,SAAW,QAA7F,MAAyG0lB,EAAzG,KAEJP,iBAAkB,cAClBC,YAAa,SAACC,EAAMza,GAChB,OAAOnJ,GAAe,CAClBI,SAAU,6FACVE,SAAU,CAAC6I,EAASya,IACrB,MAAO,IAEdC,cAAe,uBACfC,SAAU,SAACF,EAAMza,GACb,OAAOnJ,GAAe,CAClBI,SAAU,iGACVE,SAAU,CAAC6I,EAASya,IACrB,MAAO,IAEdtkB,KAAM,gBACNykB,YAAa,oBACbC,WAAY,qB,qBClJLriB,OAAWC,OAAO,CAC7B8E,KAAM,CACFE,eAAgB,GAChB3E,KAAM,EACNC,WAAY,UAEhBkb,KAAM,CACFja,MAAO,GACPrB,OAAQ,GACR8E,eAAgB,GAChBqM,QAAS,GACT3Q,aAAc,IAElBiB,OAAQ,CACJJ,MAAO,IACPb,aAAc,GACdO,aAAc,GACdN,iBAAkB,GAEtB8a,YAAa,CACTla,MAAO,IACPpB,UAAW,GACXgB,gBAAiB,MACjBF,aAAc,GACdN,iBAAkB,GAEtB2hB,gBAAiB,CACb/gB,MAAO,IACPpB,UAAW,GACXgB,gBAAiB,MACjBF,aAAc,GACdN,iBAAkB,GAEtB+d,WAAY,CACRnd,MAAO,IACPpB,UAAW,GACXgB,gBAAiB,OACjBF,aAAc,GACdN,iBAAkB,GAEtB4hB,aAAc,CACVhhB,MAAO,IACPN,aAAc,IAElB6V,SAAU,CACN3V,gBAAiB,QACjBhB,UAAW,EACXO,aAAc,GACdR,OAAQ,OACRqB,MAAO,QAEXyV,WAAY,CACRpW,UAAW,SACXC,MAAO,OACPV,UAAW,IAEf4W,QAAS,CACL5W,UAAW,IAEf+W,QAAS,CACLjW,aAAc,GACdC,kBAAmB,GACnBiW,gBAAiB,GACjB7W,WAAY,UAEhBkiB,4BAA6B,CACzBjhB,MAAO,IACPX,UAAW,SACXC,MAAO,UACPmE,eAAgB,IAEpB4K,WAAY,CACRtP,WAAY,SACZ0E,eAAgB,GAChB8L,cAAe,IAEnB2R,kBAAmB,CACfniB,WAAY,SACZ0E,gBAAiB,GACjB8L,cAAe,IAEnBlM,aAAc,CACVrD,MAAO,IACPrB,OAAQ,KAEZkF,iBAAkB,CACdL,UAAW,SACXxD,MAAO,IACPX,UAAW,SACX5B,WAAY,OACZyB,SAAU,GACVI,MAAO,UACPH,aAAc,IAElBkX,MAAO,CACH3W,aAAc,GACdC,kBAAmB,GACnBiW,gBAAiB,GACjB7W,WAAY,UAEhBoiB,WAAY,CACRhiB,aAAc,GACda,MAAO,IACPX,UAAW,SACX5B,WAAY,OACZyB,SAAU,IAEdkiB,iBAAkB,CACdphB,MAAO,IACPX,UAAW,SACXC,MAAO,WAGX+hB,wBAAyB,CACrBrhB,MAAO,IACPpB,UAAW,IAEf0iB,eAAgB,CACZpiB,SAAU,IAEdqiB,WAAY,CACR5gB,cAAe,MACfE,eAAe,SACfD,SAAS,OACT7B,WAAW,SACXC,aAAa,SACbG,aAAc,IAElBqiB,WAAY,CACR/jB,WAAY,OACZyB,SAAU,GACVG,UAAW,SACXW,MAAO,KAEXyhB,iBAAkB,CACd/hB,aAAc,GACdM,MAAO,IACPrB,OAAQ,KAEZ+iB,aAAc,CACVxiB,SAAU,GACVN,UAAW,GACXnB,WAAY,OACZ6B,MAAO,WAEXqiB,aAAc,CACV7iB,KAAM,EACN6B,cAAe,MACf/B,UAAW,GACXI,aAAa,SACbgB,MAAO,MACPa,eAAgB,cAEpB+gB,cAAe,CACXhiB,gBAAiB,QACjB2a,oBAAqB,GACrBE,qBAAsB,GACtBhb,YAAa,OACbgQ,YAAa,EACb9P,kBAAmB,GACnB8L,kBAAmB,EACnBnM,MAAO,QAEXuiB,iBAAkB,CACdliB,kBAAmB,GACnBD,aAAc,MC7JP,SAASub,GAAKzZ,GACzB,OACI,qCACI,cAAC6C,EAAA,EAAD,CAAO5B,OAAQqf,KAAUtkB,MAAOmH,GAAOsV,OAEvC,cAAC,IAAD,CACInV,MAAOtD,EAAMwK,UAAY,cAAC0B,EAAA,EAAD,CAAmBpO,MAAO,OAAQ8J,KAAM,UAAc2Y,GAASvgB,EAAMhG,MAAMgd,KACpGlW,eAAgBqC,GAAOvE,OACvBmC,QAAS,kBAAMf,EAAM4Z,OAAO,IAC5BlS,KACI,cAAC,IAAD,CACIC,KAAM,eACN8I,KAAM,UACN3S,MAAO,QACP8J,KAAM,GACN5L,MAAO,CAAE4B,iBAAkB,KAGnCif,SAAgC,IAAtB7c,EAAM0E,KAAK9K,SAGzB,cAAC,IAAD,CACI0J,MAAOid,GAASvgB,EAAMhG,MAAMiJ,KAC5BnC,eAAgBqC,GAAOvE,OACvBmC,QAAS,kBAAMf,EAAM4Z,OAAO,IAC5BlS,KACI,cAAC,IAAD,CACIC,KAAM,eACN8I,KAAM,UACN3S,MAAO,QACP8J,KAAM,GACN5L,MAAO,CAAE4B,iBAAkB,OAKvC,cAAC,IAAD,CACI0F,MAAOid,GAASvgB,EAAMhG,MAAMid,KAC5BnW,eAAgBqC,GAAOvE,OACvBmC,QAAS,kBAAMf,EAAM4Z,OAAO,IAC5BlS,KACI,cAAC,IAAD,CACIC,KAAM,sBACN8I,KAAM,UACN3S,MAAO,QACP8J,KAAM,GACN5L,MAAO,CAAE4B,iBAAkB,OAKvC,cAAC,IAAD,CACI0F,MAAOid,GAASvgB,EAAMhG,MAAMkd,MAC5BzP,YAAa,CAAErJ,gBAAiB,OAChC0C,eAAgBqC,GAAOuV,YACvB3X,QAAS,kBAAMf,EAAMsV,QAAQ,OAC7B5N,KACI,cAAC,IAAD,CACIC,KAAM,qBACN8I,KAAM,UACN3S,MAAO,QACP8J,KAAM,GACN5L,MAAO,CAAE4B,iBAAkB,UCjE5C,IAAM4iB,GAAY,SAACC,EAAUtf,EAAKuf,EAAW9O,EAAW+O,EAAY9O,EAAcK,EAAOC,GAC5F,MAAiB,UAAbsO,EAEI,eAACxd,EAAA,EAAD,WACI,cAAC,IAAD,CACInF,MAAM,MACN9B,MAAO,CAAC6C,WAAY,GAAIwP,SAAS,WAAY1E,OAAQ,GACrD/B,KAAK,QACLF,KAAM,CAACC,KAAM,uBAAwB8I,KAAM,UAAW3S,MAAM,SAC5DiD,QAAS,WACL2f,OAGR,cAAC7d,EAAA,EAAD,CAAO5B,OAAQ,CAACE,IAAKA,GAAMnF,MAAO,CAACwC,MAAO,IAAKrB,OAAQ,IAAKe,aAAc,IAAKP,aAAc,SAGjF,UAAb8iB,EAEH,eAACxd,EAAA,EAAD,WACI,cAAC,IAAD,CACInF,MAAM,MACN9B,MAAO,CAAC6C,WAAY,IAAKwP,SAAS,WAAY1E,OAAQ,GACtD/B,KAAK,QACLF,KAAM,CAACC,KAAM,uBAAwB8I,KAAM,UAAW3S,MAAM,SAC5DiD,QAAS,WACL2f,OAGR,cAAC,IAAD,CAAM3f,QAAS,kBAAM6Q,EAAY+O,IAAeC,GAAU/O,EAAcK,EAAOC,EAAUhR,IAAOsH,QAAM,EAACb,KAAM,GAAID,KAAMiK,EAAY,uBAAyB,sBAAuB9T,MAAO,UAAW2S,KAAM,UAAW3P,eAAgB,CAACnD,aAAc,GAAIgM,OAAQ,aAZtQ,GAkBEiX,GAAY,SAAO/O,EAAcK,EAAOC,EAAUhR,GAAtC,eAAA7H,EAAAC,OAAA,uDACrBsY,GAAa,GADQ,WAAAvY,EAAA,MAEf0Y,KAAMO,kBAAkB,CAC1BC,yBAAyB,EACzBC,mBAAmB,KAJF,yBAAAnZ,EAAA,YAMQ4Y,OANR,EAMQA,EAAOQ,kBANf,WAOY,KAAf,OADZC,EANe,aAOjB,EAAAA,EAAgBC,UAPC,mCAAAtZ,EAAA,MAQX4Y,EAAMW,UAAU,CAAE1R,IAAKA,KARZ,OASjBgR,EAASD,GATQ,2BAAA5Y,EAAA,MAWf4Y,EAAMa,aAXS,QAYrBb,EAAMc,2BAA0B,SAAOC,GAAP,SAAA3Z,EAAAC,OAAA,oDACxB0Z,EAAeC,cADS,kCAAA5Z,EAAA,MAElB4Y,EAAMiB,eAFY,OAGxBtB,GAAa,GAHW,+DAZX,8D,qkBCzBV,SAASgP,GAAa7gB,GAAQ,IAAD,UD6CZygB,EAAUtf,EC5CtC,EAA0BiF,oBAAS,GAAnC,WAAOyO,EAAP,KAAcC,EAAd,KAEMlb,GAAS,SAAAoG,EAAM8gB,WAAN,WAAgBlc,cAAhB,IAAyBhL,SAAzB,SAAkCoG,EAAM+gB,iBAAxC,EAAkC,EAAkBnnB,QAmC/DuG,EAAiC,QAAhBC,IAASC,GAAe1H,EAAQ,KAAgC2H,QAAU,KAC3FC,EAAMP,EAAMQ,MAAQ,GAAK,EAAI,CAACpC,gBAAiB,SAAW,CAACA,gBAAiB,WAC5EqC,EACgB,QAAhBL,IAASC,GACL,CAAEK,UAAUP,EAAgBQ,IAAIX,EAAMQ,MAAOK,eAAc,EAAMC,eAAeP,GAChF,CAAEI,IAAKX,EAAMQ,MAAOK,eAAc,EAAMC,eAAeP,GAC/D,OACI,qCACA,eAAC,IAAD,CACI0V,QAASpB,EACTqB,aAAc/S,GAAOgR,QACrBgC,gBAAiB,kBAAMrB,GAAS,IAChCsB,eAAgBC,KAJpB,UAMI,cAACta,EAAA,EAAD,CAAMC,MAAO,CAAC2B,aAAc,GAAIa,MAAO,IAAKX,UAAW,UAAvD,SAAmE0iB,GAASvgB,EAAMhG,MAAMkkB,qBACxF,eAACjb,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UACI,cAAC,IAAD,CACImE,MAAOid,GAASvgB,EAAMhG,MAAMkd,MAC5BzP,YAAa,CAAErJ,gBAAiB,OAChC0C,eAAgB,CAAEkN,YAAa,IAC/BjN,QAAS,kBAAM+T,GAAS,MAE5B,cAAC,IAAD,CACIxR,MAAOid,GAASvgB,EAAMhG,MAAM0jB,GAC5BjW,YAAa,CAAExL,WAAY,QAC3B8E,QAAS,kBA1DD,WACpB,KAAInH,GAAU,GAAKoG,EAAMghB,aAAzB,CACA,IAA0B,IAAtBhhB,EAAMghB,YACN,GAAIC,OAAOC,UAAUlhB,EAAMmhB,YAAa,CAAC,IAAD,IAK9B3gB,EAAQR,EAAMmhB,YAAN,SAAmBnhB,EAAM8gB,WAAzB,SAAmB,EAAgBlc,cAAnC,EAAmB,EAAyBhL,QACpDwnB,EAAMphB,EAAM+gB,WAClBK,EAAItlB,OAAO0E,EAAO,GAGlBR,EAAMqhB,cAAN,KAAwBD,QAErB,CAGH,IAAM5gB,EAAQR,EAAM8gB,SAASlc,QAAQC,WAAU,SAAAC,GAAE,OAAIA,EAAGlE,IAAMZ,EAAMmhB,cAC9DC,EAAMphB,EAAM8gB,SAClBM,EAAIxc,QAAQ9I,OAAO0E,EAAO,GAC1BR,EAAMshB,YAAYF,GAClBphB,EAAMuhB,WAAWvhB,EAAMwhB,QACvBxhB,EAAMyhB,eAAc,OAErB,CACH,IAAML,EAAMphB,EAAMghB,YAAchhB,EAAM4E,QAAU5E,EAAM0hB,YACtDN,EAAItlB,OAAOkE,EAAMQ,MAAO,GACxBR,EAAM2hB,WAAN,KAAqBP,IAEzBtM,GAAS,IA4BkB8M,YAIvB,eAAC,IAAD,SAAcnhB,GAAd,IAA8BM,QAAS,WAAQoD,QAAQ+B,KAAI,IAA3D,WDtBoBua,ECuBEzgB,EAAM4E,QAAQ6b,SDvBNtf,ECuBgBnB,EAAM4E,QAAQzD,IDtBnD,UAAbsf,EAEI,cAAC,IAAD,CACIxf,OAAQ,CAAEE,IAAKA,GACfE,SAAO,EACPuG,KAAM,SACN9G,eAAgB,CAAClD,iBAAkB,KAGvB,UAAb6iB,EAEH,cAAC,IAAD,CACIhY,QAAM,EACNd,KAAM,wBACN8I,KAAM,UACN3S,MAAO,YAKX,cAAC,IAAD,CACI2K,QAAM,EACNd,KAAM,eACN8I,KAAM,UACN3S,MAAO,aCDP,eAAC,IAASwD,QAAV,WACI,cAAC,IAASC,MAAV,UAAiBvB,EAAM4E,QAAQid,WAC/B,eAAC,IAASpgB,SAAV,YAAoB,SAAAzB,EAAM4E,UAAN,WAAeia,cAAf,IAAwBjlB,SAAU,EAAtD,IAA0D2mB,GAASvgB,EAAMhG,MAAM+jB,sBAEnF,cAAC,IAAD,CAAMlB,SAA+B,GAArB7c,EAAMghB,aAAuBpnB,GAAU,EAAG6Z,SAAO,EAAC7L,KAAM,GAAI5L,MAAO,CAACoC,gBAAgB,OAAQuJ,KAAM,gBAAiB8I,KAAM,UAAW3S,MAAO,MAAOiD,QAAS,SAACwC,GAAQuR,GAAS,aCzFtM,SAASgN,GAAYld,EAASlB,GACjC,IAAIc,EAAU,EACVya,EAAO,EASX,OARAra,EAAQmI,KAAK,SAACjI,EAAIjJ,GACAiJ,EAAGb,MAAM8d,QAAQ,SAACjd,GAAD,OAAQA,EAAGpB,UAAYA,KAChDqJ,KAAK,SAACjI,EAAIjJ,GACZ2I,GAAWwd,SAASld,EAAGN,SACvBya,GAAQ+C,SAASld,EAAGE,cAIpBR,GADMA,EAAUya,G,qkBCHb,SAASgD,GAASjiB,GAAQ,IAAD,IAChCG,EACgB,QAAhBC,IAASC,GACH1H,EAAQ,KAAgC2H,QACxC,KACNC,EACAP,EAAMQ,MAAQ,IAAM,EACd,CAAEpC,gBAAiB,SACnB,CAAEA,gBAAiB,WACzBqC,EACgB,QAAhBL,IAASC,GACH,CACIK,UAAWP,EACXQ,IAAKX,EAAMyE,IACX5D,eAAe,EACfC,eAAgBP,GAEpB,CAAEI,IAAKX,EAAMyE,IAAK5D,eAAe,EAAMC,eAAgBP,GAEjE,OACI,eAAC,IAAD,SAAcE,GAAd,IAA8BM,QAAS,WAC/Bf,EAAMmQ,SAAQ,GACdnQ,EAAMshB,YAAYthB,EAAM0E,OAFhC,UAII,eAAC,IAASpD,QAAV,WACI,cAAC,IAASC,MAAV,UAAiBvB,EAAM0E,KAAKiD,OAC5B,eAAC,IAASlG,SAAV,WACKqgB,GAAW9hB,EAAM0E,KAAKE,QAAS5E,EAAM0D,WAAa,EAAG,IACrD6c,GAASvgB,EAAMhG,MAAMkjB,mBAE1B,eAAC,IAASzb,SAAV,YACK,SAAAzB,EAAM0E,OAAN,WAAYE,cAAZ,IAAqBhL,SAAU,EAAG,IAClC2mB,GAASvgB,EAAMhG,MAAM0kB,gBAG9B,cAAC,IAAD,CACIjL,SAAO,EACP7L,KAAM,GACN5L,MAAO,CAAEoC,gBAAiB,OAC1BuJ,KAAM,gBACN8I,KAAM,UACN3S,MAAO,MACPiD,QAAS,WACL,OAAO6P,KAAM1J,MACTqZ,GAASvgB,EAAMhG,MAAMgkB,WACrBuC,GAASvgB,EAAMhG,MAAMikB,eACrB,CACI,CACI3iB,KAAMilB,GAASvgB,EAAMhG,MAAMkd,MAC3BnW,QAAS,aACT/E,MAAO,UAEX,CACIV,KAAMilB,GAASvgB,EAAMhG,MAAM0jB,GAC3B3c,QAAS,WACLf,EAAM0T,SAAS1T,EAAM0E,KAAKD,gBClD/C,SAASyd,GAAaliB,GAAQ,IAAD,IAElC0T,EAAW,SAACpP,I/B8Ff,SAAwBZ,EAAUY,GAAlC,mBAAAhL,EAAAC,OAAA,kEAAAD,EAAA,MACgBZ,GAAGc,UAAU,CAAEiL,IAAKH,EAAQZ,SAAUA,IAAY,SAAChK,EAAKwK,GAEvE,OADIxK,GAAKyK,QAAQC,MAAM1K,GAChBwK,MAHR,OACGQ,EADH,OAKM7I,EAAI,EALV,YAKaA,EAAI6I,EAAK,GAAGE,QAAQhL,QALjC,oBAMOkL,EAAKJ,EAAK,GAAGE,QAAQ/I,IACvB,CAAC,QAAS,SAASsmB,SAASrd,EAAG2b,UAPpC,kCAAAnnB,EAAA,MAQW8N,KAAuBtC,EAAG3D,MARrC,OAKyCtF,IALzC,gDAUInD,GAAG4X,YAAY,CAAE7L,IAAKH,EAAQZ,SAAUA,KAV5C,8D+B7FC0R,CAAapV,EAAM0D,SAAUY,GAAQxK,MAAK,SAACoK,GACvClE,EAAMuhB,WAAWvhB,EAAMwhB,YAI/B,OACI,cAAC3U,EAAA,EAAD,UACK7M,EAAMgU,QACH,cAAC9H,EAAA,EAAD,CACIpO,MAAO,OACP8J,KAAM,QACN5L,MAAOmH,GAAO6Q,WAElB,SAAAhU,EAAM0E,WAAN,IAAY9K,QAAS,EAArB,SACAoG,EAAM0E,WADN,EACA,EAAYqI,KAAI,SAACjI,EAAIjJ,GACjB,OACI,cAAComB,GAAD,CACIzhB,MAAO3E,EAEP6I,KAAMI,EACN9K,KAAMgG,EAAMhG,KACZ0Z,SAAUA,EACVhQ,SAAU1D,EAAM0D,SAChByM,QAASnQ,EAAMmQ,QACfmR,YAAathB,EAAMshB,aANdxc,EAAGL,QAWpB,cAAC1I,EAAA,EAAD,CAAMC,MAAOmH,GAAO8Q,WAApB,SACKsM,GAASvgB,EAAMhG,MAAM2X,e,mCClC3B,SAASyQ,GAAepiB,GACnC,IAAMwC,EAAe7J,EAAQ,KAE7B,OACI,eAACsK,EAAA,EAAD,WACI,cAAC,EAAD,CACIT,aAAcA,EACdM,YAAaI,KACbX,YAAaY,GAAOtB,aACpBkB,WAAYI,GAAOtB,aACnBY,MAAM,EACNE,UAAU,IAEd,cAAC5G,EAAA,EAAD,CAAMC,MAAOmH,GAAOd,iBAApB,UACoB,IAAfrC,EAAMoD,KACDmd,GAASvgB,EAAMhG,MAAM6jB,gBACrB0C,GAASvgB,EAAMhG,MAAM8jB,iBAE/B,cAAC,IAAD,CACIxa,MAAOid,GAASvgB,EAAMhG,MAAMc,aAC5BkB,MAAO,CAAEoC,gBAAiB,QAC1B2C,QAAS,SAACwC,GACNvD,EAAMwD,cCjBX,SAAS6e,GAAgBriB,GACpC,MAA4BoG,qBAA5B,WAAOkc,EAAP,KAAeC,EAAf,KA2CA,OAAIviB,EAAMwE,QAEF,cAAC6H,EAAA,EAAD,CAAcrQ,MAAOmH,GAAO4Q,SAA5B,SACI,cAAClH,EAAA,EAAD,CAAY2V,sBAAuBrf,GAAOuc,kBAA1C,SACI,cAAC0C,GAAD,CAAgBhf,MAAM,EAAOpJ,KAAMgG,EAAMhG,KAAMwJ,MARjD,WACVxD,EAAMuJ,YAAW,UAcjB,cAAC8C,EAAA,EAAD,CAAcrQ,MAAOmH,GAAO4Q,SAA5B,SACI,eAAClH,EAAA,EAAD,CAAY2V,sBAAuBrf,GAAO0J,WAA1C,UACM2T,GAAUxgB,EAAMygB,SAAUzgB,EAAMmB,KAvC5B,WACdnB,EAAMyiB,cACNziB,EAAM0iB,cACN1iB,EAAM2iB,WAoCoD3iB,EAAM4R,UAAW5R,EAAM2gB,WAAY3gB,EAAM6R,aAAc7R,EAAMkS,MAAOlS,EAAMmS,UAC5H,cAAC,IAAD,CACI7O,MAAOid,GAASvgB,EAAMhG,MAAMqjB,WAC5B5V,YAAa,CAAEvJ,aAAc,IAC7B6C,QArCC,0BAAAzH,EAAAC,OAAA,mDACO,QAAhB6G,SAASC,GADA,uBAET6G,MAAM,QAFG,4CAAA5N,EAAA,MAMMspB,KAAgC,CAACnS,KAAM,CAAC,UAAW,cANzD,UAOO,YADhBjV,EANS,QAOFiV,KAPE,iDAWbzQ,EAAM2iB,OAAOnnB,EAAO2F,KACpBnB,EAAMyiB,YAAYjnB,EAAOqnB,SAASnnB,MAAM,KAAK,IAC7CsE,EAAM0iB,YAAYlnB,EAAOmM,MAbZ,gEAuCL,cAAC5L,EAAA,EAAD,CAAMC,MAAOmH,GAAOsc,4BAApB,SACKc,GAASvgB,EAAMhG,MAAMsjB,gBAE1B,eAACra,EAAA,EAAD,CAAMjH,MAAO,CAACmD,cAAe,MAAO5B,WAAY,SAAUK,iBAAkB,GAAIklB,WAAY,EAAG1jB,SAAS,QAAxG,UACI,cAAC,IAAD,CACIiJ,MAAOrI,EAAM6hB,SACbzZ,WAAY,CAAC1K,SAAU,IACvBoD,eAAgB,CAACnD,aAAc,IAC/BkK,YAAa0Y,GAASvgB,EAAMhG,MAAMujB,kBAClCjV,aAAc,SAAC/E,GAAD,OAAOvD,EAAM+iB,YAAYxf,MAE3C,eAACN,EAAA,EAAD,CAAMjH,MAAO,CAACmD,cAAe,MAAO5B,WAAY,SAAUulB,WAAY,EAAG1jB,SAAS,SAAUZ,MAAO,OAAnG,UACA,cAAC,IAAD,CACIqJ,YAAa0Y,GAASvgB,EAAMhG,MAAMwjB,UAClCpV,WAAY,CAAC1K,SAAU,IACvB2K,MAAOia,EACPha,aAAc,SAAC/E,GAAD,OAAOgf,EAAUhf,MAEnC,cAAC,IAAD,CACImE,KACI,cAAC,IAAD,CACIC,KAAM,aACN8I,KAAM,UACN3S,MAAO,QACP8J,KAAM,GACN5L,MAAO,CAAE4B,iBAAkB,KAGnCmD,QAAS,kBAxFX,WAAO,IAAD,IAGyD,EAF7E,GAAI,MAACuhB,MAAQ1c,QAAU5F,EAAM6e,QAAQjlB,QAAU,GAC3C,OAAO,MAC2D,KAA3D,SAAAoG,EAAM6e,cAAN,IAAesD,SAAf,MAAwBG,GAAxB,SAAwBA,EAAQ1c,aAAhC,EAAwB,EAAgBod,iBAC/ChjB,EAAMijB,WAAN,eAAqBjjB,EAAM6e,SAA3B,OAAoCyD,GAApC,SAAoCA,EAAQ1c,aAA5C,EAAoC,EAAgBod,iBAExDT,IAkF+BW,IACfrG,SAAU7c,EAAM6e,QAAQjlB,QAAU,WAI1C,cAACmC,EAAA,EAAD,CAAMC,MAAOmH,GAAOsc,4BAApB,SACKc,GAASvgB,EAAMhG,MAAMyjB,eAE1B,cAACxa,EAAA,EAAD,CAAMjH,MAAOmH,GAAO4c,WAApB,SACK/f,EAAM6e,QAAQ9R,KAAK,SAACjI,EAAIjJ,GACrB,OACI,cAAC,IAAD,CAEIwM,MAAOvD,EACPqe,WAAY,CAAChlB,kBAAmB,GAAIhB,OAAQ,GAAIS,iBAAkB,GAAIqE,eAAgB,GACtFlB,QAAS,kBA9Ff,SAAClF,GACnB,IAAMulB,EAAMphB,EAAM6e,QAClBuC,EAAItlB,OAAOD,EAAG,GACdmE,EAAMijB,WAAN,KAAqB7B,IA2FkBgC,CAAcvnB,KAHxBA,aCpGtB,SAASwnB,GAASrjB,GAE7B,MAAwBoG,oBAAS,GAAjC,WAAOhD,EAAP,KAAa+M,EAAb,KAGA,EAAsC/J,oBAAS,GAA/C,WAAOkd,EAAP,KAAoBC,EAApB,KAGA,EAAgCnd,qBAAhC,WAAO0a,EAAP,KAAiBQ,EAAjB,KAGA,EAAoClb,mBAAS,IAA7C,WAAO2a,EAAP,KAAmBM,EAAnB,KAGA,EAAoCjb,oBAAS,GAA7C,WAAOod,EAAP,KAAmB/B,EAAnB,KAGA,EAAgCrb,qBAAhC,WAAOyb,EAAP,KAAiBkB,EAAjB,KACA,EAA8B3c,mBAAS,IAAvC,WAAOyY,EAAP,KAAgBoE,EAAhB,KACA,EAAsB7c,qBAAtB,WAAOjF,EAAP,KAAYwhB,EAAZ,KACA,EAAgCvc,qBAAhC,WAAOxN,EAAP,KAAiB8pB,EAAjB,KACA,EAAgCtc,qBAAhC,WAAOqa,EAAP,KAAiBgC,EAAjB,KACA,EAAkCrc,oBAAS,GAA3C,WAAOwL,EAAP,KAAkBC,EAAlB,KACA,EAA0BzL,mBAAS,IAAI4L,KAAMC,OAA7C,YAAOC,GAAP,MAAcC,GAAd,MACA,GAA8B/L,oBAAS,GAAvC,aAAO5B,GAAP,MAAgB+E,GAAhB,MACA,GAA4BnD,oBAAS,GAArC,aAAOob,GAAP,MAAeD,GAAf,MAEAlW,qBAAW,WACPlH,QAAQ+B,IAAI,6BACb,CAACsb,KAGJ,IAAMiC,GAAc,WAChB,IAAM5H,EAAO,CACT1a,IAAKA,EACLvI,SAAUA,EACVimB,QAASA,EACTgD,SAAUA,EACVpB,SAAUA,GAGdgC,IACAE,IACAD,IACAO,EAAW,IACXF,IAEA1B,EAAc,GAAD,YAAKN,GAAL,CAAiBlF,KAC9B4F,GAAc,GACdlY,IAAW,IAGToX,GAAa,oBAAArnB,EAAAC,OAAA,kEAAAD,EAAA,YACc4Y,QADd,EACcA,GAAOQ,kBADrB,kBAEIE,SAFJ,kCAAAtZ,EAAA,MAGL4Y,GAAMG,cAHD,OAIfR,GAAa,GAJE,6DAwEb6R,GAAY,SAACC,GACf,GAAIL,EAAa,CAEb,GAAY,SAARK,EAAiB,OAAOpD,GAASvgB,EAAMhG,MAAMqlB,WAC5C,GAAY,YAARsE,EAAoB,QAAS9E,EAAQjlB,OAAS,GAAKioB,EAASjoB,OAAS,GACzE,GAAY,WAAR+pB,EAAmB,OAAOF,UAChC,GAAIrgB,EAAM,CAEb,GAAY,SAARugB,EAAiB,OAAOpD,GAASvgB,EAAMhG,MAAMW,KAC5C,GAAY,YAARgpB,EAAoB,OAASH,EACjC,GAAY,WAARG,EAAmB,OAAOF,SAChC,CAEH,GAAY,SAARE,EAAiB,OAAOpD,GAASvgB,EAAMhG,MAAMgjB,OAC5C,GAAY,YAAR2G,QACJ,GAAY,WAARA,EAAmB,OAAO3jB,EAAM4Z,OAAO,KAIxD,OACI,qCACI,eAAC3W,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UACI,cAAC,IAAD,CACImE,MAAQogB,GAAU,SAClB5iB,eAAgBqC,GAAOqc,aACvB9X,KACI,cAAC,IAAD,CACIC,KAAMvE,EAAO,eAAiB,oBAC9BqN,KAAM,UACN3S,MAAO,QACP8J,KAAM,GACN5L,MAAO,CAAE4B,iBAAkB,KAGnCmD,QAAS,WACL2iB,GAAU,YAEd7G,SAAW6G,GAAU,cAEzB,cAAC,IAAD,CACI5lB,MAAM,MACN9B,MAAO,CAAC6C,WAAY,IACpB+I,KAAK,QACLF,KAAM,CAACC,KAAM,qBAAsB8I,KAAM,UAAW3S,MAAM,SAC1DiD,QAAS,WApDjBuiB,EACAC,GAAe,GACVngB,EACL+M,GAAQ,GAERnQ,EAAM4Z,OAAO,SAkDb,cAAC,IAAD,CACI9b,MAAO,OACPU,MAAO,EACPxC,MAAO,CAAEwC,MAAO,OAAWpB,UAAW,MAE1C,eAACiP,EAAA,EAAD,CAAcrQ,MAAOmH,GAAO4Q,SAA5B,UAEQ3Q,IAASkgB,EACT,cAAC,IAAD,CACIhgB,MAAOid,GAASvgB,EAAMhG,MAAMmjB,YAC5BzV,KACI,cAAC,IAAD,CACIC,KAAM,qBACN8I,KAAM,UACN3S,MAAO,QACP8J,KAAM,GACN5L,MAAO,CAAE4B,iBAAkB,KAGnCmD,QAAS,kBAAMwiB,GAAe,MAC7B,6BAET,cAAC1W,EAAA,EAAD,CAAY7Q,MAAO,CAAC2B,aAAc,IAAlC,SAtIK,WACb,OAAI2lB,EACQ,cAACjB,GAAD,CACIroB,KAAMgG,EAAMhG,KACZipB,WAAYA,EACZR,YAAaA,EACbM,YAAaA,EACbJ,OAAQA,EACRD,YAAaA,EACbnZ,WAAYA,GACZ4I,SAAUA,GACVN,aAAcA,EACd8O,WAAYA,GACZxf,IAAKA,EACLvI,SAAUA,EACVimB,QAASA,EACT4B,SAAUA,EACVoB,SAAUA,EACVrd,QAASA,GACT0N,MAAOA,GACPN,UAAWA,IAEhBxO,IAASkgB,EAEhB,SAAQxC,EAASlc,UAAjB,SAAO,EAAoBgf,OAAO7C,SAAlC,EAAO,EAAwChU,KAAI,SAACjI,EAAIjJ,GACpD,OAAQ,cAACglB,GAAD,CACJrgB,MAAO3E,EAEP+E,GAAIkgB,EAASrc,KAAO,EACpBqc,SAAUA,EACVC,WAAYA,EACZnc,QAASE,EACT9K,KAAMgG,EAAMhG,KACZmnB,WAAYrc,EAAGlE,IAAM/E,EACrBylB,YAAaA,EACbD,cAAeA,EACfL,aAAa,EACbQ,OAAQA,GACRD,UAAWA,GACXE,cAAeA,GAZV5lB,MAiBL,cAACqmB,GAAD,CACJxd,KAAM1E,EAAM0E,KACZsP,QAAShU,EAAMgU,QACfha,KAAMgG,EAAMhG,KACZ0J,SAAU1D,EAAM0D,SAChByM,QAASA,EACTmR,YAAaA,EACbC,UAAWvhB,EAAMuhB,YA7BS,IAAD,IAiHvBsC,WC/LH,SAASC,GAAW9jB,GAC/B,MAA4CoG,oBAAS,GAArD,WAAO2d,EAAP,KAAuBC,EAAvB,KACA,EAA8B5d,mBAAS,IAAvC,WAAOxB,EAAP,KAAgB+c,EAAhB,KACA,EAA8Bvb,oBAAS,GAAvC,WAAO6d,EAAP,KAAgBC,EAAhB,KACA,EAAwB9d,mBAAS,IAAjC,WAAOuB,EAAP,KAAawc,EAAb,KACA,EAA0B/d,oBAAS,GAAnC,WAAOyO,EAAP,KAAcC,EAAd,KAGA,EAAsB1O,qBAAtB,WAAOjF,EAAP,KAAYwhB,EAAZ,KACA,EAAgCvc,qBAAhC,WAAOxN,EAAP,KAAiB8pB,EAAjB,KACA,EAAgCtc,qBAAhC,WAAOqa,EAAP,KAAiBgC,EAAjB,KACA,EAA8Brc,mBAAS,IAAvC,WAAOyY,EAAP,KAAgBoE,EAAhB,KACA,EAAgC7c,qBAAhC,WAAOyb,EAAP,KAAiBkB,EAAjB,KACA,EAA8B3c,oBAAS,GAAvC,WAAO5B,EAAP,KAAgB+E,GAAhB,KACA,GAAkCnD,oBAAS,GAA3C,aAAOwL,GAAP,MAAkBC,GAAlB,MACA,GAA0BzL,mBAAS,IAAI4L,KAAMC,OAA7C,aAAOC,GAAP,MAAcC,GAAd,MAEA9G,qBAAW,YACI,MAAPwT,OAAA,EAAAA,EAASjlB,QAAS,GAAKioB,EACvBqC,GAAW,GAEXA,GAAW,KAEhB,CAACrF,EAASgD,IAEb,IA4CMlB,GAAa,oBAAArnB,EAAAC,OAAA,kEAAAD,EAAA,YACc4Y,QADd,EACcA,GAAOQ,kBADrB,kBAEIE,SAFJ,kCAAAtZ,EAAA,MAGL4Y,GAAMG,cAHD,OAIfR,IAAa,GAJE,6DAOnB,OACI,qCAEI,eAAC,IAAD,CACIoE,QAASpB,EACTqB,aAAc/S,GAAO0R,MACrBsB,gBAAiB,kBAAMrB,GAAS,IAChCsB,eAAgBC,KAJpB,UAMI,cAACta,EAAA,EAAD,CAAMC,MAAOmH,GAAOwc,WAApB,SAAiCY,GAASvgB,EAAMhG,MAAMmkB,0BACtD,cAACpiB,EAAA,EAAD,CAAMC,MAAOmH,GAAOyc,iBAApB,SAAuCW,GAASvgB,EAAMhG,MAAMokB,oBAC5D,eAACnb,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UACI,cAAC,IAAD,CAAO0I,YAAa0Y,GAASvgB,EAAMhG,MAAMqkB,UACrCvd,eAAgBqC,GAAO0c,wBACvBzX,WAAYjF,GAAO2c,eACnBxX,aAAc,SAAC/E,GAAD,OAAO4gB,EAAO,MAAC5gB,OAAD,EAACA,EAAGqC,WAEpC,cAAC,IAAD,CAAQ9E,eAAgB,CAAE1D,UAAW,GAAIoB,MAAO,IAAM8E,MAAO,GAAIoE,KAC7D,cAAC,IAAD,CACIC,KAAM,2BACN8I,KAAM,UACN3S,MAAO,QACP8J,KAAM,KAEZiV,UAAc,MAAJlV,OAAA,EAAAA,EAAM/N,QAAS,EAAkBmH,QA3E1C,YnCmBhB,SAAsB2C,EAAUgB,GAAhC,uBAAApL,EAAAC,OAAA,mDACEmL,EAAKiD,MAAiC,KAAzB,SAAAjD,EAAKE,cAAL,IAAchL,QAD7B,uBAECuK,QAAQC,MAAM,mCAFf,kBAGQ,MAHR,OAKMvI,EAAI,EALV,YAKaA,EAAI6I,EAAKE,QAAQhL,QAL9B,qBAMOkL,EAAKJ,EAAKE,QAAQ/I,IACrB+E,GAAKkI,gBACRhE,EAAGb,MAAQ,CAAC,CAACP,SAAUA,EAAUc,QAAS,EAAGQ,OAAQ,KACjD,CAAC,QAAS,SAASmd,SAASrd,EAAG2b,UATpC,wBAUW7nB,EAAckQ,iBAA0B,SAAfhE,EAAG2b,SAAsB,OAAS,QAC3D1X,EAAU3B,KAXrB,QAWyDtC,EAAG2b,SAX5D,gBAAAnnB,EAAA,MAYW8N,KAAqB,CACvBsO,KAAM5Q,EAAG3D,IACT0N,GAAG,GAAI9F,EAAOnQ,KAdvB,2BAAAU,EAAA,MAgBW8N,KAAuBtC,EAAG3D,MAhBrC,QAiBK2D,EAAG3D,IAAH,GAAY4H,EAAOnQ,EAjBxB,QAKsCiD,IALtC,gDAoBInD,GAAGmB,YAAH,MAAoB6K,IAAQ,SAAChL,EAAK8B,GACrC,OAAI9B,GACAyK,QAAQC,MAAM1K,GACP,MAEA8B,MAzBZ,8DmClBC4Z,CAAWpV,EAAM0D,SAAU,CACvBiE,KAAMA,EACN/C,QAASA,EACTlB,SAAU1D,EAAM0D,WACjB5J,MAAK,SAAAoK,GACJ,OAAO0M,KAAM1J,MACTqZ,GAASvgB,EAAMhG,MAAMskB,YACrBiC,GAASvgB,EAAMhG,MAAMukB,oBACrB,CACI,CACIjjB,KAAMilB,GAASvgB,EAAMhG,MAAM0jB,GAC3B3c,QAAS,WACL+T,GAAS,GACT9U,EAAM4Z,OAAO,UAK9B3T,OAAM,SAAAvM,GACLyK,QAAQ+B,IAAIxM,eA2DZ,eAACuJ,EAAA,EAAD,CAAMjH,MAAO,CAAEmD,cAAe,OAA9B,UACI,cAAC,IAAD,CAEImE,MAAOygB,EAAiBxD,GAASvgB,EAAMhG,MAAM0jB,GAAK6C,GAASvgB,EAAMhG,MAAMojB,SACvEtc,eAAgBqC,GAAOqc,aACvB9X,KACI,cAAC,IAAD,CACIC,KAAMoc,EAAiB,eAAiB,gCACxCtT,KAAM,UACN3S,MAAO,QACP8J,KAAM,GACN5L,MAAO,CAAE4B,iBAAkB,KAGnCif,YAAYkH,GAAkBE,IAAcF,IAAyB,MAAPnf,OAAA,EAAAA,EAAShL,QAAS,GAChFmH,QAAS,WACL4f,KACIoD,EAvEJ,WAChB,IAAMhD,EAAa,CACf5f,IAAKA,EACLvI,SAAUA,EACVimB,QAASA,EACTgD,SAAUA,EACVpB,SAAUA,GAGdgC,IACAE,IACAD,IACAO,EAAW,IACXF,IAEApB,EAAW,GAAD,YAAK/c,GAAL,CAAcmc,KACxBxX,IAAW,GAuDyBka,GACf3O,GAAS,MAGtB,cAAC,IAAD,CACIhX,MAAM,MACN9B,MAAO,CAAC6C,WAAY,IACpB+I,KAAK,QACLF,KAAM,CAACC,KAAM,qBAAsB8I,KAAM,UAAW3S,MAAM,SAC1DiD,QAAS,WACL4f,KACAoD,EAAiBC,GAAkB,GAAShkB,EAAM4Z,OAAO,SAIrE,cAAC,IAAD,CACI9b,MAAO,OACPU,MAAO,EACPxC,MAAO,CAAEwC,MAAO,OAAWpB,UAAW,OAElB,IAAnB2mB,EACD,cAAC1B,GAAD,CAEIroB,KAAMgG,EAAMhG,KACZipB,WAAYA,EACZR,YAAaA,EACbM,YAAaA,EACbJ,OAAQA,EACRD,YAAaA,EACbnZ,WAAYA,GACZ4I,SAAUA,GACVN,aAAcA,GACd8O,WAAYA,GACZxf,IAAKA,EACLvI,SAAUA,EACVimB,QAASA,EACT4B,SAAUA,EACVoB,SAAUA,EACVrd,QAASA,EACT0N,MAAOA,GACPN,UAAWA,KAEf,eAACvF,EAAA,EAAD,CAAcrQ,MAAOmH,GAAO4Q,SAA5B,UACI,cAAC,IAAD,CACIzQ,MAAOid,GAASvgB,EAAMhG,MAAMmjB,YAC5BzV,KACI,cAAC,IAAD,CACIC,KAAM,qBACN8I,KAAM,UACN3S,MAAO,QACP8J,KAAM,GACN5L,MAAO,CAAE4B,iBAAkB,KAGnCmD,QAAS,kBAAMijB,GAAkB,MAErC,cAACnX,EAAA,EAAD,CAAY7Q,MAAO,CAAC2B,aAAc,IAAlC,SACKqC,EAAMgU,QACH,cAAC9H,EAAA,EAAD,CACIpO,MAAO,OACP8J,KAAM,QACN5L,MAAOmH,GAAO6Q,WAEX,MAAPpP,OAAA,EAAAA,EAAShL,QAAS,EAAlB,MACAgL,OADA,EACAA,EAASmI,KAAI,SAACjI,EAAIjJ,GACd,OACI,cAACglB,GAAD,CACIrgB,MAAO3E,EAEP+I,QAASE,EACT9K,KAAMgG,EAAMhG,KACZ2nB,WAAYA,EACZD,YAAa9c,GAJR/I,MASjB,cAACE,EAAA,EAAD,CAAMC,MAAOmH,GAAO8Q,WAApB,SACKsM,GAASvgB,EAAMhG,MAAMijB,wB,cCpNvC,SAASxD,GAAKzZ,GACzB,IAAMokB,EAAgBzrB,EAAQ,KAC9B,OACA,qCACMqH,EAAMqkB,WAAa,EAAI,cAAC,IAAD,CACrBroB,MAAO,CAACoB,UAAW,IAAKiR,SAAU,WAAY1E,OAAQ,IACtD7I,eAAgB,CAACjC,WAAY,KAC7B+I,KAAK,QACLF,KAAM,CAACC,KAAM,eAAgB8I,KAAM,UAAW3S,MAAM,SACpDiD,QAAS,kBAAMf,EAAMskB,qBACpB,6BACL,cAAC,EAAD,CAAQ9hB,aAAc+hB,GAAgBzhB,YAAashB,EAAe7hB,YAAa,CAACnF,WAAY,GAAID,OAAQ,IAAKQ,cAAe,MAC5H,cAAC,IAAD,CAAM3B,MAAOmH,GAAO6c,WAApB,SAAiCO,GAASvgB,EAAMhG,MAAMwkB,cAAcxe,EAAM0E,KAAKiD,QAC/E,cAAC,IAAD,CACIrE,MAAOid,GAASvgB,EAAMhG,MAAMgd,KAC5BlW,eAAgBqC,GAAOwY,WACvB5a,QAAS,kBAAMf,EAAMwkB,SAAQ,IAC7Bnb,WAAW,EACX3B,KACI,cAAC,IAAD,CACIC,KAAM,wBACN8I,KAAM,UACN3S,MAAO,QACP8J,KAAM,GACN5L,MAAO,CAAE4B,iBAAkB,OAIvC,cAAC,IAAD,CACI0F,MAAOid,GAASvgB,EAAMhG,MAAMkd,MAC5BzP,YAAa,CAAErJ,gBAAiB,OAChC0C,eAAgBqC,GAAOoc,gBACvBxe,QAAS,kBAAMf,EAAM4Z,OAAO,IAC5BlS,KACI,cAAC,IAAD,CACIC,KAAM,qBACN8I,KAAM,UACN3S,MAAO,QACP8J,KAAM,GACN5L,MAAO,CAAE4B,iBAAkB,U,yBC9BhC,SAASic,GAAK7Z,GACzB,MAAwBoG,mBAAS,IAAjC,WAAO6R,EAAP,KAAa+C,EAAb,KACA,EAA8B5U,oBAAS,GAAvC,WAAO4N,EAAP,KAAgBmG,EAAhB,KACA,EAA8B/T,mBAAS,GAAvC,WAAO+F,EAAP,KAAgBsY,EAAhB,KACA,EAA4Bre,qBAA5B,WAAOkc,EAAP,KAAeC,EAAf,KACA,EAA0Bnc,oBAAS,GAAnC,WAAOyO,EAAP,KAAcC,EAAd,KACA,EAAkC1O,oBAAS,GAA3C,WAAOwL,EAAP,KAAkBC,EAAlB,KACA,EAA0BzL,mBAAS,IAAI4L,KAAMC,OAA7C,WAAOC,EAAP,KAAcC,EAAd,KAEA,EAA8B/L,mBAAS,GAAvC,WAAO5B,EAAP,KAAgB+E,EAAhB,KACA,EAAwBnD,mBAAS,GAAjC,WAAO6Y,EAAP,KAAayF,EAAb,KACA,EAAgCte,oBAAS,GAAzC,WAAOyU,EAAP,KAAiBC,EAAjB,KAEAzP,qBAAW,WACP2P,EChCe,SAAC2J,GACpB,IAAK,IAAI9oB,EAAI8oB,EAAI/qB,OAAS,EAAGiC,EAAI,EAAGA,IAAK,CACrC,IAAM+oB,EAAIpf,KAAKC,MAAMD,KAAKE,UAAY7J,EAAI,IADL,EAElB,CAAC8oB,EAAIC,GAAID,EAAI9oB,IAA/B8oB,EAAI9oB,GAFgC,KAE5B8oB,EAAIC,GAFwB,KAIzC,OAAOD,ED2BKE,CAAQ7kB,EAAM0E,OACtByV,GAAW,KACZ,IAEH,IAAM2K,EAAensB,EAAQ,KACvBosB,EAAYpsB,EAAQ,KAGpBgoB,EAAa,oBAAArnB,EAAAC,OAAA,kEAAAD,EAAA,YACc4Y,OADd,EACcA,EAAOQ,kBADrB,kBAEIE,SAFJ,kCAAAtZ,EAAA,MAGL4Y,EAAMG,cAHD,OAIfR,GAAa,GAJE,6DA6CbmT,EAA0B,SAACxpB,GAC7B,OACIoV,KAAM1J,MACF1L,EAAS+kB,GAASvgB,EAAMhG,MAAM2kB,aAAe4B,GAASvgB,EAAMhG,MAAM4kB,YAClEpjB,EAAS+kB,GAASvgB,EAAMhG,MAAMgJ,QAAUud,GAASvgB,EAAMhG,MAAM0d,OAAOO,EAAK9L,GAAS0S,SAClF,CACI,CACIvjB,KAAMilB,GAASvgB,EAAMhG,MAAM0jB,GAC3B3c,QAAS,WACDoL,EAAU,GAAK8L,EAAKre,OAAS,EAC7B6qB,EAAWtY,EAAU,IAEjB3H,GAAWya,GAAMnE,GAAY,GACjChG,GAAS,SA0BrC,OACA,mCACKd,EACG,cAAC9H,EAAA,EAAD,CAAmBtE,KAAM,QAAS5L,MAAO,CAACoB,UAAW,IAAKU,MAAO,SAEjE,qCACK+c,GAAYrW,GAAWya,EACpB,cAAC,KAAD,CACI/C,SAAS,EACTC,WAAW,EACXC,UAAW,IACXC,MAAO,GACPC,OAAQ,CAAEC,GAAI,GAAIC,GAAI,MAG1B,6BAEJ,eAAC,IAAD,CACIvG,QAASpB,EACTqB,aAAc/S,GAAOgR,QACrBgC,gBAAiB,kBAAMnW,EAAM4Z,OAAO,IACpCxD,eAAgBC,KAJpB,UAMK7R,GAAWya,EACR,qCACI,cAAC,EAAD,CAAQzc,aAAcsiB,EAAchiB,YAAa2Z,KAAala,YAAa,CAACnF,WAAY,GAAID,OAAQ,IAAKQ,cAAe,IAAK8E,MAAM,IACnI,cAAC,IAAD,CAAMzG,MAAO,CAAC8B,MAAM,OAAQD,UAAW,SAAUH,SAAU,GAAIzB,WAAY,QAA3E,SAAqFskB,GAASvgB,EAAMhG,MAAM+kB,mBAC1G,cAAC,IAAD,CAAM/iB,MAAO,CAAC6B,UAAW,SAAUT,UAAW,GAAIM,SAAU,IAA5D,SAAkE6iB,GAASvgB,EAAMhG,MAAMglB,YAAYC,EAAMza,QAG7G,qCACI,cAAC,EAAD,CAAQhC,aAAcuiB,EAAWjiB,YAAamiB,KAAU1iB,YAAa,CAACnF,WAAY,GAAID,OAAQ,IAAKQ,cAAe,MAClH,cAAC,IAAD,CAAM3B,MAAO,CAAC8B,MAAM,MAAOD,UAAW,SAAUH,SAAU,GAAIzB,WAAY,QAA1E,SAAoFskB,GAASvgB,EAAMhG,MAAMklB,gBACzG,cAAC,IAAD,CAAMljB,MAAO,CAAC6B,UAAW,SAAUT,UAAW,GAAIM,SAAU,IAA5D,SAAkE6iB,GAASvgB,EAAMhG,MAAMmlB,SAASF,EAAMza,QAG9G,cAAC,IAAD,CAAQlB,MAAOid,GAASvgB,EAAMhG,MAAMkd,MAAOnW,QAAS,kBAAMf,EAAM4Z,OAAO,IAAI9Y,eAAgBqC,GAAOuV,YAAahR,KAC3G,cAAC,IAAD,CACIC,KAAM,qBACN8I,KAAM,UACN3S,MAAO,QACP8J,KAAM,GACN5L,MAAO,CAAE4B,iBAAkB,UA7F9B,WACjB,GAAKqa,EAAK9L,GACV,OAAQ8L,EAAK9L,GAASsU,UAClB,IAAK,QACD,OAAO,cAAC,IAAD,CAAOxf,OAAS,CAACE,IAAK8W,EAAK9L,GAAShL,KAAQnF,MAAOmH,GAAO8c,mBACrE,IAAK,QACD,OAAO,cAAC,IAAD,CAAMlf,QAAS,kBAAM6Q,EAAY+O,IA1BlC,0BAAArnB,EAAAC,OAAA,uDACdsY,GAAa,GADC,WAAAvY,EAAA,MAER0Y,KAAMO,kBAAkB,CAC1BC,yBAAyB,EACzBC,mBAAmB,KAJT,yBAAAnZ,EAAA,YAMe4Y,OANf,EAMeA,EAAOQ,kBANtB,WAOmB,KAAf,OADZC,EANQ,aAOV,EAAAA,EAAgBC,UAPN,mCAAAtZ,EAAA,MAQJ4Y,EAAMW,UAAU,CAAE1R,IAAK8W,EAAK9L,GAAShL,OARjC,OASVgR,EAASD,GATC,2BAAA5Y,EAAA,MAWR4Y,EAAMa,aAXE,QAYdb,EAAMc,2BAA0B,SAAOC,GAAP,SAAA3Z,EAAAC,OAAA,oDACxB0Z,EAAeC,cADS,kCAAA5Z,EAAA,MAElB4Y,EAAMiB,eAFY,OAGxBtB,GAAa,GAHW,+DAZlB,6DA0BiD+O,IAAcnY,QAAM,EAACb,KAAM,GAAID,KAAMiK,EAAY,uBAAyB,sBAAuB9T,MAAO,UAAW2S,KAAM,UAAW3P,eAAgB,CAACnD,aAAc,MAC9N,QACI,OAAO,8BAyFLunB,GACF,cAAC,IAAD,CAAMlpB,MAAOmH,GAAO+c,aAApB,SAAmCjI,EAAK9L,GAAS0V,WACjD,eAAC5e,EAAA,EAAD,CAAMjH,MAAOmH,GAAOgd,aAApB,UACI,cAAC,IAAD,CAAOnkB,MAAOmH,GAAOid,cAAe9X,aAAc,SAAC/E,GAAQgf,EAAUhf,IAAO8E,MAAOia,IACnF,cAAC,IAAD,CAAQ7a,YAAatE,GAAOkd,iBAAkB/c,MAAOid,GAASvgB,EAAMhG,MAAM0jB,GAAI3c,QAAS,YAnEhF,uBAAAzH,EAAAC,OAAA,mDACb4rB,EADa,MACW7C,GADX,SACWA,EAAQ1c,aADnB,EACW,EAAgBod,cA7DhC,EAAA1pB,EAAAC,OAAA,kEAAAD,EAAA,MACRqnB,KADQ,cAEdxO,EAAS,IAAIH,KAAMC,OAFL,WAAA3Y,EAAA,YAGR4Y,OAHQ,EAGRA,EAAOiB,eAHC,4DA+DdoP,EAAU,KAEK,KADT/mB,EAASyc,EAAK9L,GAAS0S,QAAQsD,SAASgD,IAJ3B,wBAOfT,EAAQzF,EAAO,GAPA,WAAA3lB,EAAA,MAQT8b,GAAgBpV,EAAM0D,SAAU1D,EAAMsE,OAAQ2T,EAAK9L,GAASvL,IAAI,IARvD,sCAWf2I,EAAW/E,EAAU,GAXN,YAAAlL,EAAA,MAYT8b,GAAgBpV,EAAM0D,SAAU1D,EAAMsE,OAAQ2T,EAAK9L,GAASvL,IAAI,IAZvD,QAcnBokB,EAAwBxpB,GAdL,6DAmEwF4pB,cErKpG,SAASpO,GAAKhX,GACzB,MAAwBoG,oBAAS,GAAjC,WAAOif,EAAP,KAAab,EAAb,KAEA,OACA,cAACvhB,EAAA,EAAD,CAAMjH,MAAOmH,GAAOpB,KAApB,SACMsjB,EACE,cAAC,GAAD,CACIrrB,KAAMgG,EAAMhG,KACZsK,OAAQtE,EAAM0E,KAAKD,IACnBf,SAAU1D,EAAM0D,SAChBgB,KAAM1E,EAAM0E,KAAKE,QACjBgV,OAAQ5Z,EAAM4Z,OACd4K,QAASA,IAGb,cAAC,GAAD,CACIxqB,KAAMgG,EAAMhG,KACZsqB,gBAAiBtkB,EAAMskB,gBACvB5f,KAAM1E,EAAM0E,KACZkV,OAAQ5Z,EAAM4Z,OACd4K,QAASA,EACTH,WAAYrkB,EAAMqkB,eCbnB,SAAS1U,GAAK3P,GACzB,MAAkCoG,oBAAS,GAA3C,WAAOoE,EAAP,KAAkBC,EAAlB,KACA,EAAsBrE,mBAAS,GAA/B,WAAO0W,EAAP,KAAYlD,EAAZ,KACA,EAAwBxT,mBAAS,IAAjC,WAAO1B,EAAP,KAAa4gB,EAAb,KACA,EAA4Blf,mBAAS,GAArC,WAAOV,EAAP,KAAe6f,EAAf,KACA,EAA4Bnf,oBAAS,GAArC,WAAOob,EAAP,KAAeD,EAAf,KAEAlW,qBAAU,WxC8BP,IAAa3H,KwC3BJ1D,EAAM0D,SxC4BXhL,GACFiL,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEC,MAAO,IACdC,MAAK,SAACpK,EAAKwK,GAIR,OAHIxK,GACAyK,QAAQC,MAAM1K,GAEXwK,MwCnCapK,MAAK,SAACoK,GACtBA,EAAKtK,OAAS,IACd0rB,EAAQphB,GACRqhB,EAAUlgB,GAAa,EAAGX,EAAK9K,OAAS,KAE5C6Q,GAAa,MAIjB,IA2BMgB,EAAcC,IAAYC,iBAC5B,qBA5Be,WAyBf,OAxBImR,EAAM,EACM,IAARA,EACAlM,KAAM1J,MACFqZ,GAASvgB,EAAMhG,MAAM2jB,gBACrB4C,GAASvgB,EAAMhG,MAAM4jB,WACrB,CACI,CACItiB,KAAMilB,GAASvgB,EAAMhG,MAAMkd,MAC3BnW,QAAS,aACT/E,MAAO,UAEX,CACIV,KAAMilB,GAASvgB,EAAMhG,MAAM0jB,GAC3B3c,QAAS,WACL6Y,EAAO,OAMtBA,EAAO,GAEZ5Z,EAAMsV,QAAQ,OAEX,KAMX,OAAO,WACH7J,EAAYG,YAEjB,CAACkR,EAAK0E,IAET,IAAM8C,EAAkB,WACpB,GAAI5f,EAAK9K,OAAS,EAAG,CACjB,IAAI4rB,EvC7DkB,SAArBC,EAAsBC,EAASpgB,EAAKC,GAE7C,OADAogB,WAAatgB,GAAaC,EAAKC,GAC3BogB,YAAcD,EACPD,EAAmBC,EAASpgB,EAAKC,GACrCogB,WuCyDYF,CAAmB/f,EAAQ,EAAGhB,EAAK9K,OAAS,GACvD2rB,EAAUC,KAsDlB,OAAO,cAACviB,EAAA,EAAD,CAAMjH,MAAOmH,GAAOpB,KAApB,SAjDS,IAAR+a,EAEI,cAAC,GAAD,CACIlD,OAAQA,EACR5f,KAAMgG,EAAMhG,KACZsb,QAAStV,EAAMsV,QACf5Q,KAAMA,EACN8F,UAAWA,IAGJ,IAARsS,EACA,cAAC9F,GAAD,CACHtS,KAAMA,EAAKgB,GACX2e,WAAY3f,EAAK9K,OACjBI,KAAMgG,EAAMhG,KACZ0J,SAAU1D,EAAM0D,SAChBkW,OAAQA,EACR0K,gBAAiBA,IAEN,IAARxH,EAEH,cAACuG,GAAD,CACIrP,QAASxJ,EACToP,OAAQA,EACR5f,KAAMgG,EAAMhG,KACZsb,QAAStV,EAAMsV,QACf5Q,KAAMA,EACNhB,SAAU1D,EAAM0D,SAChB8d,OAAQA,EACRD,UAAWA,IAGJ,IAARzE,EACA,cAAC,IAAD,4BACQ,IAARA,EAEH,cAACgH,GAAD,CACIpgB,SAAU1D,EAAM0D,SAChBkW,OAAQA,EACR5f,KAAMgG,EAAMhG,KACZsb,QAAStV,EAAMsV,QACfiM,UAAWA,IAIZ,cAAC,IAAD,4BCxHJ,SAAStS,GAAWjV,EAAM0J,GAAW,IAAD,UAC/C,MAAO,CACH,CACIiE,KAAI,SAAEgJ,GAAe3W,SAAjB,EAAE,EAAsBwV,MAC5B9H,KAAM,eACNke,gBAAiB,SAAC5rB,EAAMsb,GACpB,OACI,cAAC9F,GAAD,CAAOxV,KAAMA,EAAMsb,QAASA,EAAS5R,SAAUA,MAI3D,CACIiE,KAAI,SAAEgJ,GAAe3W,SAAjB,EAAE,EAAsByV,aAC5B/H,KAAM,eACNke,gBAAiB,SAAC5rB,EAAMsb,GACpB,OAAO,OAGf,CACI3N,KAAI,SAAEgJ,GAAe3W,SAAjB,EAAE,EAAsB2V,KAC5BjI,KAAM,sBACNke,gBAAiB,SAAC5rB,EAAMsb,GACpB,OACI,cAAC3F,GAAD,CAAM3V,KAAMA,EAAMsb,QAASA,EAAS5R,SAAUA,MAI1D,CACIiE,KAAI,SAAEgJ,GAAe3W,SAAjB,EAAE,EAAsB4V,oBAC5BlI,KAAM,wBACNke,gBAAiB,SAAC5rB,EAAMsb,GACpB,OAAO,OAGf,CACI3N,KAAI,SAAEgJ,GAAe3W,SAAjB,EAAE,EAAsB0V,WAC5BhI,KAAM,cACNke,gBAAiB,SAAC5rB,EAAMsb,GACpB,OACI,cAAC5F,GAAD,CACI1V,KAAMA,EACNsb,QAASA,EACT5R,SAAUA,OC7CnB1G,WAAWC,OAAO,CAC7B6D,eAAgB,CACZvD,WAAY,SACZH,UAAW,GACXO,aAAc,IAElB8J,YAAa,CACTjJ,MAAO,IACPrB,OAAQ,GACRkC,eAAgB,cAEpB2Q,kBAAmB,CACfxR,MAAO,IACPrB,OAAQ,GACRiB,gBAAiB,OAErB8R,iBAAkB,CACd1R,MAAO,IACPrB,OAAQ,GACRiB,gBAAiB,YCdV,SAAS6Q,GAAWjP,GAC/B,MAAwBoG,qBAAxB,WAAOyf,EAAP,KAAavQ,EAAb,KACA,OAAOuQ,GAGH,cAAChZ,EAAA,EAAD,CAAY7Q,MAAO,CAAEsB,KAAM,GAA3B,SACKwoB,GAAe9lB,EAAMhG,MAAQ,KAAMgG,EAAM0D,UAAUqJ,KAAI,SAACjI,EAAIjJ,GACzD,OACI,cAAC,IAAD,CACI6L,KAAM,CACFC,KAAM7C,EAAG4C,KACT+I,KAAM,UACN7I,KAAM,GACN9J,MAAO,SAGXioB,aAAc,OACdrV,mBAAoB,CAAE1C,YAAa,IACnCvG,YAAatE,GAAOsE,YACpB3G,eAAgBqC,GAAOrC,eACvBwC,MAAOwB,EAAG6C,KACV5G,QAAS,SAACwC,GACN+R,EACIxQ,EAAG8gB,gBAAgB5lB,EAAMhG,MAAQ,KAAMsb,MAR1CzZ,QCpBdmB,IAAWC,OAAO,ICIlB,SAASiS,GAAMlP,GAC1B,OACI,cAAC6M,EAAA,EAAD,CAAY7Q,MAAO,CAAEsB,KAAM,GAA3B,SACI,cAACvB,EAAA,EAAD,qBCCZ,IAAMiqB,GAAMC,eAEG,SAASC,GAAKlmB,GAAQ,IAAD,MAChC,OACI,eAACgmB,GAAIG,UAAL,CACIC,cAAe,CACXC,YAAa,CAAC,CAAElpB,OAAQ,GAAIW,MAAO,YACnCwoB,iBAAkB,CAAC,CAAExoB,MAAO,UAAWH,aAAc,MAH7D,UAMI,cAACqoB,GAAIO,OAAL,CACIC,QAAS,CACLC,aAAa,EACbC,WAAY,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACI,cAAC,IAAD,CACIlW,KAAM,UACN3S,MAAO,UACP6J,KAAI,mBACAgf,EAAU,GAAK,gBAMnChf,KAAI,SAAEgJ,GAAe3Q,EAAMhG,YAAvB,EAAE,EAA4BiV,WAClC2X,SAAU,kBACN,cAAC,GAAD,CAAY5sB,KAAMgG,EAAMhG,KAAM0J,SAAU1D,EAAM0D,cAGtD,cAACsiB,GAAIO,OAAL,CACIC,QAAS,CACLC,aAAa,EACbC,WAAY,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACI,cAAC,IAAD,CACIlW,KAAM,UACN3S,MAAO,UACP6J,KAAI,QAASgf,EAAU,GAAK,gBAK5Chf,KAAI,SAAEgJ,GAAe3Q,EAAMhG,YAAvB,EAAE,EAA4BkV,MAClC0X,SAAU,kBAAM,cAAC1X,GAAD,CAAOlV,KAAMgG,EAAMhG,UAEvC,cAACgsB,GAAIO,OAAL,CACIC,QAAS,CACLC,aAAa,EACbC,WAAY,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACI,cAAC,IAAD,CACIlW,KAAM,UACN3S,MAAO,UACP6J,KAAI,YAAagf,EAAU,GAAK,gBAKhDhf,KAAI,SAAEgJ,GAAe3Q,EAAMhG,YAAvB,EAAE,EAA4BmV,SAClCyX,SAAU,SAACrjB,GAAD,OACN,cAAC4L,GAAD,CACInV,KAAMgG,EAAMhG,KACZP,SAAQ,MAAEuG,OAAF,EAAEA,EAAOvG,SACjBkM,OAAQ3F,EAAM2F,OACdjC,SAAU1D,EAAM0D,SAChB6E,YAAavI,EAAMuI,oB,wBC1E5BvL,OAAWC,OAAO,CAC7BI,UAAW,CACPE,WAAY,SACZC,aAAc,SACdG,aAAc,GACda,MAAO,OACPJ,gBAAiB,SAErByoB,UAAW,CACPzpB,WAAY,GACZoB,MAAO,IACPrB,OAAQ,IACRQ,cAAe,IAEnBmpB,SAAU,CACNtoB,MAAO,OACP8P,QAAS,IAEbyY,QAAS,CACL1Y,SAAU,WACV7P,MAAO,OACPrB,OAAQ,OACRmR,QAAS,IAEb5E,SAAU,CACNtM,WAAY,GACZoB,MAAO,IACPrB,OAAQ,IACRQ,cAAe,GACfS,gBAAiB,SAErBX,QAAS,CACLC,SAAU,GACVI,MAAO,UACPV,UAAW,GACXuM,OAAQ,GAEZuK,QAAS,CACLlG,YAAa,GACbxP,MAAO,QAEXwoB,YAAa,CACT1pB,KAAM,EACNkB,MAAO,QAEXyoB,QAAS,CACLvpB,SAAU,IAEdwpB,QAAS,CACL3pB,WAAY,SACZC,aAAc,SACdgB,MAAO,U,qkBCpCA,SAASyQ,KAAc,IAAD,IACjC,EAAgC7I,mBAAS+gB,YAAU,OAAS,KAA5D,WAAOzjB,EAAP,KACA,GADA,KAC4B0C,sBAA5B,WAAOT,EAAP,KAAeyhB,EAAf,KACA,EAAgChhB,qBAAhC,WAAO5E,EAAP,KAAiB+G,EAAjB,KACA,EAAkCnC,oBAAS,GAA3C,WAAOoE,EAAP,KAAkBC,EAAlB,KAEMxK,EAAWC,cACXc,EAAK,SAAGoK,oBAAH,EAAG,EAAepK,MACvBhH,GAAY,MAALgH,OAAA,EAAAA,EAAOhH,OAAQ,KAEtBwI,EAAe7J,EAAQ,KACvB0uB,EAAW1uB,EAAQ,KAEzB0S,qBAAU,W9CuCP,IAAiBzK,K8CtCD8C,EAAS9C,G9CuCrBlI,GAAGc,UAAU,CAAEiL,IAAK7D,K8CtClB9G,MAAK,SAAC0B,GAAY,IAAD,EACTA,GAA6B,KAAb,MAANA,OAAA,EAAAA,EAAQ5B,SACnBqG,EAAS,SAEbmnB,EAAU5rB,EAAO,IACjB+M,EAAW,SAAC/M,EAAO,SAAR,EAAC,EAAWgG,UACvBiJ,GAAa,MAEhBxE,OAAM,SAACvM,GACJyK,QAAQ+B,IAAIxM,GACZuG,EAAS,QAAS,CACde,MAAO,CAAEvH,SAAQ,MAAEuH,OAAF,EAAEA,EAAOvH,SAAUO,KAAMA,QAGtD,IAMMyR,EAAcC,IAAYC,iBAC5B,qBAPe,WAIf,OAHA1L,EAAS,QAAS,CACde,MAAO,CAAEvH,SAAQ,MAAEuH,OAAF,EAAEA,EAAOvH,SAAUO,KAAMA,MAEvC,KAMX,OAAO,kBAAMyR,EAAYG,YAC1B,IAEH,IAAM0b,EAAQ,SACPC,MADO,IAEVC,OAAO,SACAD,KAAaC,QADd,IAEFC,WAAY,kBAIpB,OAAIjd,EAEI,cAAC0B,EAAA,EAAD,CACIpO,MAAO,OACP8J,KAAM,QACN5L,MAAO,CAAEoB,UAAW,OAK5B,qCACI,eAAC6F,EAAA,EAAD,CAAMjH,MAAOmH,GAAO9F,UAApB,UACI,cAAC,EAAD,CACImF,aAAcA,EACdM,YAAaI,KACbX,YAAaY,GAAO0jB,UACpB9jB,WAAYI,GAAOuG,SACnBjH,MAAM,EACNE,UAAU,IAEd,cAAC,IAAD,CAAM3G,MAAOmH,GAAO1F,QAApB,UACK,SAAAkT,GAAe3W,SAAf,IAAsBsF,MAAMkC,KAAa,UAGlD,cAAC,IAAD,CAAS1D,MAAO,OAAQU,MAAO,EAAGxC,MAAOmH,GAAO+Q,UAEhD,eAACjR,EAAA,EAAD,CAAMjH,MAAO,CAAEsB,KAAM,GAArB,UACI,cAAC2F,EAAA,EAAD,CAAMjH,MAAO,CAAEsB,KAAM,EAAG+Q,SAAU,YAAlC,SACI,cAAC,EAAD,CACI7L,aAAc6kB,EACdvkB,YAAa4kB,KACbnlB,YAAaY,GAAO2jB,SACpB/jB,WAAYI,GAAO4jB,QACnBtkB,MAAM,EACNE,UAAU,MAGlB,cAACglB,GAAA,EAAD,CAAqBC,MAAON,EAAUtrB,MAAO,CAAEiD,QAAS,KAAxD,SACI,cAACinB,GAAD,CACIlsB,KAAMA,EACNP,SAAQ,MAAEkM,OAAF,EAAEA,EAAQnE,SAClBkC,SAAUA,EAAS9C,GACnB+E,OAAQA,EACR4C,YAAaA,YCvGrCsf,aCSe,WAAgB,IAAD,IAC1B,EAA4BzhB,qBAA5B,WAAO0hB,EAAP,KAAeC,EAAf,KACA,EAAkC3hB,oBAAS,GAA3C,WAAOoE,EAAP,KAAkBC,EAAlB,KAEAY,qBAAU,WACN2c,MACD,CAACA,IAEJ,IAAIC,GAAQ,SAAAC,UAAA,IAAqBxsB,MAAM,KAAK,KAAM,KAC5C1B,EAAO,CAAC,KAAM,MAAMmoB,SAAS8F,GAASA,EAAQ,KAE9CD,EAAmBG,uBAAY,oBAAA7uB,EAAAC,OAAA,gDACjC,IACI6uB,IACF,MAAO1uB,GACLyK,QAAQC,MAAM1K,GAJe,8DAMlC,IAEG0uB,EAAY,oBAAA9uB,EAAAC,OAAA,gDACdF,IAAYS,MAAK,SAACC,GACdguB,EAAUhuB,GACV0Q,GAAa,MAHH,6DAOlB,OACI,eAACxH,EAAA,EAAD,CAAMjH,MAAO,CAAEsB,KAAM,GAArB,UACI,cAAC+qB,EAAA,EAAD,CAAWC,QAAQ,IAClB9d,EACG,cAAC,GAAD,CACIxO,MAAO,CAAEsB,KAAM,EAAGC,WAAY,UAC9BjC,KAAI,SAAEitB,EAAcvuB,SAAhB,EAAE,EAAqBmB,gBAG/B,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIqtB,OAAK,EACLzf,KAAK,IACL0f,QACI,cAAC,GAAD,CACItvB,gBAAe,MAAE2uB,OAAF,EAAEA,EAAQ3uB,gBACzBa,KAAMA,EACNP,SAAQ,MAAEquB,OAAF,EAAEA,EAAQruB,aAI9B,cAAC,IAAD,CACI+uB,OAAK,EACLzf,KAAK,YACL0f,QAAS,cAAC3rB,GAAD,CAAgB9C,KAAMA,MAEnC,cAAC,IAAD,CACIwuB,OAAK,EACLzf,KAAK,QACL0f,QACI,cAACle,GAAD,CACIpR,gBAAe,MAAE2uB,OAAF,EAAEA,EAAQ3uB,gBACzBa,KAAMA,EACNP,SAAQ,MAAEquB,OAAF,EAAEA,EAAQruB,aAI9B,cAAC,IAAD,CACIsP,KAAK,kBACL0f,QAAS,cAAC,GAAD,mB","file":"static/js/app.ae727386.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading_brain.ef5884d9.gif\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.ede08671.png\";","module.exports = __webpack_public_path__ + \"static/media/2.b87932e3.png\";","module.exports = __webpack_public_path__ + \"static/media/3.3ed4e762.png\";","module.exports = __webpack_public_path__ + \"static/media/4.80535fcd.png\";","module.exports = __webpack_public_path__ + \"static/media/5.da0bedf3.png\";","module.exports = __webpack_public_path__ + \"static/media/6.7911d645.png\";","module.exports = __webpack_public_path__ + \"static/media/swipe-right.6dde9c7c.gif\";","module.exports = __webpack_public_path__ + \"static/media/brain.70fc8c58.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.097ce51b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.348cd96d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.5d28b463.gif\";","module.exports = __webpack_public_path__ + \"static/media/sad.bfdab12f.gif\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e82f415e.gif\";","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n}\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n}\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n}\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n}\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n}\n\nexport function reset() {\n    return AsyncStorage.clear();\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retourner sur le formulaire',\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet requise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? C'est possible, le partage est réalisable entre deux appareils par {0} !\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can share data between two devices with {0} technology!\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer ${0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 40,\n        borderColor: 'gray',\n        borderRadius: 20,\n        paddingHorizontal: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        elevation: 2,\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n    },\n    buttonText: {\n        paddingTop: 10,\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to produce today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text, Platform } from 'react-native';\nimport { Button, Image } from 'react-native-elements';\nimport Lottie from '../../../components/utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/home/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/home/addedUser.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <Button\n                title={InterfaceLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        el.id = uuidv4();\n        el.score = [{personId: personId, success: 0, failed: 0}];\n        if (['audio', 'image'].includes(el.fileType)) {\n            const filename = `${uuidv4()}${el.fileType == 'audio' ? '.m4a' : '.png'}`;\n            const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n            await FileSystem.copyAsync({\n                from: el.uri,\n                to: `${path}${filename}`\n            });\n            await FileSystem.deleteAsync(el.uri);\n            el.uri = `${path}${filename}`;\n        }\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport async function updateScore(personId, quizId, contentId, success) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    const contentIndex = quiz[0].content.findIndex(el => el.id == contentId );\n    const scoreIndex = quiz[0].content[contentIndex].score.findIndex(el => el.personId = personId);\n    if (success) quiz[0].content[contentIndex].score[scoreIndex].success++\n    else quiz[0].content[contentIndex].score[scoreIndex].failed++\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function deleteId(personId, quizId) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n};\n\nexport async function deleteQuestion(quizId, questionId) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    const content = quiz[0].content;\n    const contentIndex = content.findIndex(el => el.id == questionId );\n    if (['audio', 'image'].includes(content[contentIndex]))\n        await FileSystem.deleteAsync(content.uri);\n    quiz[0].content = content.splice(0, contentIndex);\n    return db.updateAsync({_id: quizId}, {...quiz[0]})\n};\n\nexport async function getById(quizId) {\n    return db.findAsync({ _id: quizId }, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n};\n\nexport async function reset() {\n    return db.removeAsync({}, { multi: true });\n};\n","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nexport const randomArrayElement = (exclude, min, max) => {\n    randNumber = randomNumber(min, max);\n    if (randNumber == exclude)\n        return randomArrayElement(exclude, min, max);\n    return randNumber;\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\nimport { db as QuizDB } from './quizApi'\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return db.removeAsync({ _id: id });\n};\n\nexport async function reset() {\n    return FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(async res => {\n        await SimonDB.removeAsync({}, { multi: true });\n        await QuizDB.removeAsync({}, { multi: true });\n        await DictaphoneDB.removeAsync({}, { multi: true });\n        return db.removeAsync({}, { multi: true });\n    });\n};","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0)\n                personId = result._id;\n            await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${personId}`, {intermediates: true})\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    wrapper: {\n        marginTop: 100,\n        textAlign: 'center',\n        alignItems: 'center',\n    },\n    topImage: {\n        flex: 1,\n        width: 80,\n        marginTop: -270,\n    },\n    heading: {\n        marginTop: -190,\n        fontSize: 20,\n        zIndex: 2,\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: '#3B8EFF',\n    },\n    subtitle: {\n        textAlign: 'center',\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: 10,\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1,\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Text,\n    View,\n    Image,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    BackHandler,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input } from 'react-native-elements';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport LoadingBrain from '../../assets/img/home/loading_brain.gif';\nimport { lang as HomeLang } from '../../language/home';\nimport Rows from '../../components/home/Rows';\nimport CreatePerson from '../../components/home/PersonCreation/CreatePerson';\n\nimport * as Person from '../../data/personApi';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        HomeLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const swiper = useRef(null);\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n\n    useEffect(() => {\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - index, true);\n    };\n\n    const changeIndex = (idx) => {\n        setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                setBtnTxt(HomeLang[lang].AddAPerson);\n            } else if (idx === 1) {\n                setBtnTxt(HomeLang[lang].ReturnToList);\n            }\n            setActive(true);\n        }, 400);\n    };\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.wrapper}>\n                <Image\n                    source={LoadingBrain}\n                    resizeMode=\"contain\"\n                    style={styles.topImage}\n                />\n                <Text style={styles.heading}>\n                    {HomeLang[lang].Hello(username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{HomeLang[lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (active === false) {\n                            return;\n                        }\n                        setActive(false);\n                        setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={HomeLang[lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    setSearch(e);\n                                }}\n                                value={search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {persons && persons.length > 0 ? (\n                                printRows(persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {HomeLang[lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={persons}\n                                setPersons={setPersons}\n                                lang={lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    TouchableOpacity,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername, SawTutorial } from '../../data/configApi';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\nimport Home from '../Home';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [confirmed, setConfirmed] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            setUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <TouchableOpacity\n                        style={styles.button}\n                        activeOpacity={0.5}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                    >\n                        <Text style={styles.buttonText}>\n                            {' '}\n                            {isLoading ? (\n                                <ActivityIndicator\n                                    color=\"white\"\n                                    size=\"small\"\n                                    animating={true}\n                                />\n                            ) : (\n                                'OK'\n                            )}\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        );\n    } else {\n        return <Home username={input} lang={props.lang} />;\n    }\n}\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    slideOdd: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#C8EEFF',\n    },\n    title: {\n        color: 'black',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center',\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center',\n    },\n    image: {\n        flex: 3,\n        width: 100 + '%',\n        height: 400,\n    },\n    buttonContainer: {\n        flex: 2,\n        marginTop: -40,\n    },\n    button: {\n        marginTop: 10,\n        paddingTop: 15,\n        paddingBottom: 15,\n        marginLeft: 30,\n        marginRight: 30,\n        backgroundColor: '#00BCD4',\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: '#fff',\n    },\n    buttonText: {\n        color: '#fff',\n        textAlign: 'center',\n    },\n});\n","import React, { useEffect } from 'react';\nimport { Text, View, Image, TouchableOpacity } from 'react-native';\n\nimport { Link } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport SwipeImage from '../../assets/img/tutorial/swipe-right.gif';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport Lottie from '../../components/utils/Lottie';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\nimport Home from '../Home';\n\nexport default function Tutorial(props) {\n    const LottieSource = require('../../assets/lottie/swipe-right.json');\n\n    useEffect(() => {\n        Config.getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    return <Home username={res} lang={props.lang} />;\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SwipeImage}\n                LottieStyle={{\n                    position: 'absolute',\n                    height: 80,\n                    marginTop: 280,\n                    marginLeft: 80,\n                    opacity: 0.8,\n                }}\n                ImageStyle={{\n                    position: 'absolute',\n                    height: 80,\n                    marginTop: 280,\n                    marginLeft: 80,\n                    opacity: 0.8,\n                }}\n            />\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Link\n                            to=\"/username\"\n                            component={TouchableOpacity}\n                            style={styles.button}\n                            onPress={(e) => {\n                                Config.SawTutorial(true);\n                            }}\n                            activeOpacity={0.5}\n                        >\n                            <Text style={styles.buttonText}>\n                                {' '}\n                                {TutorialLang[props.lang].LastStepButton}{' '}\n                            </Text>\n                        </Link>\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} />;\n    }\n    return <Home lang={props.lang} username={props.username} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#5EA1E4',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { ScrollView, Alert, SafeAreaView, View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/home/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\n\nimport styles from './styles';\nimport Form from '../../../components/home/PersonCreation/Form';\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname(props.person.fullname);\n        setUriPreview(props.person.picture);\n        setImage('');\n        setDescription(props.person.description);\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    const debug = async () => {\n        await Person.reset();\n        await AsyncStorage.clear();\n        navigate('/home');\n        return true;\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/home');\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.username),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: 'bluetooth',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ShareProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/home');\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'bug',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDebug}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ResetAccount}\n                        onPress={debug}\n                    />\n                </ScrollView>\n            ) : (\n                <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => setEdit(false)}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </ScrollView>\n            )}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync();\n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const goBack = async () => {\n        await recording?.stopAndUnloadAsync();\n        stopPlayingSounds();\n        props.setPage(0);\n    }\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            el.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                    <Button\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'caret-back-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        buttonStyle={styles.recordButton}\n                        title={{}}\n                        titleStyle={styles.titleButton}\n                        onPress={() => goBack()}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <View style={styles.actionButtonsView}>\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n                <Button\n                    containerStyle={styles.actionButtons}\n                    icon={{\n                        name: 'caret-back-outline',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={{}}\n                    titleStyle={styles.titleButton}\n                    onPress={() => goBack()}\n                />\n                </View>\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Aide',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated:\n            \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        flex: 1,\n        width: 250,\n        height: 250,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        flex: 1,\n        width: 50,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'help-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate);\n        setCanPlay(false);\n        setSuccess(true);\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            {success ? (\n                <Overlay\n                    visible={success}\n                    overlayStyle={styles.overlayStyle}\n                    onBackdropPress={() => setSuccess(false)}\n                    ModalComponent={Modal}\n                >\n                    {scoreBeaten ? successOverlay() : failOverlay()}\n                    <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                        <Button\n                            raised\n                            onPress={() => {\n                                retryGame();\n                            }}\n                            title={SimonLang[props.lang].Retry}\n                            containerStyle={{\n                                borderRadius: 13,\n                                marginRight: 10,\n                            }}\n                        />\n                        <Button\n                            raised\n                            onPress={() => {\n                                props.setTab(0);\n                            }}\n                            title={SimonLang[props.lang].Exit}\n                            containerStyle={{ borderRadius: 13 }}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                        />\n                    </View>\n                </Overlay>\n            ) : (\n                <></>\n            )}\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Text>Tab 2 (Help)</Text>;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr, pos) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: i == pos ? color : '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'Ratio de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Abandonner le quiz\",\n        GiveUpQuiz: \"Êtes-vous sûr de vouloir abandonner ce quiz? Le score restera enregistré.\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Bien joué !! 😄\",\n        Success: \"Bien joué ! C'est la bonne réponse !! Vous pouvez maintenant passer à la suite !\",\n        FailedTitle: \"Dommage... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Dommage, mais ce n'était pas la bonne réponse ! Les réponses possibles étaient: ${answersText}.`\n        },\n        SuccessQuizTitle: \"Haut la main !\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Fantastique !! Vous avez réussi ce quiz ! Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Dommage... Vous avez raté ce quiz ! ... Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Sauvegarder le quiz',\n        SaveContent: \"Sauvegarder la question\",\n        AddContent: \"Ajouter la question\",\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quiz',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'Success ratio',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Give up\",\n        GiveUpQuiz: \"Are you sure to give up this quiz? The score will be saved.\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Well played!! 😄\",\n        Success: \"Well played! That's the good answer!! You can now go to the next question!\",\n        FailedTitle: \"Oops... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Oops, that's not a valid answer... the valid answer${answers.length > 0 ? 's were' : ' was'} : ${answersText}.`\n        },\n        SuccessQuizTitle: \"Easy peasy!\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Congratulations!! You won this quiz! Your score is for {0} good answer(s) for {1} mistake!',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: \"It's alright... You failed this quiz!... Your score is for {0} good answer(s) for {1} mistake!\",\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Save the quiz',\n        SaveContent: \"Save the question\",\n        AddContent: \"Add the question\",\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: 235,\n        marginTop: 20,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: 235,\n        marginTop: 10,\n        backgroundColor: 'blue',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: 30,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    modalDescription: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: 290,\n        marginTop: 10\n    },\n    quizTitleInput: {\n        fontSize: 15\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 50\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        width: 250\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: 250,\n        height: 250\n    },\n    gameQuestion: {\n        fontSize: 25,\n        marginTop: 10,\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey'\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15\n    }\n});\n","import React from 'react';\nimport { Image, ActivityIndicator } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            <Button\n                title={props.isLoading ? <ActivityIndicator color={'blue'} size={'small'} /> : QuizLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n                disabled={props.quiz.length === 0}\n            />\n\n            <Button\n                title={QuizLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'help-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import {\n    View,\n    Image\n} from 'react-native';\nimport { Icon, FAB, Avatar } from 'react-native-elements';\nimport { Audio } from 'expo-av';\n\nexport const printFile = (fileType, uri, clearFile, isPlaying, pauseSound, setIsPlaying, sound, setSound) => {\n    if (fileType === 'image') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Image source={{uri: uri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n            </View>\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 100, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Icon onPress={() => isPlaying ? pauseSound() : playSound(setIsPlaying, sound, setSound, uri) } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30, zIndex: 2}} />\n            </View>\n        );\n    }\n};\n\nexport const playSound = async (setIsPlaying, sound, setSound, uri) => {\n    setIsPlaying(true);\n    await Audio.setAudioModeAsync({\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n    });\n    const getSoundStatus = await sound?.getStatusAsync();\n    if (getSoundStatus?.isLoaded === false) {\n        await sound.loadAsync({ uri: uri });\n        setSound(sound);\n    }\n    await sound.playAsync();\n    sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n        if (playbackStatus.didJustFinish) {\n            await sound.unloadAsync();\n            setIsPlaying(false);\n        }\n    });\n};\n\nexport const pickCorrectIcon = (fileType, uri) => {\n    if (fileType === 'image') {\n        return (\n            <Avatar\n                source={{ uri: uri }}\n                rounded\n                size={'medium'}\n                containerStyle={{marginHorizontal: 8}}\n            />\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <Icon\n                raised\n                name={'musical-notes-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    } else {\n        return (\n            <Icon\n                raised\n                name={'text-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    }\n};","import React, { useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nimport * as API from '../../../../data/quizApi';\n\nimport { pickCorrectIcon } from '../utils/quizFunc';\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n\n    const length = props.quizEdit?.content?.length + props.newContent?.length;\n\n    const pickOutQuestion = () => {\n        if (length <= 2 && props.quizEdition) return;\n        if (props.quizEdition === true) {\n            if (Number.isInteger(props.questionId)) {\n                // if the questionId is an integer, it means it has not\n                // been added to the api yet, so it's an index of the\n                // newContent array passed in the props from the ViewQuiz Component\n\n                const index = props.questionId - props.quizEdit?.content?.length;\n                const tmp = props.newContent;\n                tmp.splice(index, 1);\n                // take out the new content from the newContent state in the\n                // parent component\n                props.setNewContent([...tmp]);\n\n            } else {\n                // todo not get by api but update quizedit state\n                // update api only when saving quiz\n                const index = props.quizEdit.content.findIndex(el => el.id == props.questionId );\n                const tmp = props.quizEdit;\n                tmp.content.splice(index, 1);\n                props.setQuizEdit(tmp);\n                props.setReload(!props.reload)\n                props.setEditedQuiz(true);\n            }\n        } else {\n            const tmp = props.quizEdition ? props.content : props.contentList;\n            tmp.splice(props.index, 1)\n            props.setContent([...tmp]);\n        }\n        setModal(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{ marginRight: 10 }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={{ fontWeight: 'bold' }}\n                    onPress={() => pickOutQuestion() }\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { console.log(true) }} >\n                { pickCorrectIcon(props.content.fileType, props.content.uri) }\n                <ListItem.Content>\n                    <ListItem.Title>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon disabled={props.quizEdition == true && length <= 2} reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","export function ScoreRatio (content, personId) {\n    var success = 0;\n    var fail = 0;\n    content.map( (el, i) => {\n        const score = el.score.filter( (el) => el.personId == personId );\n        score.map( (el, i) => {\n            success += parseInt(el.success);\n            fail += parseInt(el.failed);\n        });\n    });\n    const total = success + fail;\n    return (success / (total));\n};","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport { ScoreRatio } from './utils/scoreFunc';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n\n    return (\n        <ListItem {...componentProps} onPress={() => {\n                props.setEdit(true);\n                props.setQuizEdit(props.quiz);\n            }}>\n            <ListItem.Content>\n                <ListItem.Title>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    {ScoreRatio(props.quiz.content, props.personId) || 1}{' '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Text,\n    ScrollView,\n} from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport QuizList from './QuizList';\nimport styles from './styles';\n\nimport * as API from '../../../data/quizApi';\n\nexport default function ViewQuizList(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <ScrollView>\n            {props.loading ? (\n                <ActivityIndicator\n                    color={'blue'}\n                    size={'small'}\n                    style={styles.loading}\n                />\n            ) : props.quiz?.length > 0 ? (\n                props.quiz?.map((el, i) => {\n                    return (\n                        <QuizList\n                            index={i}\n                            key={el._id}\n                            quiz={el}\n                            lang={props.lang}\n                            deleteId={deleteId}\n                            personId={props.personId}\n                            setEdit={props.setEdit}\n                            setQuizEdit={props.setQuizEdit}\n                        />\n                    );\n                })\n            ) : (\n                <Text style={styles.nothingYet}>\n                    {QuizLang[props.lang].NothingYet}\n                </Text>\n            )}\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/activities/quiz/success.gif';\n\nimport styles from './styles';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge, FAB } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContent(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <ScrollView contentContainerStyle={styles.ScrollView}>\n                { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                <Button\n                    title={QuizLang[props.lang].ImportFile}\n                    buttonStyle={{ borderRadius: 15 }}\n                    onPress={pickFile}\n                />\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].ReferenceFile}\n                </Text>\n                <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                    <Input\n                        value={props.question}\n                        inputStyle={{fontSize: 14}}\n                        containerStyle={{marginBottom: 50}}\n                        placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                        onChangeText={(e) => props.setQuestion(e)}\n                    />\n                    <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                    <Input\n                        placeholder={QuizLang[props.lang].AddAnswer}\n                        inputStyle={{fontSize: 14}}\n                        value={answer}\n                        onChangeText={(e) => setAnswer(e)}\n                    />\n                    <Button\n                        icon={\n                            <Icon\n                                name={'add-circle'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={18}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => addAnswer()}\n                        disabled={props.answers.length >= 10}\n                    />\n                    </View>\n                </View>\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].WhatIsAnswer}\n                </Text>\n                <View style={styles.badgesView}>\n                    {props.answers.map( (el, i) => {\n                        return(\n                            <Badge\n                                key={i}\n                                value={el}\n                                badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                onPress={() => pickOutAnswer(i)}\n                            />\n                        )\n                    })}\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Text,\n    SafeAreaView,\n    ScrollView\n} from 'react-native';\nimport { Button, Icon, Divider, FAB } from 'react-native-elements';\n\nimport QuestionList from './Creation/QuestionList';\nimport ViewQuizList from './ViewQuizList';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport FormQuizContent from './Creation/FormQuizContent';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n    // if the user is editing or not an existing quiz\n    const [edit, setEdit] = useState(false);\n\n    // if the user want to add a question to an existing quiz\n    const [newQuestion, setNewQuestion] = useState(false);\n\n    // the existing quiz to edit\n    const [quizEdit, setQuizEdit] = useState();\n\n    // the new content to add in an existing quiz\n    const [newContent, setNewContent] = useState([]);\n\n    // check if something has been edited\n    const [editedQuiz, setEditedQuiz] = useState(false);\n\n    // the states for the quiz edition (add / edit question)\n    const [question, setQuestion] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n    const [reload, setReload] = useState(false);\n\n    useEffect( () => {\n        console.log('---- reloaded list ----');\n    }, [reload]);\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const push = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setNewContent([...newContent, push]);\n        setEditedQuiz(true);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const viewPage = () => {\n        if (newQuestion) { // if the user wants to set a new question for quiz edition\n            return (<FormQuizContent\n                        lang={props.lang}\n                        setAnswers={setAnswers}\n                        setFileType={setFileType}\n                        setQuestion={setQuestion}\n                        setUri={setUri}\n                        setFilename={setFilename}\n                        setSuccess={setSuccess}\n                        setSound={setSound}\n                        setIsPlaying={setIsPlaying}\n                        pauseSound={pauseSound}\n                        uri={uri}\n                        filename={filename}\n                        answers={answers}\n                        fileType={fileType}\n                        question={question}\n                        success={success}\n                        sound={sound}\n                        isPlaying={isPlaying}\n                />);\n        } else if (edit && !newQuestion) {\n             // if the user want to see all the question for the quiz edition\n            return (quizEdit.content)?.concat(newContent)?.map((el, i) => {\n                return (<QuestionList\n                    index={i}\n                    key={i}\n                    id={quizEdit._id || 0}\n                    quizEdit={quizEdit}\n                    newContent={newContent}\n                    content={el}\n                    lang={props.lang}\n                    questionId={el.id || i}\n                    setQuizEdit={setQuizEdit}\n                    setNewContent={setNewContent}\n                    quizEdition={true}\n                    reload={reload}\n                    setReload={setReload}\n                    setEditedQuiz={setEditedQuiz}\n                />);\n            })\n        } else {\n             // if the user want to see all the existing quiz for the quiz edition\n            return (<ViewQuizList\n                quiz={props.quiz}\n                loading={props.loading}\n                lang={props.lang}\n                personId={props.personId}\n                setEdit={setEdit}\n                setQuizEdit={setQuizEdit}\n                setReload={props.setReload}\n            />);\n        }\n    };\n\n    const goBack = () => {\n        if (newQuestion)\n            setNewQuestion(false);\n        else if (edit)\n            setEdit(false);\n        else\n            props.setTab(0);\n    };\n\n    const buttonTop = (mode) => {\n        if (newQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].AddContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return pushContent();\n        } else if (edit) {\n            // save the quiz button\n            if (mode == 'title') return QuizLang[props.lang].Save;\n            else if (mode == 'disabled') return !(editedQuiz);\n            else if (mode == 'onpress') return pushContent();\n        } else {\n            // create a quiz button\n            if (mode == 'title') return QuizLang[props.lang].Create;\n            else if (mode == 'disabled') false;\n            else if (mode == 'onpress') return props.setTab(4);\n        }\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={edit ? 'save-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        buttonTop('onpress')\n                    }}\n                    disabled={ buttonTop('disabled') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => goBack() }\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                {\n                    edit && !newQuestion ?\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setNewQuestion(true) }\n                    /> : <></>\n                }\n                <ScrollView style={{marginBottom: 40}}>\n                { viewPage() }\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContent from './FormQuizContent';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\nimport { Audio } from 'expo-av';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [disable, setDisable] = useState(true);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect( () => {\n        if (answers?.length > 0 && question) {\n            setDisable(false);\n        } else {\n            setDisable(true);\n        }\n    }, [answers, question]);\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name,\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button containerStyle={{ marginTop: 10, width: 40 }} title={{}} icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    } disabled={name?.length < 3 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={createQuestion ? QuizLang[props.lang].OK : QuizLang[props.lang].Complete}\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ (createQuestion && disable) || (!createQuestion && content?.length < 2) ? true : false}\n                    onPress={() => {\n                        pauseSound();\n                        if (createQuestion) pushContent();\n                        else setModal(true);\n                    }}\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        pauseSound();\n                        createQuestion ? setCreateQuestion(false) : props.setTab(2)\n                    }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n                {createQuestion === true ?\n                <FormQuizContent\n                    /* Form to create a quiz */\n                    lang={props.lang}\n                    setAnswers={setAnswers}\n                    setFileType={setFileType}\n                    setQuestion={setQuestion}\n                    setUri={setUri}\n                    setFilename={setFilename}\n                    setSuccess={setSuccess}\n                    setSound={setSound}\n                    setIsPlaying={setIsPlaying}\n                    pauseSound={pauseSound}\n                    uri={uri}\n                    filename={filename}\n                    answers={answers}\n                    fileType={fileType}\n                    question={question}\n                    success={success}\n                    sound={sound}\n                    isPlaying={isPlaying}\n                /> :\n                <SafeAreaView style={styles.safeArea}>\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setCreateQuestion(true)}\n                    />\n                    <ScrollView style={{marginBottom: 40}}>\n                        {props.loading ? (\n                            <ActivityIndicator\n                                color={'blue'}\n                                size={'small'}\n                                style={styles.loading}\n                            />\n                        ) : content?.length > 0 ? (\n                            content?.map((el, i) => {\n                                return (\n                                    <QuestionList\n                                        index={i}\n                                        key={i}\n                                        content={el}\n                                        lang={props.lang}\n                                        setContent={setContent}\n                                        contentList={content}\n                                    />\n                                );\n                            })\n                        ) : (\n                            <Text style={styles.nothingYet}>\n                                {QuizLang[props.lang].NoQuestionYet}\n                            </Text>\n                        )}\n                    </ScrollView>    \n                </SafeAreaView>\n            }\n        </>\n    );\n}\n","import React from 'react';\nimport { Text, Button, Icon, FAB } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif');\n    return (\n    <>\n        { props.quizLength > 1 ? <FAB\n            style={{marginTop: 140, position: 'absolute', zIndex: 10}}\n            containerStyle={{marginLeft: 120}}\n            size=\"small\"\n            icon={{name: 'repeat-sharp', type: 'ionicon', color:'white' }}\n            onPress={() => props.pickRandomQuizz()}\n        /> : <></> }\n        <Lottie LottieSource={ThinkingLottie} ImageSource={ThinkingImage} LottieStyle={{marginTop: -25, height: 250, marginBottom: -30}} />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButton}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            buttonStyle={{ backgroundColor: 'red' }}\n            containerStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, Alert, View, Modal } from 'react-native';\nimport { Text, Image, Input, Button, Icon, Overlay } from 'react-native-elements';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../../assets/img/activities/sad.gif';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport Lottie from '../../../utils/Lottie';\nimport { Audio } from 'expo-av';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n    const [modal, setModal] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const [success, setSuccess] = useState(0);\n    const [fail, setFail] = useState(0);\n    const [confetti, setConfetti] = useState(false);\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const TrophyLottie = require('../../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../../assets/lottie/sad.json');\n\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const stopSound = async () => {\n        await pauseSound();\n        setSound(new Audio.Sound());\n        await sound?.unloadAsync();\n    }\n\n    const playSound = async () => {\n        setIsPlaying(true);\n        await Audio.setAudioModeAsync({\n            staysActiveInBackground: true,\n            shouldDuckAndroid: true,\n        });\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus?.isLoaded === false) {\n            await sound.loadAsync({ uri: game[current].uri });\n            setSound(sound);\n        }\n        await sound.playAsync();\n        sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n            if (playbackStatus.didJustFinish) {\n                await sound.unloadAsync();\n                setIsPlaying(false);\n            }\n        });\n    };\n\n    const setMediaType = () => {\n        if (!game[current]) return;\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <Icon onPress={() => isPlaying ? pauseSound() : playSound() } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30}} />\n            default:\n                return <></>;\n        }\n    };\n\n    const openAlertResultQuestion = (result) => {\n        return (\n            Alert.alert(\n                result ? QuizLang[props.lang].SuccessTitle : QuizLang[props.lang].FailedTitle,\n                result ? QuizLang[props.lang].Success : QuizLang[props.lang].Failed(game[current].answers),\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            if (current + 1 <= game.length - 1)\n                                setCurrent(current + 1);\n                            else {\n                                if (success >= fail) setConfetti(true);\n                                setModal(true);\n                            }\n                        },\n                    }\n                ]\n            )\n        )\n    };\n\n    const answerQuestion = async () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        stopSound();\n        setAnswer('');\n        const result = game[current].answers.includes(answerTrimedLowercase);\n        if (result === false) {\n            // increment the fail and update the API\n            setFail(fail + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, false);\n        } else {\n            // increment the success and update the API\n            setSuccess(success + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, true)\n        }\n        openAlertResultQuestion(result);\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                {confetti && success >= fail ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n                )}\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => props.setTab(0)}\n                    ModalComponent={Modal}\n                >\n                    {success >= fail ? \n                        <>\n                            <Lottie LottieSource={TrophyLottie} ImageSource={TrophyImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} loop={false} />\n                            <Text style={{color:'blue', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].SuccessQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].SuccessQuiz(fail, success)}</Text>\n                        </>\n                    :\n                        <>\n                            <Lottie LottieSource={SadLottie} ImageSource={SadImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} />\n                            <Text style={{color:'red', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].FailQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].FailQuiz(fail, success)}</Text>\n                        </>\n                    }\n                    <Button title={QuizLang[props.lang].Leave} onPress={() => props.setTab(0)} containerStyle={styles.leaveButton} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </Overlay>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button buttonStyle={styles.buttonQuizGameOK} title={QuizLang[props.lang].OK} onPress={() => { answerQuestion() }} />\n                </View>\n            </>\n        }\n    </>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\n// This component is mounted when the user clicks on 'Play' in the main quiz menu\nexport default function Play(props) {\n    const [play, setPlay] = useState(false);\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quizId={props.quiz._id}\n                personId={props.personId}\n                quiz={props.quiz.content}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n                quizLength={props.quizLength}\n            />\n        }\n    </View>);\n};","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler, Alert } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber, randomArrayElement } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Creation/CreateQuiz';\nimport Play from './Play';\n\nimport * as API from '../../../data/quizApi';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1) {\n                    Alert.alert(\n                        QuizLang[props.lang].GiveUpQuizTitle,\n                        QuizLang[props.lang].GiveUpQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    setTab(0);\n                                }\n                            },\n                        ]\n                    )\n                }\n                else setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            let rand = randomArrayElement(random, 0, quiz.length - 1);\n            setRandom(rand);\n        }\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    isLoading={isLoading}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                quizLength={quiz.length}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Text>Tab 3 (Help?)</Text>;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    setReload={setReload}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return <View style={styles.view}>{printPage()}</View>;\n}\n","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({});\n","import React from 'react';\nimport { ScrollView, Text } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport styles from './styles';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <Text>todo</Text>\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: 60, color: '#5bc0de' }],\n                tabBarLabelStyle: [{ color: '#5bc0de', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} />}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        marginBottom: 20,\n        width: 100 + '%',\n        backgroundColor: 'white',\n    },\n    topLottie: {\n        marginTop: -20,\n        width: 200,\n        height: 200,\n        marginBottom: -90,\n    },\n    bgLottie: {\n        width: 100 + '%',\n        opacity: 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: 100 + '%',\n        height: 100 + '%',\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: 'white',\n    },\n    heading: {\n        fontSize: 24,\n        color: '#3B8EFF',\n        marginTop: 10,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport SuccessImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/home');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/home', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/home', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={SuccessImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport Home from './pages/Home';\nimport Activities from './pages/Activities';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    let local = Localization.locale?.split('-')[0] || 'fr';\n    const lang = ['en', 'fr'].includes(local) ? local : 'fr';\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={\n                                <Home\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}