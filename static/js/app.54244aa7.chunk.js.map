{"version":3,"sources":["assets/img/activities/trophy.gif","assets/img/activities/help/question_mark.gif","assets/img/activities/brain.gif","assets/img/interface/profile.jpg","assets/img/activities/sad.gif","assets/sound/global/applause.mp3","assets/sound/global/you_lose.mp3","assets/sound/simon/green.mp3","assets/img/alzheimapp_logo.png","assets/img/username/chooseusername.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/tutorial/swipe-right.gif","assets/img/selection/addedUser.gif","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/quiz/logo.png","assets/img/activities/quiz/success.gif","assets/img/activities/double/logo.png","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","assets/img/activities/quiz/thinking.gif","assets/sound/double/ambiant.mp3","assets/sound/double/success.mp3","assets/sound/double/fail.mp3","assets/sound/double/play.mp3","assets/sound/double/next.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","language/home/index.js","pages/Home/styles.js","pages/Home/index.js","pages/ChooseUsername/styles.js","pages/ChooseUsername/index.js","components/utils/Lottie.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","components/utils/HomeOrTutorial.js","language/selection/index.js","components/selection/Rows.js","components/selection/styles.js","components/selection/PersonCreation/Success.js","data/dictaphoneApi.js","data/simonApi.js","data/quizApi.js","utils/helpers.js","data/personApi.js","components/selection/PersonCreation/Form.js","components/selection/PersonCreation/CreatePerson.js","pages/SelectionMenu/styles.js","pages/SelectionMenu/index.js","language/activities/index.js","utils/dilacrypt.js","data/doubleApi.js","utils/share.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/Help.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/utils/quizFunc.js","components/activities/Quiz/Creation/QuestionList.js","components/activities/Quiz/utils/scoreFunc.js","components/activities/Quiz/QuizList.js","components/activities/Quiz/ViewQuizList.js","components/activities/Quiz/SuccessContent.js","components/activities/Quiz/Creation/FormQuizContent.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Creation/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/Help.js","components/activities/Quiz/index.js","language/activities/double/index.js","components/activities/Double/styles.js","components/activities/Double/Help.js","components/activities/Double/Menu.js","components/activities/Double/subs/helpers.js","components/activities/Double/subs/Card.js","components/activities/Double/Play.js","components/activities/Double/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/QuizScore/index.js","pages/Activities/Score/SimonScore/index.js","pages/Activities/Score/DoubleScore/index.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","Select","Import","Introduction","Source","License","Language","StyleSheet","create","container","height","backgroundColor","alignItems","header","marginTop","textAlign","logo","width","menu","flex","marginBottom","button","color","justifyContent","buttonContainer","borderRadius","copyleft","fontSize","fontStyle","Home","props","navigate","useNavigate","state","useLocation","View","styles","Image","source","AlzheimApp","resizeMode","ScrollView","title","HomeLang","buttonStyle","titleStyle","containerStyle","icon","name","type","size","marginRight","marginLeft","raised","onPress","setLang","iconContainerStyle","prev","Linking","openURL","wrapper","alignContent","heading","marginHorizontal","description","textInput","borderColor","paddingHorizontal","shadowOpacity","shadowRadius","shadowOffset","elevation","image","buttonText","paddingTop","slide","padding","viewrow","flexDirection","flexWrap","useState","input","setInput","isLoading","setIsLoading","loadPage","setLoadPage","confirmed","setConfirmed","redirect","setRedirect","setUsername","useEffect","res","catch","console","log","backHandler","BackHandler","addEventListener","remove","parseUsername","trim","insertUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","value","placeholder","InterfaceLang","maxLength","onChangeText","e","TouchableOpacity","activeOpacity","ActivityIndicator","animating","Lottie","Platform","OS","LottieStyle","LottieSource","loop","hasOwnProperty","autoPlay","ImageSource","ImageStyle","Loading","LoadingImage","slideOdd","titleOdd","textOdd","paddingBottom","borderWidth","Tutorial","showsButtons","showsPagination","StepOne","SwipeImage","position","opacity","StepTwo","StepThree","StepFour","StepFive","StepSixth","to","component","Config","s","HomeOrTutorial","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","TouchableScale","default","mod","index","componentProps","Component","key","id","bottomDivider","picture","uri","DefaultProfilePicture","rounded","Content","Title","fullname","Subtitle","Chevron","rightButton","minHeight","imageSuccess","leftButton","view","alignSelf","marginVertical","btnImport","btnSave","profilePicture","successPageTitle","Success","SuccessImage","edit","close","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","error","createQuizContent","el","uuidv4","success","failed","includes","fileType","uploadQuizFile","path","FileSystem","from","updateScore","quizId","contentId","_id","quiz","contentIndex","content","findIndex","scoreIndex","pushErrors","errors","field","msg","randomNumber","min","max","Math","floor","random","person","Object","keys","upd","$set","Form","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","encoding","fsRead","setImage","leftIcon","label","errorStyle","renderErrorMessage","errorMessage","inputStyle","setFullname","setDescription","cb","Person","intermediates","imgName","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","zIndex","topBanner","topImage","boldtext","subtitle","overflow","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","searchBar","searchInputStyle","SelectionMenu","search","setSearch","setIndex","SelectionMenuLang","btnText","setBtnTxt","active","setActive","swiper","useRef","Audio","setIsEnabledAsync","regex","RegExp","$regex","list","LoadingBrain","idx","current","scrollBy","SafeAreaView","ref","scrollEnabled","pagingEnabled","onIndexChanged","setTimeout","inputContainerStyle","map","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","QuizScore","SimonScore","DoubleScore","NoScore","Global","BestScoreByDay","ExportedProfile","ReturnList","encrypt","string","encryptedString","j","String","fromCharCode","charCodeAt","getBestScore","insertScore","dailyScoreBeaten","globalScoreBeaten","fileToBase64","formatQuiz","formatLog","writeDataFile","fileUri","exportPerson","personAPI","personFind","personData","simonAPI","simonData","doubleAPI","doubleData","quizAPI","quizData","dictaphoneAPI","dictaphone","dictaphoneData","JSON","stringify","activities","double","simon","dilacrypt","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","load","setLoad","deletePerson","SimonDB","removeAsync","DictaphoneDB","deleted","ActivitiesLang","Sharing","disabled","Alert","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","isPlaying","setIsPlaying","progress","setProgress","Sound","sound","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","playAsync","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","unloadAsync","positionMillis","playableDurationMillis","variant","animation","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","getURI","folder","record","DictaphoneLang","Date","created","deleteRecord","goBack","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","createAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","clr","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","Head","RulesHead","TriesHead","Rules","TriesExplain","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","viewHelpPage","leaveButtonHelpPage","helpHead","helpStepHead","textTransform","helpStep","helpQuestionMark","Menu","SimonLogo","SimonLang","setTab","Game","start","setStart","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","QuestionMark","tab","pos","Create","GoBack","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","GiveUpQuizTitle","GiveUpQuiz","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","EditedQuiz","QuizListRedirection","selectedQuizz","quizName","Questions","SuccessTitle","FailedTitle","answers","join","SuccessQuizTitle","SuccessQuiz","fail","FailQuizTitle","FailQuiz","SaveContent","AddContent","SureCancelEdition","CustomHead","Custom","answersText","leaveButtonPlay","createButton","overlayDescriptionReference","ScrollViewSuccess","modalTitle","modalDescription","quizTitleInputContainer","quizTitleInput","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","QuizLogo","QuizLang","printFile","clearFile","pauseSound","playSound","QuestionList","quizEdit","newContent","quizEdition","Number","isInteger","questionId","tmp","setNewContent","setQuizEdit","setReload","reload","setEditedQuiz","contentList","setContent","pickOutQuestion","setEditContent","question","ScoreRatio","filter","parseInt","total","toFixed","QuizList","ViewQuizList","SuccessContent","FormQuizContent","answer","setAnswer","contentContainerStyle","setFileType","setFilename","setUri","DocumentPicker","mimeType","flexShrink","setQuestion","toLowerCase","setAnswers","addAnswer","badgeStyle","pickOutAnswer","ViewQuiz","newQuestion","setNewQuestion","editContent","editedQuiz","saveQuiz","concat","editedFile","buttonTop","mode","saveContent","pushContent","viewPage","CreateQuiz","createQuestion","setCreateQuestion","setName","modalConfirmation","setModalConfirmation","undefined","substring","ThinkingImage","quizLength","pickRandomQuizz","ThinkingLottie","setPlay","setCurrent","setFail","arr","shuffle","TrophyLottie","SadLottie","openAlertResultQuestion","SadImage","setMediaType","answerTrimedLowercase","answerQuestion","play","setQuiz","setRandom","rand","randomArrayElement","exclude","randNumber","RemaningTries","Reinit","TitleGiveUp","SureToGiveUp","BestDayScore","ScoreHead","ScoreHelp","hp","aspectRatio","RectoCard","wp","PlayingCard","VersoCard","IconCard","viewGame","buttonViewPlay","playButtons","DoubleLang","DoubleLogo","ambiantEnabled","ambiantSoundPlay","soundEnabled","setSoundEnabled","ambiant","generateRandomPair","colors","icons","indexColor","indexIcon","Card","cardStyles","inPlay","inFound","show","ReturnCard","found","setFound","setShow","currentPlay","indexGame","playing","currentGameLength","nFound","setScore","prevScore","prevTries","endGame","bestScoreDay","failOverlay","element","newModel","giveUp","Double","setBestScoreDay","setAmbiant","setAmbiantEnabled","isLooping","bestDayScore","prevEnable","choosenSound","returnComponent","page","ActivitiesList","iconPosition","scoreRow","scoreRowSimon","scoreHeading","margin","quizScore","setQuizScore","horizontal","textStyle","valueSuffix","initialValue","delay","activeStrokeColor","radius","inActiveStrokeColor","inActiveStrokeOpacity","inActiveStrokeWidth","activeStrokeWidth","simonScore","setSimonScore","btnIndex","setBtnIndex","buttons","TotalScore","selectedIndex","global","days","item","highestToLowest","b","labels","datasets","fromZero","showValuesOnTopOfBars","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","printScore","doubleScore","setDoubleScore","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","unmountOnBlur","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","setPerson","BgSource","navTheme","DefaultTheme","background","TopImage","BackgroundImage","NavigationContainer","theme","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact"],"mappings":"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","file":"static/js/app.54244aa7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/question_mark.c1494184.gif\";","module.exports = __webpack_public_path__ + \"static/media/brain.abdab59b.gif\";","module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sad.bfdab12f.gif\";","module.exports = __webpack_public_path__ + \"static/media/applause.bfbba08b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/you_lose.c6b6ef1b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/alzheimapp_logo.e07c8c32.png\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.ede08671.png\";","module.exports = __webpack_public_path__ + \"static/media/2.b87932e3.png\";","module.exports = __webpack_public_path__ + \"static/media/3.3ed4e762.png\";","module.exports = __webpack_public_path__ + \"static/media/4.80535fcd.png\";","module.exports = __webpack_public_path__ + \"static/media/5.da0bedf3.png\";","module.exports = __webpack_public_path__ + \"static/media/6.7911d645.png\";","module.exports = __webpack_public_path__ + \"static/media/swipe-right.6dde9c7c.gif\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.097ce51b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.348cd96d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.5d28b463.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.acbb69fd.png\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e82f415e.gif\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.458ba883.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.83357dfb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fail.60814d28.mp3\";","module.exports = __webpack_public_path__ + \"static/media/play.25c902a7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.c7b1e976.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n}\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n}\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n}\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n}\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n}\n\nexport function reset() {\n    return AsyncStorage.clear();\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retourner sur le formulaire',\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet requise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? C'est possible, le partage est réalisable entre deux appareils par {0} !\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can share data between two devices with {0} technology!\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer {0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Select: \"Sélection des personnes\",\n        Import: \"Importer un profil\",\n        Introduction: \"Introduction\",\n        Source: \"Accès au code source\",\n        License: \"Code sous licence GPL v3.\\nCréation originale par Diyaeddine LAOUID.\",\n        Language: \"Changer la langue\"\n    },\n    en: {\n        Select: \"Select a person\",\n        Import: \"Import a profil\",\n        Introduction: \"Introduction\",\n        Source: \"Source code on GitHub\",\n        License: \"Licensed GPL v3 source code.\\nOriginally created by Diyaeddine LAOUID.\",\n        Language: \"Change language\"\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        height: 100 + '%',\n        backgroundColor: '#355c7d',\n        alignItems: 'center'\n    },\n    header: {\n        marginTop: 10 + '%',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    logo: {\n        width: 130,\n        height: 130\n    },\n    menu: {\n        marginTop: 10 + '%',\n        flex: 1,\n        marginBottom: 20\n    },\n    button: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'white',\n        color: '#355c7d',\n        justifyContent: 'flex-start'\n    },\n    buttonContainer: {\n        borderRadius: 25,\n        alignItems: 'center',\n        marginBottom: 20\n    },\n    copyleft: {\n        marginTop: 10 + '%',\n        fontSize: 11,\n        color: 'white',\n        textAlign: 'center',\n        fontStyle: 'italic'\n    }\n});\n","import React from 'react';\nimport {\n    View,\n    ScrollView,\n    Image,\n    Linking\n} from 'react-native';\n\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport { lang as HomeLang } from '../../language/home';\nimport AlzheimApp from '../../assets/img/alzheimapp_logo.png';\n\nimport styles from './styles';\n\nexport default function Home(props) { \n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n\n    const username = props.username || state?.username;\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Image source={AlzheimApp} style={styles.logo} resizeMode={'cover'} />\n            </View>\n            <ScrollView style={styles.menu}>\n                <Button\n                    title={HomeLang[props.lang].Select}\n                    buttonStyle={styles.button}\n                    titleStyle={{ color: '#355c7d', textAlign: 'center' }}\n                    containerStyle={styles.buttonContainer}\n                    icon={\n                        <Icon\n                            name={'person-outline'}\n                            type={'ionicon'}\n                            color={'#355c7d'}\n                            size={15}\n                            style={{ marginRight: 20, marginLeft: 10 }}\n                        />\n                    }\n                    raised\n                    onPress={() => navigate('/selection', {\n                        state: { username: username, lang: props.lang, setLang: props.setLang }\n                    })}\n                />\n                <Button\n                    title={HomeLang[props.lang].Import}\n                    buttonStyle={styles.button}\n                    titleStyle={{ color: '#355c7d' }}\n                    containerStyle={styles.buttonContainer}\n                    iconContainerStyle={{ marginRight: 50 }}\n                    icon={\n                        <Icon\n                            name={'person-add-outline'}\n                            type={'ionicon'}\n                            color={'#355c7d'}\n                            size={15}\n                            style={{ marginRight: 20, marginLeft: 10 }}\n                        />\n                    }\n                    raised\n                />\n                <Button\n                    title={HomeLang[props.lang].Language}\n                    buttonStyle={styles.button}\n                    titleStyle={{ color: '#355c7d' }}\n                    containerStyle={styles.buttonContainer}\n                    iconContainerStyle={{ marginRight: 50 }}\n                    icon={\n                        <Icon\n                            name={'world-o'}\n                            type={'fontisto'}\n                            color={'#355c7d'}\n                            size={15}\n                            style={{ marginRight: 20, marginLeft: 10 }}\n                        />\n                    }\n                    onPress={() => props.setLang(prev => prev == 'fr' ? 'en' : 'fr')}\n                    raised\n                />\n                <Button\n                    title={HomeLang[props.lang].Introduction}\n                    buttonStyle={styles.button}\n                    titleStyle={{ color: '#355c7d' }}\n                    containerStyle={[styles.buttonContainer, {marginBottom: 20}]}\n                    iconContainerStyle={{ marginRight: 50 }}\n                    icon={\n                        <Icon\n                            name={'book-outline'}\n                            type={'ionicon'}\n                            color={'#355c7d'}\n                            size={15}\n                            style={{ marginRight: 20, marginLeft: 10 }}\n                        />\n                    }\n                    raised\n                    onPress={() => navigate('/tutorial') }\n                />\n                <Button\n                    title={HomeLang[props.lang].Source}\n                    buttonStyle={styles.button}\n                    titleStyle={{ color: '#355c7d' }}\n                    containerStyle={styles.buttonContainer}\n                    iconContainerStyle={{ marginRight: 50 }}\n                    icon={\n                        <Icon\n                            name={'logo-github'}\n                            type={'ionicon'}\n                            color={'#355c7d'}\n                            size={15}\n                            style={{ marginRight: 20, marginLeft: 10 }}\n                        />\n                    }\n                    raised\n                    onPress={() => Linking.openURL('https://github.com/dilaouid/AlzheimApp')}\n                />\n                <Text style={styles.copyleft} >{HomeLang[props.lang].License}</Text>\n            </ScrollView>\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 40,\n        borderColor: 'gray',\n        borderRadius: 20,\n        paddingHorizontal: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        elevation: 2,\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n    },\n    buttonText: {\n        paddingTop: 10,\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    TouchableOpacity,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername as insertUsername, SawTutorial, getUsername } from '../../data/configApi';\n\nimport Home from '../Home';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [loadPage, setLoadPage] = useState(true);\n    const [confirmed, setConfirmed] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const [username, setUsername] = useState('');\n\n    useEffect(() => {\n        getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    setUsername(res[0].username);\n                    setRedirect(true);\n                }\n                setLoadPage(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoadPage(false);\n            });\n    }, []);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            insertUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setUsername(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (redirect)\n        return <Home lang={props.lang} username={username} setLang={props.setLang} />\n\n    if (loadPage)\n        return <View style={styles.container}></View>\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <TouchableOpacity\n                        style={styles.button}\n                        activeOpacity={0.5}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                    >\n                        <Text style={styles.buttonText}>\n                            {' '}\n                            {isLoading ? (\n                                <ActivityIndicator\n                                    color=\"white\"\n                                    size=\"small\"\n                                    animating={true}\n                                />\n                            ) : (\n                                'OK'\n                            )}\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        );\n    } else {\n        return <Home lang={props.lang} username={username} setLang={props.setLang} />;\n    }\n}\n","import React from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    slideOdd: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#355c7d',\n    },\n    title: {\n        color: 'black',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center',\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center',\n    },\n    titleOdd: {\n        color: 'white',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center',\n    },\n    textOdd: {\n        color: 'white',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center',\n    },\n    image: {\n        flex: 3,\n        width: 100 + '%',\n        height: 400,\n    },\n    buttonContainer: {\n        flex: 2,\n        marginTop: -40,\n    },\n    button: {\n        marginTop: 10,\n        paddingTop: 15,\n        paddingBottom: 15,\n        marginLeft: 30,\n        marginRight: 30,\n        backgroundColor: '#6396c0',\n        borderRadius: 10,\n        borderColor: 'white',\n        borderWidth: 1\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        fontWeight: 'bold'\n    },\n});\n","import React from 'react';\nimport { Text, View, Image, TouchableOpacity } from 'react-native';\n\nimport { Link } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport SwipeImage from '../../assets/img/tutorial/swipe-right.gif';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport Lottie from '../../components/utils/Lottie';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\n\nexport default function Tutorial(props) {\n    const LottieSource = require('../../assets/lottie/swipe-right.json');\n\n    return (\n        <>\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                    <Lottie\n                        LottieSource={LottieSource}\n                        ImageSource={SwipeImage}\n                        LottieStyle={{\n                            position: 'absolute',\n                            height: 80,\n                            marginTop: 280,\n                            marginLeft: 80,\n                            opacity: 0.8,\n                        }}\n                        ImageStyle={{\n                            position: 'absolute',\n                            height: 80,\n                            marginTop: 280,\n                            marginLeft: 80,\n                            opacity: 0.8,\n                        }}\n                    />\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Link\n                            to=\"/username\"\n                            component={TouchableOpacity}\n                            style={styles.button}\n                            onPress={(e) => {\n                                Config.SawTutorial(true);\n                            }}\n                            activeOpacity={0.5}s\n                            state={\n                                { setLang: props.setLang }\n                            }\n                        >\n                            <Text style={styles.buttonText}>\n                                {' '}\n                                {TutorialLang[props.lang].LastStepButton}{' '}\n                            </Text>\n                        </Link>\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} setLang={props.setLang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} setLang={props.setLang} />;\n    }\n    return <Home lang={props.lang} username={props.username} setLang={props.setLang} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to produce today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport { View, Text, Platform } from 'react-native';\nimport { Button, Image } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/selection/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/selection/addedUser.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <Button\n                title={InterfaceLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nconst createQuizContent = async (personId, el) => {\n    el.id = uuidv4();\n    el.score = [{personId: personId, success: 0, failed: 0}];\n    if (['audio', 'image'].includes(el.fileType)) {\n        await uploadQuizFile(el);\n    }\n};\n\nconst uploadQuizFile = async (el) => {\n    const filename = `${uuidv4()}${el.fileType == 'audio' ? '.m4a' : '.png'}`;\n    const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n    await FileSystem.copyAsync({\n        from: el.uri,\n        to: `${path}${filename}`\n    });\n    await FileSystem.deleteAsync(el.uri);\n    el.uri = `${path}${filename}`;\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        await createQuizContent(personId, el);\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport async function updateScore(personId, quizId, contentId, success) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    const contentIndex = quiz[0].content.findIndex(el => el.id == contentId );\n    const scoreIndex = quiz[0].content[contentIndex].score.findIndex(el => el.personId = personId);\n    if (success) quiz[0].content[contentIndex].score[scoreIndex].success++\n    else quiz[0].content[contentIndex].score[scoreIndex].failed++\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function deleteId(personId, quizId) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n};\n\nexport async function deleteQuestion(quizId, questionId) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    const content = quiz[0].content;\n    const contentIndex = content.findIndex(el => el.id == questionId );\n    if (['audio', 'image'].includes(content[contentIndex]))\n        await FileSystem.deleteAsync(content.uri);\n    quiz[0].content = content.splice(0, contentIndex);\n    return db.updateAsync({_id: quizId}, {...quiz[0]})\n};\n\nexport async function getById(quizId) {\n    return db.findAsync({ _id: quizId }, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n};\n\nexport async function saveQuiz(personId, quizId, content) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    if (!quiz) return;\n    for (let i = 0; i < content.length; i++) {\n        const el = content[i];\n        if (!el.id)\n            await createQuizContent(personId, el);\n        else if (el.id && el.editedFile) {\n            await uploadQuizFile(el);\n            delete el.editedFile;\n        }\n    }\n    quiz[0].content = content;\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function reset() {\n    return db.removeAsync({}, { multi: true });\n};\n","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nexport const randomArrayElement = (exclude, min, max) => {\n    randNumber = randomNumber(min, max);\n    if (randNumber == exclude)\n        return randomArrayElement(exclude, min, max);\n    return randNumber;\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\nimport { db as QuizDB } from './quizApi'\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return db.removeAsync({ _id: id });\n};\n\nexport async function reset() {\n    return FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(async res => {\n        await SimonDB.removeAsync({}, { multi: true });\n        await QuizDB.removeAsync({}, { multi: true });\n        await DictaphoneDB.removeAsync({}, { multi: true });\n        return db.removeAsync({}, { multi: true });\n    });\n};","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0)\n                personId = result._id;\n            await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${personId}`, {intermediates: true})\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n        zIndex: 1,\n    },\n    wrapper: {\n        marginTop: 20,\n        textAlign: 'center',\n        alignItems: 'center',\n        zIndex: 1,\n    },\n    topBanner: {\n        backgroundColor:'#355c7d'\n    },\n    topImage: {\n        // flex: 1,\n        height: 70,\n        //marginTop: -10,\n    },\n    heading: {\n        marginTop: 10,\n        fontSize: 20,\n        zIndex: 2,\n        color: 'white'\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    subtitle: {\n        textAlign: 'center',\n        color: 'white'\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: 10,\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1,\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Text,\n    View,\n    Image,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    BackHandler,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB } from 'react-native-elements';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport LoadingBrain from '../../assets/img/activities/brain.gif';\nimport { lang as SelectionMenuLang } from '../../language/selection';\nimport Rows from '../../components/selection/Rows';\nimport CreatePerson from '../../components/selection/PersonCreation/CreatePerson';\n\nimport Lottie from '../../components/utils/Lottie';\n\nimport * as Person from '../../data/personApi';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function SelectionMenu(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        SelectionMenuLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const swiper = useRef(null);\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n    const setLang = state?.setLang || props.setLang;\n\n    useEffect(() => {\n        Audio.setIsEnabledAsync(false);\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - index, true);\n    };\n\n    const changeIndex = (idx) => {\n        setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                setBtnTxt(SelectionMenuLang[lang].AddAPerson);\n            } else if (idx === 1) {\n                setBtnTxt(SelectionMenuLang[lang].ReturnToList);\n            }\n            setActive(true);\n        }, 400);\n    };\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 305,\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home', {\n                    state: { username: username, setLang: setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n            <View style={styles.wrapper}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={LoadingBrain}\n                    LottieStyle={styles.topImage}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[lang].Hello(username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (active === false) {\n                            return;\n                        }\n                        setActive(false);\n                        setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={SelectionMenuLang[lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    setSearch(e);\n                                }}\n                                value={search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {persons && persons.length > 0 ? (\n                                printRows(persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={persons}\n                                setPersons={setPersons}\n                                lang={lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: 'white' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        Home: 'Accueil',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n        QuizScore: \"Score des quiz\",\n        SimonScore: \"Score du Simon\",\n        DoubleScore: \"Score du jeu des pairs\",\n        NoScore: \"Aucun score enregistré pour cette activité...\",\n        Success: 'réussite',\n        Global: \"Vue d'ensemble\",\n        BestScoreByDay: 'Meilleur score du jour',\n        ExportedProfile: 'Profil exporté',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        Home: 'Home',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n        QuizScore: \"Quiz Score\",\n        SimonScore: \"Simon Score\",\n        DoubleScore: \"Double Memory Score\",\n        NoScore: \"No score registered for this activity...\",\n        Success: 'success',\n        Global: \"Global view\",\n        BestScoreByDay: 'Best score by day',\n        ExportedProfile: 'Profile exported',\n\n        ReturnList: 'Return',\n    },\n};\n","export const encrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let encryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        encryptedString += String.fromCharCode( string.charCodeAt(i) - key.charCodeAt(j) - key.length );\n    }\n    return (encryptedString);\n};\n\nexport const decrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let decryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        decryptedString += String.fromCharCode( string.charCodeAt(i) + key.charCodeAt(j) + key.length );\n    }\n    return (decryptedString);\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DoubleSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","/**\n * Model is like:\n * {\n *      personId: 'xxx',\n *      name: 'xxx',\n *      description: 'xxx',\n *      picture: 'b64' || null,\n *      activities: {\n *          quiz: [\n *              // all quizz contents //\n *          ],\n *          log: [\n *              // all logs contents\n *          ],\n *          double: [\n *              // all double contents\n *          ],\n *          simon: [\n *              // all simon score\n *          ]\n *      }\n * }\n */\n\nimport * as FileSystem from 'expo-file-system';\nimport * as dilacrypt from './dilacrypt';\n\nimport { db as personAPI } from '../data/personApi';\nimport { db as dictaphoneAPI } from '../data/dictaphoneApi';\nimport { db as simonAPI } from '../data/simonApi';\nimport { db as quizAPI } from '../data/quizApi';\nimport { db as doubleAPI } from '../data/doubleApi';\n\nconst fileToBase64 = async (uri) => {\n    return await FileSystem.readAsStringAsync(uri, {\n        encoding: 'base64',\n    });\n};\n\nconst formatQuiz = async (quiz) => {\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < el.content.length; j++) {\n            const e = el.content[j];\n            if (e.uri)\n                e.uri = await fileToBase64(e.uri);\n        }\n    }\n    return (quiz);\n};\n\nconst formatLog = async (log) => {\n    for (let i = 0; i < log.length; i++) {\n        const el = log[i];\n        el.path = await fileToBase64(el.path);\n    }\n    return (log);\n};\n\nexport const writeDataFile = async (fullname, content) => {\n    let fileUri = FileSystem.documentDirectory + `${fullname}.alz`;\n    return await FileSystem.writeAsStringAsync(fileUri, content).catch(err => {\n        console.log(err);\n    }).then( (e) => {\n        return (fileUri);\n    });\n};\n\nexport const exportPerson = async (personId, key) => {\n    const personFind = await personAPI.findAsync({ _id: personId });\n    if (!personFind) return ('PERSON_NOT_FOUND');\n    const person = personFind[0];\n    if (!person._id || !person.fullname) return ('INVALID_PERSON');\n    const personData = {\n        _id: person._id,\n        description: person.description,\n        fullname: person.fullname,\n        picture: person.picture ? await fileToBase64(person.picture) : null\n    };\n    const simonData = await simonAPI.findAsync({ personId: personId });\n    const doubleData = await doubleAPI.findAsync({ personId: personId });\n    const quiz = await quizAPI.findAsync({ personId: personId });\n    const quizData = quiz ? await formatQuiz(quiz) : []; // converting files into base64 here\n\n    const dictaphone = await dictaphoneAPI.findAsync({ personId: personId });\n    const dictaphoneData = dictaphone ? await formatLog(dictaphone) : []; // converting files into base64 here\n\n    const result = JSON.stringify({\n        _id: personData._id,\n        description: personData.description,\n        fullname: personData.fullname,\n        picture: personData.picture,\n        activities: {\n            quiz: quizData,\n            double: doubleData,\n            simon: simonData,\n            dictaphone: dictaphoneData\n        }\n    });\n    const uri = await writeDataFile(personData.fullname, key ? dilacrypt.encrypt(result, key) : result);\n    return (uri);\n};","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\n\nimport { ScrollView, Alert, View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/selection/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\nimport { exportPerson } from '../../../utils/share';\nimport * as Sharing from 'expo-sharing';\n\nimport * as FileSystem from 'expo-file-system';\n\nimport styles from './styles';\nimport Form from '../../../components/selection/PersonCreation/Form';\nimport { ActivityIndicator } from 'react-native';\n\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n    const [load, setLoad] = useState(false);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname(props.person.fullname);\n        setUriPreview(props.person.picture);\n        setImage('');\n        setDescription(props.person.description);\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/selection');\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.username),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: load ? '' : 'share-alt',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={load ? <ActivityIndicator color={'white'} size={'small'} /> : ActivitiesLang[props.lang]?.ShareProfile}\n                        onPress={async () => {\n                            setLoad(true)\n                            console.log('[~] Pressing export button');\n                            console.log('[+] Exporting person...');\n                            const uri = await exportPerson(props.personId, null);\n                            console.log('[+] Exported person! uri is: ' + uri);\n                            Sharing.shareAsync(uri).then( async (e) => {\n                                await FileSystem.deleteAsync(uri);\n                                setLoad(false);\n                            });\n                        }}\n                        disabled={load}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/selection');\n                        }}\n                    />\n                </ScrollView>\n            ) : (\n                <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => setEdit(false)}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </ScrollView>\n            )}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync().then( () => {\n                console.log('[+] Permission granted!');\n            })\n            .catch(e => {\n                console.error(e);\n            });            \n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const goBack = async () => {\n        if (recording) await recording?.stopAndUnloadAsync();\n        stopPlayingSounds();\n        props.setPage(0);\n    }\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            if (el) el?.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                    <Button\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'caret-back-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        buttonStyle={styles.recordButton}\n                        title={{}}\n                        titleStyle={styles.titleButton}\n                        onPress={() => goBack()}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <View style={styles.actionButtonsView}>\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n                <Button\n                    containerStyle={styles.actionButtons}\n                    icon={{\n                        name: 'caret-back-outline',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={{}}\n                    titleStyle={styles.titleButton}\n                    onPress={() => goBack()}\n                />\n                </View>\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n\n\n\n\n        // Help section\n        Head: \"Le Simon, comment ça marche ?\",\n        RulesHead: \"Les règles\",\n        TriesHead: \"Les essais\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu Simon est un {0} de forme circulaire comportant quatre gros boutons de couleurs différentes: rouge, vert, jaune et bleu.\\n\\nLe jeu {1} une des quatres couleurs et {2} toujours associé à cette couleur. Le joueur doit alors {3}.\\n\\nLe jeu {4}, puis {5} une nouvelle couleur. Le jour doit reproduire cette nouvelle séquence. Chaque fois que le joueur reproduit correctement la séquence, le jeu ajoute une nouvelle couleur.`,\n                boldText: ['jeu de mémoire', 'éclaire', 'produit un son', \"appuyer sur la touche de la couleur qui vient de s'allumer\", 'répète la même couleur et le même son', 'ajoute'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois que vous ratez une séquence, vous {0}. Au cours d'une partie, vous avez le droit à seulement {1}.\\n\\nUne fois les quatre erreurs faites, ou alors lorsque vous {2}, votre score est compatibilisé en fonction du nombre de touches dans la séquence actuelle.\\n\\nChaque jour, {3}.`,\n                boldText: ['perdez un essai', 'quatre erreurs', 'abandonnez la partie en cours', 'votre score journalier est remit à zéro'],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n\n\n\n\n        // Help section\n        Head: `The Simon, how does it works?`,\n        RulesHead: \"The rules\",\n        TriesHead: \"The tries\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The Simon is a circular shaped {0} with four different colored buttons: red, green, yellow and blue.\\n\\nThe game {1} one of the four colors and {2} always associated to this color. The player shall {3}.\\n\\nThe game {4}, then {5} another color. The player will have to reproduces this sequence. Each time the player successfully reproduces the sequence, the game adds another color in this sequence.`,\n                boldText: ['memory game', 'lighten', 'produces a sound', \"press the colored button which has just turned on\", 'repeat the same color with the same sound', 'add'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `Each time you fail a sequence, you {0}. In a game, you are allowed up to {1}.\\n\\nOnce the four fails made, or when you {2}, you will have the number of elements in the current sequence saved as your score.\\n\\nEach day, {3}.`,\n                boldText: ['lose a try', 'four maximum fails', 'give up the current game', 'your daily score is reset to zero'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        paddingTop: 20,\n        flex: 1,\n        alignItems: 'center'\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        // flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        //flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    // Help section\n    viewHelpPage: {\n        marginTop: -20,\n        backgroundColor: 'white',\n        width: 100 + '%',\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .4,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate, dailyScore < order.length - 1, bestScore < order.length - 1);\n        setCanPlay(false);\n        setSuccess(true);\n        const path = dailyScore < order.length - 1 ? require(`../../../assets/sound/global/applause.mp3`) : require(`../../../assets/sound/global/you_lose.mp3`);\n        const { sound } = await Audio.Sound.createAsync(path);\n        props.setSound(sound);\n        sound.playAsync();\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            <Overlay\n                visible={success}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => setSuccess(false)}\n                ModalComponent={Modal}\n            >\n                {scoreBeaten ? successOverlay() : failOverlay()}\n                <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            retryGame();\n                        }}\n                        title={SimonLang[props.lang].Retry}\n                        containerStyle={{\n                            borderRadius: 13,\n                            marginRight: 10,\n                        }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setTab(0);\n                        }}\n                        title={SimonLang[props.lang].Exit}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React from 'react';\nimport { View, ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView>\n                <Button\n                    title={SimonLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{SimonLang[props.lang].Head}</Text>\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].Rules()}</Text>\n\n                \n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].TriesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].TriesExplain()}</Text>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\nimport Help from './Help';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr, pos) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: i == pos ? color : '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        Cancel: 'Annuler',\n        GoBack: \"Oui, j'annule l'édition du quiz\",\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Abandonner le quiz\",\n        GiveUpQuiz: \"Êtes-vous sûr de vouloir abandonner ce quiz? Le score restera enregistré.\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        EditedQuiz: \"Quiz modifié avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Bien joué !! 😄\",\n        Success: \"Bien joué ! C'est la bonne réponse !! Vous pouvez maintenant passer à la suite !\",\n        FailedTitle: \"Dommage... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Dommage, mais ce n'était pas la bonne réponse ! Les réponses possibles étaient: ${answersText}.`\n        },\n        SuccessQuizTitle: \"Haut la main !\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Fantastique !! Vous avez réussi ce quiz ! Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Dommage... Vous avez raté ce quiz ! ... Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Sauvegarder le quiz',\n        SaveContent: \"Sauvegarder la question\",\n        AddContent: \"Ajouter la question\",\n        SureCancelEdition: \"Êtes-vous sûr de bien vouloir abandonner l'édition de ce quiz? Vous ne pourrez pas récupérer vos modifications.\",\n\n        // Help page related\n        Head: 'Le quiz, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        CustomHead: \"Personnalisation\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Les règles du quiz sont basiques: il y a des questions {0}, et le joueur doit y répondre. Il peut y avoir {1} réponses possibles, une bonne réponse et c'est un point ajouté au score.\\n\\nIl n'y a pas de perte de points suite à une mauvaise réponse.`,\n                boldText: [\"facultativement accompagnées d'une image ou d'un son\", \"plusieurs\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `Il n'y a pas de quiz par défaut. C'est à vous d'en {0} et de les {1} à votre guise !\\nPour cela, vous devez vous rendre dans la partie \"{2}\".\\n\\nVous aurez là la liste des quiz que vous avez préalablement crée. Si vous n'en avez encore créé aucun, façonnez votre premier quiz avec le bouton \"{3}\".\\n\\nIci vous pourrez ajouter des question avec le bouton \"{4}\". Il vous est demandé {5} (facultatif), qui correspond à un son ou une image pour illustrer votre question.\\n\\nEnsuite, vous devez {6}. Ce sera cette question qui sera ensuite demandée au joueur.\\n\\nEt enfin, {7}. Une fois une réponse valide renseignée, cliquez sur le symbole {8} à côté, et votre réponse est ajoutée à la liste des réponses valides à la question. Vous pouvez en avoir 10 maximum.\\n\\nSi vous avez fait une erreur sur une des réponses, {9} pour la retirer de la liste.\\n\\nUne fois tous les éléments de la question renseignées, cliquez sur \"{10}\" au dessus pour enregistrer la question et retourner à la liste des questions précédemment crées. Ajoutez-en autant que vous voulez pour un quiz.\\n\\nVous pouvez également {11}.\\n\\nUne fois le quiz complet, cliquez sur \"{12}\", et voilà ! Renseignez le nom de ce quiz et c'est terminé, le quiz est désormais jouable !`,\n                boldText: [\"créer\",\n                    \"personnaliser\",\n                    \"Voir les quiz\",\n                    \"Créer un quiz\",\n                    \"Ajouter une question\",\n                    \"d'importer un fichier de référence\",\n                    \"renseigner la question\",\n                    \"ajouter les réponses éventuelles\",\n                    \"( + )\",\n                    \"cliquez simplement dessus\",\n                    \"Valider\",\n                    \"cliquer sur une question pour la modifier\",\n                    \"Terminer la création\"\n                ],\n            });\n        }\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizzes',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        Cancel: 'Cancel',\n        GoBack: 'Yes, I want to go back',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'of success',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Submit\",\n        GiveUpQuizTitle: \"Give up\",\n        GiveUpQuiz: \"Are you sure to give up this quiz? The score will be saved.\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        EditedQuiz: \"Quiz successfuly edited!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Well played!! 😄\",\n        Success: \"Well played! That's the good answer!! You can now go to the next question!\",\n        FailedTitle: \"Oops... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Oops, that's not a valid answer... the valid answer${answers.length > 0 ? 's were' : ' was'} : ${answersText}.`\n        },\n        SuccessQuizTitle: \"Easy peasy!\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Congratulations!! You won this quiz! Your score is for {0} good answer(s) for {1} mistake!',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Better next time! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: \"It's alright... You failed this quiz!... Your score is for {0} good answer(s) for {1} mistake!\",\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Save the quiz',\n        SaveContent: \"Save the question\",\n        AddContent: \"Add the question\",\n        SureCancelEdition: \"Are you sure to cancel this quiz edition? Your modification would not be saved\",\n\n        // Help page related\n        Head: 'The quiz, how does it works?',\n        RulesHead: \"The rules\",\n        CustomHead: \"Customization\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `This is a basic quiz game: there are questions {1}, and the player must answer them. There can be {1} answers, one correct answer and it's a point added to the score.\\n\\nThere is no loss of points for a wrong answer.`,\n                boldText: [\"optionally accompanied by an image or a sound\", \"several possible\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `There are no default quizzes. It is up to you to {0} and {1} them as you wish!\\nTo do this, you must go to the \"{2}\" section.\\nThere you will see the list of quizzes that you have already created. If you haven't created any yet, create your first quiz with the \"{3}\" button.\\n\\nHere you can add questions with the \"{4}\" button. You are asked to {5} (optional), which is a sound or image file to illustrate your question.\\n\\nThen you have to {6}. This question will be asked to the player.\\n\\nAnd finally, {7}. Once you have entered a valid answer, click on the {8} symbol next to it, and your answer would be added to the list of the valid answers to the question. You can have a maximum of 10 possible answers.\\n\\nIf you made a mistake on one of the answers, {9} to remove it from the list.\\n\\nOnce you have filled in all the elements of the question, click \"{10}\" above to save the question and return to the list of questions. Add as many as you want to this quiz.\\n\\nYou can also {11}.\\n\\nOnce the quiz is completed, click \"{12}\" and that's it! Fill in the name of this quiz and it's done, the quiz is now playable!`,\n                boldText: [\"create\",\n                    \"customize\",\n                    \"View quizzes\",\n                    \"Create a quiz\",\n                    \"Add a question\",\n                    \"import a reference file\",\n                    \"fill in the question\",\n                    \"add the possible answers\",\n                    \"( + )\",\n                    \"simply click on it\",\n                    \"Submit\",\n                    \"click on a question to edit it\",\n                    \"Complete the quiz creation\"\n                ],\n            });\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginTop: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: 235,\n        marginTop: 20,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: 235,\n        marginTop: 10,\n        backgroundColor: 'blue',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: 30,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    modalDescription: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: 290,\n        marginTop: 10\n    },\n    quizTitleInput: {\n        fontSize: 15\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 50\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        width: 250\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: 250,\n        height: 250\n    },\n    gameQuestion: {\n        fontSize: 25,\n        marginTop: 10,\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey'\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15\n    },\n\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n        textAlign: 'center'\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image, ActivityIndicator } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            <Button\n                title={props.isLoading ? <ActivityIndicator color={'blue'} size={'small'} /> : QuizLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n                disabled={props.quiz.length === 0}\n            />\n\n            <Button\n                title={QuizLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import {\n    View,\n    Image\n} from 'react-native';\nimport { Icon, FAB, Avatar } from 'react-native-elements';\nimport { Audio } from 'expo-av';\n\nexport const printFile = (fileType, uri, clearFile, isPlaying, pauseSound, setIsPlaying, sound, setSound) => {\n    if (fileType === 'image') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Image source={{uri: uri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n            </View>\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 100, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Icon onPress={() => isPlaying ? pauseSound() : playSound(setIsPlaying, sound, setSound, uri) } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30, zIndex: 2}} />\n            </View>\n        );\n    }\n};\n\nexport const playSound = async (setIsPlaying, sound, setSound, uri) => {\n    setIsPlaying(true);\n    await Audio.setAudioModeAsync({\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n    });\n    const getSoundStatus = await sound?.getStatusAsync();\n    if (getSoundStatus?.isLoaded === false) {\n        await sound.loadAsync({ uri: uri });\n        setSound(sound);\n    }\n    await sound.playAsync();\n    sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n        if (playbackStatus.didJustFinish) {\n            await sound.unloadAsync();\n            setIsPlaying(false);\n        }\n    });\n};\n\nexport const pickCorrectIcon = (fileType, uri) => {\n    if (fileType === 'image') {\n        return (\n            <Avatar\n                source={{ uri: uri }}\n                rounded\n                size={'medium'}\n                containerStyle={{marginHorizontal: 8}}\n            />\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <Icon\n                raised\n                name={'musical-notes-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    } else {\n        return (\n            <Icon\n                raised\n                name={'text-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    }\n};","import React, { useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nimport { pickCorrectIcon } from '../utils/quizFunc';\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n\n    const length = props.quizEdit?.content?.length + props.newContent?.length;\n\n    const pickOutQuestion = () => {\n        if (length <= 2 && props.quizEdition) return;\n        if (props.quizEdition === true) {\n            if (Number.isInteger(props.questionId)) {\n                // if the questionId is an integer, it means it has not\n                // been added to the api yet, so it's an index of the\n                // newContent array passed in the props from the ViewQuiz Component\n\n                const index = props.questionId - props.quizEdit?.content?.length;\n                const tmp = props.newContent;\n                tmp.splice(index, 1);\n                // take out the new content from the newContent state in the\n                // parent component\n                props.setNewContent([...tmp]);\n            } else {\n                // todo not get by api but update quizedit state\n                // update api only when saving quiz\n                const index = props.quizEdit.content.findIndex(el => el.id == props.questionId );\n                const tmp = props.quizEdit;\n                tmp.content.splice(index, 1);\n                props.setQuizEdit(tmp);\n                props.setReload(!props.reload)\n                props.setEditedQuiz(true);\n            }\n        } else {\n            const tmp = props.quizEdition ? props.content : props.contentList;\n            tmp.splice(props.index, 1)\n            props.setContent([...tmp]);\n        }\n        setModal(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{ marginRight: 10 }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={{ fontWeight: 'bold' }}\n                    onPress={() => pickOutQuestion() }\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { props.setEditContent(props.questionId) }} >\n                { pickCorrectIcon(props.content.fileType, props.content.uri) }\n                <ListItem.Content>\n                    <ListItem.Title>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon disabled={props.quizEdition == true && length <= 2} reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","export function ScoreRatio (content, personId) {\n    var success = 0;\n    var fail = 0;\n    content.map( (el, i) => {\n        const score = el.score.filter( (el) => el.personId == personId );\n        score.map( (el, i) => {\n            success += parseInt(el.success);\n            fail += parseInt(el.failed);\n        });\n    });\n    const total = success + fail;\n    if (total == 0)\n        return 0;\n    const score = ((success / total) * 100).toFixed(2);\n    return score;\n};","import React from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport { ScoreRatio } from './utils/scoreFunc';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n\n    return (\n        <ListItem {...componentProps} onPress={() => {\n                props.setEdit(true);\n                props.setQuizEdit(props.quiz);\n            }}>\n            <ListItem.Content>\n                <ListItem.Title>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    { ScoreRatio(props.quiz.content, props.personId) }{'% '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Text,\n    ScrollView,\n} from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport QuizList from './QuizList';\nimport styles from './styles';\n\nimport * as API from '../../../data/quizApi';\n\nexport default function ViewQuizList(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <ScrollView>\n            {props.loading ? (\n                <ActivityIndicator\n                    color={'blue'}\n                    size={'small'}\n                    style={styles.loading}\n                />\n            ) : props.quiz?.length > 0 ? (\n                props.quiz?.map((el, i) => {\n                    return (\n                        <QuizList\n                            index={i}\n                            key={el._id}\n                            quiz={el}\n                            lang={props.lang}\n                            deleteId={deleteId}\n                            personId={props.personId}\n                            setEdit={props.setEdit}\n                            setQuizEdit={props.setQuizEdit}\n                        />\n                    );\n                })\n            ) : (\n                <Text style={styles.nothingYet}>\n                    {QuizLang[props.lang].NothingYet}\n                </Text>\n            )}\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/activities/quiz/success.gif';\n\nimport styles from './styles';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge, FAB } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContent(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <ScrollView contentContainerStyle={styles.ScrollView}>\n                { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                <Button\n                    title={QuizLang[props.lang].ImportFile}\n                    buttonStyle={{ borderRadius: 15 }}\n                    onPress={pickFile}\n                />\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].ReferenceFile}\n                </Text>\n                <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                    <Input\n                        value={props.question}\n                        inputStyle={{fontSize: 14}}\n                        containerStyle={{marginBottom: 50}}\n                        placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                        onChangeText={(e) => props.setQuestion(e)}\n                    />\n                    <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                    <Input\n                        placeholder={QuizLang[props.lang].AddAnswer}\n                        inputStyle={{fontSize: 14}}\n                        value={answer}\n                        onChangeText={(e) => setAnswer(e)}\n                    />\n                    <Button\n                        icon={\n                            <Icon\n                                name={'add-circle'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={18}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => addAnswer()}\n                        disabled={props.answers.length >= 10}\n                    />\n                    </View>\n                </View>\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].WhatIsAnswer}\n                </Text>\n                <View style={styles.badgesView}>\n                    {props.answers.map( (el, i) => {\n                        return(\n                            <Badge\n                                key={i}\n                                value={el}\n                                badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                onPress={() => pickOutAnswer(i)}\n                            />\n                        )\n                    })}\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    SafeAreaView,\n    ScrollView,\n    Alert,\n    Modal,\n    Text\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay } from 'react-native-elements';\n\nimport QuestionList from './Creation/QuestionList';\nimport ViewQuizList from './ViewQuizList';\n\nimport * as API from '../../../data/quizApi';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport FormQuizContent from './Creation/FormQuizContent';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n    // if the user is editing or not an existing quiz\n    const [edit, setEdit] = useState(false);\n\n    // if the user want to add a question to an existing quiz\n    const [newQuestion, setNewQuestion] = useState(false);\n\n    // if the user want to edit an existing question to an existing quiz\n    const [editContent, setEditContent] = useState();\n\n    // the existing quiz to edit\n    const [quizEdit, setQuizEdit] = useState();\n\n    // the new content to add in an existing quiz\n    const [newContent, setNewContent] = useState([]);\n\n    // check if something has been edited\n    const [editedQuiz, setEditedQuiz] = useState(false);\n\n    // open the modal of going back without saving confirmation\n    const [modal, setModal] = useState(false);\n\n    // the states for the quiz edition (add / edit question)\n    const [question, setQuestion] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const push = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setNewContent([...newContent, push]);\n        setEditedQuiz(true);\n        setSuccess(true);\n    };\n\n    const saveContent = () => {\n        let content;\n        let index;\n        if (Number.isInteger(editContent)) {\n            // edit newContent array\n            content = newContent[editContent - quizEdit?.content?.length];\n        } else {\n            // edit quizEdit array\n\n            // for already in api content -- think of reuploading the file\n            // if there's a new one, or to delete it\n            index = quizEdit.content.findIndex(el => el.id == editContent);\n            content = quizEdit.content[index];\n            if (fileType != content.fileType || uri != content.uri)\n                content.editedFile = true;\n        }\n        content.filename= filename;\n        content.fileType = fileType;\n        content.uri = uri;\n        content.answers = answers;\n        content.question = question;\n        setEditedQuiz(true);\n        setSuccess(true);\n        if (Number.isInteger(editContent)) {\n            if (newContent.length == 1)\n                setNewContent([content]);\n            else\n                setNewContent([...content]);\n        } else {\n            quizEdit.content[index] = content;\n            setQuizEdit(quizEdit);\n        }\n    };\n\n    // clear the states before edition or creation of a content\n    const clearState = () => {\n        setAnswers([]);\n        setQuestion();\n        setFileType();\n        setFilename();\n        setUri();\n        setSound(new Audio.Sound());\n    };\n\n    // Save the edited quiz\n    const saveQuiz = () => {\n        if (!editedQuiz) return;\n        const content = quizEdit.content.concat(newContent);\n        API.saveQuiz(props.personId, quizEdit._id, content).then((data) => {\n            return Alert.alert(\n                QuizLang[props.lang].EditedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            props.setReload(!props.reload);\n                            setNewContent([]);\n                            goBack();\n                        },\n                    }\n                ]\n            );\n        });\n    }\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const viewPage = () => {\n        if (editContent && !newQuestion) {\n            if (success) setSuccess(false);\n            let content;\n            if (Number.isInteger(editContent)) {\n                content = newContent[editContent - quizEdit?.content?.length];\n            } else {\n                const index = quizEdit.content.findIndex(el => el.id == editContent);\n                content = quizEdit.content[index];\n            }\n            if (!content) return;\n            setFilename(content.filename);\n            setFileType(content.fileType);\n            setUri(content.uri);\n            setQuestion(content.question);\n            setAnswers([...content.answers]);\n            setNewQuestion(true);\n        } else if (newQuestion) { // if the user wants to set a new question for quiz edition\n            return (<FormQuizContent\n                        lang={props.lang}\n                        setAnswers={setAnswers}\n                        setFileType={setFileType}\n                        setQuestion={setQuestion}\n                        setUri={setUri}\n                        setFilename={setFilename}\n                        setSuccess={setSuccess}\n                        setSound={setSound}\n                        setIsPlaying={setIsPlaying}\n                        pauseSound={pauseSound}\n                        uri={uri}\n                        filename={filename}\n                        answers={answers}\n                        fileType={fileType}\n                        question={question}\n                        success={success}\n                        sound={sound}\n                        isPlaying={isPlaying}\n                />);\n        } else if (edit && !newQuestion) {\n             // if the user want to see all the question for the quiz edition\n            return (quizEdit.content)?.concat(newContent)?.map((el, i) => {\n                return (<QuestionList\n                    index={i}\n                    key={i}\n                    id={quizEdit._id || 0}\n                    quizEdit={quizEdit}\n                    newContent={newContent}\n                    content={el}\n                    lang={props.lang}\n                    questionId={el.id || i}\n                    quizEdition={true}\n                    reload={props.reload}\n                    setReload={props.setReload}\n                    setEditedQuiz={setEditedQuiz}\n                    setEditContent={setEditContent}\n                    setQuizEdit={setQuizEdit}\n                    setNewContent={setNewContent}\n                />);\n            })\n        } else {\n             // if the user want to see all the existing quiz for the quiz edition\n            return (<ViewQuizList\n                quiz={props.quiz}\n                loading={props.loading}\n                lang={props.lang}\n                personId={props.personId}\n                setEdit={setEdit}\n                setQuizEdit={setQuizEdit}\n                setReload={props.setReload}\n            />);\n        }\n    };\n\n    const goBack = () => {\n\n        if (!success) setSuccess(false);\n\n        if ( (editedQuiz && !newQuestion) || newContent.length > 0) {\n            setModal(true);\n            return;\n        }\n\n        if (editContent) {\n            clearState();\n            setEditContent();\n            setNewQuestion(false);\n        } else if (newQuestion)\n            setNewQuestion(false);\n        else if (edit) {\n            setEditedQuiz(false);\n            setEdit(false);\n        } else\n            props.setTab(0);\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return saveContent();\n        } else if (newQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].AddContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return pushContent();\n        } else if (edit) {\n            // save the quiz button\n            if (mode == 'title') return QuizLang[props.lang].Save;\n            else if (mode == 'disabled') return !(editedQuiz);\n            else if (mode == 'onpress') return saveQuiz();\n        } else {\n            // create a quiz button\n            if (mode == 'title') return QuizLang[props.lang].Create;\n            else if (mode == 'disabled') false;\n            else if (mode == 'onpress') return props.setTab(4);\n        }\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => setModal(false)}\n                    ModalComponent={Modal}\n                >\n                    <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                    <View style={{ flexDirection: 'row' }}>\n                        <Button\n                            title={QuizLang[props.lang].Cancel}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{ marginRight: 10 }}\n                            onPress={() => setModal(false)}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].GoBack}\n                            buttonStyle={{ fontWeight: 'bold' }}\n                            onPress={() => {\n                                setEditedQuiz(false);\n                                setEditContent();\n                                setEdit(false);\n                                setNewContent([]);\n                                setModal(false);\n                            } }\n                        />\n                    </View>\n                </Overlay>\n\n\n                <Button\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={edit ? 'save-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        buttonTop('onpress')\n                    }}\n                    disabled={ buttonTop('disabled') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => goBack() }\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                {\n                    edit && !newQuestion && !editContent ?\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setNewQuestion(true) }\n                    /> : <></>\n                }\n                <ScrollView style={{marginBottom: 40}}>\n                { viewPage() }\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContent from './FormQuizContent';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\nimport { Audio } from 'expo-av';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n    const [modalConfirmation, setModalConfirmation] = useState(false);\n\n    const [editContent, setEditContent] = useState();\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name.substring(0, 23),\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    // Save an existing question\n    const saveContent = () => {\n        content[editContent].fileType = fileType;\n        content[editContent].filename = filename;\n        content[editContent].uri = uri;\n        content[editContent].question = question;\n        content[editContent].answers = answers;\n        setContent([...content]);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        if (isPlaying) setIsPlaying(false);\n    };\n\n    const clearState = () => {\n        setAnswers([]);\n        setFileType();\n        setFilename();\n        setUri();\n        setQuestion();\n        setSuccess(false);\n    };\n\n    const printQuestionList = () => {\n        if (content.length === 0) {\n            return (<Text style={styles.nothingYet}>\n                {QuizLang[props.lang].NoQuestionYet}\n            </Text>);\n        } else {\n            return content?.map((el, i) => {\n                return (\n                    <QuestionList\n                        index={i}\n                        key={i}\n                        id={i}\n                        content={el}\n                        lang={props.lang}\n                        setContent={setContent}\n                        setEditContent={setEditContent}\n                        questionId={i}\n                        contentList={content}\n                    />\n                );\n            });\n        }\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent !== undefined) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); return saveContent(); }\n        } else if (createQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].OK;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); setModal(false); return pushContent(); }\n        } else {\n            if (mode == 'title') return QuizLang[props.lang].Complete;\n            else if (mode == 'disabled') return !(content.length > 0);\n            else if (mode == 'onpress') { return setModal(true);  }\n        }\n    };\n\n    const printPage = () => {\n        if (editContent !== undefined && !createQuestion) {\n            if (success) setSuccess(false);\n            setAnswers(content[editContent].answers);\n            setFileType(content[editContent].fileType);\n            setFilename(content[editContent].filename);\n            setUri(content[editContent].uri);\n            setQuestion(content[editContent].question);\n            setCreateQuestion(true);\n        }\n        if (createQuestion) { // if the user is creating a new question\n            return <FormQuizContent\n                /* Form to create a quiz */\n                lang={props.lang}\n                setAnswers={setAnswers}\n                setFileType={setFileType}\n                setQuestion={setQuestion}\n                setUri={setUri}\n                setFilename={setFilename}\n                setSuccess={setSuccess}\n                setSound={setSound}\n                setIsPlaying={setIsPlaying}\n                pauseSound={pauseSound}\n                uri={uri}\n                filename={filename}\n                answers={answers}\n                fileType={fileType}\n                question={question}\n                success={success}\n                sound={sound}\n                isPlaying={isPlaying}\n            />\n        } else {\n            return <SafeAreaView style={styles.safeArea}>\n                <Button\n                    title={QuizLang[props.lang].AddQuestion}\n                    icon={\n                        <Icon\n                            name={'add-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => setCreateQuestion(true)}\n                />\n                <ScrollView style={{marginBottom: 40}}>\n                    { props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : printQuestionList() }\n                </ScrollView>    \n            </SafeAreaView>\n        }\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button containerStyle={{ marginTop: 10, width: 40 }} title={{}} icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    } disabled={name?.length < 3 || name.length > 23 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            {/* Confirmation give up quiz creation */}\n            <Overlay\n                visible={modalConfirmation}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => setModalConfirmation(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={QuizLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={() => setModalConfirmation(false)}\n                    />\n                    <Button\n                        title={QuizLang[props.lang].GoBack}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={() => {\n                            setModalConfirmation(false);\n                            props.setTab(2);\n                        } }\n                    />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ buttonTop('disabled') }\n                    onPress={ () => buttonTop('onpress') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearState();\n                        pauseSound();\n                        if (createQuestion)\n                            setCreateQuestion(!createQuestion);\n                        else if (content.length == 0) props.setTab(2);\n                        else setModalConfirmation(true)\n                    }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            { printPage() }\n        </>\n    );\n}\n","import React from 'react';\nimport { Text, Button, Icon, FAB } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif');\n    return (\n    <>\n        { props.quizLength > 1 ? <FAB\n            style={{marginTop: 140, position: 'absolute', zIndex: 10}}\n            containerStyle={{marginLeft: 120}}\n            size=\"small\"\n            icon={{name: 'repeat-sharp', type: 'ionicon', color:'white' }}\n            onPress={() => props.pickRandomQuizz()}\n        /> : <></> }\n        <Lottie LottieSource={ThinkingLottie} ImageSource={ThinkingImage} LottieStyle={{marginTop: -25, height: 250, marginBottom: -30}} />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButton}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            buttonStyle={{ backgroundColor: 'red' }}\n            containerStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, Alert, View, Modal } from 'react-native';\nimport { Text, Image, Input, Button, Icon, Overlay } from 'react-native-elements';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../../assets/img/activities/sad.gif';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport Lottie from '../../../utils/Lottie';\nimport { Audio } from 'expo-av';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n    const [modal, setModal] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const [success, setSuccess] = useState(0);\n    const [fail, setFail] = useState(0);\n    const [confetti, setConfetti] = useState(false);\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const TrophyLottie = require('../../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../../assets/lottie/sad.json');\n\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const stopSound = async () => {\n        await pauseSound();\n        setSound(new Audio.Sound());\n        await sound?.unloadAsync();\n    }\n\n    const playSound = async () => {\n        setIsPlaying(true);\n        await Audio.setAudioModeAsync({\n            staysActiveInBackground: true,\n            shouldDuckAndroid: true,\n        });\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus?.isLoaded === false) {\n            await sound.loadAsync({ uri: game[current].uri });\n            setSound(sound);\n        }\n        await sound.playAsync();\n        sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n            if (playbackStatus.didJustFinish) {\n                await sound.unloadAsync();\n                setIsPlaying(false);\n            }\n        });\n    };\n\n    const setMediaType = () => {\n        if (!game[current]) return;\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <Icon onPress={() => isPlaying ? pauseSound() : playSound() } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30}} />\n            default:\n                return <></>;\n        }\n    };\n\n    const openAlertResultQuestion = (result) => {\n        return (\n            Alert.alert(\n                result ? QuizLang[props.lang].SuccessTitle : QuizLang[props.lang].FailedTitle,\n                result ? QuizLang[props.lang].Success : QuizLang[props.lang].Failed(game[current].answers),\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: async () => {\n                            if (current + 1 <= game.length - 1)\n                                setCurrent(current + 1);\n                            else {\n                                const path = success >= fail ? require(`../../../../assets/sound/global/applause.mp3`) : require(`../../../../assets/sound/global/you_lose.mp3`);\n                                if (success >= fail) setConfetti(true);\n                                const { sound } = await Audio.Sound.createAsync(path);\n                                setSound(sound);\n                                sound.playAsync();\n                                setModal(true);\n                            }\n                        },\n                    }\n                ]\n            )\n        )\n    };\n\n    const answerQuestion = async () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        stopSound();\n        setAnswer('');\n        const result = game[current].answers.includes(answerTrimedLowercase);\n        if (result === false) {\n            // increment the fail and update the API\n            setFail(fail + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, false);\n        } else {\n            // increment the success and update the API\n            setSuccess(success + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, true)\n        }\n        openAlertResultQuestion(result);\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                {confetti && success >= fail ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n                )}\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => props.setTab(0)}\n                    ModalComponent={Modal}\n                >\n                    {success >= fail ? \n                        <>\n                            <Lottie LottieSource={TrophyLottie} ImageSource={TrophyImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} loop={false} />\n                            <Text style={{color:'blue', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].SuccessQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].SuccessQuiz(fail, success)}</Text>\n                        </>\n                    :\n                        <>\n                            <Lottie LottieSource={SadLottie} ImageSource={SadImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} />\n                            <Text style={{color:'red', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].FailQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].FailQuiz(fail, success)}</Text>\n                        </>\n                    }\n                    <Button title={QuizLang[props.lang].Leave} onPress={() => props.setTab(0)} containerStyle={styles.leaveButton} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </Overlay>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button buttonStyle={styles.buttonQuizGameOK} title={QuizLang[props.lang].OK} onPress={() => { answerQuestion() }} />\n                </View>\n            </>\n        }\n    </>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\n// This component is mounted when the user clicks on 'Play' in the main quiz menu\nexport default function Play(props) {\n    const [play, setPlay] = useState(false);\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quizId={props.quiz._id}\n                personId={props.personId}\n                quiz={props.quiz.content}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n                quizLength={props.quizLength}\n            />\n        }\n    </View>);\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{QuizLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Rules()}</Text>\n\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].CustomHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Custom()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler, Alert } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber, randomArrayElement } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Creation/CreateQuiz';\nimport Play from './Play';\nimport Help from './Help';\n\nimport * as API from '../../../data/quizApi';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1) {\n                    Alert.alert(\n                        QuizLang[props.lang].GiveUpQuizTitle,\n                        QuizLang[props.lang].GiveUpQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    setTab(0);\n                                }\n                            },\n                        ]\n                    )\n                }\n                else setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            let rand = randomArrayElement(random, 0, quiz.length - 1);\n            setRandom(rand);\n        }\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    isLoading={isLoading}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                quizLength={quiz.length}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    setReload={setReload}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return <View style={styles.view}>{printPage()}</View>;\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Essai${tries > 1 ? 's' : ''} restant${tries > 1 ? 's' : ''}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Score actuel: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Commencer \",\n        GiveUp: \"Abandonner\",\n        Reinit: \"Nouveau modèle\",\n        TitleGiveUp: \"Abandonner la partie\",\n        SureToGiveUp: \"Êtes-vous sûr(e) de vouloir abandonner la partie? Votre score sera enregistré.\",\n        Congratulations: 'Félicitations !!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: \"Recommencer\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'Le jeu des pairs, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu des pairs est assez connu et classique. Lorsque vous commencerez la partie, vous aurez un {0}. Cliquez alors sur le bouton \"{1}\" sur le bas de l’écran pour retourner les cartes face verso.\\n\\nVous devrez alors {2}. Par exemple, si vous cliquez sur une carte rouge, vous devrez cliquer sur l’autre carte rouge ensuite.\\n\\nPlus vous grimpez dans le score, plus le nombre de paires s’ajoutent au schéma. Il peut y avoir jusqu’à {3} au total.`,\n                boldText: [\"schéma de plusieurs paires de cartes face recto\", \"Commencer\", \"retourner les paires l'une après l’autre\", \"6 paires\"],\n            });\n        },\n        ScoreHead: \"Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois qu’un schéma est complété (c'est-à-dire que toutes les cartes ont été retournées), {0} et passez à un schéma suivant, {1}.\\n\\nLes points peuvent vous servir à avoir un joli score, mais aussi à recréer un nouveau schéma si vous l’avez complètement oublié. A chaque re-création d’un schéma, {2}. Et vous ne pouvez pas recréer un schéma s’il ne vous reste {3}.`,\n                boldText: [\"vous gagnez un point\", \"potentiellement plus difficile\", \"vous perdez un point\", \"qu’un essai pour le schéma actuel\"],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'How does it work',\n        Leave: 'Back',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Remaning tr${tries > 1 ? 'ies' : 'y'}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Actual score: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Start \",\n        GiveUp: \"Give up\",\n        Reinit: \"New model\",\n        TitleGiveUp: \"Give up the game\",\n        SureToGiveUp: \"Are you sure to give up this party? Your score will be saved.\",\n        Congratulations: 'Congratulations!!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        SoBad: 'So sad...',\n        ScoreNotBeated: 'Your daily score has not been beaten... But you can retry!',\n        Retry: \"Retry\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Best score made today: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'The double memory, how does it works?',\n        RulesHead: \"The rules\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The game of peers (or double memory) is quite familiar and classic. When you start the game, you will have a {0}. Then click on the \"{1}\" button at the bottom of the screen to turn the cards face up.\\n\\nFor example, if you click on a red card, you will have to click on the other red card next.\\n\\nThere can be up to {3} in total.`,\n                boldText: [\"pattern of several pairs of cards face up\", \"Start\", \"turn over the pairs one after the other\", \"6 pairs\"],\n            });\n        },\n        ScoreHead: \"The score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `Each time a pattern is completed (i.e., all the cards have been turned over), {0} and move on to the next pattern, {1}.\\n\\nThe points can be used to get a nice score, but they can also be used to recreate a new pattern if you've completely forgotten about it. Each time you re-create a pattern, {2}. And you can't recreate a pattern if you don't have {3} left.`,\n                boldText: [\"you earn a point\", \"potentially more challenging\", \"you lose a point\", \"than a try for the current pattern\"],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    view: {\n        height: hp('100%'),\n        paddingBottom: 40,\n        flex: 1\n    },\n    logo: {\n        width: 120,\n        height: undefined,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n        resizeMode: \"center\",\n        aspectRatio: 1\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n        marginBottom: 20\n    },\n    RectoCard: {\n        width: wp('21%'),\n        height: 0,\n        backgroundColor: '#C3C3CF',\n        borderRadius: 20,\n        borderColor: '#858593',\n        borderWidth: 1,\n        aspectRatio: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    PlayingCard: {\n        width: wp('21%'),\n        height: 0,\n        borderRadius: 20,\n        aspectRatio: 1,\n        borderColor: '#68FF5C',\n        borderWidth: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    VersoCard: {\n        width: wp('21%'),\n        height: 0,\n        borderRadius: 20,\n        opacity: .8,\n        marginHorizontal: 5,\n        aspectRatio: 1,\n        marginVertical: 5\n    },\n    IconCard: {\n        marginTop: 23\n    },\n    viewGame: {\n        marginTop: 10,\n        width: wp('95%'),\n        height: hp('55%'),\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    buttonViewPlay: {\n        flexDirection: 'row',\n        width: wp('100%'),\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: 10\n    },\n    playButtons: {\n        alignContent: 'center',\n        textAlign: 'center',\n        paddingHorizontal: 30,\n        borderRadius: 10,\n        marginHorizontal: 5\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        paddingTop: 20,\n        width: wp('100%'),\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={DoubleLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{DoubleLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].Rules()}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].ScoreHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].ScoreHelp()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React from 'react';\nimport { Image, View } from 'react-native';\nimport { Button, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport DoubleLogo from '../../../assets/img/activities/double/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={DoubleLogo} style={styles.logo} resizeMode={'cover'} />\n\n            <Button\n                title={DoubleLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={DoubleLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <View>\n\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: -50,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                        type: 'ionicon',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.ambiantSoundPlay() }\n            />\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 20,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.soundEnabled ? 'sound' : 'sound-mute',\n                        type: 'entypo',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.setSoundEnabled(prev => !prev) }\n            />\n            </View>\n\n            <Button\n                title={DoubleLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => {\n                    props.ambiant.unloadAsync();\n                    props.setPage(null);\n                }}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}","const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};\n\nexport const generateRandomPair = (length) => {\n    const colors = [\n        '#791414',\n        '#143479',\n        '#791462',\n        '#147920',\n        '#797714',\n        '#14AB9D'\n    ];\n    const icons = [\n        'airplane',\n        'boat',\n        'bulb',\n        'color-palette',\n        'earth',\n        'gift',\n        'happy',\n        'heart-circle',\n        'restaurant',\n        'ribbon'\n    ]\n    var arr = [];\n    for (let i = 0; i < length / 2; i++) {\n        var indexColor = Math.floor(Math.random() * colors.length);\n        var indexIcon = Math.floor(Math.random() * icons.length);\n        arr.push({ color: colors[indexColor], icon: icons[indexIcon] }, { color: colors[indexColor], icon: icons[indexIcon] });\n        colors.splice(indexColor, 1);\n        icons.splice(indexIcon, 1);\n    }\n    arr = shuffle(arr);\n    for (let i = 0; i < arr.length; i++) {\n        const el = arr[i];\n        el.idx = i\n    }\n\n    return (arr);\n};","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements';\n\nimport styles from '../styles';\n\nexport default function Card(props) {\n    var cardStyles;\n    if (props.inPlay) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.PlayingCard]];\n    else if (props.inFound || props.show) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.VersoCard]];\n    else cardStyles = styles.RectoCard\n\n    const icon = !props.inFound && !props.inPlay && !props.show ? 'help-circle-outline' : props.icon;\n\n    return (\n        <>\n            <TouchableOpacity style={ cardStyles } onPress={() => {\n                if (!props.inPlay && !props.inFound) props.ReturnCard(props.index);\n            }}>\n                <Icon\n                    name={icon}\n                    size={props.inFound || props.show || props.inPlay ? 30 : 24}\n                    color={props.inFound || props.show || props.inPlay ? 'white' : 'grey'}\n                    type=\"ionicon\"\n                    style={styles.IconCard}\n                />\n            </TouchableOpacity>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { View, Text, Modal } from 'react-native';\n\nimport { Button, Overlay, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../assets/img/activities/sad.gif';\n\nimport Lottie from '../../utils/Lottie';\n\nimport styles from './styles';\n\nimport { generateRandomPair } from './subs/helpers';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport Card from './subs/Card';\n\nexport default function Play(props) {\n    const [game, setGame] = useState([...generateRandomPair(4)]); // the current map game\n    const [found, setFound] = useState([]);\n    const [tries, setTries] = useState(3);\n    const [play, setPlay] = useState([]); // the current play of the player, an array with two values max, corresponding to the cards the player played\n    const [show, setShow] = useState(true);\n    const [confetti, setConfetti] = useState(false);\n    const [pause, setPause] = useState(false);\n\n    const TrophyLottie = require('../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../assets/lottie/sad.json');\n\n    const setLengthGame = () => {\n        if (props.score <= 8)\n            return 4;\n        else if (props.score <= 15)\n            return 6;\n        else if (props.score <= 30)\n            return 8;\n        else if (props.score <= 45)\n            return 10;\n        else\n            return 12;\n    }\n\n    // Exemple game element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null },\n            { idx: 2, color: '#ffffff', icon: null },\n            { idx: 3, color: '#ferdnc', icon: null }\n        ]\n    */\n\n        // each play, we push the current card to the play state, and check if the first element exists in the\n        // game state, and if the second element is the same as the first one, if so => success for a round, and push\n        // this pair in the found state. If fail => clear the play && found states\n\n    // Exemple play element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 2, color: '#ffffff', icon: null }\n        ] // this is a successful array\n\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null }\n        ] // this is a fail array\n    */\n\n    const failOverlay = () => {\n        if (props.modal == false) return;\n        return (\n            <>\n                <Lottie\n                    LottieSource={SadLottie}\n                    ImageSource={SadImage}\n                    autoplay={true}\n                    loop={true}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const successOverlay = () => {\n        if (!confetti) setConfetti(true);\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].BestScoreToday(props.bestScoreDay)}\n                </Text>\n                <Lottie\n                    LottieSource={TrophyLottie}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n    \n    const newModel = () => {\n        if (props.score == 0) return;\n        const currentGameLength = game.length;\n        props.setScore(prevScore => prevScore - 1);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(currentGameLength)]);\n    };\n\n    const printButton = () => {\n        return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={show ? DoubleLang[props.lang].Start : DoubleLang[props.lang].Reinit} onPress={() => { if (show) setShow(false); else newModel(); }} buttonStyle={[styles.playButtons, {backgroundColor: show ? '#208bdc' : 'green'}]} icon={\n                    <Icon\n                    name={show ? \"play\" : ''}\n                    size={18}\n                    color=\"white\"\n                    type=\"ionicon\"\n                />\n                } iconRight={true} disabled={!show && props.score === 0 || tries <= 1} />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.ambiantSoundPlay() }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.soundEnabled ? 'sound' : 'sound-mute',\n                            type: 'entypo',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.setSoundEnabled(prev => !prev) }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='red'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: 'caret-back',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.giveUp() }\n                    style={{marginHorizontal: 5}}\n                />\n            </View>);\n    };\n    \n    const ReturnCard = (key) => {\n        if (pause || show) return;\n        const currentPlay = play;\n        const indexGame = game[key];\n        const playing = [...currentPlay, indexGame];\n        if (playing.length == 2) {\n            // check if same card or return all and lose a try\n            if (playing[0].color === playing[1].color && playing[0].icon === playing[1].icon) {\n                const currentGameLength = game.length;\n                const nFound = [...found, playing[0], playing[1]];\n                if (nFound.length == currentGameLength) {\n                    props.playSound('next');\n                    props.setScore(prevScore => prevScore + 1);\n                    setShow(true);\n                    setTries(3);\n                    setGame([...generateRandomPair(setLengthGame())]);\n                    setFound([]);\n                } else {\n                    props.playSound('success');\n                    setFound(nFound);\n                }\n                setPlay([]);\n            } else {\n                setPlay(playing);\n                props.playSound('fail');\n                setPause(true);\n                setTimeout(() => {\n                    if (tries != 0) setTries(prevTries => prevTries - 1);\n                    if (tries === 0)\n                        props.endGame();\n                    else {\n                        setPlay([]);\n                        setFound([]);\n                    }\n                    setPause(false);\n                }, 1000);\n            }\n        } else {\n            setPlay(playing);\n            props.playSound('play');\n        }\n    };\n\n    const printCards = () => {\n        return game.map( (el, i) => {\n            var inFound = false;\n            var inPlay = false;\n            if (found.find(element => element.idx === i )) inFound = true;\n            else if (play.find(element => element.idx === i )) inPlay = true;\n            return (<Card show={show} key={i} index={i} inFound={inFound} inPlay={inPlay} backgroundColor={el.color} icon={el.icon} ReturnCard={ReturnCard} />);\n        });\n    };\n\n    const newGame = () => {\n        if (confetti) setConfetti(false);\n        props.setModal(false);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(4)]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n            )}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                { props.success && props.modal ? successOverlay() : failOverlay() }\n                <View style={{flexDirection: 'row', marginTop: 20}}>\n                    <Button title={DoubleLang[props.lang].Retry} onPress={() => newGame()} buttonStyle={{marginRight: 10}} icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n\n                    <Button title={DoubleLang[props.lang].Leave} onPress={() => { \n                        if (confetti) setConfetti(false);\n                        props.setModal(false);\n                        props.setTab(0);\n                    }} buttonStyle={{backgroundColor: 'red'}} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </View>\n            </Overlay>\n            <View style={styles.viewGame}>\n                { printCards() }\n            </View>\n            <View style={{alignItems: 'center', width: wp('100%'), marginTop: -10}}>\n                <Text>{DoubleLang[props.lang].Score(props.score)}</Text>\n                <Text>{DoubleLang[props.lang].BestDayScore(props.bestScoreDay)}</Text>\n                <Text>{DoubleLang[props.lang].RemaningTries(tries)}</Text>\n                { printButton() }\n            </View>\n        </>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport {\n    Text,\n    BackHandler,\n    ScrollView,\n    Alert\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport styles from './styles';\n\nimport * as API from '../../../data/doubleApi';\n\nimport Help from './Help';\nimport Menu from './Menu';\nimport Play from './Play';\n\nconst currentDate = new Date().toLocaleDateString('fr-FR');\n\nexport default function Double(props) {\n    const [tab, setTab] = useState(0);\n    const [score, setScore] = useState(0);\n    const [bestScoreDay, setBestScoreDay] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [ambiant, setAmbiant] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n    const [soundEnabled, setSoundEnabled] = useState(true);\n    const [ambiantEnabled, setAmbiantEnabled] = useState(true);\n\n    useEffect( async () => {\n        // API.clear();\n\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by MCOCHET - check his soundcloud here: https://soundcloud.com/mcochet\n            require(`../../../assets/sound/double/ambiant.mp3`),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n\n        API.getScoreDay(props.personId, currentDate).then((data) => {\n            if (data.length > 0) setBestScoreDay(data[0].score);\n        });\n\n        API.getBestScore(props.personId).then((data) => {\n            if (data.length > 0) setBestScore(data[0].score);\n        });\n\n    }, []);\n\n    useEffect(() => {\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1 && score > 0) {  \n                    giveUp()\n                    return ;\n                }\n                setTab(0);\n            } else {\n                ambiant.unloadAsync();\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, ambiant]);\n\n    const endGame = async () => {\n        setModal(true);\n        let bestDayScore = false;\n        let bestScore = false;\n        if (score > bestScoreDay) { \n            playSound('applause');\n            setSuccess(true);\n            setBestScoreDay(score);\n            bestDayScore = true;\n            if (score > bestScore) {\n                bestScore = true;\n                setBestScore(score);\n            }\n        } else {\n            playSound('lose');\n            setSuccess(false);\n        }\n        await API.insertScore(props.personId, score, currentDate, bestDayScore, bestScore);\n        setScore(0);\n    };\n\n    const ambiantSoundPlay = () => {\n        if (ambiantEnabled) ambiant.pauseAsync();\n        else ambiant.playAsync();\n        setAmbiantEnabled(prevEnable => !prevEnable);\n    };\n    \n    const giveUp = () => {\n        if (score === 0) setTab(0);\n        else return Alert.alert(\n            DoubleLang[props.lang].TitleGiveUp,\n            DoubleLang[props.lang].SureToGiveUp,\n            [\n                {\n                    text: DoubleLang[props.lang].Leave,\n                    onPress: () => { null },\n                    style: 'cancel'\n                },\n                {\n                    text: DoubleLang[props.lang].GiveUp,\n                    onPress: () => {\n                        endGame();\n                    }\n                },\n            ]\n        )\n    };\n\n    const playSound = async (type) => {\n        if (!soundEnabled && !['applause', 'lose'].includes(type)) return;\n        if (sound) sound?.unloadAsync();\n        let choosenSound;\n        switch (type) {\n            case \"success\":\n                choosenSound = require(`../../../assets/sound/double/success.mp3`);\n                break;\n            case \"fail\":\n                choosenSound = require(`../../../assets/sound/double/fail.mp3`);\n                break;\n            case \"play\":\n                choosenSound = require(`../../../assets/sound/double/play.mp3`);\n                break;\n            case \"next\":\n                choosenSound = require(`../../../assets/sound/double/next.mp3`);\n                break;\n            case \"applause\":\n                choosenSound = require(`../../../assets/sound/global/applause.mp3`);\n                break;\n            case \"lose\":\n                choosenSound = require(`../../../assets/sound/global/you_lose.mp3`);\n                break;\n            default:\n                break;\n        }\n        const { sound } = await Audio.Sound.createAsync(choosenSound);\n        setSound(sound);\n        sound.playAsync();\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    ambiant={ambiant}\n                    setSoundEnabled={setSoundEnabled}\n                    soundEnabled={soundEnabled}\n                    ambiantEnabled={ambiantEnabled}\n                    ambiantSoundPlay={ambiantSoundPlay}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                        lang={props.lang}\n                        setTab={setTab}\n                        score={score}\n                        setScore={setScore}\n                        giveUp={giveUp}\n                        modal={modal}\n                        setModal={setModal}\n                        bestScoreDay={bestScoreDay}\n                        success={success}\n                        endGame={endGame}\n                        playSound={playSound}\n                        ambiantSoundPlay={ambiantSoundPlay}\n                        ambiantEnabled={ambiantEnabled}\n                        soundEnabled={soundEnabled}\n                        setSoundEnabled={setSoundEnabled}\n                    />;\n        } else if (tab === 2) {\n            return (<Help lang={props.lang} setTab={setTab} />);\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <ScrollView style={styles.view} contentContainerStyle={{alignItems: 'center'}}>\n            { printPage() }\n        </ScrollView>\n    );\n};","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\nimport Double from '../components/activities/Double';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return <Double lang={lang} setPage={setPage} personId={personId} />;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        },\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nimport { Audio } from 'expo-av';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n\n    useEffect( () => {\n        Audio.setIsEnabledAsync(true);\n    }, [])\n\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    scoreRow: {\n        flex: 1,\n        height: 180,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreRowSimon: {\n        flex: 1,\n        height: 250,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreHeading: {\n        fontSize: 18,\n        color: '#2089dc',\n        fontWeight: 'bold',\n        margin: 5\n    },\n    NoScore: {\n        color: 'grey',\n        fontStyle: 'italic',\n        marginTop: 45,\n        marginLeft: 45\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\nimport { Badge } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport { ScoreRatio } from '../../../../components/activities/Quiz/utils/scoreFunc';\nimport * as API from '../../../../data/quizApi';\n\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nexport default function QuizScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [quizScore, setQuizScore] = useState([]);\n\n    useEffect( () => {\n        API.get(props.personId).then((data) => {\n            const arr = [];\n            for (let i = 0; i < data.length; i++) {\n                const el = data[i];\n                arr.push({score: ScoreRatio(el.content, props.personId), name: el.name});\n            }\n            setQuizScore(arr);\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (quizScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            return quizScore.map( (el,i) => {\n                return (\n                    <View style={{marginHorizontal: 15}} key={i}>\n                        <Badge\n                            value={el.name}\n                            textStyle={{textAlign: 'center'}}\n                            badgeStyle={{position:'absolute', paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 100, zIndex: 3}}\n                        />\n                        <CircularProgress\n                            value={el.score}\n                            textStyle={{marginBottom: -10}}\n                            title={ActivitiesLang[props.lang].Success}\n                            valueSuffix={'%'}\n                            titleStyle={{marginBottom: 10}}\n                            initialValue={0}\n                            \n                            delay={500}\n                            activeStrokeColor={'#2089dc'}\n                            radius={65}\n                            inActiveStrokeColor={'#9b59b6'}\n                            inActiveStrokeOpacity={0.5}\n                            inActiveStrokeWidth={6}\n                            activeStrokeWidth={12}\n                        />\n                    </View>\n                );\n            });\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRow} horizontal={true}>\n            <View>\n                <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].QuizScore}</Text>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} /> :\n                    <ScrollView horizontal={true}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/simonApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function SimonScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [simonScore, setSimonScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setSimonScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (simonScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = simonScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].SimonScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/doubleApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function DoubleScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [doubleScore, setDoubleScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setDoubleScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (doubleScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = doubleScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].DoubleScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React from 'react';\nimport { ScrollView } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\n\nimport QuizScore from './QuizScore';\nimport SimonScore from './SimonScore';\nimport DoubleScore from './DoubleScore';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <QuizScore lang={props.lang} personId={props.personId} />\n            <DoubleScore lang={props.lang} personId={props.personId} />\n            <SimonScore lang={props.lang} personId={props.personId} />\n        </ScrollView>\n    );\n}\n","import React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    \n    const navigate = useNavigate();\n\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: 60, color: '#3B8EFF', backgroundColor: '#355c7d' }],\n                tabBarLabelStyle: [{ color: 'white', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} personId={props.personId} /> }\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        paddingBottom: 10,\n        width: wp('100%'),\n        backgroundColor: '#355c7d'\n    },\n    topLottie: {\n        marginTop: 10,\n        width: 60,\n        height: undefined,\n        marginBottom: 15,\n        backgroundColor: '#355c7d'\n    },\n    bgLottie: {\n        width: wp('100%'),\n        opacity: 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: wp('100%'),\n        height: hp('100%'),\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: '#355c7d'\n    },\n    heading: {\n        fontSize: 20,\n        color: 'white',\n        marginTop: 0,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%'\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport TopImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/selection');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/selection', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/selection', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TopImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig, reset } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport SelectionMenu from './pages/SelectionMenu';\nimport Activities from './pages/Activities';\nimport Home from './pages/Home';\nimport Tutorial from './pages/Tutorial';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [lang, setLang] = useState('fr');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        // reset();\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    useEffect( () => {\n        let local = Localization.locale?.split('-')[0] || 'fr';\n        setLang(['en', 'fr'].includes(local) ? local : 'fr');\n        console.log('- Imported config file -');\n    }, [config]);\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                    setLang={setLang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/tutorial\"\n                            element={\n                                <Tutorial\n                                    lang={lang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={<Home lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/selection\"\n                            element={\n                                <SelectionMenu\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}