{"version":3,"file":"static/js/main.a7c2203a.js","mappings":"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","sources":["data/configApi.js","language/interface/index.js","language/tutorial/index.js","language/selection/index.js","components/selection/styles.js","components/utils/Lottie.js","components/selection/PersonCreation/Success.js","data/dictaphoneApi.js","data/simonApi.js","data/quizApi.js","data/doubleApi.js","utils/helpers.js","data/personApi.js","components/selection/PersonCreation/Form.js","components/selection/PersonCreation/CreatePerson.js","pages/SelectionMenu/styles.js","pages/SelectionMenu/os/android.js","pages/SelectionMenu/os/ios.js","components/selection/Rows.js","pages/SelectionMenu/index.js","pages/ChooseUsername/styles.js","pages/ChooseUsername/index.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","language/home/index.js","pages/Home/styles.js","pages/Home/Menu.js","utils/dilacrypt.js","utils/share.js","pages/Home/ImportData.js","pages/Home/index.js","components/utils/HomeOrTutorial.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/Help.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/utils/quizFunc.js","components/activities/Quiz/Creation/QuestionList.js","components/activities/Quiz/utils/scoreFunc.js","components/activities/Quiz/QuizList.js","components/activities/Quiz/ViewQuizList.js","components/activities/Quiz/SuccessContent.js","components/activities/Quiz/Creation/FormQuizContent.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Creation/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/Help.js","components/activities/Quiz/index.js","language/activities/double/index.js","components/activities/Double/styles.js","components/activities/Double/Help.js","components/activities/Double/Menu.js","components/activities/Double/subs/helpers.js","components/activities/Double/subs/Card.js","components/activities/Double/Play.js","components/activities/Double/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/QuizScore/index.js","pages/Activities/Score/SimonScore/index.js","pages/Activities/Score/DoubleScore/index.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","index.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n};\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n};\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n};\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n};\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n};\n\nexport async function reset() {\n    const path = `${FileSystem.documentDirectory}persons`;\n    const folder = await FileSystem.getInfoAsync(path);\n    if (folder.exists) {\n        FileSystem.deleteAsync(path).catch(err => {\n            console.error('folder delete err:',err);\n        });\n    }\n    return AsyncStorage.clear();\n};","export const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retour au formulaire',\n        OpenActivity: 'Ouvrir le profil',\n        ReturnList: \"Retour aux paramètres\",\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n        OpenActivity: 'Open this profile',\n        ReturnList: \"Return to the settings\",\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet\\nrequise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? Il est possible {0} la donnée d'une personne et de {1} dans un autre appareil !\",\n                boldText: [\"d'exporter\", \"l'importer\"],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can {0} a person's data and {1} it in another device!\",\n                boldText: ['export', 'import'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer {0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to achieve today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: wp('65%'),\n        height: undefined,\n        alignSelf: 'center',\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: wp('45%'),\n        height: hp('5%')\n    },\n    btnSave: {\n        width: wp('45%'),\n        height: hp('5%')\n    },\n    input: {\n        fontSize: wp('4%'),\n        marginHorizontal: 10,\n        height: hp('6%')\n    },\n    icon: {\n        height:hp('6%'),\n        marginTop: 15\n    },\n    inputContainer: {\n        width: wp('72%'),\n        marginTop: 10\n    },\n    label: {\n        fontSize: wp('4%')\n    },\n    profilePicture: {\n        width: wp('25%'),\n        height: undefined,\n        borderRadius: 100,\n        marginBottom: hp('2%'),\n        aspectRatio: 1\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: wp('60%'),\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: wp('5%'),\n        color: '#788bff',\n        marginBottom: hp('3%'),\n    },\n    ReturnToForm: (edit) => {\n        return {\n            //marginHorizontal: edit ? 20 : 0,\n            marginRight: edit ? 0 : 20,\n            borderRadius: 15,\n            backgroundColor: 'red',\n            height: hp('6%'),\n            width: wp('45%')\n        }\n    },\n    openActivity: {\n        borderRadius: 15,\n        paddingHorizontal: 15,\n        height: hp('6%'),\n        width: wp('40%')\n    },\n    title: {\n        fontSize: wp('4%')\n    }\n});\n","import React, { useEffect, useRef } from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    const animationRef = useRef(LottieView);\n\n    useEffect( () => {\n        animationRef?.current?.play();\n    }, []);\n    \n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                ref={animation => {\n                    animationRef.current = animation\n                }}\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport { useNavigate } from 'react-router-native';\nimport SuccessImage from '../../../assets/img/selection/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/selection/addedUser.json');\n    const navigate = useNavigate();\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <View style={{flexDirection: 'row', alignItems: 'center', alignContent: 'center', alignSelf: 'center'}}>\n                <Button\n                    title={InterfaceLang[props.lang].ReturnToForm}\n                    onPress={(e) => {\n                        props.close();\n                    }}\n                    buttonStyle={ styles.ReturnToForm(props.edit) }\n                    titleStyle= { styles.title }\n                />\n                { props.edit == false ? <Button\n                    title={InterfaceLang[props.lang].OpenActivity}\n                    onPress={(e) => {\n                        navigate(`/activities/${props.id}`, {\n                        state: {\n                            lang: props.lang ?? 'fr',\n                            username: props.username,\n                        }\n                    });\n                    }}\n                    buttonStyle={ styles.openActivity }\n                    titleStyle={ styles.title }\n                /> : <></> }\n            </View>\n        </View>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nconst createQuizContent = async (personId, el) => {\n    el.id = uuidv4();\n    el.score = [{personId: personId, success: 0, failed: 0}];\n    if (['audio', 'image'].includes(el.fileType)) {\n        await uploadQuizFile(el);\n    }\n};\n\nconst uploadQuizFile = async (el) => {\n    const filename = `${uuidv4()}${el.fileType == 'audio' ? '.m4a' : '.jpg'}`;\n    const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n    await FileSystem.getInfoAsync(el.uri).then(e => {\n        console.log(e);\n    }).catch(er => {\n        console.log('-------------');\n        console.log(er);\n    })\n    await FileSystem.copyAsync({\n        from: el.uri,\n        to: `${path}${filename}`\n    }).then(async e => {\n        await FileSystem.deleteAsync(el.uri);\n        el.uri = `${path}${filename}`;\n    }).catch(err => {\n        console.log(err);\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        await createQuizContent(personId, el);\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport async function updateScore(personId, quizId, contentId, success) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    const contentIndex = quiz[0].content.findIndex(el => el.id == contentId );\n    const scoreIndex = quiz[0].content[contentIndex].score.findIndex(el => el.personId = personId);\n    if (success) quiz[0].content[contentIndex].score[scoreIndex].success++\n    else quiz[0].content[contentIndex].score[scoreIndex].failed++\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function deleteId(personId, quizId) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n};\n\nexport async function deleteQuestion(quizId, questionId) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    const content = quiz[0].content;\n    const contentIndex = content.findIndex(el => el.id == questionId );\n    if (['audio', 'image'].includes(content[contentIndex]))\n        await FileSystem.deleteAsync(content.uri);\n    quiz[0].content = content.splice(0, contentIndex);\n    return db.updateAsync({_id: quizId}, {...quiz[0]})\n};\n\nexport async function getById(quizId) {\n    return db.findAsync({ _id: quizId }, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n};\n\nexport async function saveQuiz(personId, quizId, content) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    if (!quiz) return;\n    for (let i = 0; i < content.length; i++) {\n        const el = content[i];\n        if (!el.id)\n            await createQuizContent(personId, el);\n        else if (el.id && el.editedFile) {\n            await uploadQuizFile(el);\n            delete el.editedFile;\n        }\n    }\n    quiz[0].content = content;\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function reset() {\n    return db.removeAsync({}, { multi: true });\n};\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DoubleSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nexport const randomArrayElement = (exclude, min, max) => {\n    randNumber = randomNumber(min, max);\n    if (randNumber == exclude)\n        return randomArrayElement(exclude, min, max);\n    return randNumber;\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\nimport { db as QuizDB } from './quizApi'\nimport { db as DoubleDB } from './doubleApi';\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await DoubleDB.removeAsync({ personId: id });\n    await QuizDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return db.removeAsync({ _id: id });\n};\n\nexport async function reset() {\n    const path = `${FileSystem.documentDirectory}persons`;\n    const file = await FileSystem.getInfoAsync(path);\n    if (file.exists) {\n        FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(async () => {\n            // could be done with promise allSttled\n            await SimonDB.removeAsync({}, { multi: true });\n            await QuizDB.removeAsync({}, { multi: true });\n            await DictaphoneDB.removeAsync({}, { multi: true });\n        }).catch(() => {\n            console.log('[!] Directory does not exists');\n        });\n    }\n    return db.removeAsync({}, { multi: true });\n};","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0)\n                personId = result._id;\n            props.setId(personId);\n            await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${personId}`, {intermediates: true});\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: wp('3%') }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={wp('4%')}\n                        color=\"white\"\n                        style={{ marginHorizontal: wp('2%') }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={wp('6%')} color=\"grey\" containerStyle={styles.icon}  />}\n                label={InterfaceLang[props?.lang].FullName}\n                labelStyle={ styles.label }\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={styles.input}\n                value={props.fullname}\n                containerStyle={ styles.inputContainer }\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={wp('6%')} color=\"grey\" containerStyle={styles.icon} />}\n                label={InterfaceLang[props?.lang].Description}\n                labelStyle={styles.label}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={ styles.input }\n                containerStyle={ styles.inputContainer }\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: wp('3%') }}\n                buttonStyle={styles.btnSave}\n                containerStyle={{ marginTop: hp('1%')}}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={wp('4%')}\n                        color=\"white\"\n                        style={{ marginHorizontal: wp('2%') }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n    const [id, setId] = useState(0);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n\n        id: id,\n        setId: setId\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n        zIndex: 1,\n    },\n    fab: {\n        position: 'absolute',\n        marginLeft: wp('88%'),\n        marginTop: hp('2%'),\n        zIndex: 3 \n    },\n    wrapper: {\n        marginTop: 20,\n        textAlign: 'center',\n        alignItems: 'center',\n        zIndex: 1,\n    },\n    topBanner: {\n        backgroundColor:'#355c7d'\n    },\n    topImage: {\n        // flex: 1,\n        marginTop: hp('1%'),\n        width: wp('15%'),\n        height: undefined,\n        marginBottom: hp('2%'),\n        backgroundColor: '#355c7d'\n    },\n    heading: {\n        marginTop: 10,\n        fontSize: hp('3%'),\n        zIndex: 2,\n        color: 'white'\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    subtitle: {\n        textAlign: 'center',\n        fontSize: hp('2%'),\n        color: 'white'\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        borderRadius: 20,\n        height: hp('5%'),\n        overflow: 'hidden',\n    },\n    buttonContainer: {\n        marginVertical: 25,\n        width: wp('120%'),\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        fontSize: hp('2%')\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n        height: hp('6%')\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: hp('2%')\n    },\n});\n","import React, { useRef } from 'react';\nimport {\n    Text,\n    View,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB, Button } from 'react-native-elements';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as SelectionMenuLang } from '../../../language/selection';\nimport CreatePerson from '../../../components/selection/PersonCreation/CreatePerson';\n\nimport Lottie from '../../../components/utils/Lottie';\nimport styles from '../styles';\n\nexport default function SelectionMenuAndroid(props) {\n\n    const swiper = useRef(null);\n    const navigate = useNavigate();\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - props.index, true);\n    };\n\n    const changeIndex = (idx) => {\n        props.setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                props.setBtnTxt(SelectionMenuLang[props.lang].AddAPerson);\n            } else if (idx === 1) {\n                props.setBtnTxt(SelectionMenuLang[props.lang].ReturnToList);\n            }\n            props.setActive(true);\n        }, 400);\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 85 + '%',\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home', {\n                    state: { username: props.username, setLang: props.setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n            <View style={styles.wrapper}>\n                <Lottie\n                    LottieSource={props.LottieSource}\n                    ImageSource={props.LoadingBrain}\n                    LottieStyle={styles.topImage}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[props.lang].Hello(props.username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[props.lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <Button\n                    style={styles.button}\n                    containerStyle={styles.buttonContainer}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (props.active === false) {\n                            return;\n                        }\n                        props.setActive(false);\n                        props.setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(props.index - 1);\n                    }}\n                    title={props.btnText}\n                    titleStyle={styles.buttonText}\n                />\n            </View>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {props.isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={props.slidePropsState || 0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={SelectionMenuLang[props.lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    props.setSearch(e);\n                                }}\n                                value={props.search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {props.persons && props.persons.length > 0 ? (\n                                props.printRows(props.persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[props.lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={props.persons}\n                                setPersons={props.setPersons}\n                                lang={props.lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import React, { useRef, useState } from 'react';\nimport {\n    Text,\n    View,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    KeyboardAvoidingView\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB, Button } from 'react-native-elements';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as SelectionMenuLang } from '../../../language/selection';\nimport CreatePerson from '../../../components/selection/PersonCreation/CreatePerson';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport Lottie from '../../../components/utils/Lottie';\n\nimport styles from '../styles';\n\nexport default function SelectionMenuIOS(props) {\n\n    const [idx, setIdx] = useState(parseInt(props.index));\n\n    const swiper = useRef(null);\n    const navigate = useNavigate();\n\n    const swipePage = () => {\n        setTimeout(() => {\n            if (idx === 1) {\n                props.setBtnTxt(props.redirected ? SelectionMenuLang[props.lang].ReturnToList : SelectionMenuLang[props.lang].AddAPerson); \n            } else {\n                props.setBtnTxt(props.redirected ? SelectionMenuLang[props.lang].AddAPerson : SelectionMenuLang[props.lang].ReturnToList);\n            }\n            swiper.current.scrollBy(1, true);\n            props.setActive(true);\n            if (idx == 1) setIdx(parseInt(0));\n            else setIdx(1);\n        }, 250);\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={ styles.fab }\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: wp('4%'),\n                        //style: {marginTop: 4}\n                    }\n                }\n                buttonStyle={{width: wp('9%'), height:hp('6%')}}\n                iconContainerStyle={{width: wp('9%'), height:hp('5%')}}\n                onPress={() => navigate('/home', {\n                    state: { username: props.username, setLang: props.setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n                <View style={styles.wrapper}>\n                    <Lottie\n                        LottieSource={props.LottieSource}\n                        ImageSource={props.LoadingBrain}\n                        LottieStyle={styles.topImage}\n                        ImageStyle={styles.topImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                    <Text style={styles.heading}>\n                        {SelectionMenuLang[props.lang].Hello(props.username)}\n                    </Text>\n                </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[props.lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <Button\n                    containerStyle={styles.buttonContainer}\n                    buttonStyle={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (props.active === false)\n                            return;\n                        props.setActive(false);\n                        props.setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(idx + 1);\n                    }}\n                    title={props.btnText}\n                    titleStyle={styles.buttonText}\n                />\n            </View>\n            </View>\n            <KeyboardAvoidingView behavior={\"height\"} style={{ flex: 1 }}>\n            <SafeAreaView style={styles.safeContainer}>\n                {props.isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        pagingEnabled={true}\n                        loadMinimal={true}\n                        loop={true}\n                        showsPagination={false}\n                        index={props.index}\n                    >\n                        <ScrollView >\n                            <Input\n                                placeholder={SelectionMenuLang[props.lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    props.setSearch(e);\n                                }}\n                                value={props.search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {props.persons && props.persons.length > 0 ? (\n                                props.printRows(props.persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[props.lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={props.persons}\n                                setPersons={props.setPersons}\n                                lang={props.lang}\n                            />\n                        </ScrollView>\n                    </Swiper>\n                )}\n            </SafeAreaView>\n            \n            </KeyboardAvoidingView>\n        </View>\n    );\n}\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white', paddingVertical: hp('3%') }\n            : { backgroundColor: '#f3f3f3', paddingVertical: hp('3%') };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n                containerStyle={{width: wp('10%'), height: undefined, borderRadius: 300, aspectRatio: 1}}\n            />\n            <ListItem.Content>\n                <ListItem.Title style={{fontSize: hp('2%')}}>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle style={{fontSize: hp('2%'), color:'gray'}}>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n} from 'react-native';\nimport { Platform } from 'react-native';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport SelectionMenuAndroid from './os/android';\nimport SelectionMenuIOS from './os/ios';\n\nimport LoadingBrain from '../../assets/img/activities/brain.gif';\nimport { lang as SelectionMenuLang } from '../../language/selection';\nimport Rows from '../../components/selection/Rows';\n\nimport * as Person from '../../data/personApi';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function SelectionMenu(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        props.redirected == 1 ? SelectionMenuLang[props.lang || lang].ReturnToList : SelectionMenuLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n    const setLang = state?.setLang || props.setLang;\n    const slidePropsState = state?.slide || props?.slide;\n\n    useEffect( () => {\n        setIndex(slidePropsState || 0);\n        setBtnTxt(index === 0 && props?.redirected != 1 ? SelectionMenuLang[lang].AddAPerson : SelectionMenuLang[lang].ReturnToList);\n    }, []);\n\n    useEffect(() => {\n        Audio.setIsEnabledAsync(false);\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    const printAccordingToOS = () => {\n        const propsSelectionMenuComponent = {\n            lang: lang,\n            username: username,\n            search: search,\n            setLang: setLang,\n            LottieSource: LottieSource,\n            LoadingBrain: LoadingBrain,\n            isLoading: isLoading,\n            index: index,\n            persons: persons,\n            btnText: btnText,\n            active: active,\n            redirected: props.redirected,\n\n            setIndex: setIndex,\n            setIsLoading: setIsLoading,\n            setActive: setActive,\n            setPersons: setPersons,\n            setBtnTxt: setBtnTxt,\n            setSearch: setSearch,\n            printRows: printRows,\n\n        }\n        if (Platform.OS === 'ios')\n            return <SelectionMenuIOS {...propsSelectionMenuComponent} />\n        else\n            return <SelectionMenuAndroid {...propsSelectionMenuComponent} />\n    }\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            { printAccordingToOS() }\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 40,\n        marginTop: -40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 50,\n        borderColor: 'gray',\n        borderRadius: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        width: 180,\n        textAlign: 'center',\n        elevation: 10\n    },\n    image: {\n        flex: 1,\n        width: 100\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n        height: 50\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername as insertUsername, SawTutorial, getUsername } from '../../data/configApi';\n\nimport SelectionMenu from '../SelectionMenu';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\nimport { Button } from 'react-native-elements';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [loadPage, setLoadPage] = useState(true);\n    const [confirmed, setConfirmed] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const [username, setUsername] = useState('');\n\n    useEffect(() => {\n        getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    setUsername(res[0].username);\n                    setRedirect(true);\n                }\n                setLoadPage(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoadPage(false);\n            });\n    }, []);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            insertUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setUsername(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (redirect)\n        return <SelectionMenu username={username} lang={props.lang} setLang={props.setLang} slide={1} />\n\n    if (loadPage)\n        return <View style={styles.container}></View>\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <Button\n                        title={isLoading ? (\n                            <ActivityIndicator\n                                color=\"white\"\n                                size=\"small\"\n                                animating={true}\n                            />\n                        ) : (\n                            'OK'\n                        )}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                        buttonStyle={styles.button}\n                        titleStyle={styles.buttonText}\n                    />\n                </View>\n            </View>\n        );\n    } else {\n        return <SelectionMenu username={username} lang={props.lang} setLang={props.setLang} slide={1} redirected={1} />\n    }\n}\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet, Platform } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        height: 100 + '%',\n        padding: 20,\n        alignItems: 'center'\n    },\n    slideOdd: {\n        height: 100 + '%',\n        alignItems: 'center',\n        backgroundColor: '#355c7d',\n    },\n    title: {\n        color: 'black',\n        fontSize: wp('5%'),\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: hp('2%')\n    },\n    text: {\n        color: 'black',\n        fontSize: wp('3%'),\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    titleOdd: {\n        color: 'white',\n        fontSize: wp('5%'),\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    textOdd: {\n        color: 'white',\n        fontSize: wp('3%'),\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    image: {\n        width: wp('30%'),\n        height: undefined,\n        marginBottom: 40,\n        marginTop: Platform.OS === 'ios' ? 60 : 20,\n        aspectRatio: 1\n    },\n    button: {\n        marginTop: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        borderWidth: 1,\n        height: 60\n    },\n    buttonText: {\n        color: '#355c7d'\n    },\n    buttonContainer: {\n        width: 250,\n    }\n});\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { Button } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\n\nexport default function Tutorial(props) {\n    const navigate = useNavigate();\n\n    return (\n        <>\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Button \n                            title={TutorialLang[props.lang].LastStepButton}\n                            buttonStyle={styles.button}\n                            containerStyle={styles.buttonContainer}\n                            onPress={() => {\n                                Config.SawTutorial(true);\n                                navigate('/username', {\n                                    state: { setLang: props.setLang }\n                                });\n                            }}\n                            titleStyle={styles.buttonText}\n                        />\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","export const lang = {\n    fr: {\n        Select: \"Sélection des personnes\",\n        Import: \"Importer un profil\",\n        Introduction: \"Introduction\",\n        Source: \"Accès au code source\",\n        License: \"Code sous licence GPL v3.\\nCréation originale par Diyaeddine LAOUID.\",\n        Language: \"Changer la langue\",\n        Step1: \"Vérification du format ... \",\n        Step2: \"Vérification du format de l'identité ... \",\n        Step3: \"Vérification d'une personne similaire ...\",\n        Step4: \"Vérification des activités ...\",\n        Step5: \"Vérification des quiz ...\",\n        Step6: \"Vérification des jeux des pairs ...\",\n        Step7: \"Vérification du Simon ...\",\n        Step8: \"Vérification du Journal vocal ...\",\n        Step9: \"Création de la personne ...\",\n        Step10: \"Création des quiz ...\",\n        Step11: \"Création des jeux des pairs ...\",\n        Step12: \"Création du Simon ...\",\n        Step13: \"Création du Dictaphone ...\",\n        Step14: \"L'importation s'est déroulée sans encombre ! :-)\",\n        GoBack: \"Retour\",\n        InvalidFile: \"Le fichier a été supprimé du cache\",\n        InvalidPersonFile: \"Le fichier importé est invalide !\",\n        IncorrectPersonFile: \"L'identité de la personne est mal saisie !\",\n        ErrorChekingPerson: \"Une erreur est survenue au moment de la vérification de la personne dans le système ...\",\n        InvalidActivitiesLength: \"Le nombre d'activités dans le tableau du fichier est beaucoup trop grand.\",\n        InvalidQuizData: \"Les données du quiz sont incorrectes ...\",\n        InvalidLogData: \"Les données du dictaphone sont incorrectes ...\",\n        InvalidDoubleData: \"Les données du jeu des pairs sont incorrectes ...\",\n        InvalidSimonData: \"Les données du Simon sont incorrectes ...\",\n        \n    },\n    en: {\n        Select: \"Select a person\",\n        Import: \"Import a profil\",\n        Introduction: \"Introduction\",\n        Source: \"Source code on GitHub\",\n        License: \"Licensed GPL v3 source code.\\nOriginally created by Diyaeddine LAOUID.\",\n        Language: \"Change language\",\n        Step1: \"Format checking ... \",\n        Step2: \"Identity format checking ... \",\n        Step3: \"Checking if person already registered ...\",\n        Step4: \"Activities length checking ...\",\n        Step5: \"Quiz checking ...\",\n        Step6: \"Double Memory checking ...\",\n        Step7: \"Simon checking ...\",\n        Step8: \"Journal log checking ...\",\n        Step9: \"Person creation ...\",\n        Step10: \"Quiz creation ...\",\n        Step11: \"Double Memory creation ...\",\n        Step12: \"Simon Memory creation ...\",\n        Step13: \"Journal log creation ...\",\n        Step14: \"The person has been successfully imported! :-)\",\n        GoBack: \"Back\",\n        InvalidFile: \"The file has been deleted from the cache\",\n        InvalidPersonFile: \"The imported file is invalid!\",\n        IncorrectPersonFile: \"The format of the imported person is invalid!\",\n        ErrorChekingPerson: \"Error when checking if this person exists...\",\n        InvalidActivitiesLength: \"The activities length on the file array is too big\",\n        InvalidQuizData: \"The quiz datas are invalid...\",\n        InvalidLogData: \"The journal logs datas are invalid...\",\n        InvalidDoubleData: \"The double memory game datas are invalid...\",\n        InvalidSimonData: \"The Simon datas are invalid...\",\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    container: {\n        height: 100 + '%',\n        backgroundColor: '#355c7d',\n        alignItems: 'center'\n    },\n    header: {\n        marginTop: 10 + '%',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    logo: {\n        width: wp('35%'),\n        height: undefined,\n        aspectRatio: 1\n    },\n    menu: {\n        marginTop: 2 + '%',\n        flex: 1,\n        marginBottom: 20\n    },\n    button: {\n        width: wp('70%'),\n        height: hp('6%'),\n        backgroundColor: 'white',\n        color: '#355c7d',\n        justifyContent: 'flex-start',\n        borderRadius: 25\n    },\n    titleStyle: {\n        color: '#355c7d',\n        textAlign: 'center',\n        fontSize: hp('2.2%')\n    },\n    iconStyle: {\n        marginRight: wp('5%'),\n        marginLeft: wp('3%')\n    },\n    buttonContainer: {\n        borderRadius: 25,\n        alignItems: 'center',\n        marginBottom: hp('3%')\n    },\n    copyleft: {\n        marginTop: 10 + '%',\n        fontSize: wp('2%'),\n        color: 'white',\n        textAlign: 'center',\n        fontStyle: 'italic'\n    },\n    ErrorMessage: {\n        color: 'red',\n        fontWeight: 'bold',\n        textAlign:'center',\n        marginTop: 20,\n        marginHorizontal: 40,\n        fontSize: wp('4%')\n    },\n    backButton: {\n        height: hp('5%')\n    },\n    backButtonTitle: {\n        fontSize: hp('2.2%')\n    }\n});\n","import React from 'react';\nimport {\n    ScrollView,\n    Linking\n} from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\nimport * as DocumentPicker from 'expo-document-picker';\n\nimport { lang as HomeLang } from '../../language/home';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    const navigate = useNavigate();\n\n    return (\n        <ScrollView style={styles.menu} showsVerticalScrollIndicator={false}>\n            <Button\n                title={HomeLang[props.lang].Select}\n                buttonStyle={styles.button}\n                titleStyle={styles.titleStyle}\n                containerStyle={styles.buttonContainer}\n                icon={\n                    <Icon\n                        name={'person-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={wp('4%')}\n                        style={styles.iconStyle}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    if (props.ambiant) await props.ambiant?.unloadAsync()\n                    navigate('/selection', {\n                        state: { username: props.username, lang: props.lang, setLang: props.setLang }\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Import}\n                buttonStyle={styles.button}\n                titleStyle={styles.titleStyle}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'person-add-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={wp('4%')}\n                        style={styles.iconStyle}\n                    />\n                }\n                raised\n                onPress={() => {\n                    DocumentPicker.getDocumentAsync({multiple: false, type: '*/*', copyToCacheDirectory: true}).then( e => {\n                        props.setImportFile(e.uri);\n                    }).catch(e => {\n                        console.log(e);\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Language}\n                buttonStyle={styles.button}\n                titleStyle={styles.titleStyle}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'world-o'}\n                        type={'fontisto'}\n                        color={'#355c7d'}\n                        size={wp('4%')}\n                        style={styles.iconStyle}\n                    />\n                }\n                onPress={() => props.setLang(prev => prev == 'fr' ? 'en' : 'fr')}\n                raised\n            />\n            <Button\n                title={HomeLang[props.lang].Introduction}\n                buttonStyle={styles.button}\n                titleStyle={styles.titleStyle}\n                containerStyle={[styles.buttonContainer, {marginBottom: hp('3%')}]}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={wp('4%')}\n                        style={styles.iconStyle}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    await props.ambiant.unloadAsync()\n                    navigate('/tutorial');\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Source}\n                buttonStyle={styles.button}\n                titleStyle={styles.titleStyle}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'logo-github'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={wp('4%')}\n                        style={styles.iconStyle}\n                    />\n                }\n                raised\n                onPress={() => Linking.openURL('https://github.com/dilaouid/AlzheimApp')}\n            />\n            <Text style={styles.copyleft} >{HomeLang[props.lang].License}</Text>\n        </ScrollView>\n    );\n}\n","export const encrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let encryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        encryptedString += String.fromCharCode( string.charCodeAt(i) - key.charCodeAt(j) - key.length );\n    }\n    return (encryptedString);\n};\n\nexport const decrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let decryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        decryptedString += String.fromCharCode( string.charCodeAt(i) + key.charCodeAt(j) + key.length );\n    }\n    return (decryptedString);\n};","/**\n * Model is like:\n * {\n *      personId: 'xxx',\n *      name: 'xxx',\n *      description: 'xxx',\n *      picture: 'b64' || null,\n *      activities: {\n *          quiz: [\n *              // all quizz contents //\n *          ],\n *          log: [\n *              // all logs contents\n *          ],\n *          double: [\n *              // all double contents\n *          ],\n *          simon: [\n *              // all simon score\n *          ]\n *      }\n * }\n */\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as dilacrypt from './dilacrypt';\n\nimport { db as personAPI } from '../data/personApi';\nimport { db as dictaphoneAPI } from '../data/dictaphoneApi';\nimport { db as simonAPI } from '../data/simonApi';\nimport { db as quizAPI } from '../data/quizApi';\nimport { db as doubleAPI } from '../data/doubleApi';\n\nconst isValidDate = (d) => {\n    let split = d.split('/');\n    const currentDate = new Date();\n    if (split.length != 3) return false;\n    if (split[2] > currentDate.getFullYear()) return false;\n    if (split[0] > 12) {\n        let tmp = split[1];\n        split[1] = split[0];\n        split[0] = tmp;\n    }\n    d = split.join('/');\n    let n = new Date(d);\n    return n instanceof Date && !isNaN(n);\n};\n\nconst fileToBase64 = (uri) => {\n    return FileSystem.readAsStringAsync(uri, {\n        encoding: 'base64',\n    });\n};\n\nconst formatQuiz = async (quiz) => {\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < el.content.length; j++) {\n            const e = el.content[j];\n            if (e.uri)\n                e.uri = await fileToBase64(e.uri);\n        }\n    }\n    return (quiz);\n};\n\nconst formatLog = async (log) => {\n    for (let i = 0; i < log.length; i++) {\n        const el = log[i];\n        el.path = await fileToBase64(el.path);\n    }\n    return (log);\n};\n\nconst scoreVerification = (el, personId) => {\n    if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n    if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    if (!el.hasOwnProperty('score') || typeof el.score !== 'number') return false;\n    if (!el.hasOwnProperty('dailyScoreBeaten') || typeof el.dailyScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('globalScoreBeaten') || typeof el.globalScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n    return true;\n};\n\n\n\nexport const checkPersonInformations = (person) => {\n    const keys = ['_id', 'description', 'fullname', 'picture', 'activities'];\n    for (let i = 0; i < keys.length; i++) {\n        const el = keys[i];\n        if (person.hasOwnProperty(el) === false)\n            return false;\n    }\n    return true;\n};\n\nexport const checkPersonInformationsLength = (person) => {\n    return person.fullname.length <= 25 && person.description.length <= 100;\n};\n\nexport const checkPersonExists = async (personId) => {\n    return await personAPI.findAsync({ _id: personId });\n}\n\nexport const checkQuiz = async (quiz, personId) => {\n    const quizKeys = ['name', 'content', 'personId', '_id'];\n    const contentKeys = ['answers', 'question', 'id', 'score']\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < quizKeys.length; j++) {\n            const k = quizKeys[j];\n            if (el.hasOwnProperty(k) === false) return false;\n        }\n        for (let d = 0; d < el.content.length; d++) {\n            const content = el.content[d];\n            if (content.hasOwnProperty('uri') || content.hasOwnProperty('filename') || content.hasOwnProperty('fileType')) {\n                if (!content.hasOwnProperty('uri')) { return false; }\n                else if (!content.hasOwnProperty('filename')) { return false; }\n                else if (!content.hasOwnProperty('fileType')) { return false; }\n            }\n            for (let j = 0; j < contentKeys.length; j++) {\n                const l = contentKeys[j];\n                if (content.hasOwnProperty(l) === false) return false;\n            }\n            if (typeof content.answers !== 'object' || content.answers?.length === 0) return false;\n            if (typeof content.question !== 'string' || typeof content.question?.length > 23) return false;\n            if (typeof content.score !== 'object' || content.answers?.length === 0) return false;\n            let foundInScore = false\n            for (let n = 0; n < content.score.length; n++) {\n                const score = content.score[n];\n                if (score.personId === personId) foundInScore = true;\n                if (!score.hasOwnProperty('personId')) return false;\n                if (!score.hasOwnProperty('success') || typeof score.success !== 'number') return false;\n                if (!score.hasOwnProperty('failed') || typeof score.success !== 'number') return false;\n            }\n            if (!foundInScore) return false;\n        }\n    }\n    return true;\n};\n\nexport const checkGameScore = (game, personId) => {\n    if (typeof game !== 'object') return false;\n    for (let i = 0; i < game.length; i++)\n        if (!scoreVerification(game[i], personId)) return false;\n    return true;\n};\n\nexport const checkDictaphone = (dictaphone, personId) => {\n    if (typeof dictaphone !== 'object') return false;\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n        if (!el.hasOwnProperty('name') || typeof el.name !== 'string' || el.name.length < 2) return false;\n        if (!el.hasOwnProperty('path') || typeof el.path !== 'string' || el.path.length < 100) return false;\n        if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n        if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    }\n    return true;\n};\n\nexport const importPerson = async (person, exists) => {\n\n    if (exists === false) {\n        await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${person._id}`, {intermediates: true});\n    }\n\n    let picture = null;\n    if (person.picture) {\n        picture = uuidv4();\n        const path = `${FileSystem.documentDirectory}persons/${person._id}/pp`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        await FileSystem.writeAsStringAsync(path + `/${picture}.jpg`, person.picture, { encoding: 'base64' }).then(el => {\n            picture = path + `/${picture}.jpg`;\n        }).catch(err => {\n            picture = null;\n        });\n    }\n\n    if (exists === false)\n        return personAPI.insertAsync(\n            {\n                _id: person._id,\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        );\n    else\n        return personAPI.updateAsync({_id: person._id}, {\n            $set: {\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        });\n};\n\nexport const importQuiz = async (quiz) => {\n    let res = true;\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        const path = `${FileSystem.documentDirectory}persons/${el.personId}/quiz`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        for (let j = 0; j < quiz[i].content.length; j++) {\n            const e = quiz[i].content[j];\n            if (e.hasOwnProperty('uri')) {\n                // Import and write file\n                let filename = uuidv4();\n                let filePath;\n                await FileSystem.writeAsStringAsync(path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`, e.uri, { encoding: 'base64' }).then(el => {\n                    filePath = path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`;\n                    filename = filePath;\n                    e.uri = filePath;\n                }).catch(err => {\n                    filename = null;\n                    e.uri = null;\n                });\n            }\n        }\n        const quizFindAsync = await quizAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        const quizExists = quizFindAsync.length > 0;\n        if (quizExists) {\n            await quizAPI.updateAsync( {_id: el._id}, {\n                $set: {\n                    name: el.name,\n                    content: el.content\n                }\n            }).catch(err => {\n                res = false;\n            })\n        } else {\n            await quizAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importDouble = async (double) => {\n    let res = true;\n    for (let i = 0; i < double.length; i++) {\n        const el = double[i];\n        const doubleExists = await doubleAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (doubleExists.length === 0) {\n            await doubleAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importSimon = async (simon) => {\n    let res = true;\n    for (let i = 0; i < simon.length; i++) {\n        const el = simon[i];\n        const simonExists = await simonAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (simonExists.length === 0) {\n            await simonAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importLog = async (dictaphone, personId) => {\n    let res = true;\n    const path = `${FileSystem.documentDirectory}persons/${personId}/recordings`;\n    await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n        console.log('[!] Directory already exists');\n    });\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        const logExists = await dictaphoneAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (logExists.length === 0) {\n            el.date = new Date(el.date);\n            let filename = uuidv4();\n            let filePath;\n            await FileSystem.writeAsStringAsync(path + `/${filename}.m4a`, el.path, { encoding: 'base64' }).then(e => {\n                filePath = path + `/${filename}.m4a`;\n                filename = filePath;\n                el.path = filePath;\n            }).catch(err => {\n                console.log(err);\n                filename = null;\n                el.path = null;\n            });\n            await dictaphoneAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const writeDataFile = async (fullname, content) => {\n    let fileUri = FileSystem.documentDirectory + `${fullname.replace(/\\s/g, '_')}.json`;\n    return await FileSystem.writeAsStringAsync(fileUri, content).catch(err => {\n        console.log(err);\n    }).then( (e) => {\n        return (fileUri);\n    });\n};\n\nexport const exportPerson = async (personId, key) => {\n    const personFind = await personAPI.findAsync({ _id: personId });\n    if (!personFind) return ('PERSON_NOT_FOUND');\n    const person = personFind[0];\n    if (!person._id || !person.fullname) return ('INVALID_PERSON');\n    const personData = {\n        _id: person._id,\n        description: person.description,\n        fullname: person.fullname,\n        picture: person.picture ? await fileToBase64(person.picture) : null\n    };\n    const simonData = await simonAPI.findAsync({ personId: personId });\n    const doubleData = await doubleAPI.findAsync({ personId: personId });\n    const quiz = await quizAPI.findAsync({ personId: personId });\n    const quizData = quiz ? await formatQuiz(quiz) : []; // converting files into base64 here\n\n    const dictaphone = await dictaphoneAPI.findAsync({ personId: personId });\n    const dictaphoneData = dictaphone ? await formatLog(dictaphone) : []; // converting files into base64 here\n\n    const result = JSON.stringify({\n        _id: personData._id,\n        description: personData.description,\n        fullname: personData.fullname,\n        picture: personData.picture,\n        activities: {\n            quiz: quizData,\n            double: doubleData,\n            simon: simonData,\n            dictaphone: dictaphoneData\n        }\n    });\n    const uri = await writeDataFile(personData.fullname, key ? dilacrypt.encrypt(result, key) : result);\n    return (uri);\n};","import React, { useEffect, useState } from 'react';\nimport {\n    ActivityIndicator,\n    ScrollView\n} from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport { Text, Button } from 'react-native-elements';\n\nimport { lang as HomeLang } from '../../language/home';\nimport * as FileSystem from 'expo-file-system';\nimport * as dataImport from '../../utils/share'\n\nimport styles from './styles';\n\nexport default function ImportData(props) {\n    const [step, setStep] = useState(1);\n    const [error, setError] = useState();\n    \n    useEffect( async () => {\n        try {\n\n            // Import and check file data\n            const content = await FileSystem.readAsStringAsync(props.importFile).catch(e => {\n                console.log(e);\n                throw HomeLang[props.lang].InvalidFile;\n            });\n            const parsed = parseJSON(content);\n            if (!parsed) throw HomeLang[props.lang].InvalidPersonFile;\n            if (typeof parsed !== 'object' || !parsed._id)\n                throw HomeLang[props.lang].InvalidPersonFile;\n\n            // Checking the personal infos\n            setStep(2);\n            if (dataImport.checkPersonInformations(parsed) === false)\n                throw HomeLang[props.lang].InvalidPersonFile;\n            if (dataImport.checkPersonInformationsLength(parsed) === false)\n                throw HomeLang[props.lang].IncorrectPersonFile;\n\n            // Checking if this userId is registered in the local db\n            setStep(3);\n            const found = await dataImport.checkPersonExists(parsed._id);\n            \n            // Checking activities length\n            setStep(4);\n            if (parsed.activities.length > 4) throw HomeLang[props.lang].InvalidActivitiesLength;\n\n            // Checking quiz format\n            setStep(5);\n            if (await dataImport.checkQuiz(parsed.activities.quiz, parsed._id) === false) throw HomeLang[props.lang].InvalidQuizData;\n\n            // Checking double format\n            setStep(6);\n            if (await dataImport.checkGameScore(parsed.activities.double, parsed._id) === false) throw HomeLang[props.lang].InvalidDoubleData;\n\n            // Checking simon format\n            setStep(7);\n            if (await dataImport.checkGameScore(parsed.activities.simon, parsed._id) === false) throw HomeLang[props.lang].InvalidSimonData;\n      \n            // Checking dictaphone format\n            setStep(8);\n            if (await dataImport.checkDictaphone(parsed.activities.dictaphone, parsed._id) === false) throw HomeLang[props.lang].InvalidLogData;\n\n            // <! -------- Creation process starts ---------- !>\n\n            // Person creation\n            setStep(9);\n            dataImport.importPerson(parsed, found.length > 0).catch( (err) => {\n                throw HomeLang[props.lang].CannotCreatePerson;\n            });\n\n            // Quiz creation\n            setStep(10);\n            dataImport.importQuiz(parsed.activities.quiz).catch(err => {\n                throw HomeLang[props.lang].InvalidQuizData;\n            });\n\n            // Double creation\n            setStep(11);\n            dataImport.importDouble(parsed.activities.double).catch(err => {\n                throw HomeLang[props.lang].InvalidDoubleData;\n            });\n\n            // Simon creation\n            setStep(12);\n            dataImport.importSimon(parsed.activities.simon).catch(err => {\n                throw HomeLang[props.lang].InvalidSimonData;\n            });\n\n            // Journal log creation\n            setStep(13);\n            dataImport.importLog(parsed.activities.dictaphone, parsed._id).catch(err => {\n                throw HomeLang[props.lang].InvalidLogData;\n            });\n\n            // SUCCESS !!\n            setStep(14);\n\n            await FileSystem.deleteAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidPersonFile;\n            });\n\n\n        } catch (e) {\n            setError(e);\n            return false;\n            // props.setImportFile(null);\n        }\n    }, [])\n\n    const parseJSON = (inputString) => {\n        if (inputString) {\n          try {\n            return JSON.parse(inputString);\n          } catch (e) {\n            return false;\n          }\n        }\n    };\n\n    const stepStyle = (idx) => {\n        let clr = idx === step ? 'white' : '#89ff91';\n        if (error && idx === step) clr = 'red';\n        if (step === 14) clr = '#89ff91';\n        return {\n            color: clr,\n            fontStyle: idx === step || error ? 'italic' : 'normal',\n            marginBottom: idx === 13 ? 30 : 0,\n            display: step >= idx ? 'flex' : 'none',\n            alignContent: 'center',\n            textAlign: 'center',\n            fontSize: idx === step ? wp('4%') : wp('2%')\n        }\n    } \n\n    const printActivity = (idx) => {\n        if (idx === step && !error && step !== 14)\n            return <ActivityIndicator color={'white'} size={'small'} />\n        return <></>\n    };\n\n    return (\n        <ScrollView style={styles.menu}>\n            { [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14].map( (e, i) => {\n                return <Text key={i} style={ stepStyle(e) }> { HomeLang[props.lang]['Step' + e] } { printActivity(e) }</Text>\n            }) }\n            { error ? <Text style={styles.ErrorMessage}>{ error }</Text> :  <></> }\n            <Button disabled={!error && step < 14}\n                containerStyle={{marginTop: hp('3%'), borderRadius: 15}}\n                buttonStyle={styles.backButton}\n                titleStyle={styles.backButtonTitle}\n                title={HomeLang[props.lang].GoBack}\n                onPress={() => props.setImportFile(null)}\n            />\n        </ScrollView>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Image\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\n\nimport { useLocation } from 'react-router-native';\n\nimport AlzheimApp from '../../assets/img/alzheimapp_logo.png';\nimport Menu from './Menu'\nimport ImportData from './ImportData';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [importFile, setImportFile] = useState();\n    const [ambiant, setAmbiant] = useState();\n    Audio.setIsEnabledAsync(true);\n\n    useEffect( async () => {\n        if (ambiant) return;\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by MCOCHET - check his soundcloud here: https://soundcloud.com/mcochet\n            require('../../assets/sound/ambiant.mp3'),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n    }, []);\n\n    const state = useLocation()?.state;\n\n    const username = props.username || state?.username;\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Image source={AlzheimApp} style={styles.logo} resizeMode={'cover'} />\n            </View>\n            { importFile ?\n                <ImportData lang={props.lang} importFile={importFile} setImportFile={setImportFile} /> :\n                <Menu lang={props.lang} username={username} setLang={props.setLang} setImportFile={setImportFile} ambiant={ambiant} />\n            }\n        </View>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} setLang={props.setLang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} setLang={props.setLang} />;\n    }\n    return <Home lang={props.lang} username={props.username} setLang={props.setLang} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: 'white' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        Home: 'Accueil',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n        QuizScore: \"Score des quiz\",\n        SimonScore: \"Score du Simon\",\n        DoubleScore: \"Score du jeu des pairs\",\n        NoScore: \"Aucun score enregistré pour cette activité...\",\n        Success: 'réussite',\n        Global: \"Vue d'ensemble\",\n        BestScoreByDay: 'Meilleur score du jour',\n        ExportedProfile: 'Profil exporté',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        Home: 'Home',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n        QuizScore: \"Quiz Score\",\n        SimonScore: \"Simon Score\",\n        DoubleScore: \"Double Memory Score\",\n        NoScore: \"No score registered for this activity...\",\n        Success: 'success',\n        Global: \"Global view\",\n        BestScoreByDay: 'Best score by day',\n        ExportedProfile: 'Profile exported',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: wp('80%'),\n        height: hp('7%'),\n        justifyContent: 'flex-start',\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleReturn: {\n        width: wp('80%'),\n        height: hp('7%'),\n        justifyContent: 'flex-start',\n    },\n    buttonStyleDelete: {\n        width: wp('80%'),\n        height: hp('7%'),\n        justifyContent: 'flex-start',\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: wp('80%'),\n        height: hp('7%'),\n        justifyContent: 'flex-start',\n    },\n    buttonStyleDebug: {\n        width: wp('80%'),\n        height: hp('7%'),\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\n\nimport { ScrollView, Alert, View, KeyboardAvoidingView, ActivityIndicator } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/selection/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\nimport { exportPerson } from '../../../utils/share';\nimport * as Sharing from 'expo-sharing';\n\nimport * as FileSystem from 'expo-file-system';\n\nimport styles from './styles';\nimport Form from '../../../components/selection/PersonCreation/Form';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\n\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n    const [load, setLoad] = useState(false);\n    const [id, setId] = useState(0);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        Person.getById(props.personId).then((result) => {\n            props.setPerson(result[0])\n        });\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n\n        id: id,\n        setId: setId\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/selection', {\n                state: { username: props.username, lang: props.lang }\n            });\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.fullname),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: wp('6%'),\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: wp('15%'), marginLeft: wp('5%') }}\n                        buttonStyle={styles.buttonStyle}\n                        titleStyle={{fontSize: wp('4%')}}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: load ? '' : 'share-alt',\n                            type: 'font-awesome',\n                            size: wp('6%'),\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: wp('15%'), marginLeft: wp('5%') }}\n                        buttonStyle={styles.buttonStyle}\n                        titleStyle={{fontSize: wp('4%')}}\n                        containerStyle={styles.containerStyle}\n                        title={load ? <ActivityIndicator color={'white'} size={'small'} /> : ActivitiesLang[props.lang]?.ShareProfile}\n                        onPress={async () => {\n                            setLoad(true);\n                            Sharing.isAvailableAsync().then(async isAvailable => {\n                                if (!isAvailable) {\n                                    alert('Sharing is not available');\n                                    return;\n                                }\n                                console.log('[~] Pressing export button');\n                                console.log('[+] Exporting person...');\n                                const uri = await exportPerson(props.personId, null);\n                                console.log('[+] Exported person! uri is: ' + uri);\n                                Sharing.shareAsync(uri).then( async (e) => {\n                                    await FileSystem.deleteAsync(uri);\n                                }).catch(err => {\n                                    console.log(err);\n                                });\n                                setLoad(false);\n                            });\n                        }}\n                        disabled={load}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: wp('6%'),\n                            color: 'white',\n                        }}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: wp('15%'), marginLeft: wp('5%') }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        titleStyle={{fontSize: wp('4%')}}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: wp('6%'),\n                            color: 'white',\n                        }}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: wp('18%'), marginLeft: wp('5%') }}\n                        buttonStyle={styles.buttonStyleBack}\n                        titleStyle={{fontSize: wp('4%')}}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/selection', {\n                                state: { username: props.username, lang: props.lang }\n                            });\n                        }}\n                    />\n                </ScrollView>\n            ) : (\n                <KeyboardAvoidingView behavior='height' style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: wp('6%'),\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: wp('23%'), marginLeft: wp('5%') }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        titleStyle={{fontSize: wp('4%')}}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => { \n                            setFullname(props.person.fullname);\n                            setUriPreview(props.person.picture);\n                            setImage('');\n                            setDescription(props.person.description);\n                            setEdit(false);\n                            setSuccess(false);\n                        }}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </KeyboardAvoidingView>\n            )}\n        </View>\n    );\n}\n","export const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre\\n\\nMerci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Titre (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Record',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continue',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title\\n\\nPlease choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'Title (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red'\n    },\n    listItemContent: {\n        height: hp('11%'),\n        padding: wp('4%')\n    },\n    listItemTitle: {\n        fontSize: wp('4%')\n    },\n    listItemSubtitle: {\n        fontSize: wp('3.5%')\n    },\n    titleButton: {\n        fontWeight: 'bold',\n        fontSize: wp('4%')\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        //borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n        width: 100+'%'\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: wp('5%'),\n        marginTop: hp('1%')\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: hp('4%'),\n        width: wp('80%'),\n        fontSize: wp('4%')\n    },\n    overlayInput: {\n        fontSize: wp('4%'),\n        //marginHorizontal: 10\n    },\n    overlayInputContainer: {\n        width: wp('80%')\n    },\n    save: {\n        width: wp('30%'),\n        height: hp('5.35%')\n    },\n    cancel: {\n        width: wp('30%'),\n        height: hp('5.35%'),\n        backgroundColor: 'red'\n    }\n});\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\nimport styles from './styles';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n                size={wp('6%')}\n            />\n            <ListItem.Content style={styles.listItemContent}>\n                <ListItem.Title style={styles.listItemTitle}>{props.title}</ListItem.Title>\n                <ListItem.Subtitle style={styles.listItemSubtitle}>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={wp('4%')}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync().then( () => {\n                console.log('[+] Permission granted!');\n            })\n            .catch(e => {\n                console.error(e);\n            });            \n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then(() => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then(() => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const goBack = async () => {\n        if (recording) await recording?.stopAndUnloadAsync();\n        stopPlayingSounds();\n        props.setPage(0);\n    }\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            if (el) el?.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    labelStyle={{fontSize: wp('3%'), marginBottom: hp('2%')}}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    containerStyle={styles.overlayInputContainer}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row', marginTop: hp('2%') }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        titleStyle={styles.listItemTitle}\n                        buttonStyle={styles.cancel}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        titleStyle={styles.listItemTitle}\n                        buttonStyle={styles.save}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        titleStyle={styles.listItemTitle}\n                        buttonStyle={styles.cancel}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={() => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        titleStyle={styles.listItemTitle}\n                        buttonStyle={styles.save}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        titleStyle={styles.titleButton}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: wp('4%'),\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        titleStyle={styles.titleButton}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: wp('4%'),\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                    <Button\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'caret-back-outline',\n                            type: 'ionicon',\n                            size: wp('4%'),\n                            color: 'white',\n                        }}\n                        buttonStyle={styles.recordButton}\n                        title={{}}\n                        titleStyle={styles.titleButton}\n                        onPress={() => goBack()}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <View style={styles.actionButtonsView}>\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: wp('4%'),\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n                <Button\n                    containerStyle={styles.actionButtons}\n                    icon={{\n                        name: 'caret-back-outline',\n                        type: 'ionicon',\n                        size: wp('4%'),\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={{}}\n                    titleStyle={styles.titleButton}\n                    onPress={() => goBack()}\n                />\n                </View>\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n\n\n\n\n        // Help section\n        Head: \"Le Simon, comment ça\\nmarche ?\",\n        RulesHead: \" Les règles\",\n        TriesHead: \" Les essais\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu Simon est un {0} de forme circulaire comportant quatre gros boutons de couleurs différentes: rouge, vert, jaune et bleu.\\n\\nLe jeu {1} une des quatres couleurs et {2} toujours associé à cette couleur. Le joueur doit alors {3}.\\n\\nLe jeu {4}, puis {5} une nouvelle couleur. Le jour doit reproduire cette nouvelle séquence. Chaque fois que le joueur reproduit correctement la séquence, le jeu ajoute une nouvelle couleur.`,\n                boldText: ['jeu de mémoire', 'éclaire', 'produit un son', \"appuyer sur la touche de la couleur qui vient de s'allumer\", 'répète la même couleur et le même son', 'ajoute'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois que vous ratez une séquence, vous {0}. Au cours d'une partie, vous avez le droit à seulement {1}.\\n\\nUne fois les quatre erreurs faites, ou alors lorsque vous {2}, votre score est compatibilisé en fonction du nombre de touches dans la séquence actuelle.\\n\\nChaque jour, {3}.`,\n                boldText: ['perdez un essai', 'quatre erreurs', 'abandonnez la partie en cours', 'votre score journalier est remit à zéro'],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n\n\n\n\n        // Help section\n        Head: `The Simon, how does it works?`,\n        RulesHead: \"The rules\",\n        TriesHead: \"The tries\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The Simon is a circular shaped {0} with four different colored buttons: red, green, yellow and blue.\\n\\nThe game {1} one of the four colors and {2} always associated to this color. The player shall {3}.\\n\\nThe game {4}, then {5} another color. The player will have to reproduces this sequence. Each time the player successfully reproduces the sequence, the game adds another color in this sequence.`,\n                boldText: ['memory game', 'lighten', 'produces a sound', \"press the colored button which has just turned on\", 'repeat the same color with the same sound', 'add'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `Each time you fail a sequence, you {0}. In a game, you are allowed up to {1}.\\n\\nOnce the four fails made, or when you {2}, you will have the number of elements in the current sequence saved as your score.\\n\\nEach day, {3}.`,\n                boldText: ['lose a try', 'four maximum fails', 'give up the current game', 'your daily score is reset to zero'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    view: {\n        paddingTop: 20,\n        flex: 1,\n        alignItems: 'center'\n    },\n    logo: {\n        width: wp('22%'),\n        height: undefined,\n        aspectRatio: 1,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: hp('7%'),\n    },\n    button: {\n        width: wp('70%'),\n        height: hp('6%'),\n        borderRadius: 10,\n    },\n    buttonContainer: {\n        marginBottom: hp('4%'),\n        borderRadius: 10,\n        marginHorizontal: 5,\n        justifyContent: 'flex-start',\n    },\n    leaveButton: {\n        width: wp('70%'),\n        height: hp('6%'),\n        backgroundColor: 'red',\n    },\n    leaveButtonContainer: {\n        marginTop: hp('5%'),\n        marginHorizontal: 5,\n        justifyContent: 'flex-start',\n    },\n    title: {\n        fontSize: wp('4%')\n    },\n    SimonButtonWeb: {\n        // flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        //flex: 1,\n        width: wp('35%'),\n        height: hp('20%'),\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: wp('4%'),\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: wp('4%'),\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 10+'%',\n        borderRadius: 25,\n        height: hp('40%'),\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: wp('5%'),\n        fontWeight: 'bold',\n        marginTop: -5+'%',\n        marginBottom: hp('2%')\n    },\n    textOverlay: {\n        width: wp('60%'),\n        fontSize: wp('4%'),\n        marginBottom: hp('2%'),\n        textAlign: 'center',\n    },\n\n\n    // Help section\n    viewHelpPage: {\n        marginTop: -20,\n        backgroundColor: 'white',\n        width: 100 + '%',\n        //height: hp('83%')\n    },\n    leaveButtonHelpPageContainer: {\n        alignSelf: 'center',\n        marginTop: 20,\n        borderRadius: 70,\n        marginHorizontal: 5,\n    },\n    leaveButtonHelpPage: {\n        width: wp('70%'),\n        backgroundColor: 'red',\n        borderRadius: 70,\n        height: hp('5.4%')\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: wp('7%'),\n        textAlign: 'center',\n        color: '#4954FF'\n    },\n    helpStepHead: {\n        marginBottom: hp('3%'),\n        fontWeight: 'bold',\n        fontSize: wp('5.3%'),\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: wp('5%'),\n        marginBottom: hp('5%'),\n        width: wp('90%'),\n        fontSize: wp('4%')\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: wp('140%'),\n        opacity: .4,\n        zIndex: -1\n    },\n\n\n\n\n    // responsive additionnal\n    bottomScore: {\n        marginTop: hp('2%')\n    },\n    bestScore: {\n        textAlign: 'center',\n        fontSize: wp('3.8%')\n    },\n    remainingTries: {\n        textAlign: 'center',\n        fontSize: wp('3.8%'),\n        marginBottom: hp('2%')\n    },\n    btnGiveUp: {\n        backgroundColor: 'red',\n        width: wp('40%'),\n        height: hp('6%'),\n        borderRadius: 900,\n    },\n    btnGiveUpDisabled: {\n        width: wp('40%'),\n        height: hp('6%'),\n        borderRadius: 900,\n    },\n    btnContainerGiveUp: {\n        marginTop: hp('2.6%'),\n        borderRadius: 900,\n    },\n    btnStart: {\n        marginRight: 10,\n        borderRadius: 13,\n        height: hp('6%'),\n        width: wp('50%')\n    },\n    btnLeave: {\n        borderRadius: 13,\n        height: hp('6%'),\n        backgroundColor: 'red',\n        width: wp('20%')\n    },\n    btnTitle: {\n        fontSize: wp('4%')\n    },\n    indication: {\n        textAlign: 'center', \n        fontSize: wp('5%')\n    }\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                buttonStyle={styles.button}\n                titleStyle={styles.title}\n                containerStyle={styles.buttonContainer}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: wp('1%') }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.buttonContainer}\n                buttonStyle={styles.button}\n                titleStyle={styles.title}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: wp('1%') }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={styles.leaveButton}\n                containerStyle={styles.leaveButtonContainer}\n                titleStyle={styles.title}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: wp('1%') }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success)\n                    playButtonDemo(order[i]);\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                return require('../../../assets/sound/simon/red.mp3');\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            if (sound) await sound?.unloadAsync();\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            ).then(async s => {\n                return s;\n            }).catch(e => {\n                console.log(e);\n            });\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            }).catch(err => {\n                console.log(err);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate, dailyScore < order.length - 1, bestScore < order.length - 1);\n        setCanPlay(false);\n        setSuccess(true);\n        const path = dailyScore < order.length - 1 ? require(`../../../assets/sound/global/applause.mp3`) : require(`../../../assets/sound/global/you_lose.mp3`);\n        const { sound } = await Audio.Sound.createAsync(path);\n        props.setSound(sound);\n        sound.playAsync();\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            let rdm = randomNumber();\n            setOrder([...order, rdm]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: hp('7%') }}\n                    ImageStyle={{ height: hp('10%') }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            <Overlay\n                visible={success}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => setSuccess(false)}\n                ModalComponent={Modal}\n            >\n                {scoreBeaten ? successOverlay() : failOverlay()}\n                <View style={{ flexDirection: 'row', marginVertical: 30 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            retryGame();\n                        }}\n                        title={SimonLang[props.lang].Retry}\n                        containerStyle={{\n                            borderRadius: 13,\n                            marginRight: 10,\n                        }}\n                        titleStyle={styles.btnTitle}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setTab(0);\n                        }}\n                        title={SimonLang[props.lang].Exit}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        titleStyle={styles.btnTitle}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        titleStyle={styles.btnTitle}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        titleStyle={styles.btnTitle}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: hp('2%') }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={styles.bottomScore}>\n                <Text style={styles.bestScore}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={styles.bestScore}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={styles.remainingTries}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={styles.indication}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={styles.bestScore}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            disabledStyle={styles.btnGiveUpDisabled}\n                            onPress={() => props.setModal(true)}\n                            titleStyle={styles.btnTitle}\n                            buttonStyle={styles.btnGiveUp}\n                            containerStyle={styles.btnContainerGiveUp}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={styles.btnStart}\n                                title={SimonLang[props.lang].Start}\n                                titleStyle={styles.btnTitle}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={styles.btnLeave}\n                                titleStyle={styles.btnTitle}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView>\n                <Button\n                    title={SimonLang[props.lang].Leave}\n                    titleStyle={styles.btnTitle}\n                    buttonStyle={styles.leaveButtonHelpPage}\n                    containerStyle={styles.leaveButtonHelpPageContainer}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={wp('4%')}\n                            style={{ marginHorizontal: wp('2%') }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{SimonLang[props.lang].Head}</Text>\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: wp('2%') }}\n                    />\n                    {SimonLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].Rules()}</Text>\n\n                \n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: wp('2%') }}\n                    />\n                    {SimonLang[props.lang].TriesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].TriesExplain()}</Text>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\nimport Help from './Help';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr, pos) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: i == pos ? color : '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        Cancel: 'Annuler',\n        GoBack: \"Oui, j'annule l'édition du quiz\",\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Abandonner le quiz\",\n        GiveUpQuiz: \"Êtes-vous sûr de vouloir abandonner ce quiz? Le score restera enregistré.\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        EditedQuiz: \"Quiz modifié avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Bien joué !! 😄\",\n        Success: \"Bien joué ! C'est la bonne réponse !! Vous pouvez maintenant passer à la suite !\",\n        FailedTitle: \"Dommage... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Dommage, mais ce n'était pas la bonne réponse ! Les réponses possibles étaient: ${answersText}.`\n        },\n        SuccessQuizTitle: \"Haut la main !\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Fantastique !! Vous avez réussi ce quiz ! Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Dommage... Vous avez raté ce quiz ! ... Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Sauvegarder le quiz',\n        SaveContent: \"Sauvegarder la question\",\n        AddContent: \"Ajouter la question\",\n        SureCancelEdition: \"Êtes-vous sûr de bien vouloir abandonner l'édition de ce quiz? Vous ne pourrez pas récupérer vos modifications.\",\n        ImportImage: \"Importer une image\",\n        ImportSound: \"Importer un son\",\n\n        // Help page related\n        Head: 'Le quiz, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        CustomHead: \"Personnalisation\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Les règles du quiz sont basiques: il y a des questions {0}, et le joueur doit y répondre. Il peut y avoir {1} réponses possibles, une bonne réponse et c'est un point ajouté au score.\\n\\nIl n'y a pas de perte de points suite à une mauvaise réponse.`,\n                boldText: [\"facultativement accompagnées d'une image ou d'un son\", \"plusieurs\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `Il n'y a pas de quiz par défaut. C'est à vous d'en {0} et de les {1} à votre guise !\\nPour cela, vous devez vous rendre dans la partie \"{2}\".\\n\\nVous aurez là la liste des quiz que vous avez préalablement crée. Si vous n'en avez encore créé aucun, façonnez votre premier quiz avec le bouton \"{3}\".\\n\\nIci vous pourrez ajouter des question avec le bouton \"{4}\". Il vous est demandé {5} (facultatif), qui correspond à un son ou une image pour illustrer votre question.\\n\\nEnsuite, vous devez {6}. Ce sera cette question qui sera ensuite demandée au joueur.\\n\\nEt enfin, {7}. Une fois une réponse valide renseignée, cliquez sur le symbole {8} à côté, et votre réponse est ajoutée à la liste des réponses valides à la question. Vous pouvez en avoir 10 maximum.\\n\\nSi vous avez fait une erreur sur une des réponses, {9} pour la retirer de la liste.\\n\\nUne fois tous les éléments de la question renseignées, cliquez sur \"{10}\" au dessus pour enregistrer la question et retourner à la liste des questions précédemment crées. Ajoutez-en autant que vous voulez pour un quiz.\\n\\nVous pouvez également {11}.\\n\\nUne fois le quiz complet, cliquez sur \"{12}\", et voilà ! Renseignez le nom de ce quiz et c'est terminé, le quiz est désormais jouable !`,\n                boldText: [\"créer\",\n                    \"personnaliser\",\n                    \"Voir les quiz\",\n                    \"Créer un quiz\",\n                    \"Ajouter une question\",\n                    \"d'importer un fichier de référence\",\n                    \"renseigner la question\",\n                    \"ajouter les réponses éventuelles\",\n                    \"( + )\",\n                    \"cliquez simplement dessus\",\n                    \"Valider\",\n                    \"cliquer sur une question pour la modifier\",\n                    \"Terminer la création\"\n                ],\n            });\n        }\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizzes',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        Cancel: 'Cancel',\n        GoBack: 'Yes, I want to go back',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'of success',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Submit\",\n        GiveUpQuizTitle: \"Give up\",\n        GiveUpQuiz: \"Are you sure to give up this quiz? The score will be saved.\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        EditedQuiz: \"Quiz successfuly edited!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Well played!! 😄\",\n        Success: \"Well played! That's the good answer!! You can now go to the next question!\",\n        FailedTitle: \"Oops... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Oops, that's not a valid answer... the valid answer${answers.length > 0 ? 's were' : ' was'} : ${answersText}.`\n        },\n        SuccessQuizTitle: \"Easy peasy!\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Congratulations!! You won this quiz! Your score is for {0} good answer(s) for {1} mistake!',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Better next time! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: \"It's alright... You failed this quiz!... Your score is for {0} good answer(s) for {1} mistake!\",\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Save the quiz',\n        SaveContent: \"Save the question\",\n        AddContent: \"Add the question\",\n        SureCancelEdition: \"Are you sure to cancel this quiz edition? Your modification would not be saved\",\n        ImportImage: \"Import a picture\",\n        ImportSound: \"Import a sound\",\n        \n        // Help page related\n        Head: 'The quiz, how does it works?',\n        RulesHead: \"The rules\",\n        CustomHead: \"Customization\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `This is a basic quiz game: there are questions {1}, and the player must answer them. There can be {1} answers, one correct answer and it's a point added to the score.\\n\\nThere is no loss of points for a wrong answer.`,\n                boldText: [\"optionally accompanied by an image or a sound\", \"several possible\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `There are no default quizzes. It is up to you to {0} and {1} them as you wish!\\nTo do this, you must go to the \"{2}\" section.\\nThere you will see the list of quizzes that you have already created. If you haven't created any yet, create your first quiz with the \"{3}\" button.\\n\\nHere you can add questions with the \"{4}\" button. You are asked to {5} (optional), which is a sound or image file to illustrate your question.\\n\\nThen you have to {6}. This question will be asked to the player.\\n\\nAnd finally, {7}. Once you have entered a valid answer, click on the {8} symbol next to it, and your answer would be added to the list of the valid answers to the question. You can have a maximum of 10 possible answers.\\n\\nIf you made a mistake on one of the answers, {9} to remove it from the list.\\n\\nOnce you have filled in all the elements of the question, click \"{10}\" above to save the question and return to the list of questions. Add as many as you want to this quiz.\\n\\nYou can also {11}.\\n\\nOnce the quiz is completed, click \"{12}\" and that's it! Fill in the name of this quiz and it's done, the quiz is now playable!`,\n                boldText: [\"create\",\n                    \"customize\",\n                    \"View quizzes\",\n                    \"Create a quiz\",\n                    \"Add a question\",\n                    \"import a reference file\",\n                    \"fill in the question\",\n                    \"add the possible answers\",\n                    \"( + )\",\n                    \"simply click on it\",\n                    \"Submit\",\n                    \"click on a question to edit it\",\n                    \"Complete the quiz creation\"\n                ],\n            });\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    view: {\n        marginTop: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: wp('20%'),\n        height: undefined,\n        aspectRatio: 1,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: hp('7%'),\n    },\n    button: {\n        width: wp('70%'),\n        height: hp('6%'),\n        borderRadius: 10,\n    },\n    title: {\n        fontSize: wp('4%')\n    },\n    buttonContainer: {\n        marginBottom: hp('4%'),\n        borderRadius: 10,\n        marginHorizontal: 5,\n        justifyContent: 'flex-start',\n    },\n    leaveButton: {\n        width: wp('70%'),\n        height: hp('6%'),\n        backgroundColor: 'red',\n    },\n    leaveButtonContainer: {\n        marginTop: hp('5%'),\n        marginHorizontal: 5,\n        justifyContent: 'flex-start',\n    },\n    leaveButtonPlayContainer: {\n        marginTop: hp('2%'),\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: wp('60%'),\n        backgroundColor: 'red',\n        borderRadius: 10,\n    },\n    playButtonContainer: {\n        marginTop: hp('2%'),\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: wp('60%'),\n        borderRadius: 10,\n    },\n    createButton: {\n        width: wp('70%'),\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n        fontSize: wp('3.5%')\n    },\n    loading: {\n        marginTop: 30,\n    },\n    importButton: {\n        borderRadius: 15,\n        width: wp('65%'),\n        height: hp('5.5%')\n    },  \n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: wp('15%'),\n        paddingVertical: hp('4%'),\n        alignItems: 'center',\n    },\n    textOverlayDelete: {\n        marginBottom: 30,\n        width: wp('50%'),\n        textAlign: 'center',\n        fontSize: wp('3.5%')\n    },\n    backButtonOverlay: {\n        backgroundColor: 'red',\n        width: wp('18%'),\n        height: hp('5.35%')\n    },\n    OKButtonOverlay: {\n        width: wp('18%'),\n        height: hp('5.35%')\n    },\n    overlayDescriptionReference: {\n        width: wp('68%'),\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: hp('2.5%'),\n        fontSize: wp('3.5%')\n    },\n    overlayDescriptionAnswers: {\n        width: wp('68%'),\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: hp('2.5%'),\n        fontSize: wp('2.5%')\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 150\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    badge: {\n        paddingHorizontal: wp('3.5%'),\n        height: hp('4%'),\n        marginHorizontal: 10,\n        marginVertical: 4,\n    },\n    imageSuccess: {\n        width: wp('80%'),\n        height: undefined,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: wp('75%'),\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: wp('6%'),\n        color: '#788bff',\n        marginBottom: hp('2%'),\n    },\n    successButton: {\n        height: hp('5.4%')\n    },\n    listItemContent: {\n        height: hp('11%'),\n        padding: wp('4%')\n    },\n    listItemTitle: {\n        fontSize: wp('4%')\n    },\n    listItemSubtitle: {\n        fontSize: wp('3.5%')\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: wp('12%'),\n        paddingVertical: hp('7%'),\n        alignItems: 'center',\n    },\n    lottie: {\n        marginTop: -25,\n        height: hp('35%'),\n        marginBottom: -30\n    },\n    randomPicker: {\n        marginTop: hp('21%'),\n        position: 'absolute',\n        zIndex: 10,\n        marginLeft: wp('10%')\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: wp('5%')\n    },\n    modalDescription: {\n        width: wp('70%'),\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: wp('3.5%')\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: wp('60%'),\n        marginTop: hp('4%')\n    },\n    completeQuizCreationContainer: {\n        marginLeft: wp('2%')\n    },\n    completeQuizCreationButton: {\n        width: wp('10%'),\n        height: undefined,\n        aspectRatio: 1\n    },\n    quizTitleInput: {\n        fontSize: wp('4%')\n    },\n    input: {\n        fontSize: wp('4%'),\n        marginBottom: hp('.7%')\n    },\n    addAnswer: {\n        width: wp('13%'),\n        height: hp('7%'),\n        borderRadius: 250,\n        marginLeft: 5\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 10\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: wp('6%'),\n        textAlign: 'center',\n        width: wp('58%')\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: wp('50%'),\n        height: undefined,\n        aspectRatio: 1\n    },\n    gameQuestion: {\n        fontSize: wp('5%'),\n        marginTop: hp('3%'),\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey',\n        height: hp('6%'),\n        fontSize: wp('4.5%')\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15,\n        height: hp('6%'),\n        width: hp('12%')\n    },\n    lottieOverlay: {\n        marginTop: hp('-6%'),\n        height: hp('17%'),\n        marginBottom: hp('-5%')\n    },\n    headOverlayComplete: {\n        textAlign: 'center',\n        marginTop: 30,\n        fontSize: wp('6%'),\n        fontWeight: 'bold'\n    },\n    overlayDesc: {\n        textAlign: 'center',\n        marginTop: 30,\n        fontSize: wp('4%')\n    },\n\n\n\n    /// Help page related\n    viewHelpPage: {\n        marginTop: -20,\n        backgroundColor: 'white',\n        width: 100 + '%',\n        //height: hp('83%')\n    },\n    leaveButtonHelpPageContainer: {\n        alignSelf: 'center',\n        marginTop: 20,\n        borderRadius: 70,\n        marginHorizontal: 5,\n    },\n    leaveButtonHelpPage: {\n        width: wp('70%'),\n        backgroundColor: 'red',\n        borderRadius: 70,\n        height: hp('5.4%')\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: wp('7%'),\n        textAlign: 'center',\n        color: '#4954FF',\n        width: wp('70%'),\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: hp('3%'),\n        fontWeight: 'bold',\n        fontSize: wp('5.3%'),\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: wp('5%'),\n        marginBottom: hp('5%'),\n        width: wp('90%'),\n        fontSize: wp('4%')\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: wp('140%'),\n        opacity: .4,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image, ActivityIndicator } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            <Button\n                title={props.isLoading ? <ActivityIndicator color={'blue'} size={'small'} /> : QuizLang[props.lang].Play}\n                buttonStyle={styles.button}\n                titleStyle={styles.title}\n                containerStyle={styles.buttonContainer}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: wp('1%') }}\n                    />\n                }\n                disabled={props.quiz.length === 0}\n            />\n\n            <Button\n                title={QuizLang[props.lang].View}\n                buttonStyle={styles.button}\n                titleStyle={styles.title}\n                containerStyle={styles.buttonContainer}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: wp('1%') }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                buttonStyle={styles.button}\n                titleStyle={styles.title}\n                containerStyle={styles.buttonContainer}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: wp('1%') }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={styles.leaveButton}\n                containerStyle={styles.leaveButtonContainer}\n                titleStyle={styles.title}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: wp('1%') }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import {\n    View,\n    Image\n} from 'react-native';\nimport { Icon, FAB, Avatar } from 'react-native-elements';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { Audio } from 'expo-av';\n\nexport const printFile = (fileType, uri, clearFile, isPlaying, pauseSound, setIsPlaying, sound, setSound) => {\n    if (fileType === 'image') {\n        return (\n            <View>\n                <Icon\n                    reverse\n                    color={'red'}\n                    containerStyle={{marginLeft: wp('5%'), position:'absolute', zIndex: 9}}\n                    size={wp('5%')}\n                    name={'close-circle-outline'}\n                    type={'ionicon'}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Image source={{uri: uri}} style={{width: wp('45%'), height: undefined, aspectRatio: 1, borderRadius: 500, marginBottom: 30}} />\n            </View>\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 100, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Icon onPress={() => isPlaying ? pauseSound() : playSound(setIsPlaying, sound, setSound, uri) } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30, zIndex: 2}} />\n            </View>\n        );\n    }\n};\n\nexport const playSound = async (setIsPlaying, sound, setSound, uri) => {\n    setIsPlaying(true);\n    await Audio.setAudioModeAsync({\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n    });\n    const getSoundStatus = await sound?.getStatusAsync();\n    if (getSoundStatus?.isLoaded === false) {\n        await sound.loadAsync({ uri: uri });\n        setSound(sound);\n    }\n    await sound.playAsync();\n    sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n        if (playbackStatus.didJustFinish) {\n            await sound.unloadAsync();\n            setIsPlaying(false);\n        }\n    });\n};\n\nexport const pickCorrectIcon = (fileType, uri) => {\n    if (fileType === 'image') {\n        return (\n            <Avatar\n                source={{ uri: uri }}\n                avatarStyle={{borderRadius: 100}}\n                containerStyle={{marginHorizontal: 8, width: wp('12%'), height: undefined, aspectRatio: 1, borderRadius: 100}}\n            />\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <Icon\n                raised\n                size={wp('5.8%')}\n                name={'musical-notes-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    } else {\n        return (\n            <Icon\n                raised\n                size={wp('5.8%')}\n                name={'text-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    }\n};","import React, { useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport { pickCorrectIcon } from '../utils/quizFunc';\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n\n    const length = props.quizEdit?.content?.length + props.newContent?.length;\n\n    const pickOutQuestion = () => {\n        if (length <= 2 && props.quizEdition) return;\n        if (props.quizEdition === true) {\n            if (Number.isInteger(props.questionId)) {\n                // if the questionId is an integer, it means it has not\n                // been added to the api yet, so it's an index of the\n                // newContent array passed in the props from the ViewQuiz Component\n\n                const index = props.questionId - props.quizEdit?.content?.length;\n                const tmp = props.newContent;\n                tmp.splice(index, 1);\n                // take out the new content from the newContent state in the\n                // parent component\n                props.setNewContent([...tmp]);\n            } else {\n                // todo not get by api but update quizedit state\n                // update api only when saving quiz\n                const index = props.quizEdit.content.findIndex(el => el.id == props.questionId );\n                const tmp = props.quizEdit;\n                tmp.content.splice(index, 1);\n                props.setQuizEdit(tmp);\n                props.setReload(!props.reload)\n                props.setEditedQuiz(true);\n            }\n        } else {\n            const tmp = props.quizEdition ? props.content : props.contentList;\n            tmp.splice(props.index, 1)\n            props.setContent([...tmp]);\n        }\n        setModal(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={styles.textOverlayDelete}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={styles.backButtonOverlay}\n                    titleStyle={styles.title}\n                    containerStyle={{ marginRight: wp('4%') }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={styles.OKButtonOverlay}\n                    titleStyle={styles.title}\n                    onPress={() => pickOutQuestion() }\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { props.setEditContent(props.questionId) }} >\n                { pickCorrectIcon(props.content.fileType, props.content.uri) }\n                <ListItem.Content style={styles.listItemContent}>\n                    <ListItem.Title style={styles.listItemTitle}>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle style={styles.listItemSubtitle}>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon disabled={props.quizEdition == true && length <= 2} reverse size={wp('4%')} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","export function ScoreRatio (content, personId) {\n    var success = 0;\n    var fail = 0;\n    content.map( (el, i) => {\n        const score = el.score.filter( (el) => el.personId == personId );\n        score.map( (el, i) => {\n            success += parseInt(el.success);\n            fail += parseInt(el.failed);\n        });\n    });\n    const total = success + fail;\n    if (total == 0)\n        return 0;\n    const score = ((success / total) * 100).toFixed(2);\n    return score;\n};","import React from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\n\nimport { ScoreRatio } from './utils/scoreFunc';\nimport styles from './styles';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n\n    return (\n        <ListItem {...componentProps} onPress={() => {\n                props.setEdit(true);\n                props.setQuizEdit(props.quiz);\n            }}>\n            <ListItem.Content style={styles.listItemContent}>\n                <ListItem.Title style={styles.listItemTitle}>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle style={styles.listItemSubtitle}>\n                    { ScoreRatio(props.quiz.content, props.personId) }{'% '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle style={styles.listItemSubtitle}>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={wp('4%')}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Text,\n    ScrollView,\n} from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport QuizList from './QuizList';\nimport styles from './styles';\n\nimport * as API from '../../../data/quizApi';\n\nexport default function ViewQuizList(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <ScrollView>\n            {props.loading ? (\n                <ActivityIndicator\n                    color={'blue'}\n                    size={'small'}\n                    style={styles.loading}\n                />\n            ) : props.quiz?.length > 0 ? (\n                props.quiz?.map((el, i) => {\n                    return (\n                        <QuizList\n                            index={i}\n                            key={el._id}\n                            quiz={el}\n                            lang={props.lang}\n                            deleteId={deleteId}\n                            personId={props.personId}\n                            setEdit={props.setEdit}\n                            setQuizEdit={props.setQuizEdit}\n                        />\n                    );\n                })\n            ) : (\n                <Text style={styles.nothingYet}>\n                    {QuizLang[props.lang].NothingYet}\n                </Text>\n            )}\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/activities/quiz/success.gif';\n\nimport styles from './styles';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                buttonStyle={styles.successButton}\n                titleStyle={styles.title}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    KeyboardAvoidingView,\n    Platform,\n} from 'react-native';\nimport { Button, Icon, Input, Badge } from 'react-native-elements';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport * as DocumentPicker from 'expo-document-picker';\nimport * as ImagePicker from 'expo-image-picker';\n\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContent(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const pickAudioFile = async () => {\n        let result = await DocumentPicker.getDocumentAsync({type: 'audio/*', copyToCacheDirectory: true, multiple:false});\n        if (result.type === 'cancel') {\n            return;\n        }\n        const filename = result.uri.split('/')[result.uri.split('/').length - 1];\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(filename);\n    };\n\n    const pickImageFile = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n        if (result.type === 'cancel') {\n            return;\n        }\n        const filename = result.uri.split('/')[result.uri.split('/').length - 1];\n        props.setUri(result.uri);\n        props.setFileType(result.type);\n        props.setFilename(filename);\n    };\n\n    const printImportButtons = () => {\n        if (Platform.OS === 'ios') {\n            return (<View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'wrap'}}>\n                <Button\n                    title={QuizLang[props.lang].ImportImage}\n                    buttonStyle={{marginRight: 15, borderRadius: 15, width: wp('40%') }}\n                    titleStyle={styles.title}\n                    onPress={pickImageFile}\n                />\n                <Button\n                    title={QuizLang[props.lang].ImportSound}\n                    buttonStyle={{ borderRadius: 15, width: wp('40%') }}\n                    titleStyle={styles.title}\n                    onPress={pickAudioFile}\n                />\n            </View>);\n        } else {\n            return (<Button\n                title={QuizLang[props.lang].ImportFile}\n                buttonStyle={styles.importButton}\n                titleStyle={styles.title}\n                onPress={pickFile}\n            />)\n        }\n    }\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <KeyboardAvoidingView behavior='padding' style={{flex:1}}>\n                <ScrollView contentContainerStyle={styles.ScrollView}>\n                    { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                    { printImportButtons() }\n                    <Text style={styles.overlayDescriptionReference}>\n                        {QuizLang[props.lang].ReferenceFile}\n                    </Text>\n                    <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: wp('10%'), flexShrink: 1, flexWrap:'wrap'}}>\n                        <Input\n                            value={props.question}\n                            inputStyle={styles.input}\n                            containerStyle={{marginBottom: hp('5%')}}\n                            placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                            onChangeText={(e) => props.setQuestion(e)}\n                        />\n                        <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                        <Input\n                            placeholder={QuizLang[props.lang].AddAnswer}\n                            inputStyle={styles.input}\n                            value={answer}\n                            onChangeText={(e) => setAnswer(e)}\n                        />\n                        <Button\n                            buttonStyle={styles.addAnswer}\n                            icon={\n                                <Icon\n                                    name={'add-circle'}\n                                    type={'ionicon'}\n                                    color={'white'}\n                                    size={wp('4%')}\n                                    //style={{ marginHorizontal: 5 }}\n                                />\n                            }\n                            onPress={() => addAnswer()}\n                            disabled={props.answers.length >= 10}\n                        />\n                        </View>\n                    </View>\n                    <View style={styles.badgesView}>\n                        {props.answers.map( (el, i) => {\n                            return(\n                                <Badge\n                                    key={i}\n                                    value={el}\n                                    badgeStyle={styles.badge}\n                                    textStyle={{ fontSize: wp('3%')}}\n                                    onPress={() => pickOutAnswer(i)}\n                                />\n                            )\n                        })}\n                    </View>\n                    <Text style={styles.overlayDescriptionAnswers}>\n                        {QuizLang[props.lang].WhatIsAnswer}\n                    </Text>\n                </ScrollView>\n            </KeyboardAvoidingView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    SafeAreaView,\n    ScrollView,\n    Alert,\n    Modal,\n    Text\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay } from 'react-native-elements';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport QuestionList from './Creation/QuestionList';\nimport ViewQuizList from './ViewQuizList';\n\nimport * as API from '../../../data/quizApi';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport FormQuizContent from './Creation/FormQuizContent';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n    // if the user is editing or not an existing quiz\n    const [edit, setEdit] = useState(false);\n\n    // if the user want to add a question to an existing quiz\n    const [newQuestion, setNewQuestion] = useState(false);\n\n    // if the user want to edit an existing question to an existing quiz\n    const [editContent, setEditContent] = useState();\n\n    // the existing quiz to edit\n    const [quizEdit, setQuizEdit] = useState();\n\n    // the new content to add in an existing quiz\n    const [newContent, setNewContent] = useState([]);\n\n    // check if something has been edited\n    const [editedQuiz, setEditedQuiz] = useState(false);\n\n    // open the modal of going back without saving confirmation\n    const [modal, setModal] = useState(false);\n\n    // the states for the quiz edition (add / edit question)\n    const [question, setQuestion] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const push = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setNewContent([...newContent, push]);\n        setEditedQuiz(true);\n        setSuccess(true);\n    };\n\n    const saveContent = () => {\n        let content;\n        let index;\n        if (Number.isInteger(editContent)) {\n            // edit newContent array\n            content = newContent[editContent - quizEdit?.content?.length];\n        } else {\n            // edit quizEdit array\n\n            // for already in api content -- think of reuploading the file\n            // if there's a new one, or to delete it\n            index = quizEdit.content.findIndex(el => el.id == editContent);\n            content = quizEdit.content[index];\n            if (fileType != content.fileType || uri != content.uri)\n                content.editedFile = true;\n        }\n        content.filename= filename;\n        content.fileType = fileType;\n        content.uri = uri;\n        content.answers = answers;\n        content.question = question;\n        setEditedQuiz(true);\n        setSuccess(true);\n        if (Number.isInteger(editContent)) {\n            if (newContent.length == 1)\n                setNewContent([content]);\n            else\n                setNewContent([...content]);\n        } else {\n            quizEdit.content[index] = content;\n            setQuizEdit(quizEdit);\n        }\n    };\n\n    // clear the states before edition or creation of a content\n    const clearState = () => {\n        setAnswers([]);\n        setQuestion();\n        setFileType();\n        setFilename();\n        setUri();\n        setSound(new Audio.Sound());\n    };\n\n    // Save the edited quiz\n    const saveQuiz = () => {\n        if (!editedQuiz) return;\n        const content = quizEdit.content.concat(newContent);\n        API.saveQuiz(props.personId, quizEdit._id, content).then((data) => {\n            return Alert.alert(\n                QuizLang[props.lang].EditedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            props.setReload(!props.reload);\n                            setNewContent([]);\n                            goBack();\n                        },\n                    }\n                ]\n            );\n        });\n    }\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const viewPage = () => {\n        if (editContent && !newQuestion) {\n            if (success) setSuccess(false);\n            let content;\n            if (Number.isInteger(editContent)) {\n                content = newContent[editContent - quizEdit?.content?.length];\n            } else {\n                const index = quizEdit.content.findIndex(el => el.id == editContent);\n                content = quizEdit.content[index];\n            }\n            if (!content) return;\n            setFilename(content.filename);\n            setFileType(content.fileType);\n            setUri(content.uri);\n            setQuestion(content.question);\n            setAnswers([...content.answers]);\n            setNewQuestion(true);\n        } else if (newQuestion) {\n            // if the user wants to set a new question for quiz edition\n            const propsFormQuizContent = {\n                lang: props.lang,\n                uri: uri,\n                filename: filename,\n                answers: answers,\n                fileType: fileType,\n                question: question,\n                success: success,\n                sound: sound,\n                isPlaying: isPlaying,\n\n                setAnswers: setAnswers,\n                setFileType: setFileType,\n                setQuestion: setQuestion,\n                setUri: setUri,\n                setFilename: setFilename,\n                setSuccess: setSuccess,\n                setSound: setSound,\n                setIsPlaying: setIsPlaying,\n                pauseSound: pauseSound\n            };\n            return <FormQuizContent {...propsFormQuizContent} />\n        } else if (edit && !newQuestion) {\n             // if the user want to see all the question for the quiz edition\n            return (quizEdit.content)?.concat(newContent)?.map((el, i) => {\n                return (<QuestionList\n                    index={i}\n                    key={i}\n                    id={quizEdit._id || 0}\n                    quizEdit={quizEdit}\n                    newContent={newContent}\n                    content={el}\n                    lang={props.lang}\n                    questionId={el.id || i}\n                    quizEdition={true}\n                    reload={props.reload}\n                    setReload={props.setReload}\n                    setEditedQuiz={setEditedQuiz}\n                    setEditContent={setEditContent}\n                    setQuizEdit={setQuizEdit}\n                    setNewContent={setNewContent}\n                />);\n            })\n        } else {\n             // if the user want to see all the existing quiz for the quiz edition\n            return (<ViewQuizList\n                quiz={props.quiz}\n                loading={props.loading}\n                lang={props.lang}\n                personId={props.personId}\n                setEdit={setEdit}\n                setQuizEdit={setQuizEdit}\n                setReload={props.setReload}\n            />);\n        }\n    };\n\n    const goBack = () => {\n\n        if (!success) setSuccess(false);\n\n        if ( (editedQuiz && !newQuestion) || newContent.length > 0) {\n            setModal(true);\n            return;\n        }\n\n        if (editContent) {\n            clearState();\n            setEditContent();\n            setNewQuestion(false);\n        } else if (newQuestion)\n            setNewQuestion(false);\n        else if (edit) {\n            setEditedQuiz(false);\n            setEdit(false);\n        } else\n            props.setTab(0);\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return saveContent();\n        } else if (newQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].AddContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return pushContent();\n        } else if (edit) {\n            // save the quiz button\n            if (mode == 'title') return QuizLang[props.lang].Save;\n            else if (mode == 'disabled') return !(editedQuiz);\n            else if (mode == 'onpress') return saveQuiz();\n        } else {\n            // create a quiz button\n            if (mode == 'title') return QuizLang[props.lang].Create;\n            else if (mode == 'disabled') false;\n            else if (mode == 'onpress') return props.setTab(4);\n        }\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => setModal(false)}\n                    ModalComponent={Modal}\n                >\n                    <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                    <View style={{ flexDirection: 'row' }}>\n                        <Button\n                            title={QuizLang[props.lang].Cancel}\n                            titleStyle={styles.title}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{ marginRight: 10 }}\n                            onPress={() => setModal(false)}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].GoBack}\n                            titleStyle={styles.title}\n                            buttonStyle={{ fontWeight: 'bold' }}\n                            onPress={() => {\n                                setEditedQuiz(false);\n                                setEditContent();\n                                setEdit(false);\n                                setNewContent([]);\n                                setModal(false);\n                            } }\n                        />\n                    </View>\n                </Overlay>\n\n\n                <Button\n                    title={ buttonTop('title') }\n                    titleStyle={styles.title}\n                    buttonStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={edit ? 'save-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={wp('4%')}\n                            style={{ marginHorizontal: wp('2%') }}\n                        />\n                    }\n                    onPress={() => {\n                        buttonTop('onpress')\n                    }}\n                    disabled={ buttonTop('disabled') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: wp('4%')}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => goBack() }\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: hp('2.5%') }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                {\n                    edit && !newQuestion && !editContent ?\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        titleStyle={styles.title}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={wp('4%')}\n                                style={{ marginHorizontal: wp('2%') }}\n                            />\n                        }\n                        onPress={() => setNewQuestion(true) }\n                    /> : <></>\n                }\n                <ScrollView style={{marginBottom: 40}}>\n                { viewPage() }\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert,\n    Platform\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContent from './FormQuizContent';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\nimport { Audio } from 'expo-av';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n    const [modalConfirmation, setModalConfirmation] = useState(false);\n\n    const [editContent, setEditContent] = useState();\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name.substring(0, 23),\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    // Save an existing question\n    const saveContent = () => {\n        content[editContent].fileType = fileType;\n        content[editContent].filename = filename;\n        content[editContent].uri = uri;\n        content[editContent].question = question;\n        content[editContent].answers = answers;\n        setContent([...content]);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        if (isPlaying) setIsPlaying(false);\n    };\n\n    const clearState = () => {\n        setAnswers([]);\n        setFileType();\n        setFilename();\n        setUri();\n        setQuestion();\n        setSuccess(false);\n    };\n\n    const printQuestionList = () => {\n        if (content.length === 0) {\n            return (<Text style={styles.nothingYet}>\n                {QuizLang[props.lang].NoQuestionYet}\n            </Text>);\n        } else {\n            return content?.map((el, i) => {\n                return (\n                    <QuestionList\n                        index={i}\n                        key={i}\n                        id={i}\n                        content={el}\n                        lang={props.lang}\n                        setContent={setContent}\n                        setEditContent={setEditContent}\n                        questionId={i}\n                        contentList={content}\n                    />\n                );\n            });\n        }\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent !== undefined) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question && question?.length > 2);\n            else if (mode == 'onpress') { pauseSound(); return saveContent(); }\n        } else if (createQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].OK;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question && question?.length > 2);\n            else if (mode == 'onpress') { pauseSound(); setModal(false); return pushContent(); }\n        } else {\n            if (mode == 'title') return QuizLang[props.lang].Complete;\n            else if (mode == 'disabled') return !(content.length > 0);\n            else if (mode == 'onpress') { return setModal(true);  }\n        }\n    };\n\n    const printPage = () => {\n        if (editContent !== undefined && !createQuestion) {\n            if (success) setSuccess(false);\n            setAnswers(content[editContent].answers);\n            setFileType(content[editContent].fileType);\n            setFilename(content[editContent].filename);\n            setUri(content[editContent].uri);\n            setQuestion(content[editContent].question);\n            setCreateQuestion(true);\n        }\n        if (createQuestion) { // if the user is creating a new question\n            const propsFormQuizContent = {\n                lang: props.lang,\n                uri: uri,\n                filename: filename,\n                answers: answers,\n                fileType: fileType,\n                question: question,\n                success: success,\n                sound: sound,\n                isPlaying: isPlaying,\n\n                setAnswers: setAnswers,\n                setFileType: setFileType,\n                setQuestion: setQuestion,\n                setUri: setUri,\n                setFilename: setFilename,\n                setSuccess: setSuccess,\n                setSound: setSound,\n                setIsPlaying: setIsPlaying,\n                pauseSound: pauseSound\n            };\n\n            /* Form to create a quiz */\n            return <FormQuizContent {...propsFormQuizContent} />\n        } else {\n            return <SafeAreaView style={styles.safeArea}>\n                <Button\n                    title={QuizLang[props.lang].AddQuestion}\n                    titleStyle={styles.title}\n                    icon={\n                        <Icon\n                            name={'add-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={wp('4%')}\n                            style={{ marginHorizontal: wp('2%') }}\n                        />\n                    }\n                    onPress={() => setCreateQuestion(true)}\n                />\n                <ScrollView style={{marginBottom: 40}}>\n                    { props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : printQuestionList() }\n                </ScrollView>    \n            </SafeAreaView>\n        }\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row', alignItems:'center' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button\n                        containerStyle={styles.completeQuizCreationContainer}\n                        buttonStyle={styles.completeQuizCreationButton} title={{}}\n                        icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={wp('4%')}\n                        />\n                    } disabled={name?.length < 3 || name.length > 23 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            {/* Confirmation give up quiz creation */}\n            <Overlay\n                visible={modalConfirmation}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => setModalConfirmation(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={QuizLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={() => setModalConfirmation(false)}\n                    />\n                    <Button\n                        title={QuizLang[props.lang].GoBack}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={() => {\n                            setModalConfirmation(false);\n                            props.setTab(2);\n                        } }\n                    />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={ buttonTop('title') }\n                    titleStyle={styles.title}\n                    buttonStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={wp('4%')}\n                            style={{ marginHorizontal: wp('2%') }}\n                        />\n                    }\n                    disabled={ buttonTop('disabled') }\n                    onPress={ () => buttonTop('onpress') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: wp('5%')}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearState();\n                        pauseSound();\n                        if (createQuestion) {\n                            setEditContent(undefined)\n                            setCreateQuestion(!createQuestion);\n                        } else if (content.length == 0) props.setTab(2);\n                        else setModalConfirmation(true)\n                    }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            { printPage() }\n        </>\n    );\n}\n","import React from 'react';\nimport { View } from 'react-native';\nimport { Text, Button, Icon } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif');\n    return (\n    <View style={{flex: 1, alignContent: 'center', alignItems: 'center'}}>\n        <View>\n        { props.quizLength > 1 ?\n            <Icon\n                reverse\n                color={'#a582a5'}\n                name={'repeat-sharp'}\n                size={wp('5%')}\n                type={'ionicon'}\n                containerStyle={styles.randomPicker}\n                onPress={() => props.pickRandomQuizz()}\n            /> : <></>\n        }\n        </View>\n        <Lottie\n            LottieSource={ThinkingLottie}\n            ImageSource={ThinkingImage}\n            LottieStyle={styles.lottie}\n        />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButtonContainer}\n            buttonStyle={styles.playButton}\n            titleStyle={styles.title}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={wp('4%')}\n                    style={{ marginLeft: wp('3%') }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            titleStyle={styles.title}\n            containerStyle={styles.leaveButtonPlayContainer}\n            buttonStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={wp('4%')}\n                    style={{ marginRight: wp('3%') }}\n                />\n            }\n        />\n    </View>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, Alert, View, Modal } from 'react-native';\nimport { Text, Image, Input, Button, Icon, Overlay } from 'react-native-elements';\nimport ConfettiCannon from 'react-native-confetti-cannon';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport TrophyImage from '../../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../../assets/img/activities/sad.gif';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport Lottie from '../../../utils/Lottie';\nimport { Audio } from 'expo-av';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n    const [modal, setModal] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const [success, setSuccess] = useState(0);\n    const [fail, setFail] = useState(0);\n    const [confetti, setConfetti] = useState(false);\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const TrophyLottie = require('../../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../../assets/lottie/sad.json');\n\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const stopSound = async () => {\n        await pauseSound();\n        setSound(new Audio.Sound());\n        await sound?.unloadAsync();\n    }\n\n    const playSound = async () => {\n        setIsPlaying(true);\n        await Audio.setAudioModeAsync({\n            staysActiveInBackground: true,\n            shouldDuckAndroid: true,\n        });\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus?.isLoaded === false) {\n            await sound.loadAsync({ uri: game[current].uri });\n            setSound(sound);\n        }\n        await sound.playAsync();\n        sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n            if (playbackStatus.didJustFinish) {\n                await sound.unloadAsync();\n                setIsPlaying(false);\n            }\n        });\n    };\n\n    const setMediaType = () => {\n        if (!game[current]) return;\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <Icon onPress={() => isPlaying ? pauseSound() : playSound() } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30}} />\n            default:\n                return <></>;\n        }\n    };\n\n    const openAlertResultQuestion = (result) => {\n        return (\n            Alert.alert(\n                result ? QuizLang[props.lang].SuccessTitle : QuizLang[props.lang].FailedTitle,\n                result ? QuizLang[props.lang].Success : QuizLang[props.lang].Failed(game[current].answers),\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: async () => {\n                            if (current + 1 <= game.length - 1)\n                                setCurrent(current + 1);\n                            else {\n                                const path = success >= fail ? require(`../../../../assets/sound/global/applause.mp3`) : require(`../../../../assets/sound/global/you_lose.mp3`);\n                                if (success >= fail) setConfetti(true);\n                                const { sound } = await Audio.Sound.createAsync(path);\n                                setSound(sound);\n                                sound.playAsync();\n                                setModal(true);\n                            }\n                        },\n                    }\n                ]\n            )\n        )\n    };\n\n    const answerQuestion = async () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        stopSound();\n        setAnswer('');\n        const result = game[current].answers.includes(answerTrimedLowercase);\n        if (result === false) {\n            // increment the fail and update the API\n            setFail(fail + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, false);\n        } else {\n            // increment the success and update the API\n            setSuccess(success + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, true)\n        }\n        openAlertResultQuestion(result);\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                {confetti && success >= fail ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n                )}\n                <Overlay\n                    visible={modal}\n                    overlayStyle={[styles.overlay, {width: 120+'%'}]}\n                    onBackdropPress={() => props.setTab(0)}\n                    ModalComponent={Modal}\n                >\n                    {success >= fail ? \n                        <>\n                            <Lottie LottieSource={TrophyLottie} ImageSource={TrophyImage} LottieStyle={styles.lottieOverlay} loop={false} />\n                            <Text style={[styles.headOverlayComplete, {color:'blue'}]}>{QuizLang[props.lang].SuccessQuizTitle}</Text>\n                            <Text style={styles.overlayDesc}>{QuizLang[props.lang].SuccessQuiz(fail, success)}</Text>\n                        </>\n                    :\n                        <>\n                            <Lottie LottieSource={SadLottie} ImageSource={SadImage} LottieStyle={styles.lottieOverlay} />\n                            <Text style={[styles.headOverlayComplete, {color:'red'}]}>{QuizLang[props.lang].FailQuizTitle}</Text>\n                            <Text style={styles.overlayDesc}>{QuizLang[props.lang].FailQuiz(fail, success)}</Text>\n                        </>\n                    }\n                    <Button\n                        title={QuizLang[props.lang].Leave}\n                        titleStyle={styles.title}\n                        onPress={() => props.setTab(0)}\n                        buttonStyle={styles.leaveButton}\n                        containerStyle={{marginTop: hp('4%')}}\n                        icon={\n                            <Icon\n                                name={'caret-back-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={wp('4%')}\n                                style={{ marginHorizontal: wp('2%') }}\n                            />\n                        }\n                    />\n                </Overlay>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button\n                        buttonStyle={styles.buttonQuizGameOK}\n                        title={QuizLang[props.lang].OK}\n                        onPress={() => { answerQuestion() }}\n                        titleStyle={styles.title}\n                    />\n                </View>\n            </>\n        }\n    </>);\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\n// This component is mounted when the user clicks on 'Play' in the main quiz menu\nexport default function Play(props) {\n    const [play, setPlay] = useState(false);\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quizId={props.quiz._id}\n                personId={props.personId}\n                quiz={props.quiz.content}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n                quizLength={props.quizLength}\n            />\n        }\n    </View>);\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    \n                    titleStyle={styles.title}\n                    buttonStyle={styles.leaveButtonHelpPage}\n                    containerStyle={styles.leaveButtonHelpPageContainer}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={wp('4%')}\n                            style={{ marginHorizontal: wp('2%') }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{QuizLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: wp('2%') }}\n                    />\n                    {QuizLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Rules()}</Text>\n\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: wp('2%') }}\n                    />\n                    {QuizLang[props.lang].CustomHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Custom()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler, Alert } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber, randomArrayElement } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Creation/CreateQuiz';\nimport Play from './Play';\nimport Help from './Help';\n\nimport * as API from '../../../data/quizApi';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1) {\n                    Alert.alert(\n                        QuizLang[props.lang].GiveUpQuizTitle,\n                        QuizLang[props.lang].GiveUpQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    setTab(0);\n                                }\n                            },\n                        ]\n                    )\n                }\n                else setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            let rand = randomArrayElement(random, 0, quiz.length - 1);\n            setRandom(rand);\n        }\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    isLoading={isLoading}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                quizLength={quiz.length}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    setReload={setReload}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {printPage()}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'green')\n        color = '#459449';\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Essai${tries > 1 ? 's' : ''} restant${tries > 1 ? 's' : ''}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Score actuel: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Commencer \",\n        GiveUp: \"Abandonner\",\n        Reinit: \"Nouveau modèle\",\n        TitleGiveUp: \"Abandonner la partie\",\n        SureToGiveUp: \"Êtes-vous sûr(e) de vouloir abandonner la partie? Votre score sera enregistré.\",\n        Congratulations: 'Félicitations !!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: \"Recommencer\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'Le jeu des pairs, comment ça marche ?',\n        RulesHead: \" Les règles\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu des pairs est assez connu et classique. Lorsque vous commencerez la partie, vous aurez un {0}. Cliquez alors sur le bouton \"{1}\" sur le bas de l’écran pour retourner les cartes face verso.\\n\\nVous devrez alors {2}. Par exemple, si vous cliquez sur une carte rouge, vous devrez cliquer sur l’autre carte rouge ensuite.\\n\\nPlus vous grimpez dans le score, plus le nombre de paires s’ajoutent au schéma. Il peut y avoir jusqu’à {3} au total.`,\n                boldText: [\"schéma de plusieurs paires de cartes face recto\", \"Commencer\", \"retourner les paires l'une après l’autre\", \"6 paires\"],\n            });\n        },\n        ScoreHead: \" Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois qu’un schéma est complété (c'est-à-dire que toutes les cartes ont été retournées), {0} et passez à un schéma suivant, {1}.\\n\\nLes points peuvent vous servir à avoir un joli score, mais aussi à recréer un nouveau schéma si vous l’avez complètement oublié. A chaque re-création d’un schéma, {2}. Et vous ne pouvez pas recréer un schéma s’il ne vous reste {3}.`,\n                boldText: [\"vous gagnez un point\", \"potentiellement plus difficile\", \"vous perdez un point\", \"qu’un essai pour le schéma actuel\"],\n            });\n        },\n        Remember: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Mémorisez bien ce schéma!'],\n            }, 'green');\n        }\n    },\n    en: {\n        Play: 'Play',\n        Help: 'How does it work',\n        Leave: 'Back',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Remaning tr${tries > 1 ? 'ies' : 'y'}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Actual score: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Start \",\n        GiveUp: \"Give up\",\n        Reinit: \"New model\",\n        TitleGiveUp: \"Give up the game\",\n        SureToGiveUp: \"Are you sure to give up this party? Your score will be saved.\",\n        Congratulations: 'Congratulations!!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        SoBad: 'So sad...',\n        ScoreNotBeated: 'Your daily score has not been beaten... But you can retry!',\n        Retry: \"Retry\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Best score made today: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'The double memory, how does it works?',\n        RulesHead: \" The rules\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The game of peers (or double memory) is quite familiar and classic. When you start the game, you will have a {0}. Then click on the \"{1}\" button at the bottom of the screen to turn the cards face up.\\n\\nFor example, if you click on a red card, you will have to click on the other red card next.\\n\\nThere can be up to {3} in total.`,\n                boldText: [\"pattern of several pairs of cards face up\", \"Start\", \"turn over the pairs one after the other\", \"6 pairs\"],\n            });\n        },\n        ScoreHead: \" The score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `Each time a pattern is completed (i.e., all the cards have been turned over), {0} and move on to the next pattern, {1}.\\n\\nThe points can be used to get a nice score, but they can also be used to recreate a new pattern if you've completely forgotten about it. Each time you re-create a pattern, {2}. And you can't recreate a pattern if you don't have {3} left.`,\n                boldText: [\"you earn a point\", \"potentially more challenging\", \"you lose a point\", \"than a try for the current pattern\"],\n            });\n        },\n        Remember: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Remember this schema carefully!'],\n            }, 'green');\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { Dimensions } from 'react-native'\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nconst mode = SCREEN_WIDTH >= SCREEN_HEIGHT ? 'landscape' : 'portrait';\nconst factor = mode == 'landscape' ? hp : wp;\n\nexport default StyleSheet.create({\n    view: {\n        height: hp('100%'),\n        paddingBottom: 40,\n        flex: 1,\n    },\n    logo: {\n        width: wp('25%'),\n        height: undefined,\n        aspectRatio: 1,\n        marginVertical: 20, \n        opacity: 0.8,\n        marginBottom: 40\n    },\n    btnTitle: {\n        fontSize: wp('4%')\n    },\n    button: {\n        width: wp('70%'),\n        height: hp('6%'),\n        borderRadius: 10,\n    },\n    buttonContainer: {\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: wp('70%'),\n        height: hp('6%'),\n        backgroundColor: 'red',\n        borderRadius: 10\n    },\n    leaveButtonContainer: {\n        marginTop: 40,\n        borderRadius: 10,\n        marginHorizontal: 5,\n        marginBottom: 20\n    },\n    RectoCard: {\n        width: factor('21%'),\n        height: 0,\n        backgroundColor: '#C3C3CF',\n        borderRadius: 20,\n        borderColor: '#858593',\n        borderWidth: 1,\n        aspectRatio: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    PlayingCard: {\n        width: factor('21%'),\n        height: 0,\n        borderRadius: 20,\n        aspectRatio: 1,\n        borderColor: '#68FF5C',\n        borderWidth: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    VersoCard: {\n        width: factor('21%'),\n        height: 0,\n        borderRadius: 20,\n        opacity: .8,\n        marginHorizontal: 5,\n        aspectRatio: 1,\n        marginVertical: 5\n    },\n    IconCard: {\n        marginTop: 28 + '%'\n    },\n    viewGame: {\n        marginTop: 10,\n        width: 95+'%',\n        height: hp('55%'),\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    buttonViewPlay: {\n        flexDirection: 'row',\n        width: mode == 'portrait' ? wp('100%') : hp('100%'),\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: 10\n    },\n    playButtons: {\n        width: wp('40%'),\n        height: hp('7%'),\n        alignContent: 'center',\n        textAlign: 'center',\n        paddingHorizontal: 30,\n        borderRadius: 10,\n        marginHorizontal: 5\n    },\n    overlay: {\n        padding: 10+'%',\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n        height: hp('40%'),\n    },\n    headerOverlay: {\n        fontSize: wp('5%'),\n        fontWeight: 'bold',\n        marginTop: 5+'%',\n        marginBottom: hp('2%')\n    },\n    textOverlay: {\n        width: wp('60%'),\n        fontSize: wp('4%'),\n        marginBottom: hp('2%'),\n        textAlign: 'center',\n    },\n    overlayReturn: {\n        width: wp('25%'),\n        height: hp('6%'),\n        backgroundColor: 'red',\n        borderRadius: 15\n    },\n    retryButton: {\n        width: wp('50%'),\n        height: hp('6%'),\n        borderRadius: 10,\n    },\n\n\n    /// Help page related\n    // Help section\n    viewHelpPage: {\n        marginTop: -20,\n        backgroundColor: 'white',\n        width: 100 + '%',\n        //height: hp('83%')\n    },\n    leaveButtonHelpPageContainer: {\n        alignSelf: 'center',\n        marginTop: 20,\n        borderRadius: 70,\n        marginHorizontal: 5,\n    },\n    leaveButtonHelpPage: {\n        width: wp('70%'),\n        backgroundColor: 'red',\n        borderRadius: 70,\n        height: hp('5.4%')\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: wp('7%'),\n        textAlign: 'center',\n        color: '#4954FF'\n    },\n    helpStepHead: {\n        marginBottom: hp('3%'),\n        fontWeight: 'bold',\n        fontSize: wp('5.3%'),\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: wp('5%'),\n        marginBottom: hp('5%'),\n        width: wp('90%'),\n        fontSize: wp('4%')\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: wp('140%'),\n        opacity: .4,\n        zIndex: -1\n    },\n    btnTitle: {\n        fontSize: wp('4%')\n    },\n    text: {\n        fontSize: wp('4%')\n    }\n});\n","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{marginTop: 40}}>\n                <Button\n                    title={DoubleLang[props.lang].Leave}\n                    titleStyle={styles.btnTitle}\n                    buttonStyle={styles.leaveButtonHelpPage}\n                    containerStyle={styles.leaveButtonHelpPageContainer}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={wp('4%')}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{DoubleLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].Rules()}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].ScoreHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].ScoreHelp()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React from 'react';\nimport { Image, View } from 'react-native';\nimport { Button, Icon, FAB } from 'react-native-elements';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport DoubleLogo from '../../../assets/img/activities/double/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={DoubleLogo} style={styles.logo} />\n\n            <Button\n                title={DoubleLang[props.lang].Play}\n                containerStyle={styles.buttonContainer}\n                buttonStyle={styles.button}\n                titleStyle={styles.btnTitle}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={DoubleLang[props.lang].Help}\n                containerStyle={styles.buttonContainer}\n                buttonStyle={styles.button}\n                titleStyle={styles.btnTitle}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <View style={{\n                flex: 1, alignItems: 'center',\n                flexDirection: 'row'\n            }}>\n\n            <FAB\n                color='#2089dc'\n                style={{\n                    marginRight: wp('10%'),\n                    marginTop: hp('1%')\n                }}\n                icon={\n                    {\n                        name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                        type: 'ionicon',\n                        color:'white'\n                    }\n                }\n                onPress={() => props.ambiantSoundPlay() }\n            />\n            <FAB\n                color='#2089dc'\n                style={{\n                    marginLeft: wp('2%'),\n                    marginTop: hp('1%')\n                }}\n                \n                icon={\n                    {\n                        name: props.soundEnabled ? 'sound' : 'sound-mute',\n                        type: 'entypo',\n                        color:'white'\n                    }\n                }\n                onPress={() => props.setSoundEnabled(prev => !prev) }\n            />\n            </View>\n\n            <Button\n                title={DoubleLang[props.lang].Leave}\n                buttonStyle={styles.leaveButton}\n                titleStyle={styles.btnTitle}\n                containerStyle={styles.leaveButtonContainer}\n                onPress={() => {\n                    props.ambiant.unloadAsync();\n                    props.setPage(null);\n                }}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={wp('4%')}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}","const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};\n\nexport const generateRandomPair = (length) => {\n    const colors = [\n        '#791414',\n        '#143479',\n        '#791462',\n        '#147920',\n        '#797714',\n        '#14AB9D'\n    ];\n    const icons = [\n        'airplane',\n        'boat',\n        'bulb',\n        'color-palette',\n        'earth',\n        'gift',\n        'happy',\n        'heart-circle',\n        'restaurant',\n        'ribbon'\n    ]\n    var arr = [];\n    for (let i = 0; i < length / 2; i++) {\n        var indexColor = Math.floor(Math.random() * colors.length);\n        var indexIcon = Math.floor(Math.random() * icons.length);\n        arr.push({ color: colors[indexColor], icon: icons[indexIcon] }, { color: colors[indexColor], icon: icons[indexIcon] });\n        colors.splice(indexColor, 1);\n        icons.splice(indexIcon, 1);\n    }\n    arr = shuffle(arr);\n    for (let i = 0; i < arr.length; i++) {\n        const el = arr[i];\n        el.idx = i\n    }\n\n    return (arr);\n};","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements';\n\nimport { Dimensions } from 'react-native'\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nimport styles from '../styles';\n\nexport default function Card(props) {\n    var cardStyles;\n    const factor = SCREEN_WIDTH >= SCREEN_HEIGHT ? SCREEN_HEIGHT : SCREEN_WIDTH;\n    if (props.inPlay) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.PlayingCard]];\n    else if (props.inFound || props.show) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.VersoCard]];\n    else cardStyles = styles.RectoCard\n\n    const icon = !props.inFound && !props.inPlay && !props.show ? 'help-circle-outline' : props.icon;\n\n    return (\n        <>\n            <TouchableOpacity style={ cardStyles } onPress={() => {\n                if (!props.inPlay && !props.inFound) props.ReturnCard(props.index);\n            }}>\n                <Icon\n                    name={icon}\n                    size={props.inFound || props.show || props.inPlay ? factor * .08 : factor * .08}\n                    color={props.inFound || props.show || props.inPlay ? 'white' : 'grey'}\n                    type=\"ionicon\"\n                    style={styles.IconCard}\n                />\n            </TouchableOpacity>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { View, Text, Modal } from 'react-native';\n\nimport { Button, Overlay, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../assets/img/activities/sad.gif';\n\nimport Lottie from '../../utils/Lottie';\n\nimport styles from './styles';\n\nimport { generateRandomPair } from './subs/helpers';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\n\nimport Card from './subs/Card';\n\nexport default function Play(props) {\n    const [game, setGame] = useState([...generateRandomPair(4)]); // the current map game\n    const [found, setFound] = useState([]);\n    const [tries, setTries] = useState(3);\n    const [play, setPlay] = useState([]); // the current play of the player, an array with two values max, corresponding to the cards the player played\n    const [show, setShow] = useState(true);\n    const [confetti, setConfetti] = useState(false);\n    const [pause, setPause] = useState(false);\n\n    const TrophyLottie = require('../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../assets/lottie/sad.json');\n\n    const setLengthGame = () => {\n        if (props.score <= 8)\n            return 4;\n        else if (props.score <= 15)\n            return 6;\n        else if (props.score <= 30)\n            return 8;\n        else if (props.score <= 45)\n            return 10;\n        else\n            return 12;\n    }\n\n    // Exemple game element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null },\n            { idx: 2, color: '#ffffff', icon: null },\n            { idx: 3, color: '#ferdnc', icon: null }\n        ]\n    */\n\n        // each play, we push the current card to the play state, and check if the first element exists in the\n        // game state, and if the second element is the same as the first one, if so => success for a round, and push\n        // this pair in the found state. If fail => clear the play && found states\n\n    // Exemple play element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 2, color: '#ffffff', icon: null }\n        ] // this is a successful array\n\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null }\n        ] // this is a fail array\n    */\n\n    const failOverlay = () => {\n        if (props.modal == false) return;\n        return (\n            <>\n                <Lottie\n                    LottieSource={SadLottie}\n                    ImageSource={SadImage}\n                    autoplay={true}\n                    loop={true}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const successOverlay = () => {\n        if (!confetti) setConfetti(true);\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].BestScoreToday(props.bestScoreDay)}\n                </Text>\n                <Lottie\n                    LottieSource={TrophyLottie}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n    \n    const newModel = () => {\n        if (props.score == 0) return;\n        const currentGameLength = game.length;\n        props.setScore(prevScore => prevScore - 1);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(currentGameLength)]);\n    };\n\n    const printButton = () => {\n        return (\n            <View style={styles.buttonViewPlay}>\n                <Button\n                    title={show ? DoubleLang[props.lang].Start : DoubleLang[props.lang].Reinit}\n                    titleStyle={styles.btnTitle}\n                    onPress={() => {\n                        if (show) setShow(false); else newModel();\n                    }}\n                    buttonStyle={[styles.playButtons, {backgroundColor: show ? '#208bdc' : 'green'}]}\n                    icon={\n                        <Icon\n                        name={show ? \"play\" : ''}\n                        size={wp('3%')}\n                        color=\"white\"\n                        type=\"ionicon\"\n                    />\n                    }\n                    iconRight={true}\n                    disabled={!show && props.score === 0 || tries <= 1} />\n                <FAB\n                    color='#2089dc'\n                    //size=\"small\"\n                    icon={\n                        {\n                            name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                            type: 'ionicon',\n                            color:'white',\n                            /* size: 15,\n                            style: {marginTop: 4} */\n                        }\n                    }\n                    onPress={() => props.ambiantSoundPlay() }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='#2089dc'\n                    //size=\"small\"\n                    icon={\n                        {\n                            name: props.soundEnabled ? 'sound' : 'sound-mute',\n                            type: 'entypo',\n                            color:'white',\n                            /* size: 15,\n                            style: {marginTop: 4} */\n                        }\n                    }\n                    onPress={() => props.setSoundEnabled(prev => !prev) }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='red'\n                    //size=\"small\"\n                    icon={\n                        {\n                            name: 'caret-back',\n                            type: 'ionicon',\n                            color:'white',\n                            /* size: 15,\n                            style: {marginTop: 4} */\n                        }\n                    }\n                    onPress={() => props.giveUp() }\n                    style={{marginHorizontal: 5}}\n                />\n            </View>);\n    };\n    \n    const ReturnCard = (key) => {\n        if (pause || show) return;\n        const currentPlay = play;\n        const indexGame = game[key];\n        const playing = [...currentPlay, indexGame];\n        if (playing.length == 2) {\n            // check if same card or return all and lose a try\n            if (playing[0].color === playing[1].color && playing[0].icon === playing[1].icon) {\n                const currentGameLength = game.length;\n                const nFound = [...found, playing[0], playing[1]];\n                if (nFound.length == currentGameLength) {\n                    props.playSound('next');\n                    props.setScore(prevScore => prevScore + 1);\n                    setShow(true);\n                    setTries(3);\n                    setGame([...generateRandomPair(setLengthGame())]);\n                    setFound([]);\n                } else {\n                    props.playSound('success');\n                    setFound(nFound);\n                }\n                setPlay([]);\n            } else {\n                setPlay(playing);\n                props.playSound('fail');\n                setPause(true);\n                setTimeout(() => {\n                    if (tries != 0) setTries(prevTries => prevTries - 1);\n                    if (tries === 0)\n                        props.endGame();\n                    else {\n                        setPlay([]);\n                        setFound([]);\n                    }\n                    setPause(false);\n                }, 1000);\n            }\n        } else {\n            setPlay(playing);\n            props.playSound('play');\n        }\n    };\n\n    const printCards = () => {\n        return game.map( (el, i) => {\n            var inFound = false;\n            var inPlay = false;\n            if (found.find(element => element.idx === i )) inFound = true;\n            else if (play.find(element => element.idx === i )) inPlay = true;\n            return (<Card show={show} key={i} index={i} inFound={inFound} inPlay={inPlay} backgroundColor={el.color} icon={el.icon} ReturnCard={ReturnCard} />);\n        });\n    };\n\n    const newGame = () => {\n        if (confetti) setConfetti(false);\n        props.setModal(false);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(4)]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n            )}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                { props.success && props.modal ? successOverlay() : failOverlay() }\n                <View style={{flexDirection: 'row', marginTop: 20}}>\n                    <Button\n                        title={DoubleLang[props.lang].Retry}\n                        onPress={() => newGame()}\n                        buttonStyle={styles.retryButton}\n                        titleStyle={styles.btnTitle}\n                        containerStyle={{marginRight: 10}}\n                        icon={\n                            <Icon\n                                name={'play-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={wp('3%')}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        } />\n\n                    <Button\n                        title={DoubleLang[props.lang].Leave}\n                        onPress={() => { \n                            if (confetti) setConfetti(false);\n                            props.setModal(false);\n                            props.setTab(0);\n                        }}\n                        buttonStyle={styles.overlayReturn}\n                        titleStyle={styles.btnTitle}\n                        icon={\n                            <Icon\n                                name={'caret-back-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={wp('3%')}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        } />\n                </View>\n            </Overlay>\n            <View style={styles.viewGame}>\n                { printCards() }\n            </View>\n            <View style={{alignItems: 'center', width: wp('100%'), marginTop: -50}}>\n                { show === true ? <Text style={styles.text}>{DoubleLang[props.lang].Remember()}</Text> : <></> }\n                <Text style={styles.text}>{DoubleLang[props.lang].Score(props.score)}</Text>\n                <Text style={styles.text}>{DoubleLang[props.lang].BestDayScore(props.bestScoreDay)}</Text>\n                <Text style={[styles.text, {marginBottom: 20}]}>{DoubleLang[props.lang].RemaningTries(tries)}</Text>\n                { printButton() }\n            </View>\n        </>\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n    Text,\n    BackHandler,\n    ScrollView,\n    Alert\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport styles from './styles';\n\nimport * as API from '../../../data/doubleApi';\n\nimport Help from './Help';\nimport Menu from './Menu';\nimport Play from './Play';\n\nconst currentDate = new Date().toLocaleDateString('fr-FR');\n\nexport default function Double(props) {\n    const [tab, setTab] = useState(0);\n    const [score, setScore] = useState(0);\n    const [bestScoreDay, setBestScoreDay] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [ambiant, setAmbiant] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n    const [soundEnabled, setSoundEnabled] = useState(true);\n    const [ambiantEnabled, setAmbiantEnabled] = useState(true);\n\n    useEffect( async () => {\n        // API.clear();\n\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by kilo\n            require(`../../../assets/sound/double/ambiant.mp3`),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n\n        API.getScoreDay(props.personId, currentDate).then((data) => {\n            if (data.length > 0) setBestScoreDay(data[0].score);\n        });\n\n        API.getBestScore(props.personId).then((data) => {\n            if (data.length > 0) setBestScore(data[0].score);\n        });\n\n    }, []);\n\n    useEffect(() => {\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1 && score > 0) {  \n                    giveUp()\n                    return ;\n                }\n                setTab(0);\n            } else {\n                ambiant.unloadAsync();\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, ambiant]);\n\n    const endGame = async () => {\n        setModal(true);\n        let bestDayScore = false;\n        let bestScore = false;\n        if (score > bestScoreDay) { \n            playSound('applause');\n            setSuccess(true);\n            setBestScoreDay(score);\n            bestDayScore = true;\n            if (score > bestScore) {\n                bestScore = true;\n                setBestScore(score);\n            }\n        } else {\n            playSound('lose');\n            setSuccess(false);\n        }\n        await API.insertScore(props.personId, score, currentDate, bestDayScore, bestScore);\n        setScore(0);\n    };\n\n    const ambiantSoundPlay = () => {\n        if (ambiantEnabled) ambiant.pauseAsync();\n        else ambiant.playAsync();\n        setAmbiantEnabled(prevEnable => !prevEnable);\n    };\n    \n    const giveUp = () => {\n        if (score === 0) setTab(0);\n        else return Alert.alert(\n            DoubleLang[props.lang].TitleGiveUp,\n            DoubleLang[props.lang].SureToGiveUp,\n            [\n                {\n                    text: DoubleLang[props.lang].Leave,\n                    onPress: () => { null },\n                    style: 'cancel'\n                },\n                {\n                    text: DoubleLang[props.lang].GiveUp,\n                    onPress: () => {\n                        endGame();\n                    }\n                },\n            ]\n        )\n    };\n\n    const playSound = async (type) => {\n        if (!soundEnabled && !['applause', 'lose'].includes(type)) return;\n        if (sound) sound?.unloadAsync();\n        let choosenSound;\n        switch (type) {\n            case \"success\":\n                choosenSound = require(`../../../assets/sound/double/success.mp3`);\n                break;\n            case \"fail\":\n                choosenSound = require(`../../../assets/sound/double/fail.mp3`);\n                break;\n            case \"play\":\n                choosenSound = require(`../../../assets/sound/double/play.mp3`);\n                break;\n            case \"next\":\n                choosenSound = require(`../../../assets/sound/double/next.mp3`);\n                break;\n            case \"applause\":\n                choosenSound = require(`../../../assets/sound/global/applause.mp3`);\n                break;\n            case \"lose\":\n                choosenSound = require(`../../../assets/sound/global/you_lose.mp3`);\n                break;\n            default:\n                break;\n        }\n        const { sound } = await Audio.Sound.createAsync(choosenSound);\n        setSound(sound);\n        sound.playAsync();\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    ambiant={ambiant}\n                    setSoundEnabled={setSoundEnabled}\n                    soundEnabled={soundEnabled}\n                    ambiantEnabled={ambiantEnabled}\n                    ambiantSoundPlay={ambiantSoundPlay}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                        lang={props.lang}\n                        setTab={setTab}\n                        score={score}\n                        setScore={setScore}\n                        giveUp={giveUp}\n                        modal={modal}\n                        setModal={setModal}\n                        bestScoreDay={bestScoreDay}\n                        success={success}\n                        endGame={endGame}\n                        playSound={playSound}\n                        ambiantSoundPlay={ambiantSoundPlay}\n                        ambiantEnabled={ambiantEnabled}\n                        soundEnabled={soundEnabled}\n                        setSoundEnabled={setSoundEnabled}\n                    />;\n        } else if (tab === 2) {\n            return (<Help lang={props.lang} setTab={setTab} />);\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <ScrollView style={styles.view} contentContainerStyle={{alignItems: 'center'}}>\n            { printPage() }\n        </ScrollView>\n    );\n};","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\nimport Double from '../components/activities/Double';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return <Double lang={lang} setPage={setPage} personId={personId} />;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n        /* {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        }, */\n    ];\n}\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: wp('80%'),\n        height: hp('7%'),\n        justifyContent: 'flex-start',\n        backgroundColor: '#4d8abd',\n        fontSize: hp('10%')\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\n\nimport styles from './styles';\n\nimport { Audio } from 'expo-av';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n\n    useEffect( () => {\n        Audio.setIsEnabledAsync(true);\n    }, [])\n\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: wp('6%'),\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: wp('15%'), marginLeft: wp('5%') }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        titleStyle={{fontSize: wp('4%')}}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    scoreRow: {\n        flex: 1,\n        height: 180,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreRowSimon: {\n        flex: 1,\n        height: 250,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreHeading: {\n        fontSize: 18,\n        color: '#2089dc',\n        fontWeight: 'bold',\n        margin: 5\n    },\n    NoScore: {\n        color: 'grey',\n        fontStyle: 'italic',\n        marginTop: 45,\n        marginLeft: 45\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\nimport { Badge } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport { ScoreRatio } from '../../../../components/activities/Quiz/utils/scoreFunc';\nimport * as API from '../../../../data/quizApi';\n\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nexport default function QuizScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [quizScore, setQuizScore] = useState([]);\n\n    useEffect( () => {\n        API.get(props.personId).then((data) => {\n            const arr = [];\n            for (let i = 0; i < data.length; i++) {\n                const el = data[i];\n                arr.push({score: ScoreRatio(el.content, props.personId), name: el.name});\n            }\n            setQuizScore(arr);\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (quizScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            return quizScore.map( (el,i) => {\n                return (\n                    <View style={{marginHorizontal: 15}} key={i}>\n                        <View style={{zIndex: 20}}>\n                            <Badge\n                                value={el.name}\n                                textStyle={{textAlign: 'center', zIndex: 20}}\n                                badgeStyle={{position:'absolute', paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 100, zIndex: 100}}\n                                titleStyle={{zIndex: 20}}\n                            />\n                        </View>\n                        <View style={{zIndex: 1}}>\n                            <CircularProgress\n                                value={el.score}\n                                textStyle={{marginBottom: -10}}\n                                title={ActivitiesLang[props.lang].Success}\n                                valueSuffix={'%'}\n                                titleStyle={{marginBottom: 10}}\n                                initialValue={0}\n                                delay={500}\n                                activeStrokeColor={'#2089dc'}\n                                radius={65}\n                                inActiveStrokeColor={'#9b59b6'}\n                                inActiveStrokeOpacity={0.5}\n                                inActiveStrokeWidth={6}\n                                activeStrokeWidth={12}\n                            />\n                        </View>\n                    </View>\n                );\n            });\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRow} horizontal={true}>\n            <View>\n                <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].QuizScore}</Text>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} /> :\n                    <ScrollView horizontal={true}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/simonApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function SimonScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [simonScore, setSimonScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setSimonScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (simonScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = simonScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].SimonScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/doubleApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function DoubleScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [doubleScore, setDoubleScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setDoubleScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (doubleScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = doubleScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].DoubleScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React from 'react';\nimport { ScrollView } from 'react-native';\nimport QuizScore from './QuizScore';\nimport SimonScore from './SimonScore';\nimport DoubleScore from './DoubleScore';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <QuizScore lang={props.lang} personId={props.personId} />\n            <DoubleScore lang={props.lang} personId={props.personId} />\n            <SimonScore lang={props.lang} personId={props.personId} />\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: 10+\"%\", color: '#3B8EFF', backgroundColor: '#355c7d' }],\n                tabBarLabelStyle: [{ color: 'white', marginBottom: 10, fontSize: hp('2%') }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} personId={props.personId} /> }\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        fullname={props?.fullname}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                        setPerson={props.setPerson}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { Platform } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        paddingBottom: 10,\n        width: 100+'%',\n        backgroundColor: '#355c7d'\n    },\n    topLottie: {\n        marginTop: hp('1%'),\n        width: wp('10%'),\n        height: undefined,\n        marginBottom: hp('3%'),\n        backgroundColor: '#355c7d'\n    },\n    bgLottie: {\n        width: wp('100%'),\n        opacity: Platform.OS === 'ios' ? 0.8 : 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: wp('100%'),\n        height: hp('100%'),\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: wp('20%'),\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: '#355c7d'\n    },\n    heading: {\n        fontSize: hp('3%'),\n        color: 'white',\n        marginTop: 0,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%'\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport TopImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/selection');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/selection', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/selection', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TopImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={state?.username}\n                        fullname={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setPerson={setPerson}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\nimport React from 'react';\n\nimport { Text } from 'react-native'\nimport App from './App';\n\nText.defaultProps = Text.defaultProps || {};\nText.defaultProps.allowFontScaling = false\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig, reset } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport SelectionMenu from './pages/SelectionMenu';\nimport Activities from './pages/Activities';\nimport Home from './pages/Home';\nimport Tutorial from './pages/Tutorial';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [lang, setLang] = useState('fr');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        // reset();\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    useEffect( () => {\n        let local = Localization.locale?.split('-')[0] || 'fr';\n        setLang(['en', 'fr'].includes(local) ? local : 'fr');\n        console.log('- Imported config file -');\n    }, [config]);\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                    setLang={setLang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/tutorial\"\n                            element={\n                                <Tutorial\n                                    lang={lang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={<Home lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/selection\"\n                            element={\n                                <SelectionMenu\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/AlzheimApp/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [687], () => (__webpack_require__(9780)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","_setUsername","_asyncToGenerator","input","username","apply","arguments","_getUsername","findAsync","err","docs","_getConfig","length","insertAsync","then","resp","_resp$","_resp$2","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","OpenActivity","ReturnList","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","_jsx","Text","style","fontWeight","children","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","color","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","StyleSheet","rightButton","minHeight","backgroundColor","imageSuccess","width","wp","height","undefined","alignSelf","leftButton","view","alignItems","marginVertical","btnImport","borderRadius","hp","btnSave","fontSize","marginHorizontal","icon","marginTop","inputContainer","label","profilePicture","marginBottom","aspectRatio","successPageTitle","textAlign","edit","marginRight","openActivity","paddingHorizontal","title","props","animationRef","useRef","LottieView","useEffect","_animationRef$current","current","play","Platform","ref","animation","LottieStyle","source","LottieSource","loop","hasOwnProperty","autoPlay","resizeMode","Image","ImageSource","ImageStyle","Success","navigate","useNavigate","_jsxs","View","Lottie","SuccessImage","styles","InterfaceLang","flexDirection","alignContent","Button","onPress","e","close","buttonStyle","titleStyle","_props$lang","id","state","_Fragment","get","personId","find","sort","date","exec","datas","_del","data","_id","res","FileSystem","deleteAsync","path","removeAsync","createQuizContent","_ref","el","uuidv4","score","success","failed","includes","fileType","uploadQuizFile","_x","_x2","_ref2","documentDirectory","getInfoAsync","uri","console","log","catch","er","copyAsync","from","to","_ref3","_x4","_x3","error","_create","quiz","_quiz$content","name","content","_objectSpread","updateScore","_x7","_x8","_x9","_x10","_updateScore","quizId","contentId","contentIndex","findIndex","scoreIndex","_deleteId","_saveQuiz","editedFile","pushErrors","errors","field","msg","randomNumber","min","max","Math","floor","random","randomArrayElement","exclude","randNumber","upd","_upd$fullname","_upd$description","_upd$picture","fullname","trim","description","picture","$set","getById","_deleteById","SimonDB","DictaphoneDB","DoubleDB","QuizDB","Form","_useState","useState","_useState2","_slicedToArray","fullnameError","setFullnameError","_useState3","_useState4","descriptionError","setDescriptionError","confirm","_props$personId","_props$image","cb","Person","person","_person$fullname","_person$fullname$trim","_person$fullname2","_person$fullname2$tri","_person$description","_person$description$t","_person$fullname3","_person$description2","Object","keys","setId","makeDirectoryAsync","intermediates","image","imgName","writeAsStringAsync","encoding","_props$fullname","addPerson","persons","concat","_toConsumableArray","setFullnameHeader","scs","_props$fullname2","pickImage","ImagePicker","launchImageLibraryAsync","mediaTypes","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","fsRead","readAsStringAsync","setImage","uriPreview","defaultProfilPicture","Icon","size","Divider","Input","placeholder","leftIcon","containerStyle","labelStyle","errorStyle","renderErrorMessage","maxLength","errorMessage","inputStyle","value","onChangeText","setFullname","setDescription","raised","iconRight","CreatePerson","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","setSuccess","_useState11","_useState12","compProps","setPersons","container","flex","zIndex","fab","position","marginLeft","wrapper","topBanner","topImage","heading","boldtext","subtitle","button","overflow","buttonContainer","buttonText","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","fontStyle","searchBar","searchInputStyle","SelectionMenuAndroid","swiper","FAB","type","setLang","LoadingBrain","SelectionMenuLang","activeOpacity","idx","active","setActive","setBtnTxt","ActivityIndicator","index","scrollBy","btnText","SafeAreaView","isLoading","Swiper","showsButtons","scrollEnabled","pagingEnabled","slidePropsState","showsPagination","onIndexChanged","setIndex","setTimeout","ScrollView","inputContainerStyle","setSearch","search","printRows","SelectionMenuIOS","parseInt","setIdx","iconContainerStyle","redirected","KeyboardAvoidingView","behavior","loadMinimal","Rows","TouchableScale","mod","paddingVertical","componentProps","Component","key","bottomDivider","ListItem","Avatar","DefaultProfilePicture","rounded","SelectionMenu","_useLocation","setIsLoading","useLocation","slide","_username$trim","Audio","regex","RegExp","$regex","backHandler","BackHandler","remove","list","map","propsSelectionMenuComponent","printAccordingToOS","textInput","borderColor","shadowOpacity","shadowRadius","shadowOffset","elevation","padding","viewrow","flexWrap","justifyContent","setInput","loadPage","setLoadPage","confirmed","setConfirmed","redirect","setRedirect","setUsername","getUsername","_res$","parseUsername","insertUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","animating","LoadingImage","slideOdd","titleOdd","textOdd","borderWidth","Tutorial","StepOne","StepTwo","StepThree","StepFour","StepFive","StepSixth","Config","Select","Import","Introduction","Source","License","Language","Step1","Step2","Step3","Step4","Step5","Step6","Step7","Step8","Step9","Step10","Step11","Step12","Step13","Step14","GoBack","InvalidFile","InvalidPersonFile","IncorrectPersonFile","ErrorChekingPerson","InvalidActivitiesLength","InvalidQuizData","InvalidLogData","InvalidDoubleData","InvalidSimonData","header","logo","menu","iconStyle","copyleft","ErrorMessage","backButton","backButtonTitle","Menu","showsVerticalScrollIndicator","HomeLang","_props$ambiant","ambiant","unloadAsync","DocumentPicker","multiple","copyToCacheDirectory","setImportFile","prev","Linking","isValidDate","d","currentDate","Date","getFullYear","tmp","join","n","isNaN","fileToBase64","formatQuiz","j","formatLog","scoreVerification","dailyScoreBeaten","globalScoreBeaten","checkPersonInformations","checkPersonInformationsLength","checkPersonExists","personAPI","checkQuiz","_ref4","quizKeys","contentKeys","k","_content$answers","_content$question","_content$answers2","l","answers","question","foundInScore","_x5","checkGameScore","game","checkDictaphone","dictaphone","importPerson","_ref5","exists","_x6","importQuiz","_ref6","_loop","_loop2","filePath","quizAPI","importDouble","_ref7","double","doubleAPI","importSimon","_ref8","simon","simonAPI","importLog","_ref9","_loop3","dictaphoneAPI","_x11","_x12","writeDataFile","_ref10","fileUri","replace","_x13","_x14","exportPerson","_ref11","personFind","personData","simonData","doubleData","quizData","dictaphoneData","JSON","stringify","activities","string","encryptedString","String","fromCharCode","charCodeAt","dilacrypt","_x15","_x16","ImportData","step","setStep","setError","importFile","parsed","parseJSON","dataImport","found","CannotCreatePerson","inputString","parse","stepStyle","clr","display","disabled","Home","setAmbiant","sound","isLooping","playAsync","AlzheimApp","_props$username","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","QuizScore","SimonScore","DoubleScore","NoScore","Global","BestScoreByDay","ExportedProfile","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","_ActivitiesLang$props","_ActivitiesLang$props2","_ActivitiesLang$props3","_ActivitiesLang$props4","_ActivitiesLang$props5","setEdit","_useState13","_useState14","load","setLoad","_useState15","_useState16","deletePerson","deleted","ActivitiesLang","Sharing","isAvailableAsync","isAvailable","shareAsync","iconPosition","Alert","setPerson","Start","Pause","Stop","Continue","Untitled","ChooseTitle","Title","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","recordButton","listItemContent","listItemTitle","listItemSubtitle","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","overlayTitle","overlayDescription","overlayInput","overlayInputContainer","save","cancel","isPlaying","setIsPlaying","progress","setProgress","setSound","playingSounds","playTrack","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getSoundStatus","getStatusAsync","isLoaded","loadAsync","setPlayingSounds","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","positionMillis","playableDurationMillis","pauseTrack","pauseAsync","LinearProgress","variant","duration","reverse","deleteId","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","_startRecording","allowsRecordingIOS","playsInSilentModeIOS","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","stopRecording","_stopRecording","stopAndUnloadAsync","_pauseRecording","_continueRecording","startAsync","API","stopPlayingSounds","setPage","saveRecord","record","getURI","folder","DictaphoneLang","deleteRecord","goBack","Overlay","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","toLocaleDateString","toLocaleTimeString","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","Head","RulesHead","TriesHead","Rules","TriesExplain","paddingTop","opacity","leaveButton","leaveButtonContainer","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","viewHelpPage","leaveButtonHelpPageContainer","leaveButtonHelpPage","helpHead","helpStepHead","textTransform","helpStep","helpQuestionMark","bottomScore","remainingTries","btnGiveUp","btnGiveUpDisabled","btnContainerGiveUp","btnStart","btnLeave","btnTitle","indication","SimonLogo","SimonLang","setTab","Game","start","setStart","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","_useState17","_useState18","setBestScore","_useState19","_useState20","setDailyScore","_useState21","_useState22","niceHit","setNiceHit","_useState23","_useState24","confetti","setConfetti","_useState25","Array","_useState26","setGame","_useState27","_useState28","scoreBeaten","setScoreBeaten","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","_yield$Audio$Sound$cr","s","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","rdm","ConfettiCannon","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","disabledStyle","QuestionMark","tab","pos","Create","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","GiveUpQuizTitle","GiveUpQuiz","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","EditedQuiz","QuizListRedirection","selectedQuizz","quizName","Questions","SuccessTitle","FailedTitle","SuccessQuizTitle","SuccessQuiz","fail","FailQuizTitle","FailQuiz","SaveContent","AddContent","SureCancelEdition","ImportSound","CustomHead","Custom","answersText","leaveButtonPlayContainer","leaveButtonPlay","playButtonContainer","createButton","importButton","textOverlayDelete","backButtonOverlay","OKButtonOverlay","overlayDescriptionReference","overlayDescriptionAnswers","paddingBottom","ScrollViewSuccess","badge","successButton","lottie","randomPicker","modalTitle","modalDescription","quizTitleInputContainer","completeQuizCreationContainer","completeQuizCreationButton","quizTitleInput","addAnswer","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","lottieOverlay","headOverlayComplete","overlayDesc","QuizLogo","QuizLang","printFile","clearFile","pauseSound","playSound","pickCorrectIcon","avatarStyle","QuestionList","_props$quizEdit","_props$quizEdit$conte","_props$newContent","_props$content","_props$content$answer","quizEdit","newContent","quizEdition","Number","isInteger","questionId","_props$quizEdit2","_props$quizEdit2$cont","setNewContent","setQuizEdit","setReload","reload","setEditedQuiz","contentList","setContent","pickOutQuestion","setEditContent","ScoreRatio","filter","total","toFixed","QuizList","_props$quiz","_props$quiz$content","ViewQuizList","_props$quiz2","SuccessContent","FormQuizContent","answer","setAnswer","pickFile","setUri","setFileType","mimeType","setFilename","pickAudioFile","pickImageFile","contentContainerStyle","flexShrink","setQuestion","_props$answers","_answer$trim","_answer$trim2","toLowerCase","setAnswers","Badge","badgeStyle","textStyle","pickOutAnswer","ViewQuiz","newQuestion","setNewQuestion","editContent","editedQuiz","_useState29","_useState30","saveQuiz","_x17","_x18","buttonTop","mode","_quizEdit$content","saveContent","pushContent","propsFormQuizContent","_quizEdit$content3","_quizEdit$content3$co","_quizEdit$content2","viewPage","CreateQuiz","createQuestion","setCreateQuestion","setName","modalConfirmation","setModalConfirmation","substring","printPage","ThinkingImage","quizLength","pickRandomQuizz","ThinkingLottie","setPlay","shuffle","arr","setCurrent","setFail","TrophyLottie","SadLottie","stopSound","answerQuestion","answerTrimedLowercase","_onPress","openAlertResultQuestion","SadImage","setMediaType","setQuiz","setRandom","rand","RemaningTries","Reinit","TitleGiveUp","SureToGiveUp","BestDayScore","ScoreHead","ScoreHelp","Remember","Dimensions","factor","RectoCard","PlayingCard","VersoCard","IconCard","viewGame","buttonViewPlay","playButtons","overlayReturn","retryButton","DoubleLang","DoubleLogo","ambiantEnabled","ambiantSoundPlay","soundEnabled","setSoundEnabled","generateRandomPair","colors","icons","indexColor","indexIcon","SCREEN_WIDTH","SCREEN_HEIGHT","Card","cardStyles","inPlay","inFound","show","TouchableOpacity","ReturnCard","setFound","setShow","currentPlay","indexGame","playing","currentGameLength","nFound","setScore","prevScore","prevTries","endGame","bestScoreDay","failOverlay","element","newModel","giveUp","Double","setBestScoreDay","setAmbiantEnabled","bestDayScore","prevEnable","choosenSound","_ActivitiesLang$lang","_ActivitiesLang$lang2","_ActivitiesLang$lang3","_ActivitiesLang$lang4","returnComponent","page","ActivitiesList","scoreRow","scoreRowSimon","scoreHeading","margin","quizScore","setQuizScore","horizontal","CircularProgress","valueSuffix","initialValue","delay","activeStrokeColor","radius","inActiveStrokeColor","inActiveStrokeOpacity","inActiveStrokeWidth","activeStrokeWidth","simonScore","setSimonScore","btnIndex","setBtnIndex","buttons","TotalScore","ButtonGroup","selectedIndex","global","days","item","highestToLowest","a","b","labels","datasets","BarChart","fromZero","showValuesOnTopOfBars","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","printScore","doubleScore","setDoubleScore","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","unmountOnBlur","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","BgSource","_result$","navTheme","DefaultTheme","background","TopImage","BackgroundImage","NavigationContainer","theme","registerRootComponent","_LangInterface$lang","config","setConfig","loadDataCallback","_Localization$locale","local","Localization","locale","useCallback","fetchData","getConfig","StatusBar","hidden","Loading","LangInterface","NativeRouter","Routes","Route","exact","HomeOrTutorial","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","r","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","t","this","ns","create","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","window","prop","prototype","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}