{"version":3,"sources":["assets/img/interface/profile.jpg","assets/sound/simon/green.mp3","assets/img/username/chooseusername.gif","assets/img/home/loading_brain.gif","assets/img/home/addedUser.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/tutorial/swipe-right.gif","assets/img/activities/brain.gif","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/simon/trophy.gif","assets/img/activities/quizz/logo.png","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","pages/ChooseUsername/styles.js","language/home/index.js","components/home/Rows.js","components/home/styles.js","components/utils/Lottie.js","components/home/PersonCreation/Success.js","language/activities/dictaphone/index.js","data/dictaphoneApi.js","data/simonApi.js","utils/helpers.js","data/personApi.js","components/home/PersonCreation/Form.js","components/home/PersonCreation/CreatePerson.js","pages/Home/styles.js","pages/Home/index.js","pages/ChooseUsername/index.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","components/utils/HomeOrTutorial.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/index.js","language/activities/quizz/index.js","components/activities/Quizz/styles.js","components/activities/Quizz/Menu.js","components/activities/Quizz/QuizzList.js","data/quizzApi.js","components/activities/Quizz/ViewQuizz.js","components/activities/Quizz/ContentList.js","components/activities/Quizz/FormQuizzContent.js","components/activities/Quizz/CreateQuizz.js","components/activities/Quizz/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","StyleSheet","create","wrapper","height","marginTop","container","flex","alignItems","alignContent","heading","fontSize","marginBottom","marginHorizontal","textAlign","color","description","textInput","borderColor","borderRadius","paddingHorizontal","backgroundColor","shadowOpacity","shadowRadius","shadowOffset","width","elevation","image","buttonContainer","button","marginLeft","buttonText","paddingTop","slide","padding","viewrow","flexDirection","flexWrap","justifyContent","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","props","navigate","useNavigate","TouchableScale","Platform","OS","default","mod","index","componentProps","Component","key","id","bottomDivider","containerStyle","onPress","state","source","picture","uri","DefaultProfilePicture","rounded","Content","Title","fullname","Subtitle","Chevron","rightButton","minHeight","imageSuccess","leftButton","view","alignSelf","marginVertical","btnImport","btnSave","profilePicture","successPageTitle","Lottie","LottieStyle","LottieSource","loop","hasOwnProperty","autoPlay","resizeMode","Image","ImageSource","ImageStyle","Success","View","SuccessImage","styles","edit","InterfaceLang","title","e","close","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","pushErrors","errors","field","msg","person","trim","Object","keys","success","upd","_id","$set","catch","log","Form","useState","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","FileSystem","encoding","fsRead","setImage","titleStyle","buttonStyle","icon","name","size","placeholder","leftIcon","label","errorStyle","renderErrorMessage","maxLength","errorMessage","inputStyle","value","onChangeText","setFullname","setDescription","raised","cb","Person","imgName","uuidv4","path","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","topImage","zIndex","boldtext","subtitle","overflow","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","fontStyle","searchBar","searchInputStyle","Home","isLoading","setIsLoading","search","setSearch","setIndex","HomeLang","btnText","setBtnTxt","active","setActive","swiper","useRef","useLocation","useEffect","regex","RegExp","$regex","backHandler","BackHandler","addEventListener","remove","list","LoadingBrain","TouchableOpacity","activeOpacity","idx","ActivityIndicator","current","scrollBy","SafeAreaView","ref","showsButtons","scrollEnabled","pagingEnabled","showsPagination","onIndexChanged","setTimeout","ScrollView","inputContainerStyle","map","el","input","setInput","confirmed","setConfirmed","parseUsername","setUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","animating","Loading","LoadingImage","slideOdd","paddingBottom","marginRight","borderWidth","Tutorial","res","SwipeImage","position","opacity","StepOne","StepTwo","StepThree","StepFour","StepFive","StepSixth","to","component","Config","HomeOrTutorial","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quizz","SuggestedActivities","Back","ReturnList","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","deletePerson","SimonDB","removeAsync","DictaphoneDB","deleted","type","iconContainerStyle","ActivitiesLang","Alert","multi","clear","isPlaying","setIsPlaying","progress","setProgress","Audio","Sound","sound","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","playAsync","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","unloadAsync","positionMillis","playableDurationMillis","variant","animation","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","record","DictaphoneLang","Untiled","Date","getURI","created","deleteRecord","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","createAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","clr","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","logo","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","Menu","SimonLogo","SimonLang","setTab","Game","start","setStart","failed","setFailed","canPlay","setCanPlay","setLoading","setTries","Math","round","random","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","SimonButtonStyle","playButtonDemo","randomNumber","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","disabled","tab","Create","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","createButton","overlayDescriptionReference","QuizzLogo","quizz","QuizzLang","QuizzList","Datastore","ContentDB","ViewQuizz","quizzId","ContentList","FormQuizzContent","answer","setAnswer","contentContainerStyle","fileType","setb64","setFileType","setFilename","setFileUri","fileUri","printFile","DocumentPicker","mimeType","flexShrink","question","setQuestion","answers","includes","toLowerCase","setAnswers","addAnswer","badgeStyle","tmp","pickOutAnswer","CreateQuizz","createQuestion","setCreateQuestion","content","disable","setDisable","b64","file","setQuizz","returnComponent","page","ActivitiesList","iconPosition","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","setPerson","BgSource","navTheme","DefaultTheme","colors","background","BackgroundImage","NavigationContainer","theme","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact","element"],"mappings":"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","file":"static/js/app.fe1be473.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading_brain.ef5884d9.gif\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.ede08671.png\";","module.exports = __webpack_public_path__ + \"static/media/2.b87932e3.png\";","module.exports = __webpack_public_path__ + \"static/media/3.3ed4e762.png\";","module.exports = __webpack_public_path__ + \"static/media/4.80535fcd.png\";","module.exports = __webpack_public_path__ + \"static/media/5.da0bedf3.png\";","module.exports = __webpack_public_path__ + \"static/media/6.7911d645.png\";","module.exports = __webpack_public_path__ + \"static/media/swipe-right.6dde9c7c.gif\";","module.exports = __webpack_public_path__ + \"static/media/brain.70fc8c58.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.097ce51b.png\";","module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.348cd96d.png\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n}\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n}\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n}\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n}\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n}\n\nexport function reset() {\n    return AsyncStorage.clear();\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retourner sur le formulaire',\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet requise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? C'est possible, le partage est réalisable entre deux appareils par {0} !\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caretaker'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can share data between two devices with {0} technology!\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer ${0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caretaker'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 40,\n        borderColor: 'gray',\n        borderRadius: 20,\n        paddingHorizontal: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        elevation: 2,\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n    },\n    buttonText: {\n        paddingTop: 10,\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to produce today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text, Platform } from 'react-native';\nimport { Button, Image } from 'react-native-elements';\nimport Lottie from '../../../components/utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/home/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/home/addedUser.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <Button\n                title={InterfaceLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { lang as DictaphoneLang } from '../language/activities/dictaphone';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record, lang) {\n    if (record?.name?.length === 0) {\n        record.name = DictaphoneLang[lang].Untiled;\n    }\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n}\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n}\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n}\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n}\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n}\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n}\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n}\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.find({ personId: id }, (err, data) => {\n        if (err) {\n            console.error(err);\n        } else {\n            data.map(async (el, i) => {\n                await FileSystem.deleteAsync(el?.path);\n            });\n        }\n    });\n    await db.findAsync({ _id: id }, async (err, data) => {\n        if (err) {\n            console.error(err);\n        } else if (data[0].picture) {\n            await FileSystem.deleteAsync(data[0]?.picture);\n        }\n    });\n    await DictaphoneDB.removeAsync({ personId: id });\n    return db.removeAsync({ _id: id });\n}\n\nexport function reset() {\n    return db.removeAsync({}, { multi: true });\n}\n","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0) {\n                personId = result._id;\n            }\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                let path = `${FileSystem.documentDirectory}personProfilPicture`;\n                await FileSystem.makeDirectoryAsync(path).catch((err) => {\n                    console.log('Directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    wrapper: {\n        marginTop: 100,\n        textAlign: 'center',\n        alignItems: 'center',\n    },\n    topImage: {\n        flex: 1,\n        width: 80,\n        marginTop: -270,\n    },\n    heading: {\n        marginTop: -190,\n        fontSize: 20,\n        zIndex: 2,\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: '#3B8EFF',\n    },\n    subtitle: {\n        textAlign: 'center',\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: 10,\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1,\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Text,\n    View,\n    Image,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    BackHandler,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input } from 'react-native-elements';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport LoadingBrain from '../../assets/img/home/loading_brain.gif';\nimport { lang as HomeLang } from '../../language/home';\nimport Rows from '../../components/home/Rows';\nimport CreatePerson from '../../components/home/PersonCreation/CreatePerson';\n\nimport * as Person from '../../data/personApi';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        HomeLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const swiper = useRef(null);\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n\n    useEffect(() => {\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - index, true);\n    };\n\n    const changeIndex = (idx) => {\n        setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                setBtnTxt(HomeLang[lang].AddAPerson);\n            } else if (idx === 1) {\n                setBtnTxt(HomeLang[lang].ReturnToList);\n            }\n            setActive(true);\n        }, 400);\n    };\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.wrapper}>\n                <Image\n                    source={LoadingBrain}\n                    resizeMode=\"contain\"\n                    style={styles.topImage}\n                />\n                <Text style={styles.heading}>\n                    {HomeLang[lang].Hello(username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{HomeLang[lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (active === false) {\n                            return;\n                        }\n                        setActive(false);\n                        setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={HomeLang[lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    setSearch(e);\n                                }}\n                                value={search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {persons && persons.length > 0 ? (\n                                printRows(persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {HomeLang[lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={persons}\n                                setPersons={setPersons}\n                                lang={lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    TouchableOpacity,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername, SawTutorial } from '../../data/configApi';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\nimport Home from '../Home';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [confirmed, setConfirmed] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            setUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <TouchableOpacity\n                        style={styles.button}\n                        activeOpacity={0.5}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                    >\n                        <Text style={styles.buttonText}>\n                            {' '}\n                            {isLoading ? (\n                                <ActivityIndicator\n                                    color=\"white\"\n                                    size=\"small\"\n                                    animating={true}\n                                />\n                            ) : (\n                                'OK'\n                            )}\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        );\n    } else {\n        return <Home username={input} lang={props.lang} />;\n    }\n}\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    slideOdd: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#C8EEFF',\n    },\n    title: {\n        color: 'black',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center',\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center',\n    },\n    image: {\n        flex: 3,\n        width: 100 + '%',\n        height: 400,\n    },\n    buttonContainer: {\n        flex: 2,\n        marginTop: -40,\n    },\n    button: {\n        marginTop: 10,\n        paddingTop: 15,\n        paddingBottom: 15,\n        marginLeft: 30,\n        marginRight: 30,\n        backgroundColor: '#00BCD4',\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: '#fff',\n    },\n    buttonText: {\n        color: '#fff',\n        textAlign: 'center',\n    },\n});\n","import React, { useEffect } from 'react';\nimport { Text, View, Image, TouchableOpacity } from 'react-native';\n\nimport { Link } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport SwipeImage from '../../assets/img/tutorial/swipe-right.gif';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport Lottie from '../../components/utils/Lottie';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\nimport Home from '../Home';\n\nexport default function Tutorial(props) {\n    const LottieSource = require('../../assets/lottie/swipe-right.json');\n\n    useEffect(() => {\n        Config.getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    return <Home username={res} lang={props.lang} />;\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SwipeImage}\n                LottieStyle={{\n                    position: 'absolute',\n                    height: 80,\n                    marginTop: 280,\n                    marginLeft: 80,\n                    opacity: 0.8,\n                }}\n                ImageStyle={{\n                    position: 'absolute',\n                    height: 80,\n                    marginTop: 280,\n                    marginLeft: 80,\n                    opacity: 0.8,\n                }}\n            />\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Link\n                            to=\"/username\"\n                            component={TouchableOpacity}\n                            style={styles.button}\n                            onPress={(e) => {\n                                Config.SawTutorial(true);\n                            }}\n                            activeOpacity={0.5}\n                        >\n                            <Text style={styles.buttonText}>\n                                {' '}\n                                {TutorialLang[props.lang].LastStepButton}{' '}\n                            </Text>\n                        </Link>\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} />;\n    }\n    return <Home lang={props.lang} username={props.username} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quizz: 'Jouer à un quizz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quizz: 'Start a quizz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#5EA1E4',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { ScrollView, Alert, SafeAreaView, View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/home/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\n\nimport styles from './styles';\nimport Form from '../../../components/home/PersonCreation/Form';\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname(props.person.fullname);\n        setUriPreview(props.person.picture);\n        setImage('');\n        setDescription(props.person.description);\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    const debug = async () => {\n        await Person.reset();\n        await AsyncStorage.clear();\n        navigate('/home');\n        return true;\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/home');\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.username),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: 'bluetooth',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ShareProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/home');\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'bug',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDebug}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ResetAccount}\n                        onPress={debug}\n                    />\n                </ScrollView>\n            ) : (\n                <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => setEdit(false)}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </ScrollView>\n            )}\n        </View>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState('');\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync();\n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = () => {\n        API.create(\n            {\n                name: title?.trim(),\n                path: recording.getURI(),\n                personId: props.personId,\n            },\n            props.lang\n        )\n            .then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            el.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Aide',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated:\n            \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        flex: 1,\n        width: 250,\n        height: 250,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        flex: 1,\n        width: 50,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'help-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/simon/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate);\n        setCanPlay(false);\n        setSuccess(true);\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            {success ? (\n                <Overlay\n                    visible={success}\n                    overlayStyle={styles.overlayStyle}\n                    onBackdropPress={() => setSuccess(false)}\n                    ModalComponent={Modal}\n                >\n                    {scoreBeaten ? successOverlay() : failOverlay()}\n                    <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                        <Button\n                            raised\n                            onPress={() => {\n                                retryGame();\n                            }}\n                            title={SimonLang[props.lang].Retry}\n                            containerStyle={{\n                                borderRadius: 13,\n                                marginRight: 10,\n                            }}\n                        />\n                        <Button\n                            raised\n                            onPress={() => {\n                                props.setTab(0);\n                            }}\n                            title={SimonLang[props.lang].Exit}\n                            containerStyle={{ borderRadius: 13 }}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                        />\n                    </View>\n                </Overlay>\n            ) : (\n                <></>\n            )}\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Text>Tab 2 (Help)</Text>;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quizz',\n        Create: 'Créer un quizz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        NothingYet: 'Aucun quizz crée pour le moment.',\n        SuccessfulRatio: 'Ratio de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizz',\n        Create: 'Create a quizz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        NothingYet: 'No quizz has been created yet.',\n        SuccessfulRatio: 'Success ratio',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quizz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Valider\",\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    }\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizzLang } from '../../../language/activities/quizz';\n\nimport QuizzLogo from '../../../assets/img/activities/quizz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizzLogo} style={styles.logo} />\n\n            {props.quizz?.length > 0 ? (\n                <Button\n                    title={QuizzLang[props.lang].Play}\n                    containerStyle={styles.button}\n                    onPress={() => props.setTab(1)}\n                    icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n            ) : (\n                <></>\n            )}\n\n            <Button\n                title={QuizzLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizzLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'help-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizzLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { lang as QuizzLang } from '../../../language/activities/quizz';\n\nexport default function QuizzList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem {...componentProps}>\n            <ListItem.Content>\n                <ListItem.Title>{props.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    {props.quizz?.score?.length || 1}{' '}\n                    {QuizzLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'QuizzSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\nexport const ContentDB = new Datastore({\n    filename: 'ContentQuizzSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getContent(quizzId) {\n    return ContentDB.findAsync({ quizzId: quizzId });\n}\n\nexport function addContent(quizzId, personId, content) {\n    const data = db.find({ _id: quizzId, personId: personId }, (err, data) => {\n        if (err) {\n            console.error(err);\n        } else {\n            return data;\n        }\n    });\n    if (!data) {\n        return null;\n    }\n    if (['audio', 'image'].includes(content.type) && content.path === null) {\n        console.error(\n            'A path is required when the type is \"audio\" or \"image\".'\n        );\n        return null;\n    } else if (!content.question || content.answers?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    return db.insertAsync({ ...content }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n}\n\nexport async function deleteId(personId, quizzId) {\n    // @todo remove files linked to the quizz\n    await ContentDB.removeAsync({ quizzId: quizzId }, { multi: true });\n    return db.removeAsync({ _id: quizzId, personId: personId });\n}\n\nexport async function reset() {\n    await ContentDB.removeAsync({}, { multi: true });\n    return db.removeAsync({}, { multi: true });\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n} from 'react-native';\nimport { Button, Icon, Divider, FAB } from 'react-native-elements';\n\nimport QuizzList from './QuizzList';\n\nimport { lang as QuizzLang } from '../../../language/activities/quizz';\nimport * as API from '../../../data/quizzApi';\n\nimport styles from './styles';\n\nexport default function ViewQuizz(props) {\n    const deleteId = (quizzId) => {\n        API.deleteId(props.personId, quizzId).then((data) => {\n            // update props.quizz state\n        });\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizzLang[props.lang].Create}\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        props.setTab(4);\n                    }}\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => props.setTab(0)}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView>\n                    {props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : props.quizz?.length > 0 ? (\n                        props.quizz?.map((el, i) => {\n                            return (\n                                <QuizzList\n                                    index={i}\n                                    key={el._id}\n                                    quizz={el}\n                                    lang={props.lang}\n                                    deleteId={deleteId}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {QuizzLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n    ListItem,\n    Icon\n} from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { lang as QuizzLang } from '../../../language/activities/quizz';\n\nexport default function ContentList(props) {\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props._id, bottomDivider:true, containerStyle:mod } :\n            { key: props._id, bottomDivider:true, containerStyle:mod };\n    return(\n        <ListItem {...componentProps} >\n            <ListItem.Content>\n                <ListItem.Title>{props.name}</ListItem.Title>\n                <ListItem.Subtitle>{props.quizz?.score?.length || 1} {QuizzLang[props.lang].SuccessfulRatio}</ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { props.deleteId(props._id); }} />\n        </ListItem>\n    )\n};","import React, { useEffect, useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Image\n} from 'react-native';\nimport { Button, Icon, Input, Badge, FAB } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\nimport * as FileSystem from 'expo-file-system';\n\n\nimport { lang as QuizzLang } from '../../../language/activities/quizz';\nimport * as API from '../../../data/quizzApi';\n\nimport styles from './styles';\n\nexport default function FormQuizzContent(props) {\n    const [answer, setAnswer] = useState();\n\n    const addAnswer = () => {\n        setAnswer();\n        if (answer?.trim()?.length === 0) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setb64();\n        props.setFileType();\n        props.setFilename();\n        props.setFileUri();\n    };\n\n    const printFile = () => {\n        if (props.fileType == 'image') {\n            return (\n                <View>\n                    <FAB\n                        color='red'\n                        style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                        size=\"small\"\n                        icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                        onPress={() => {\n                            clearFile();\n                        }}\n                    />\n                    <Image source={{uri: props.fileUri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n                </View>\n            )\n        }\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.cancelled === true) {\n            return;\n        }\n\n        props.setFileUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        const fsRead = await FileSystem.readAsStringAsync(result.uri, {\n            encoding: 'base64'\n        }).catch((err) => {\n            console.log(err);\n        });\n        props.setb64(fsRead);\n        props.setFilename(result.name);\n    };\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <ScrollView contentContainerStyle={styles.ScrollView}>\n                { printFile() }\n                <Button\n                    title={QuizzLang[props.lang].ImportFile}\n                    buttonStyle={{ borderRadius: 15 }}\n                    onPress={pickFile}\n                />\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizzLang[props.lang].ReferenceFile}\n                </Text>\n                <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                    <Input\n                        value={props.question}\n                        inputStyle={{fontSize: 14}}\n                        containerStyle={{marginBottom: 50}}\n                        placeholder={QuizzLang[props.lang].WhatIsTheQuestion}\n                        onChangeText={(e) => props.setQuestion(e)}\n                    />\n                    <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                    <Input\n                        placeholder={QuizzLang[props.lang].AddAnswer}\n                        inputStyle={{fontSize: 14}}\n                        value={answer}\n                        onChangeText={(e) => setAnswer(e)}\n                    />\n                    <Button\n                        icon={\n                            <Icon\n                                name={'add-circle'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={18}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => addAnswer()}\n                    />\n                    </View>\n                </View>\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizzLang[props.lang].WhatIsAnswer}\n                </Text>\n                <View style={{flexDirection: 'row', flexWrap:'wrap', alignItems:'center', alignContent:'center', marginBottom: 50}}>\n                    {props.answers.map( (el, i) => {\n                        return(\n                            <Badge\n                                key={i}\n                                value={el}\n                                badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                onPress={() => pickOutAnswer(i)}\n                            />\n                        )\n                    })}\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n};","import React, { useEffect, useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView\n} from 'react-native';\nimport { Button, Icon, Divider, FAB } from 'react-native-elements';\n\nimport ContentList from './ContentList';\nimport FormQuizzContent from './FormQuizzContent';\n\nimport { lang as QuizzLang } from '../../../language/activities/quizz';\nimport * as API from '../../../data/quizzApi';\n\nimport styles from './styles';\n\nexport default function CreateQuizz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [disable, setDisable] = useState(true);\n\n    // Related to the Create Content Component\n    const [b64, setb64] = useState();\n    const [fileUri, setFileUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n\n    useEffect( () => {\n        if (answers?.length > 0 && question) {\n            setDisable(false);\n        } else {\n            setDisable(true);\n        }\n    }, [answers, question]);\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={createQuestion ? QuizzLang[props.lang].OK : QuizzLang[props.lang].Complete}\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'checkmark-circle-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ (createQuestion && disable) || (!createQuestion && content?.length === 0) ? true : false}\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => { createQuestion ? setCreateQuestion(false) : props.setTab(2) }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n                {createQuestion === true ?\n                <FormQuizzContent\n                    lang={props.lang}\n                    setCreateQuestion={setCreateQuestion}\n                    setAnswers={setAnswers}\n                    setFileType={setFileType}\n                    setQuestion={setQuestion}\n                    setb64={setb64}\n                    setFileUri={setFileUri}\n                    setFilename={setFilename}\n                    b64={b64}\n                    fileUri={fileUri}\n                    filename={filename}\n                    answers={answers}\n                    fileType={fileType}\n                    question={question}\n                    file\n                /> :\n                <SafeAreaView style={styles.safeArea}>\n                    <Button\n                        title={QuizzLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setCreateQuestion(true)}\n                    />\n                    <ScrollView>\n                        {props.loading ? (\n                            <ActivityIndicator\n                                color={'blue'}\n                                size={'small'}\n                                style={styles.loading}\n                            />\n                        ) : props.quizz?.length > 0 ? (\n                            props.quizz?.map((el, i) => {\n                                return (\n                                    <ContentList\n                                        index={i}\n                                        key={el._id}\n                                        quizz={el}\n                                        lang={props.lang}\n                                        deleteId={deleteId}\n                                    />\n                                );\n                            })\n                        ) : (\n                            <Text style={styles.nothingYet}>\n                                {QuizzLang[props.lang].NothingYet}\n                            </Text>\n                        )}\n                    </ScrollView>    \n                </SafeAreaView>\n            }\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\n\n// Child components\nimport ViewQuizz from './ViewQuizz';\nimport CreateQuizz from './CreateQuizz';\n\nimport * as API from '../../../data/quizzApi';\n\nimport styles from './styles';\n\nexport default function Quizz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quizz, setQuizz] = useState([]);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            // setQuizz(['test'])\n            if (data.length > 0) {\n                setQuizz(data);\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quizz={quizz}\n                />\n            );\n        } else if (tab === 1) {\n            return <Text>Tab 1 (Play?)</Text>;\n        } else if (tab === 2) {\n            return (\n                <ViewQuizz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quizz={quizz}\n                />\n            );\n        } else if (tab === 3) {\n            return <Text>Tab 3 (Help?)</Text>;\n        } else if (tab === 4) {\n            return (\n                <CreateQuizz\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return <View style={styles.view}>{printPage()}</View>;\n}\n","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quizz from '../components/activities/Quizz';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Quizz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quizz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({});\n","import React from 'react';\nimport { ScrollView, Text } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport styles from './styles';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <Text>todo</Text>\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: 60, color: '#5bc0de' }],\n                tabBarLabelStyle: [{ color: '#5bc0de', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} />}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        marginBottom: 20,\n        width: 100 + '%',\n        backgroundColor: 'white',\n    },\n    topLottie: {\n        marginTop: -20,\n        width: 200,\n        height: 200,\n        marginBottom: -90,\n    },\n    bgLottie: {\n        width: 100 + '%',\n        opacity: 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: 100 + '%',\n        height: 100 + '%',\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: 'white',\n    },\n    heading: {\n        fontSize: 24,\n        color: '#3B8EFF',\n        marginTop: 10,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport SuccessImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/home');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/home', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/home', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={SuccessImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport Home from './pages/Home';\nimport Activities from './pages/Activities';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    let local = Localization.locale?.split('-')[0] || 'fr';\n    const lang = ['en', 'fr'].includes(local) ? local : 'fr';\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={\n                                <Home\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}