{"version":3,"sources":["assets/img/interface/profile.jpg","assets/sound/simon/green.mp3","assets/img/username/chooseusername.gif","assets/img/home/loading_brain.gif","assets/img/home/addedUser.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/tutorial/swipe-right.gif","assets/img/activities/brain.gif","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/simon/trophy.gif","assets/img/activities/quizz/logo.png","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","pages/ChooseUsername/styles.js","language/home/index.js","components/home/Rows.js","components/home/styles.js","components/utils/Lottie.js","components/home/PersonCreation/Success.js","language/activities/dictaphone/index.js","data/dictaphoneApi.js","data/simonApi.js","utils/helpers.js","data/personApi.js","components/home/PersonCreation/Form.js","components/home/PersonCreation/CreatePerson.js","pages/Home/styles.js","pages/Home/index.js","pages/ChooseUsername/index.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","components/utils/HomeOrTutorial.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/index.js","language/activities/quizz/index.js","components/activities/Quizz/styles.js","components/activities/Quizz/Menu.js","components/activities/Quizz/QuizzList.js","data/quizzApi.js","components/activities/Quizz/ViewQuizz.js","components/activities/Quizz/CreateQuizz.js","components/activities/Quizz/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","StyleSheet","create","wrapper","height","marginTop","container","flex","alignItems","alignContent","heading","fontSize","marginBottom","marginHorizontal","textAlign","color","textInput","borderColor","borderRadius","paddingHorizontal","backgroundColor","shadowOpacity","shadowRadius","shadowOffset","width","elevation","image","buttonContainer","button","marginLeft","buttonText","paddingTop","slide","padding","viewrow","flexDirection","flexWrap","justifyContent","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","props","navigate","useNavigate","TouchableScale","Platform","OS","default","mod","index","componentProps","Component","key","id","bottomDivider","containerStyle","onPress","state","source","picture","uri","DefaultProfilePicture","rounded","Content","Title","fullname","Subtitle","description","Chevron","rightButton","minHeight","imageSuccess","leftButton","view","alignSelf","marginVertical","btnImport","btnSave","profilePicture","successPageTitle","Lottie","LottieStyle","LottieSource","loop","hasOwnProperty","autoPlay","resizeMode","Image","ImageSource","ImageStyle","Success","View","SuccessImage","styles","edit","InterfaceLang","title","e","close","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","pushErrors","errors","field","msg","person","trim","Object","keys","success","upd","_id","$set","catch","log","Form","useState","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","FileSystem","encoding","fsRead","setImage","titleStyle","buttonStyle","icon","name","size","placeholder","leftIcon","label","errorStyle","renderErrorMessage","maxLength","errorMessage","inputStyle","value","onChangeText","setFullname","setDescription","raised","cb","Person","imgName","uuidv4","path","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","topImage","zIndex","boldtext","subtitle","overflow","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","fontStyle","searchBar","searchInputStyle","Home","isLoading","setIsLoading","search","setSearch","setIndex","HomeLang","btnText","setBtnTxt","active","setActive","swiper","useRef","useLocation","useEffect","regex","RegExp","$regex","backHandler","BackHandler","addEventListener","remove","list","LoadingBrain","TouchableOpacity","activeOpacity","idx","ActivityIndicator","current","scrollBy","SafeAreaView","ref","showsButtons","scrollEnabled","pagingEnabled","showsPagination","onIndexChanged","setTimeout","ScrollView","inputContainerStyle","map","el","input","setInput","confirmed","setConfirmed","parseUsername","setUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","animating","Loading","LoadingImage","slideOdd","paddingBottom","marginRight","borderWidth","Tutorial","res","SwipeImage","position","opacity","StepOne","StepTwo","StepThree","StepFour","StepFive","StepSixth","to","component","Config","HomeOrTutorial","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quizz","SuggestedActivities","Back","ReturnList","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","deletePerson","SimonDB","removeAsync","DictaphoneDB","deleted","type","iconContainerStyle","ActivitiesLang","Alert","multi","clear","isPlaying","setIsPlaying","progress","setProgress","Audio","Sound","sound","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","playAsync","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","unloadAsync","positionMillis","playableDurationMillis","variant","animation","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","record","DictaphoneLang","Untiled","Date","getURI","created","deleteRecord","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","createAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","clr","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","logo","leaveButton","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","Menu","SimonLogo","SimonLang","setTab","Game","start","setStart","failed","setFailed","canPlay","setCanPlay","setLoading","setTries","Math","round","random","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","playButtonDemo","randomNumber","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","disabled","tab","Create","SuccessfulRatio","AddQuestion","Complete","createButton","QuizzLogo","quizz","QuizzLang","QuizzList","Datastore","ContentDB","ViewQuizz","quizzId","CreateQuizz","setQuizz","returnComponent","page","ActivitiesList","iconPosition","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","setPerson","BgSource","navTheme","DefaultTheme","colors","background","BackgroundImage","NavigationContainer","theme","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","includes","useCallback","fetchData","StatusBar","hidden","LangInterface","exact","element"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,uirECA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,mo9ICI9BC,EAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,eACVC,QAASC,IACTC,UAAU,IAGP,SAASC,EAAYC,GACxB,OAAOP,EAAGQ,YACN,CAAEC,gBAAiB,CAAEC,SAAS,IAC9B,CAAED,gBAAiBF,IAcpB,SAAeI,IAAf,iBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAGoBZ,EAClBc,UAAU,CAAEC,SAAU,CAAEL,SAAS,KAAU,SAACM,EAAKC,GAC9C,OAAoB,IAAhBA,EAAKC,QACLlB,EAAGmB,YAAY,CACXJ,SAAU,KAEP,MAEAE,EAAK,GAAGF,YAGtBK,MAAK,SAACC,GAAU,IAAD,EACZ,OAAO,SAAAA,EAAK,SAAL,IAASN,WAAY,SAfjC,cAGGA,EAHH,kBAAAH,EAAA,MAkB2BZ,EACzBc,UAAU,CAAEL,gBAAiB,CAAEC,SAAS,KAAU,SAACM,EAAKC,GACrD,OAAoB,IAAhBA,EAAKC,QACLlB,EAAGmB,YAAY,CACXV,iBAAiB,KAEd,GAEAQ,EAAK,GAAGR,mBAGtBW,MAAK,SAACC,GAAU,IAAD,EACZ,OAAO,SAAAA,EAAK,SAAL,IAASZ,mBAAmB,MA9BxC,cAkBGA,EAlBH,yBAgCI,CAAEM,WAAUN,oBAhChB,4D,mBCVMa,EAAO,CAChBC,GAAI,CAEAC,aAAc,0BACdC,YAAa,qBACbC,SAAU,cACVC,YAAa,wCACbC,YAAa,2BACbC,eAAgB,uCAChBC,cACI,6DACJC,mBAAoB,SAACC,GACjB,MAAM,qCAAmCA,EAAzC,kBAEJC,KAAM,cACNC,cAAe,8DACfC,aAAc,oDACdC,aAAc,8BAGdC,IAAK,MACLC,GAAI,MACJC,WAAY,2BACZC,aAAc,SAACzB,GACX,MAAM,uDAAqDA,EAA3D,kLAIJ0B,cAAe,yCAEnBC,GAAI,CAEAlB,aAAc,gBACdC,YAAa,mBACbC,SAAU,YACVC,YAAa,0CACbC,YAAa,yBACbC,eAAgB,kCAChBC,cAAe,yBACfC,mBAAoB,SAACC,GACjB,MAAM,4BAA6BA,EAAnC,eAEJC,KAAM,OACNC,cAAe,uDACfC,aAAc,4CACdC,aAAc,qBAGdC,IAAK,MACLC,GAAI,KACJC,WAAY,gBACZC,aAAc,SAACzB,GACX,MAAM,2BAA4BA,EAAlC,yHAIJ0B,cAAe,2B,wCCvEjBE,EAAiB,SAACC,GACpB,IAAIC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,QAAnC,SACKN,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLxB,EAAO,CAChBC,GAAI,CAEAiC,YAAa,2BACbC,aAAc,WACV,OAAOd,EAAe,CAClBI,SACI,iNACJE,SAAU,CAAC,iBAKnBS,YAAa,oCACbC,aACI,iNAGJC,YAAa,oBACbC,aAAc,WACV,OAAOlB,EAAe,CAClBI,SACI,0LACJE,SAAU,CAAC,gBAKnBa,YAAa,eACbC,aAAc,WACV,OAAOpB,EAAe,CAClBI,SACI,4JACJE,SAAU,CAAC,gDAKnBe,YAAa,mBACbC,aACI,kLAGJC,eAAgB,8BAChBC,eAAgB,aAEhBC,eAAgB,sCAEpB1B,GAAI,CAEAc,YAAa,wBACbC,aAAc,WACV,OAAOd,EAAe,CAClBI,SACI,6KACJE,SAAU,CAAC,iBAKnBS,YAAa,kCACbC,aACI,qKAGJC,YAAa,sBACbC,aAAc,WACV,OAAOlB,EAAe,CAClBI,SACI,qKACJE,SAAU,CAAC,gBAKnBa,YAAa,YACbC,aAAc,WACV,OAAOpB,EAAe,CAClBI,SACI,yHACJE,SAAU,CAAC,qCAKnBe,YAAa,kBACbC,aACI,oJAGJC,eAAgB,kBAChBC,eAAgB,QAEhBC,eAAgB,yB,yBC5GTC,MAAWC,OAAO,CAC7BC,QAAS,CACLC,OAAQ,IACRC,UAAW,IAEfC,UAAW,CACPC,KAAM,EACNC,WAAY,SACZC,aAAc,UAElBC,QAAS,CACLC,SAAU,GACVxB,WAAY,OACZyB,aAAc,GACdC,iBAAkB,GAClBA,iBAAkB,GAClBC,UAAW,SACXC,MAAO,SAEXC,UAAW,CACPZ,OAAQ,GACRa,YAAa,OACbC,aAAc,GACdC,kBAAmB,GACnBJ,MAAO,QACPK,gBAAiB,QACjBC,cAAe,GACfC,aAAc,EACdC,aAAc,CACVnB,OAAQ,EACRoB,MAAO,GAEXC,UAAW,GAEfC,MAAO,CACHnB,KAAM,EACNiB,MAAO,KAEXG,gBAAiB,CACbnB,WAAY,UACZgB,MAAO,KAEXI,OAAQ,CACJR,gBAAiB,yBACjBF,aAAc,GACdM,MAAO,GACPK,WAAY,IAEhBC,WAAY,CACRC,WAAY,GACZhB,MAAO,QACPD,UAAW,UAEfkB,MAAO,CACHzB,KAAM,EACN0B,QAAS,IAEbC,QAAS,CACLzB,aAAc,SACde,MAAO,OACPW,cAAe,MACfC,SAAU,SACVC,eAAgB,Y,mDC9DlB9D,EAAiB,SAACC,GACpB,IAAIC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQ4B,MAAO,WAAlD,SACKlC,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLxB,EAAO,CAChBC,GAAI,CACAmF,MAAO,SAAC3F,GACJ,OAAO4B,EAAe,CAClBI,SAAU,gBACVE,SAAU,CAAClC,MAGnB4F,QAAS,yCACTC,WAAY,uBACZC,KAAM,YACNC,OAAQ,YACRC,aAAc,uBACdC,UAAW,wCACXC,cACI,8EACJC,OAAQ,2BAEZxE,GAAI,CACAgE,MAAO,SAAC3F,GACJ,OAAO4B,EAAe,CAClBI,SAAU,aACVE,SAAU,CAAClC,MAGnB4F,QAAS,uCACTC,WAAY,eACZC,KAAM,OACNC,OAAQ,SACRC,aAAc,qBACdC,UAAW,wCACXC,cACI,0EACJC,OAAQ,oB,0mBC3CD,SAASC,EAAKC,GACzB,IAAMC,EAAWC,cAEbC,EACgB,QAAhBC,IAASC,GACHxH,EAAQ,KAAgCyH,QACxC,KACNC,EACAP,EAAMQ,MAAQ,IAAM,EACd,CAAEpC,gBAAiB,SACnB,CAAEA,gBAAiB,WACzBqC,EACgB,QAAhBL,IAASC,GACH,CACIK,UAAWP,EACXQ,IAAKX,EAAMY,GACXC,eAAe,EACfC,eAAgBP,GAEpB,CAAEI,IAAKX,EAAMY,GAAIC,eAAe,EAAMC,eAAgBP,GAChE,OACI,eAAC,IAAD,OACQE,GADR,IAEIM,QAAS,WAAO,IAAD,EACXd,EAAS,eAAeD,EAAMY,GAAM,CAChCI,MAAO,CACH9G,KAAI,SAAE8F,EAAM9F,MAAR,EAAgB,KACpBP,SAAUqG,EAAMrG,aANhC,UAWI,cAAC,IAAD,CACIsH,OACS,MAALjB,KAAOkB,QACD,CAAEC,IAAKnB,EAAMkB,SACbE,IAEVC,SAAO,IAEX,eAAC,IAASC,QAAV,WACI,cAAC,IAASC,MAAV,UAAiBvB,EAAMwB,WACvB,cAAC,IAASC,SAAV,UAAoBzB,EAAM0B,iBAE9B,cAAC,IAASC,QAAV,CAAkB5D,MAAM,aCjDrBd,UAAWC,OAAO,CAC7B0E,YAAa,CACTC,UAAW,OACXzD,gBAAiB,OAErB0D,aAAc,CACVtD,MAAO,IACPpB,OAAQ,KAEZ2E,WAAY,CACRF,UAAW,QAEfG,KAAM,CACFxE,WAAY,SACZyE,UAAW,SACXC,eAAgB,GAChB1D,MAAO,QAEX2D,UAAW,CACPjE,aAAc,GACdM,MAAO,KAEX4D,QAAS,CACL5D,MAAO,KAEX6D,eAAgB,CACZ7D,MAAO,IACPpB,OAAQ,IACRc,aAAc,IACdN,aAAc,IAElB0E,iBAAkB,CACdL,UAAW,SACXzD,MAAO,IACPV,UAAW,SACX3B,WAAY,OACZwB,SAAU,GACVI,MAAO,UACPH,aAAc,M,kBClBP2E,EAlBA,SAACvC,GAER,MAAuB,QAAhBI,IAASC,GACZ,cAAC,IAAD,CACInE,MAAO8D,EAAMwC,YACbvB,OAAQjB,EAAMyC,aACdC,MAAM1C,EAAM2C,eAAe,SAAU3C,EAAM0C,KAC3CE,UACI5C,EAAM2C,eAAe,aAAc3C,EAAM4C,SAE7CC,WAAW,UAGf,cAACC,EAAA,EAAD,CAAO7B,OAAQjB,EAAM+C,YAAa7G,MAAO8D,EAAMgD,c,kBCN5C,SAASC,GAAQjD,GAC5B,IAAMyC,EAAe5J,EAAQ,KAE7B,OACI,eAACqK,EAAA,EAAD,WACI,cAAC,EAAD,CACIT,aAAcA,EACdM,YAAaI,IACbX,YAAaY,EAAOtB,aACpBkB,WAAYI,EAAOtB,aACnBY,MAAM,EACNE,UAAU,IAEd,cAAC3G,EAAA,EAAD,CAAMC,MAAOkH,EAAOd,iBAApB,UACoB,IAAftC,EAAMqD,KACDC,EAActD,EAAM9F,MAAMY,cAC1BwI,EAActD,EAAM9F,MAAMa,eAEpC,cAAC,IAAD,CACIwI,MAAOD,EAActD,EAAM9F,MAAMc,aACjCkB,MAAO,CAAEkC,gBAAiB,QAC1B2C,QAAS,SAACyC,GACNxD,EAAMyD,c,+DChBbvJ,GAAO,CAChBC,GAAI,CACAuJ,MAAO,cACPC,MAAO,QACPC,KAAM,OACNC,SAAU,YACVC,SAAU,aACVC,YAAa,uBACbC,mBAAoB,oDACpBzC,MAAO,0BACP0C,OAAQ,UACRpJ,KAAM,cACNqJ,YAAa,8CACbC,YAAa,kCACbC,gBACI,qGACJ1E,OAAQ,YACR2E,WAAY,sCAEhB/I,GAAI,CACAoI,MAAO,kBACPC,MAAO,kBACPC,KAAM,iBACNC,SAAU,qBACVC,SAAU,WACVC,YAAa,iBACbC,mBAAoB,wCACpBzC,MAAO,cACP0C,OAAQ,SACRpJ,KAAM,OACNqJ,YAAa,qCACbC,YAAa,mBACbC,gBACI,oEACJ1E,OAAQ,SACR2E,WAAY,sBC7CPzL,GAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,mBACVC,QAASC,IACTC,UAAU,IAeP,SAASqL,GAAIC,GAChB,OAAO3L,GACF4L,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEC,MAAO,IACdC,MAAK,SAAC/K,EAAKgL,GACR,OAAOA,KC5BnB,IAEahM,GAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,cACVC,QAASC,IACTC,UAAU,IAeP,SAAS4L,GAAYN,EAAUG,GAClC,OAAO9L,GACF4L,KAAK,CAAED,SAAUA,EAAUG,KAAMA,IACjCD,KAAK,CAAEK,OAAQ,IACfH,MAAK,SAAC/K,EAAKmL,GAIR,OAHInL,GACAoL,QAAQC,MAAMrL,GAEXmL,KC9BZ,IAAMG,GAAa,SAACC,EAAQC,EAAOC,GAMtC,OALIF,EAAOxC,eAAeyC,GACtBD,EAAOC,GAASC,EAIbF,G,qkBCEX,IAEavM,GAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,eACVC,QAASC,IACTC,UAAU,IAGP,SAASiE,GAAOoI,GAAS,IAAD,gBACvB1L,EAAM,GAWV,IATI,MAAC0L,MAAQ9D,WACT,SAAA8D,EAAO9D,WAAP,WAAiB+D,aAAjB,IAAyBzL,QAAS,KAClC,SAAAwL,EAAO9D,WAAP,WAAiB+D,aAAjB,IAAyBzL,QAAS,IAElCoL,GAAWtL,EAAK,WAAY,MAEtB,MAAN0L,KAAQ5D,cAAe,SAAA4D,EAAO5D,cAAP,WAAoB6D,aAApB,IAA4BzL,QAAS,KAC5DoL,GAAWtL,EAAK,cAAe,MAE/B4L,OAAOC,KAAK7L,GAAKE,OAAS,EAC1B,MAAO,CAAE4L,SAAS,EAAOX,KAAMnL,GAEnC,IAAMmL,EAAO,CACTvD,SAAQ,SAAE8D,EAAO9D,eAAT,EAAE,EAAiB+D,OAC3B7D,YAAW,SAAE4D,EAAO5D,kBAAT,EAAE,EAAoB6D,OACjCrE,QAAS,MAEb,OAAOtI,GAAGmB,YAAH,MAAoBgL,IAAQ,SAACnL,EAAK8B,GACrC,OAAI9B,EACO,CAAE8L,SAAS,EAAOX,KAAM,IAE5B,CACHW,SAAS,EACTX,KAAMrJ,MAKX,SAAS2H,GAAKzC,EAAI+E,GACrB,IACoC,EAGG,EAGJ,EAP/BZ,EAAO,GACPY,EAAIhD,eAAe,cACnBoC,EAAKvD,SAAL,SAAgBmE,EAAInE,eAApB,EAAgB,EAAc+D,QAE9BI,EAAIhD,eAAe,iBACnBoC,EAAKrD,YAAL,SAAmBiE,EAAIjE,kBAAvB,EAAmB,EAAiB6D,QAEpCI,EAAIhD,eAAe,aACnBoC,EAAK7D,QAAL,SAAeyE,EAAIzE,cAAnB,EAAe,EAAaqE,QAEhC,OAAO3M,GAAGQ,YAAY,CAAEwM,IAAKhF,GAAM,CAAEiF,KAAK,MAAMd,KAAUe,OAAM,SAAClM,GAC7DoL,QAAQe,IAAInM,MC9CL,SAASoM,GAAKhG,GACzB,MAA0CiG,mBAAS,IAAnD,WAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAgDF,mBAAS,IAAzD,WAAOG,EAAP,KAAyBC,EAAzB,KAgHA,OACI,eAACnD,EAAA,EAAD,CAAMhH,MAAOkH,EAAOpB,KAApB,UACI,cAACc,EAAA,EAAD,CACI7B,OACIjB,EAAMsG,WACA,CAAEnF,IAAKnB,EAAMsG,YACbC,IAEVrK,MAAOkH,EAAOf,iBAElB,cAAC,IAAD,CACIkB,MAAOD,EAAa,MAACtD,OAAD,EAACA,EAAO9F,MAAMG,YAClC0G,QA1CM,8BAAAvH,EAAAC,OAAA,kEAAAD,EAAA,MACKgN,KAAoC,CACnDC,WAAYD,KAA6BE,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,KALC,WAQW,KAPrBnL,EADU,QAQHoL,UARG,oDAYM,QAAhB1G,IAASC,GAZC,gBAaV0G,MAAM,QAbI,uCAgBF5F,EAAMzF,EAAOyF,IACjBnB,EAAMgH,cAAc7F,GAjBd,YAAA3H,EAAA,MAkBeyN,KAA6B9F,EAAK,CACnD+F,SAAU,WACXpB,OAAM,SAAClM,GACNoL,QAAQe,IAAInM,OArBV,QAkBAuN,EAlBA,OAuBNnH,EAAMoH,SAASD,GAvBT,kDAyBNnC,QAAQe,IAAR,MAzBM,kEA2CNsB,WAAY,CAAE1J,SAAU,IACxB2J,YAAalE,EAAOjB,UACpBoF,KACI,cAAC,IAAD,CACIC,KAAK,QACLC,KAAM,GACN1J,MAAM,QACN7B,MAAO,CAAE2B,iBAAkB,OAIvC,cAAC,IAAD,CACI3B,MAAO,CAAEsC,MAAO,OAAW0D,eAAgB,IAC3C1D,MAAO,IAEX,cAAC,IAAD,CACIkJ,YAAapE,EAAa,MAACtD,OAAD,EAACA,EAAO9F,MAAMK,YACxCoN,SAAU,cAAC,IAAD,CAAMH,KAAK,SAASC,KAAM,GAAI1J,MAAM,SAC9C6J,MAAOtE,EAAa,MAACtD,OAAD,EAACA,EAAO9F,MAAMI,SAClCuN,WAAY,CAAE9J,MAAO,OACrB+J,oBAAoB,EACpBC,UAAW,GACXC,aAAc9B,EACd+B,WAAY,CAAEtK,SAAU,GAAIE,iBAAkB,IAC9CqK,MAAOlI,EAAMwB,SACbV,eAAgB,CAAEtC,MAAO,IAAKnB,WAAY,IAC1C8K,aAAc,SAAC3E,GACXxD,EAAMoI,YAAY5E,MAI1B,cAAC,IAAD,CACIkE,YAAapE,EAAa,MAACtD,OAAD,EAACA,EAAO9F,MAAMO,eACxCkN,SAAU,cAAC,IAAD,CAAMH,KAAK,OAAOC,KAAM,GAAI1J,MAAM,SAC5C6J,MAAOtE,EAAa,MAACtD,OAAD,EAACA,EAAO9F,MAAMM,YAClCqN,WAAY,CAAE9J,MAAO,OACrBgK,UAAW,IACXD,oBAAoB,EACpBE,aAAc5B,EACd6B,WAAY,CAAEtK,SAAU,GAAIE,iBAAkB,IAC9CiD,eAAgB,CAAEtC,MAAO,IAAKZ,aAAc,GAC5CsK,MAAOlI,EAAM0B,YACbyG,aAAc,SAAC3E,GACXxD,EAAMqI,eAAe7E,MAI7B,cAAC,IAAD,CACI8E,QAAQ,EACR/E,MAAOD,EAAa,MAACtD,OAAD,EAACA,EAAO9F,MAAMW,KAClCkG,QAAS,SAACyC,IA7KN,iCAAAhK,EAAAC,OAAA,uDACR8K,EADQ,SACGvE,EAAMuE,UADT,EACqB,EAC3BgE,GACa,IAAfvI,EAAMqD,KACAmF,GAAYxI,EAAMuE,SAAU,CACxB/C,SAAUxB,EAAMwB,SAChBE,YAAa1B,EAAM0B,cAEvB8G,GACI,CACIhH,SAAUxB,EAAMwB,SAChBE,YAAa1B,EAAM0B,aAEvB1B,EAAM9F,MAbR,WAAAV,EAAA,MAeS+O,GAfT,WAgBW,KADjB7M,EAfM,QAgBDgK,QAhBC,wBAiBJhK,EAAOiH,eAAe,aACtBwD,EAAiB7C,EAAa,MAACtD,OAAD,EAACA,EAAO9F,MAAMQ,eAE5CgB,EAAOiH,eAAe,gBACtB0D,EACI/C,EAAa,MAACtD,OAAD,EAACA,EAAO9F,MAAMS,mBAAmB,MAtB9C,mBAyBD,GAzBC,WA2BS,IAAb4J,IACAA,EAAW7I,EAAOkK,QAElB,SAAA5F,EAAMtB,YAAN,IAAa5E,QAAS,GA9BlB,wBA+BA2O,EAAUC,gBACVC,EAAU1B,KAhCV,kCAAAzN,EAAA,MAiCEyN,KAA8B0B,GAAM7C,OAAM,SAAClM,GAC7CoL,QAAQe,IAAI,gCAlCZ,QAoCJkB,KACI0B,EAAI,IAAOF,EAAP,OACJzI,EAAMtB,MACN,CACIwI,SAAU,WAGblN,MAAK,WACFwO,GAAYjE,EAAU,CAClBrD,QAASyH,EAAI,IAAOF,EAAP,SAEZzO,MAAK,SAAC+K,GAOK,IAAD,GANY,IAAf/E,EAAMqD,MACN3H,EAAOwF,QAAUyH,EAAI,IAAOF,EAAP,OACrBzI,EAAM4I,WAAU,SAACC,GAAD,qBACTA,GADS,CAEZnN,QAGJsE,EAAM8I,kBAAN,SACI9I,EAAMwB,eADV,EACI,EAAgB+D,QAGxBvF,EAAM+I,SAETjD,OAAM,SAAClM,GAEJ,OADAoL,QAAQe,IAAI,YAAanM,IAClB,QAGlBkM,OAAM,SAAClM,GACJoL,QAAQe,IAAI,kBAAmBnM,MAnEnC,yBAsEe,IAAfoG,EAAMqD,KACNrD,EAAM4I,WAAU,SAACC,GAAD,qBAAiBA,GAAjB,CAA0BnN,OAE1CsE,EAAM8I,kBAAN,SAAwB9I,EAAMwB,eAA9B,EAAwB,EAAgB+D,QAE5CvF,EAAM+I,MA3EF,6DA8KAC,IAEJ3B,WAAY,CAAE1J,SAAU,IACxB2J,YAAalE,EAAOhB,QACpB6G,WAAW,EACX1B,KACI,cAAC,IAAD,CACIC,KAAK,OACLC,KAAM,GACN1J,MAAM,QACN7B,MAAO,CAAE2B,iBAAkB,U,qkBClMpC,SAASqL,GAAalJ,GACjC,MAA0BiG,qBAA1B,WAAOvH,EAAP,KAAc0I,EAAd,KACA,EAAgCnB,mBAAS,IAAzC,WAAOzE,EAAP,KAAiB4G,EAAjB,KACA,EAAoCnC,qBAApC,WAAOK,EAAP,KAAmBU,EAAnB,KACA,EAAsCf,mBAAS,IAA/C,WAAOvE,EAAP,KAAoB2G,EAApB,KACA,EAA8BpC,oBAAS,GAAvC,WAAOP,EAAP,KAAgByD,EAAhB,KAcMC,EAAY,CACdlP,KAAM8F,EAAM9F,KAEZsH,SAAUA,EACV4G,YAAaA,EAEb1J,MAAOA,EACP0I,SAAUA,EAEVd,WAAYA,EACZU,cAAeA,EAEftF,YAAaA,EACb2G,eAAgBA,GAGpB,OACI,cAACnF,EAAA,EAAD,CAAMhH,MAAOkH,EAAOpB,KAApB,SACK0D,EACG,cAACzC,GAAD,SAAamG,GAAb,IAAwB3F,MA3BtB,WACV2E,EAAY,IACZpB,EAAc,IACdI,EAAS,IACTiB,EAAe,IACfc,GAAW,IAsBmC9F,MAAM,KAE5C,cAAC2C,GAAD,SACQoD,GADR,IAEI/F,MAAM,EACNwF,QAAS7I,EAAM6I,QACfD,UAAW5I,EAAMqJ,WACjBN,IAtCH,WACTI,GAAW,SCbJlM,WAAWC,OAAO,CAC7BI,UAAW,CACPC,KAAM,GAEVJ,QAAS,CACLE,UAAW,IACXS,UAAW,SACXN,WAAY,UAEhB8L,SAAU,CACN/L,KAAM,EACNiB,MAAO,GACPnB,WAAY,KAEhBK,QAAS,CACLL,WAAY,IACZM,SAAU,GACV4L,OAAQ,GAEZC,SAAU,CACNrN,WAAY,OACZ4B,MAAO,WAEX0L,SAAU,CACN3L,UAAW,UAEfY,MAAO,CACHnB,KAAM,EACNiB,MAAO,KAEXI,OAAQ,CACJR,gBAAiB,UACjB8D,eAAgB,GAChB9E,OAAQ,GACRoB,MAAO,IACPN,aAAc,GACdwL,SAAU,UAEd5K,WAAY,CACRf,MAAO,QACPD,UAAW,SACXT,UAAW,IAEfsM,SAAU,CACN7L,UAAW,SACXN,WAAY,SACZoM,kBAAmB,OACnBC,kBAAmB,GACnBH,SAAU,UAEdI,cAAe,CACXvM,KAAM,GAEVwM,UAAW,CACPjM,UAAW,SACXoE,eAAgB,GAChBnE,MAAO,OACPiM,UAAW,UAEfC,UAAW,CACPrM,cAAe,IAEnBsM,iBAAkB,CACdpM,UAAW,SACXC,MAAO,UACPJ,SAAU,MC3CH,SAASwM,GAAKnK,GAAQ,IAAD,EAChC,EAAkCiG,oBAAS,GAA3C,WAAOmE,EAAP,KAAkBC,EAAlB,KACA,EAA8BpE,qBAA9B,WAAO4C,EAAP,KAAgBQ,EAAhB,KACA,EAA4BpD,qBAA5B,WAAOqE,EAAP,KAAeC,EAAf,KACA,EAA0BtE,mBAAS,GAAnC,WAAOzF,EAAP,KAAcgK,EAAd,KACA,EAA6BvE,mBACzBwE,EAASzK,EAAM9F,MAAQA,GAAMsF,YADjC,WAAOkL,EAAP,KAAgBC,EAAhB,KAGA,EAA4B1E,oBAAS,GAArC,WAAO2E,EAAP,KAAeC,EAAf,KAEMC,EAASC,iBAAO,MAChB/J,EAAK,SAAGgK,oBAAH,EAAG,EAAehK,MACvBf,EAAWC,cAEXvG,GAAgB,MAALqH,OAAA,EAAAA,EAAOrH,WAAYqG,EAAMrG,SACpCO,GAAY,MAAL8G,OAAA,EAAAA,EAAO9G,OAAQ8F,EAAM9F,KAElC+Q,qBAAU,WAAO,IAAD,GACPtR,IAAoB,MAARA,GAAA,SAAAA,EAAU4L,aAAV,IAAkBzL,QAAS,EACxCmG,EAAS,KJoBd,SAAauH,GAChB,IAAM0D,EAAQ,IAAIC,OAAO3D,EAAM,KAC/B,OAAO5O,GAAGc,UAAU,CAAE8H,SAAU,CAAE4J,OAAQF,KIpBlC1C,CAAW8B,GAAQtQ,MAAK,SAAC+K,GACrBsE,EAAWtE,GACXsF,GAAa,MAGrB,IAAMgB,EAAcC,IAAYC,iBAC5B,qBACA,WACI,OAAO,KAGf,OAAO,kBAAMF,EAAYG,YAC1B,CAAClB,EAAQ3Q,EAAUsG,IAEtB,IAmBmBwL,EAiBnB,OACI,eAACvI,EAAA,EAAD,CAAMhH,MAAOkH,GAAO9F,UAApB,UACI,eAAC4F,EAAA,EAAD,CAAMhH,MAAOkH,GAAOjG,QAApB,UACI,cAAC2F,EAAA,EAAD,CACI7B,OAAQyK,IACR7I,WAAW,UACX3G,MAAOkH,GAAOkG,WAElB,cAACrN,EAAA,EAAD,CAAMC,MAAOkH,GAAO1F,QAApB,SACK+M,EAASvQ,GAAMoF,MAAM3F,QAG9B,cAACsC,EAAA,EAAD,CAAMC,MAAOkH,GAAOqG,SAApB,SAA+BgB,EAASvQ,GAAMqF,UAC9C,cAAC2D,EAAA,EAAD,CAAMhH,MAAOkH,GAAOuG,SAApB,SACI,cAACgC,EAAA,EAAD,CACIzP,MAAOkH,GAAOxE,OACdgN,cAAe,GACf7K,QAAS,SAACyC,GArDR,IAACqI,GAsDgB,IAAXjB,IAGJC,GAAU,GACVF,EACI,cAACmB,EAAA,EAAD,CAAmB/N,MAAO,QAAS0J,KAAM,YA1DhD,KADEoE,EA6DWrL,EAAQ,KA3D9BqL,EAAM,GAEVf,EAAOiB,QAAQC,SAASH,EAAMrL,GAAO,KA8C7B,SAcI,cAACvE,EAAA,EAAD,CAAMC,MAAOkH,GAAOtE,WAApB,SAAiC4L,QAGzC,cAACuB,EAAA,EAAD,CAAc/P,MAAOkH,GAAO0G,cAA5B,SACKM,EACG,cAAC0B,EAAA,EAAD,CACI/N,MAAO,OACP7B,MAAO,CAAEmB,UAAW,MAGxB,eAAC,IAAD,CACI6O,IAAKpB,EACLqB,cAAc,EACdC,eAAe,EACf1J,MAAI,EACJ2J,eAAa,EACb7L,MAAO,EACP8L,iBAAiB,EACjBC,eAAgB,SAAC/I,GA3EjB,IAACqI,EACjBrB,EADiBqB,EA4EerI,GA1EhCgJ,YAAW,WACK,IAARX,EACAlB,EAAUF,EAASvQ,GAAMsF,YACV,IAARqM,GACPlB,EAAUF,EAASvQ,GAAMyF,cAE7BkL,GAAU,KACX,MA0DS,UAYI,eAAC4B,EAAA,EAAD,WACI,cAAC,IAAD,CACI/E,YAAa+C,EAASvQ,GAAM4F,OAC5B4M,oBAAqBtJ,GAAO6G,UAC5B9B,aAAc,SAAC3E,GACX+G,EAAU/G,IAEd0E,MAAOoC,EACPrC,WAAY7E,GAAO8G,mBAEtBrB,GAAWA,EAAQ/O,OAAS,GA7ElC2R,EA8EmB5C,EA7E3B4C,EAAKkB,KAAI,SAACC,EAAI7Q,GACjB,OACI,cAACgE,EAAD,CACIS,MAAOzE,EAEPpC,SAAUA,EACViH,GAAIgM,EAAGhH,IACPpE,SAAUoL,EAAGpL,SACbE,YAAakL,EAAGlL,YAChBR,QAAS0L,EAAG1L,QACZhH,KAAMA,GAND0S,EAAGhH,SA2EI,cAAC3J,EAAA,EAAD,CAAMC,MAAOkH,GAAO2G,UAApB,SACKU,EAASvQ,GAAM0F,eAI5B,cAAC6M,EAAA,EAAD,UACI,cAACvD,GAAD,CACIL,QAASA,EACTQ,WAAYA,EACZnP,KAAMA,MAGd,cAACuS,EAAA,EAAD,YCrJT,SAASzP,GAAegD,GACnC,MAA0BiG,mBAAS,IAAnC,WAAO4G,EAAP,KAAcC,EAAd,KACA,EAAkC7G,oBAAS,GAA3C,WAAOmE,EAAP,KAAkBC,EAAlB,KACA,EAAkCpE,oBAAS,GAA3C,WAAO8G,EAAP,KAAkBC,EAAlB,KACM/M,EAAWC,cAEjB+K,qBAAU,WACN,IAUMI,EAAcC,IAAYC,iBAC5B,qBAXe,WACf,OAAOrS,GAAY,GACdc,MAAK,WAEF,OADAiG,EAAS,MACF,KAEV6F,OAAM,SAAClM,GACJ,OAAO,QAOnB,OAAO,kBAAMyR,EAAYG,YAC1B,IAEH,IAAMyB,EAAgB,SAACJ,GACnBxC,GAAa,GACb,IAAI1Q,GAAgB,MAALkT,OAAA,EAAAA,EAAOtH,SAAU,KAC5B5L,IAAoB,MAARA,OAAA,EAAAA,EAAUG,SAAU,IAAa,MAARH,OAAA,EAAAA,EAAUG,QAAS,GlB/B7D,SAA2B+S,GAA3B,SAAArT,EAAAC,OAAA,yEACIb,EAAGQ,YAAY,CAAEO,SAAU,CAAEL,SAAS,IAAU,CAAEK,SAAUkT,KADhE,4DkBgCKK,CAAYvT,GACPK,MAAK,SAACmT,GACH9C,GAAa,GACbyC,EAASnT,GACTqT,GAAa,MAEhBlH,OAAM,SAAClM,GACJoL,QAAQe,IAAInM,MAGpByQ,GAAa,IAIrB,OAAK0C,EAgDM,cAAC5C,GAAD,CAAMxQ,SAAUkT,EAAO3S,KAAM8F,EAAM9F,OA9CtC,eAACgJ,EAAA,EAAD,CAAMhH,MAAOkH,EAAO9F,UAApB,UACI,cAAC4F,EAAA,EAAD,CAAMhH,MAAOkH,EAAOjG,QAApB,SACI,cAAC2F,EAAA,EAAD,CACI7B,OAAQmM,IACRvK,WAAW,UACX3G,MAAOkH,EAAO1E,UAGtB,cAACzC,EAAA,EAAD,CAAMC,MAAOkH,EAAO1F,QAApB,SACK2P,EAAarN,EAAM9F,MAAM8C,iBAE9B,eAACkG,EAAA,EAAD,CAAMhH,MAAOkH,EAAOlE,QAApB,UACI,cAACoO,EAAA,EAAD,CACIC,sBAAsB,cACtBrR,MAAOkH,EAAOpF,UACdkK,MAAO2E,EACPnF,YAAapE,EAActD,EAAM9F,MAAME,aACvC2N,UAAW,GACXI,aAAc,SAAC3E,GACXsJ,EAAStJ,MAGjB,cAACmI,EAAA,EAAD,CACIzP,MAAOkH,EAAOxE,OACdgN,cAAe,GACf7K,QAAS,SAACyC,GACNyJ,EAAcJ,IAJtB,SAOI,eAAC5Q,EAAA,EAAD,CAAMC,MAAOkH,EAAOtE,WAApB,UACK,IACAsL,EACG,cAAC0B,EAAA,EAAD,CACI/N,MAAM,QACN0J,KAAK,QACL+F,WAAW,IAGf,gB,yBCjEjBC,GAhCC,SAACzN,GACb,IAAMyC,EAAe5J,EAAQ,KACvBuK,EAAS,CAAE5E,MAAO,IAAKnB,UAAW,KACxC,OACI,eAAC6F,EAAA,EAAD,CAAMhH,MAAO8D,EAAM9D,MAAnB,UACI,cAAC,EAAD,CACIuG,aAAcA,EACdD,YAAaY,EACbJ,WAAYI,EACZL,YAAa2K,OAEjB,cAACzR,EAAA,EAAD,CACIC,MAAO,CACHmB,UAAW,IACXU,MAAO,UACPS,MAAO,IACPV,UAAW,UALnB,SAQKkC,EAAMxE,OAEX,cAACS,EAAA,EAAD,CAAMC,MAAO,CAAEmB,UAAW,KAA1B,SACI,cAACyO,EAAA,EAAD,CACI/N,MAAO,UACP0J,KAAM,QACNvL,MAAO,CAAEmB,UAAW,Y,mJC7BzBJ,OAAWC,OAAO,CAC7BC,QAAS,CACLkC,eAAgB,SAChB7B,WAAY,UAEhBwB,MAAO,CACHzB,KAAM,EACN0B,QAAS,IAEb0O,SAAU,CACNpQ,KAAM,EACN0B,QAAS,GACTb,gBAAiB,WAErBmF,MAAO,CACHxF,MAAO,QACPR,KAAM,EACNI,SAAU,GACVxB,WAAY,OACZkB,WAAY,GACZS,UAAW,UAEftC,KAAM,CACFuC,MAAO,QACPJ,SAAU,GACVJ,KAAM,EACNF,WAAY,GACZS,UAAW,UAEfY,MAAO,CACHnB,KAAM,EACNiB,MAAO,OACPpB,OAAQ,KAEZuB,gBAAiB,CACbpB,KAAM,EACNF,WAAY,IAEhBuB,OAAQ,CACJvB,UAAW,GACX0B,WAAY,GACZ6O,cAAe,GACf/O,WAAY,GACZgP,YAAa,GACbzP,gBAAiB,UACjBF,aAAc,GACd4P,YAAa,EACb7P,YAAa,QAEjBa,WAAY,CACRf,MAAO,OACPD,UAAW,YC9BJ,SAASiQ,GAAS/N,GAC7B,IAAMyC,EAAe5J,EAAQ,KAc7B,OAZAoS,qBAAU,WrBLP,EAAAzR,EAAAC,OAAA,yEACIb,EAAGc,UAAU,CAAEC,SAAU,CAAEL,SAAS,KAAU,SAACM,EAAKC,GACvD,OAAOA,MAFR,4DqBOMG,MAAK,SAACgU,GAAS,IAAD,EACX,YAAIA,EAAI,KAAJ,EAAQrU,SACR,OAAO,cAACwQ,GAAD,CAAMxQ,SAAUqU,EAAK9T,KAAM8F,EAAM9F,UAG/C4L,OAAM,SAAClM,GACJoL,QAAQe,IAAInM,QAErB,IAGC,qCACI,cAAC,EAAD,CACI6I,aAAcA,EACdM,YAAakL,KACbzL,YAAa,CACT0L,SAAU,WACV9Q,OAAQ,GACRC,UAAW,IACXwB,WAAY,GACZsP,QAAS,IAEbnL,WAAY,CACRkL,SAAU,WACV9Q,OAAQ,GACRC,UAAW,IACXwB,WAAY,GACZsP,QAAS,MAGjB,eAAC,IAAD,CACIjS,MAAOkH,GAAOjG,QACdgP,cAAc,EACdG,iBAAiB,EACjB5J,MAAM,EAJV,UAMI,eAACQ,EAAA,EAAD,CAAMhH,MAAOkH,GAAOpE,MAApB,UACI,cAAC8D,EAAA,EAAD,CACI7B,OAAQmN,KACRvL,WAAW,UACX3G,MAAOkH,GAAO1E,QAElB,cAACzC,EAAA,EAAD,CAAMC,MAAOkH,GAAOG,MAApB,SACK8J,EAAarN,EAAM9F,MAAMkC,cAE9B,cAACH,EAAA,EAAD,CAAMC,MAAOkH,GAAO5H,KAApB,SACK6R,EAAarN,EAAM9F,MAAMmC,oBAIlC,eAAC6G,EAAA,EAAD,CAAMhH,MAAOkH,GAAOuK,SAApB,UACI,cAAC7K,EAAA,EAAD,CACI7B,OAAQoN,KACRxL,WAAW,UACX3G,MAAOkH,GAAO1E,QAElB,cAACzC,EAAA,EAAD,CAAMC,MAAOkH,GAAOG,MAApB,SACK8J,EAAarN,EAAM9F,MAAMoC,cAE9B,cAACL,EAAA,EAAD,CAAMC,MAAOkH,GAAO5H,KAApB,SACK6R,EAAarN,EAAM9F,MAAMqC,kBAIlC,eAAC2G,EAAA,EAAD,CAAMhH,MAAOkH,GAAOpE,MAApB,UACI,cAAC8D,EAAA,EAAD,CACI7B,OAAQqN,KACRzL,WAAW,UACX3G,MAAOkH,GAAO1E,QAElB,cAACzC,EAAA,EAAD,CAAMC,MAAOkH,GAAOG,MAApB,SACK8J,EAAarN,EAAM9F,MAAMsC,cAE9B,cAACP,EAAA,EAAD,CAAMC,MAAOkH,GAAO5H,KAApB,SACK6R,EAAarN,EAAM9F,MAAMuC,oBAIlC,eAACyG,EAAA,EAAD,CAAMhH,MAAOkH,GAAOuK,SAApB,UACI,cAAC7K,EAAA,EAAD,CACI7B,OAAQsN,KACR1L,WAAW,UACX3G,MAAOkH,GAAO1E,QAElB,cAACzC,EAAA,EAAD,CAAMC,MAAOkH,GAAOG,MAApB,SACK8J,EAAarN,EAAM9F,MAAMwC,cAE9B,cAACT,EAAA,EAAD,CAAMC,MAAOkH,GAAO5H,KAApB,SACK6R,EAAarN,EAAM9F,MAAMyC,oBAIlC,eAACuG,EAAA,EAAD,CAAMhH,MAAOkH,GAAOpE,MAApB,UACI,cAAC8D,EAAA,EAAD,CACI7B,OAAQuN,KACR3L,WAAW,UACX3G,MAAOkH,GAAO1E,QAElB,cAACzC,EAAA,EAAD,CAAMC,MAAOkH,GAAOG,MAApB,SACK8J,EAAarN,EAAM9F,MAAM0C,cAE9B,cAACX,EAAA,EAAD,CAAMC,MAAOkH,GAAO5H,KAApB,SACK6R,EAAarN,EAAM9F,MAAM2C,kBAIlC,eAACqG,EAAA,EAAD,CAAMhH,MAAOkH,GAAOuK,SAApB,UACI,cAAC7K,EAAA,EAAD,CACI7B,OAAQwN,KACR5L,WAAW,UACX3G,MAAOkH,GAAO1E,QAElB,cAACzC,EAAA,EAAD,CAAMC,MAAOkH,GAAOG,MAApB,SACK8J,EAAarN,EAAM9F,MAAM4C,iBAE9B,cAACoG,EAAA,EAAD,CAAMhH,MAAOkH,GAAOzE,gBAApB,SACI,cAAC,IAAD,CACI+P,GAAG,YACHC,UAAWhD,IACXzP,MAAOkH,GAAOxE,OACdmC,QAAS,SAACyC,GACNoL,GAAmB,IAEvBhD,cAAe,GAPnB,SASI,eAAC3P,EAAA,EAAD,CAAMC,MAAOkH,GAAOtE,WAApB,UACK,IACAuO,EAAarN,EAAM9F,MAAM6C,eAAgB,oBCrJ1E,IAUe8R,GAVQ,SAAC7O,GAAW,IAAD,EAC9B,OAAI,MAACA,KAAO3G,gBAGR,MAAC2G,MAAOrG,WAAiB,MAALqG,GAAA,SAAAA,EAAOrG,eAAP,IAAiBG,QAAS,EACvC,cAACkD,GAAD,CAAgB9C,KAAM8F,EAAM9F,OAEhC,cAACiQ,GAAD,CAAMjQ,KAAM8F,EAAM9F,KAAMP,SAAUqG,EAAMrG,WALpC,cAACoU,GAAD,CAAU7T,KAAM8F,EAAM9F,Q,0CCN/BqB,GAAiB,SAACC,GACpB,IAAIC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQ4B,MAAO,WAAlD,SACKlC,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLxB,GAAO,CAChBC,GAAI,CACAmF,MAAO,SAAC3F,GACJ,OAAO4B,GAAe,CAClBI,SAAU,gBACVE,SAAU,CAAClC,MAGnBmV,WAAY,eACZC,MAAO,QACPC,SAAU,gBACVC,cAAe,qBACfC,aAAc,qBACdC,cAAe,sBACfC,aAAc,2BACdC,MAAO,iBACPC,aAAc,gBACdC,WAAY,gBACZC,MAAO,qBACPC,oBAAqB,+BACrBC,KAAM,8BAENC,WAAY,UAEhBrU,GAAI,CACAgE,MAAO,SAAC3F,GACJ,OAAO4B,GAAe,CAClBI,SAAU,aACVE,SAAU,CAAClC,MAGnBmV,WAAY,aACZC,MAAO,QACPC,SAAU,WACVC,cAAe,qBACfC,aAAc,oBACdC,cAAe,qBACfC,aAAc,2BACdC,MAAO,gBACPE,WAAY,YACZC,MAAO,gBACPF,aAAc,gBACdG,oBAAqB,uBACrBC,KAAM,0BAENC,WAAY,W,oBC5DL1S,OAAWC,OAAO,CAC7B4D,eAAgB,CACZtD,WAAY,SACZH,UAAW,GACXO,aAAc,IAElB0J,YAAa,CACT9I,MAAO,IACPpB,OAAQ,IAEZwS,kBAAmB,CACfpR,MAAO,IACPpB,OAAQ,IAEZyS,kBAAmB,CACfrR,MAAO,IACPpB,OAAQ,GACRgB,gBAAiB,OAErB0R,gBAAiB,CACbtR,MAAO,IACPpB,OAAQ,GACRgB,gBAAiB,WAErB2R,iBAAkB,CACdvR,MAAO,IACPpB,OAAQ,GACRgB,gBAAiB,Y,qkBCbV,SAAS4Q,GAAShP,GAAQ,IAAD,YACpC,EAAwBiG,oBAAS,GAAjC,WAAO5C,EAAP,KAAa2M,EAAb,KACA,EAA8B/J,oBAAS,GAAvC,WAAOP,EAAP,KAAgByD,EAAhB,KACA,EAA0BlD,qBAA1B,WAAOvH,EAAP,KAAc0I,EAAd,KACA,EAAgCnB,mBAASjG,EAAMsF,OAAO9D,UAAtD,WAAOA,EAAP,KAAiB4G,EAAjB,KACA,EAAoCnC,mBAASjG,EAAMsF,OAAOpE,SAA1D,WAAOoF,EAAP,KAAmBU,EAAnB,KACA,EAAsCf,mBAASjG,EAAMsF,OAAO5D,aAA5D,WAAOA,EAAP,KAAoB2G,EAApB,KAEMpI,EAAWC,cAcXkJ,EAAY,CACdlP,KAAM8F,EAAM9F,KAEZsH,SAAUA,EACV4G,YAAaA,EAEb1J,MAAOA,EACP0I,SAAUA,EAEVd,WAAYA,EACZU,cAAeA,EAEftF,YAAaA,EACb2G,eAAgBA,GAUd4H,EAAe,WZWlB,IAA0BrP,KYVPZ,EAAMuE,SZUzB,EAAA/K,EAAAC,OAAA,kEAAAD,EAAA,MACG0W,GAAQC,YAAY,CAAE5L,SAAU3D,KADnC,yBAAApH,EAAA,MAEG4W,GAAa5L,KAAK,CAAED,SAAU3D,IAAM,SAAChH,EAAKmL,GACxCnL,EACAoL,QAAQC,MAAMrL,GAEdmL,EAAK4H,KAAI,SAAOC,EAAI7Q,GAAX,SAAAvC,EAAAC,OAAA,kEAAAD,EAAA,MACCyN,KAAA,MAAuB2F,OAAvB,EAAuBA,EAAIjE,OAD5B,mEANd,yBAAAnP,EAAA,MAWGZ,GAAGc,UAAU,CAAEkM,IAAKhF,IAAM,SAAOhH,EAAKmL,GAAZ,eAAAvL,EAAAC,OAAA,oDACxBG,EADwB,gBAExBoL,QAAQC,MAAMrL,GAFU,0BAGjBmL,EAAK,GAAG7D,QAHS,kCAAA1H,EAAA,MAIlByN,KAAA,SAAuBlC,EAAK,SAA5B,EAAuB,EAAS7D,UAJd,gEAX7B,yBAAA1H,EAAA,MAkBG4W,GAAaD,YAAY,CAAE5L,SAAU3D,KAlBxC,gCAmBIhI,GAAGuX,YAAY,CAAEvK,IAAKhF,KAnB1B,6DYVmC5G,MAAK,SAACqW,GACpCpQ,EAAS,aAqBjB,OACI,cAACiD,EAAA,EAAD,CAAMhH,MAAO,CAAEqB,KAAM,GAArB,UACc,IAAT8F,EACG,eAACoJ,EAAA,EAAD,CAAYvQ,MAAO,CAAEqB,KAAM,GAA3B,UACI,cAAC,IAAD,CACIgK,KAAM,CACFC,KAAM,OACN8I,KAAM,eACN7I,KAAM,GACN1J,MAAO,SAEXwS,mBAAoB,CAAE1C,YAAa,IACnCvG,YAAalE,GAAOkE,YACpBxG,eAAgBsC,GAAOtC,eACvBC,QAAS,WACLiP,GAAQ,IAEZzM,MAAK,SAAEiN,GAAexQ,EAAM9F,YAAvB,EAAE,EAA4B+U,gBAEvC,cAAC,IAAD,CACI1H,KAAM,CACFC,KAAM,YACN8I,KAAM,eACN7I,KAAM,GACN1J,MAAO,SAEXwS,mBAAoB,CAAE1C,YAAa,IACnCvG,YAAalE,GAAOkE,YACpBxG,eAAgBsC,GAAOtC,eACvByC,MAAK,SAAEiN,GAAexQ,EAAM9F,YAAvB,EAAE,EAA4BgV,eAEvC,cAAC,IAAD,CACI3H,KAAM,CACFC,KAAM,SACN8I,KAAM,eACN7I,KAAM,GACN1J,MAAO,SAEXwS,mBAAoB,CAAE1C,YAAa,IACnCvG,YAAalE,GAAOyM,kBACpB/O,eAAgBsC,GAAOtC,eACvByC,MAAK,SAAEiN,GAAexQ,EAAM9F,YAAvB,EAAE,EAA4BiV,cACnCpO,QAAS,WA1DlB0P,KAAM1J,MACTzD,EAActD,EAAM9F,MAAMiB,WAC1BmI,EAActD,EAAM9F,MAAMkB,aAAa4E,EAAMrG,UAC7C,CACI,CACI6B,KAAM8H,EAActD,EAAM9F,MAAMe,IAChC8F,QAAS,WACLkP,MAGR,CACIzU,KAAM8H,EAActD,EAAM9F,MAAMgB,SAmDhC,cAAC,IAAD,CACIqM,KAAM,CACFC,KAAM,aACN8I,KAAM,eACN7I,KAAM,GACN1J,MAAO,SAEXwS,mBAAoB,CAAE1C,YAAa,IACnCvG,YAAalE,GAAO0M,gBACpBhP,eAAgBsC,GAAOtC,eACvByC,MAAK,SAAEiN,GAAexQ,EAAM9F,YAAvB,EAAE,EAA4BwV,KACnC3O,QAAS,WACLd,EAAS,YAGjB,cAAC,IAAD,CACIsH,KAAM,CACFC,KAAM,MACN8I,KAAM,eACN7I,KAAM,GACN1J,MAAO,SAEXwS,mBAAoB,CAAE1C,YAAa,IACnCvG,YAAalE,GAAO2M,iBACpBjP,eAAgBsC,GAAOtC,eACvByC,MAAK,SAAEiN,GAAexQ,EAAM9F,YAAvB,EAAE,EAA4BkV,aACnCrO,QAtGN,oBAAAvH,EAAAC,OAAA,kEAAAD,EAAA,MZyCPZ,GAAGuX,YAAY,GAAI,CAAEO,OAAO,KYzCrB,yBAAAlX,EAAA,MAEJR,IAAa2X,SAFT,cAGV1Q,EAAS,SAHC,mBAIH,GAJG,kEA0GF,eAACwM,EAAA,EAAD,CAAYvQ,MAAO,CAAEqB,KAAM,EAAGa,gBAAiB,SAA/C,UACI,cAAC,IAAD,CACImJ,KAAM,CACFC,KAAM,oBACN8I,KAAM,eACN7I,KAAM,GACN1J,MAAO,SAEXwS,mBAAoB,CAAE1C,YAAa,IACnCvG,YAAalE,GAAOwM,kBACpB9O,eAAgBsC,GAAOtC,eACvByC,MAAK,SAAEiN,GAAexQ,EAAM9F,YAAvB,EAAE,EAA4ByV,WACnC5O,QAAS,kBAAMiP,GAAQ,MAE1BtK,EACG,cAACzC,GAAD,SAAamG,GAAb,IAAwB3F,MAjJ9B,WACV2E,EAAYpI,EAAMsF,OAAO9D,UACzBwF,EAAchH,EAAMsF,OAAOpE,SAC3BkG,EAAS,IACTiB,EAAerI,EAAMsF,OAAO5D,aAC5ByH,GAAW,IA4I2C9F,MAAM,KAE5C,cAAC2C,GAAD,SACQoD,GADR,IAEI/F,MAAM,EACNwF,QAAS7I,EAAMsF,OACfwD,kBAAmB9I,EAAMoI,YACzB7D,SAAUvE,EAAMuE,SAChBwE,IA7JX,WACTI,GAAW,Y,2lBCtBJ,SAASpJ,GAAKC,GACzB,MAAkCiG,oBAAS,GAA3C,WAAO2K,EAAP,KAAkBC,EAAlB,KACA,EAAgC5K,mBAAS,GAAzC,WAAO6K,EAAP,KAAiBC,EAAjB,KACA,EAA0B9K,mBAAS,IAAI+K,KAAMC,OAA7C,WAAOC,EAAP,KAAcC,EAAd,KAEAlG,qBAAU,WACN4F,GAAa,KACd,CAAC7Q,EAAMoR,gBAEV,IA2CIjR,EACgB,QAAhBC,IAASC,GACHxH,EAAQ,KAAgCyH,QACxC,KACNC,EACAP,EAAMQ,MAAQ,IAAM,EACd,CAAEpC,gBAAiB,SACnB,CAAEA,gBAAiB,WACzBqC,EACgB,QAAhBL,IAASC,GACH,CACIK,UAAWP,EACXQ,IAAKX,EAAM4F,IACX/E,eAAe,EACfC,eAAgBP,GAEpB,CAAEI,IAAKX,EAAM4F,IAAK/E,eAAe,EAAMC,eAAgBP,GACjE,OACI,eAAC,IAAD,SACQE,GADR,IAEIM,QAAS6P,EAzBE,oBAAApX,EAAAC,OAAA,kEAAAD,EAAA,MACT0X,EAAMG,cADG,OAEfR,GAAa,GAFE,6DAtCD,0BAAArX,EAAAC,OAAA,2EAAAD,EAAA,MAEJwG,EAAMsR,YAFF,yBAAA9X,EAAA,MAGJwX,KAAMO,kBAAkB,CAC1BC,yBAAyB,EACzBC,mBAAmB,KALb,cAOVZ,GAAa,GAPH,WAAArX,EAAA,YAQmB0X,OARnB,EAQmBA,EAAOQ,kBAR1B,WASuB,KAAf,OADZC,EARI,aASN,EAAAA,EAAgBC,UATV,oCAAApY,EAAA,MAUA0X,EAAMW,UAAU,CAAE1Q,IAAKnB,EAAM2I,QAV7B,QAWNwI,EAASD,GACTlR,EAAM8R,iBAAN,eAA2B9R,EAAMoR,eAAjC,CAAgDF,KAZ1C,wBAcNlR,EAAM8R,iBAAN,KAA2B9R,EAAMoR,gBAd3B,2BAAA5X,EAAA,MAgBJ0X,EAAMa,aAhBF,QAiBVb,EAAMc,2BAA0B,SAAOC,GAAP,SAAAzY,EAAAC,OAAA,oDACxBwY,EAAeC,cADS,kCAAA1Y,EAAA,MAElB0X,EAAMiB,eAFY,OAGxBpB,EAAY,GACZF,GAAa,GAJW,sBAMxBoB,EAAeG,eACXH,EAAeI,uBACnB,GAEAtB,EACIkB,EAAeG,eACXH,EAAeI,wBAZC,+DAgBhCxB,GAAa,GAjCH,kDAmCV7L,QAAQC,MAAR,MAnCU,kEA6Dd,UAII,cAAC,IAAD,CACIqD,QAAM,EACNd,KAAMoJ,EAAY,eAAiB,sBACnCN,KAAM,UACNvS,MAAO,SAEX,eAAC,IAASuD,QAAV,WACI,cAAC,IAASC,MAAV,UAAiBvB,EAAMuD,QACvB,cAAC,IAAS9B,SAAV,UAAoBzB,EAAM0E,OAC1B,cAAC,IAAD,CACIxI,MAAO,CAAEgG,eAAgB,IACzBgG,MAAO4I,EACPwB,QAAQ,cACRC,UAAW,CAAEC,SAAU,QAG/B,cAAC,IAAD,CACIC,SAAO,EACPhL,KAAM,GACNvL,MAAO,CAAEkC,gBAAiB,OAC1BoJ,KAAM,gBACN8I,KAAM,UACNvS,MAAO,MACPgD,QAAS,SAACyC,GACNxD,EAAM0S,SAAS1S,EAAM4F,YCrG1B3I,WAAWC,OAAO,CAC7B8E,KAAM,CACFE,eAAgB,GAChB3E,KAAM,EACNC,WAAY,UAEhBsD,eAAgB,CACZtC,MAAO,OAEXmU,aAAc,CACVvU,gBAAiB,OAErBwU,YAAa,CACTzW,WAAY,QAEhB0W,kBAAmB,CACf1T,cAAe,OAEnB2T,cAAe,CACXjV,iBAAkB,GAEtBkV,SAAU,CACN3U,gBAAiB,QACjBR,aAAc,GACdR,OAAQ,OACRoB,MAAO,QAEXwU,QAAS,CACLvV,aAAc,SACdJ,UAAW,IAEf4V,WAAY,CACRnV,UAAW,SACXC,MAAO,OACPV,UAAW,IAEf6V,QAAS,CACL1U,MAAO,OACPnB,UAAW,IAEf8V,QAAS,CACLjV,aAAc,GACdC,kBAAmB,GACnBiV,gBAAiB,GACjB5V,WAAY,UAEhB6V,aAAc,CACVlX,WAAY,OACZ2B,UAAW,SACXH,SAAU,GACVuE,eAAgB,IAEpBoR,mBAAoB,CAChBxV,UAAW,SACXoE,eAAgB,GAChB1D,MAAO,KAEX+U,aAAc,CACV5V,SAAU,GACVE,iBAAkB,MCjCX,SAAS0R,GAAWvP,GAC/B,MAAkCiG,qBAAlC,WAAOuN,EAAP,KAAkBC,EAAlB,KACA,EAA8BxN,mBAAS,IAAvC,WAAOyN,EAAP,KAAgBC,EAAhB,KACA,EAA0B1N,mBAAS,IAAnC,WAAO1C,EAAP,KAAcqQ,EAAd,KACA,EAA0C3N,mBAAS,IAAnD,WAAOmL,EAAP,KAAsBU,EAAtB,KACA,EAA0B7L,oBAAS,GAAnC,WAAO4N,EAAP,KAAcC,EAAd,KACA,EAAgC7N,mBAAS,GAAzC,WAAOyM,EAAP,KAAiBqB,EAAjB,KACA,EAAkC9N,oBAAS,GAA3C,WAAOmE,EAAP,KAAkBC,EAAlB,KACA,EAA0BpE,oBAAS,GAAnC,WAAO+N,EAAP,KAAcC,EAAd,KA8CA,SAAeC,IAAf,SAAA1a,EAAAC,OAAA,uDACIwa,GAAS,GADb,WAAAza,EAAA,MAEUga,EAAUW,sBAFpB,OAGIL,GAAS,GAHb,4DA5CA7I,qBAAU,WAINmJ,GAAQpU,EAAMuE,UAAUvK,MAAK,SAAC+K,GAC1B4O,EAAW5O,GACXsF,GAAa,MAIjB,IAUMgB,EAAcC,IAAYC,iBAC5B,qBAXe,WAQf,OAPIiI,GACAU,KAEa,MAAb9C,OAAA,EAAAA,EAAetX,QAAS,GACxBua,IAEJrU,EAAMsU,QAAQ,OACP,KAMX,OAAO,kBAAMjJ,EAAYG,YAC1B,CAACgI,EAAWpC,IAmCf,IAAMmD,EAAa,YlBrFhB,SAAgBC,EAAQta,GAAO,IAAD,EAIjC,OAH6B,KAAnB,MAANsa,GAAA,SAAAA,EAAQhN,WAAR,IAAc1N,UACd0a,EAAOhN,KAAOiN,GAAeva,GAAMwa,SAEhC9b,GAAGmB,YAAY,CAClByN,KAAMgN,EAAOhN,KACb9C,KAAM,IAAIiQ,KACVhM,KAAM6L,EAAO7L,KACbpE,SAAUiQ,EAAOjQ,YkB8EjB6P,CACI,CACI5M,KAAI,MAAEjE,OAAF,EAAEA,EAAOgC,OACboD,KAAM6K,EAAUoB,SAChBrQ,SAAUvE,EAAMuE,UAEpBvE,EAAM9F,MAELF,MAAK,SAAC6a,GACHf,GAAS,GACTF,EAAS,IACTH,GAAa,MAEhB3N,OAAM,SAAClM,GACJoL,QAAQe,IAAInM,OAKlBkb,EAAe,YlBpFlB,SAAmBvQ,EAAU3D,GAA7B,eAAApH,EAAAC,OAAA,kEAAAD,EAAA,MACgBZ,GACd4L,KAAK,CAAED,SAAUA,EAAUqB,IAAKhF,IAChC+D,MAAK,SAAC/K,EAAKoU,GACR,OAAOA,MAJZ,YACGjJ,EADH,0CAAAvL,EAAA,MAOOyN,KAAuBlC,EAAK,GAAG4D,OAPtC,gCASI/P,GAAGuX,YAAY,CAAEvK,IAAKhF,EAAI2D,SAAUA,KATxC,6DkBqFC6P,CAAQpU,EAAMuE,SAAUmO,GACnB1Y,MAAK,SAAC+K,GACHgP,EAAY,GACZK,GAAQpU,EAAMuE,UACTvK,MAAK,SAAC+K,GACH4O,EAAW5O,MAEde,OAAM,SAAClM,GACJoL,QAAQe,IAAInM,SAGvBkM,OAAM,SAAClM,GACJoL,QAAQe,IAAInM,OAKlBya,EAAoB,WACtBjD,EAAczE,KAAI,SAACC,EAAI7Q,GACnB6Q,EAAGuF,kBAKLb,EAAW,oBAAA9X,EAAAC,OAAA,gDACT2X,EAActX,OAAS,IACV,MAAbsX,KAAezE,KAAI,SAAOC,EAAI7Q,GAAX,SAAAvC,EAAAC,OAAA,kEAAAD,EAAA,MACToT,EAAGyE,aAAavL,OAAM,SAAClM,GACzBoL,QAAQe,IAAI,4BAFD,gEAFV,6DAUjB,OACI,eAAC7C,EAAA,EAAD,CAAMhH,MAAOkH,GAAOpB,KAApB,UAEI,eAAC,IAAD,CACI+S,QAASlB,EACTmB,aAAc5R,GAAO+P,QACrB8B,gBAAiB,kBAAMV,KACvBW,eAAgBC,KAJpB,UAMI,cAAC,IAAD,CAAMjZ,MAAOkH,GAAOiQ,aAApB,SACKoB,GAAezU,EAAM9F,MAAM6J,cAEhC,cAAC,IAAD,CAAM7H,MAAOkH,GAAOiQ,aAApB,SACKoB,GAAezU,EAAM9F,MAAM8J,qBAEhC,cAAC,IAAD,CACI0D,YAAa+M,GAAezU,EAAM9F,MAAMgK,YACxCyD,SACI,cAAC,IAAD,CACIH,KAAK,eACLC,KAAM,GACN1J,MAAM,OACNuS,KAAK,YAGb1I,MAAO6M,GAAezU,EAAM9F,MAAMqH,MAClCwG,UAAW,GACXE,WAAY7E,GAAOmQ,aACnBrL,MAAO3E,EACP4E,aAAc,SAAC3E,GACXoQ,EAASpQ,MAGjB,eAACN,EAAA,EAAD,CAAMhH,MAAO,CAAEiD,cAAe,OAA9B,UACI,cAAC,IAAD,CACIoE,MAAOkR,GAAezU,EAAM9F,MAAM+J,OAClCqD,YAAa,CAAElJ,gBAAiB,OAChC0C,eAAgB,CAAE+M,YAAa,IAC/B9M,QAASwT,IAEb,cAAC,IAAD,CACIhR,MAAOkR,GAAezU,EAAM9F,MAAMW,KAClCyM,YAAa,CAAEnL,WAAY,QAC3B4E,QAASwT,UAMrB,eAAC,IAAD,CACIQ,QAAsB,IAAbrC,EACTsC,aAAc5R,GAAO+P,QACrB+B,eAAgBC,KAHpB,UAKI,cAAC,IAAD,CAAMjZ,MAAOkH,GAAOiQ,aAApB,SACKoB,GAAezU,EAAM9F,MAAMiK,cAEhC,cAAC,IAAD,CAAMjI,MAAOkH,GAAOkQ,mBAApB,SACKmB,GAAezU,EAAM9F,MAAMkK,kBAEhC,eAAClB,EAAA,EAAD,CAAMhH,MAAO,CAAEiD,cAAe,OAA9B,UACI,cAAC,IAAD,CACIoE,MAAOkR,GAAezU,EAAM9F,MAAM+J,OAClCqD,YAAa,CAAEnL,WAAY,QAC3B2E,eAAgB,CAAE+M,YAAa,IAC/B9M,QAAS,SAACyC,GACNuQ,EAAY,MAGpB,cAAC,IAAD,CACIxQ,MAAOkR,GAAezU,EAAM9F,MAAMwF,OAClC4H,YAAa,CAAElJ,gBAAiB,OAChC2C,QAAS,SAACyC,GACNsR,aAMftB,EAEG,eAACtQ,EAAA,EAAD,CAAMhH,MAAOkH,GAAOyP,kBAApB,UACI,cAAC,IAAD,CACItP,MACIyQ,EACMS,GAAezU,EAAM9F,MAAM2J,SAC3B4Q,GAAezU,EAAM9F,MAAMyJ,MAErC7C,eAAgBsC,GAAO0P,cACvBvL,KAAM,CACFC,KAAMwM,EACA,sBACA,uBACN1D,KAAM,UACN7I,KAAM,GACN1J,MAAO,SAEXgD,QAASiT,EA7J7B,oBAAAxa,EAAAC,OAAA,uDACIwa,GAAS,GADb,WAAAza,EAAA,MAEUga,EAAU4B,cAFpB,6DALA,oBAAA5b,EAAAC,OAAA,uDACIwa,GAAS,GADb,WAAAza,EAAA,MAEUga,EAAUnC,cAFpB,+DAqKgB,cAAC,IAAD,CACI9N,MAAOkR,GAAezU,EAAM9F,MAAM0J,KAClC9C,eAAgBsC,GAAO0P,cACvBvL,KAAM,CACFC,KAAM,sBACN8I,KAAM,UACN7I,KAAM,GACN1J,MAAO,SAEXgD,QAASmT,OAKjB,cAAC,IAAD,CACIpT,eAAgBsC,GAAOtC,eACvByG,KAAM,CACFC,KAAM,aACN8I,KAAM,UACN7I,KAAM,GACN1J,MAAO,SAEXuJ,YAAalE,GAAOuP,aACpBpP,MAAOkR,GAAezU,EAAM9F,MAAMwJ,MAClC2D,WAAYjE,GAAOwP,YACnB7R,QArNhB,4BAAAvH,EAAAC,OAAA,2EAAAD,EAAA,MAEcwX,KAAMqE,2BAFpB,yBAAA7b,EAAA,MAGcwX,KAAMO,kBAAkB,CAC1B+D,oBAAoB,EACpBC,sBAAsB,EACtB/D,yBAAyB,KANrC,yBAAAhY,EAAA,MAQoCwX,KAAMwE,UAAUC,YACxCzE,KAAM0E,wCATlB,gBAQgBlC,EARhB,EAQgBA,UAGRC,EAAaD,GAXrB,kDAaQxO,QAAQC,MAAM,4BAAd,MAbR,oEAwNQ,cAAC,IAAD,CAAS/I,MAAOkH,GAAO8P,QAAS1U,MAAO,IACvC,cAACyN,EAAA,EAAD,CAAc/P,MAAOkH,GAAO2P,SAA5B,SACI,cAACtG,EAAA,EAAD,UACKrC,EACG,cAAC0B,EAAA,EAAD,CACI/N,MAAO,OACP0J,KAAM,QACNvL,MAAOkH,GAAO4P,UAElBU,EAAQ5Z,OAAS,EACjB4Z,EAAQ/G,KAAI,SAACC,EAAI7Q,GACb,OACI,cAAC,GAAD,CACIuV,SAAUA,EACVF,cAAeA,EACfU,iBAAkBA,EAClBY,SAAUqB,EACVvT,MAAOzE,EAEPwH,MAAOqJ,EAAGpF,KACV5B,IAAKgH,EAAGhH,IACRlB,KAASkI,EAAGlI,KAAKiR,mBACb,SADA,IAEC/I,EAAGlI,KAAKkR,mBAAmB,SAChCjN,KAAMiE,EAAGjE,MANJiE,EAAGhH,QAWpB,cAAC,IAAD,CAAM1J,MAAOkH,GAAO6P,WAApB,SACKwB,GAAezU,EAAM9F,MAAMmK,oBCrTxD,IAAM9I,GAAiB,SAACC,EAAMqa,GAC1B,IAAI9X,EAAQ,UACA,QAAR8X,EACA9X,EAAQ,UACO,UAAR8X,IACP9X,EAAQ,WAEZ,IAAItC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQ4B,MAAOA,GAAlD,SACKlC,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLxB,GAAO,CAChBC,GAAI,CACA2b,KAAM,QACNC,KAAM,OACNC,MAAO,SACP7a,WAAY,2BACZ8a,SACI,gHACJC,UAAW,SAACC,GACR,OAAO5a,GAAe,CAClBI,SAAU,sBACVE,SAAU,CAACsa,MAGnBC,WAAY,SAACC,GACT,OAAO9a,GAAe,CAClBI,SAAU,8BACVE,SAAU,CAACwa,MAGnBC,SAAU,WACN,OAAO/a,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,qBAGnB0a,SAAU,WACN,OAAOhb,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,gCAGnB2a,OAAQ,WACJ,OAAOjb,GACH,CACII,SAAU,MACVE,SAAU,CAAC,kBAEf,QAGR4a,QAAS,WACL,OAAOlb,GACH,CACII,SAAU,MACVE,SAAU,CAAC,oBAEf,UAGR6a,MAAO,SAACC,GACJ,OAAOpb,GACH,CACII,SAAU,2BACVE,SAAU,CAAC8a,IAEf,QAGRC,eAAgB,SAAC9R,GACb,OAAOvJ,GAAe,CAClBI,SAAU,oDACVE,SAAU,CAACiJ,MAGnB+R,SAAU,SAACC,EAAOC,GACd,OAAOxb,GAAe,CAClBI,SAAS,6BAAwBob,EAAzB,SACRlb,SAAU,CAACib,MAGnBE,gBAAiB,sBACjBC,MAAO,aACPC,eACI,yFACJC,MAAO,cACPC,KAAM,mBACNC,OAAQ,aACR3T,MAAO,uBACPO,OAAQ,UACRqT,WAAY,6BAEhBhc,GAAI,CACAwa,KAAM,OACNC,KAAM,OACNC,MAAO,UACP7a,WAAY,gBACZ8a,SACI,qGACJC,UAAW,SAACC,GACR,OAAO5a,GAAe,CAClBI,SAAU,kBACVE,SAAU,CAACsa,MAGnBC,WAAY,SAACC,GACT,OAAO9a,GAAe,CAClBI,SAAU,wBACVE,SAAU,CAACwa,MAGnBC,SAAU,WACN,OAAO/a,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,iBAGnB0a,SAAU,WACN,OAAOhb,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,wBAGnB2a,OAAQ,WACJ,OAAOjb,GACH,CACII,SAAU,MACVE,SAAU,CAAC,gBAEf,QAGR6a,MAAO,SAACC,GACJ,OAAOpb,GACH,CACII,SAAU,uBACVE,SAAU,CAAC8a,IAEf,QAGRF,QAAS,WACL,OAAOlb,GACH,CACII,SAAU,MACVE,SAAU,CAAC,gBAEf,UAGR+a,eAAgB,SAAC9R,GACb,OAAOvJ,GAAe,CAClBI,SAAU,qCACVE,SAAU,CAACiJ,MAGnB+R,SAAU,SAACC,EAAOC,GACd,OAAOxb,GAAe,CAClBI,SAAS,aAAcob,EAAf,SACRlb,SAAU,CAACib,MAGnBE,gBAAiB,oBACjBC,MAAO,YACPC,eACI,6DACJC,MAAO,QACPC,KAAM,OACNC,OAAQ,UACR3T,MAAO,eACPO,OAAQ,SACRqT,WAAY,wB,qBCtLLra,OAAWC,OAAO,CAC7B8E,KAAM,CACFE,eAAgB,GAChB3E,KAAM,EACNC,WAAY,UAEhB+Z,KAAM,CACF/Y,MAAO,GACPpB,OAAQ,GACR8E,eAAgB,GAChBiM,QAAS,GACTvQ,aAAc,IAElBgB,OAAQ,CACJJ,MAAO,IACPZ,aAAc,GACdM,aAAc,GACdL,iBAAkB,GAEtB2Z,YAAa,CACThZ,MAAO,IACPnB,UAAW,GACXe,gBAAiB,MACjBF,aAAc,GACdL,iBAAkB,GAEtB4Z,YAAa,CACTla,KAAM,EACNiB,MAAO,GACPpB,OAAQ,IACRc,aAAc,GACdiQ,QAAS,IAEbuJ,gBAAiB,CACb7Y,WAAY,GACZgP,YAAa,IAEjB8J,WAAY,CACRC,oBAAqB,GACrBxZ,gBAAiB,WAErByZ,SAAU,CACNhK,YAAa,GACbiK,qBAAsB,GACtB1Z,gBAAiB,WAErB2Z,YAAa,CACTlZ,WAAY,GACZgP,YAAa,GACbmK,uBAAwB,GACxB5Z,gBAAiB,WAErB6Z,UAAW,CACPpK,YAAa,GACbqK,sBAAuB,GACvB9Z,gBAAiB,WAErB+Z,cAAe,CACXhK,QAAS,EACTlQ,YAAa,UACb6P,YAAa,GAEjBkH,aAAc,CACV/V,QAAS,GACTf,aAAc,GACdd,OAAQ,IACRK,aAAc,SACdD,WAAY,UAEhB4a,cAAe,CACXza,SAAU,GACVxB,WAAY,QAEhBkc,YAAa,CACT7Z,MAAO,IACPb,SAAU,GACVC,aAAc,GACdE,UAAW,YCrEJ,SAASwa,GAAKtY,GACzB,OACI,qCACI,cAAC8C,EAAA,EAAD,CAAO7B,OAAQsX,KAAWrc,MAAOkH,GAAOmU,OACxC,cAAC,IAAD,CACIhU,MAAOiV,GAAUxY,EAAM9F,MAAM4b,KAC7BhV,eAAgBsC,GAAOxE,OACvB0J,QAAM,EACNvH,QAAS,SAACyC,GAAD,OAAOxD,EAAMyY,OAAO,IAC7BlR,KACI,cAAC,IAAD,CACIC,KAAM,eACN8I,KAAM,UACNvS,MAAO,QACP0J,KAAM,GACNvL,MAAO,CAAE2B,iBAAkB,OAIvC,cAAC,IAAD,CACI0F,MAAOiV,GAAUxY,EAAM9F,MAAM6b,KAC7BjV,eAAgBsC,GAAOxE,OACvB0J,QAAM,EACNvH,QAAS,SAACyC,GAAD,OAAOxD,EAAMyY,OAAO,IAC7BlR,KACI,cAAC,IAAD,CACIC,KAAM,sBACN8I,KAAM,UACNvS,MAAO,QACP0J,KAAM,GACNvL,MAAO,CAAE2B,iBAAkB,OAIvC,cAAC,IAAD,CACI0F,MAAOiV,GAAUxY,EAAM9F,MAAM8b,MAC7B1O,YAAa,CAAElJ,gBAAiB,OAChC0C,eAAgBsC,GAAOoU,YACvBlP,QAAM,EACNvH,QAAS,kBAAMf,EAAMsU,QAAQ,OAC7B/M,KACI,cAAC,IAAD,CACIC,KAAM,qBACN8I,KAAM,UACNvS,MAAO,QACP0J,KAAM,GACNvL,MAAO,CAAE2B,iBAAkB,U,mCCxCpC,SAAS6a,GAAK1Y,GACzB,MAA0BiG,oBAAS,GAAnC,WAAO0S,EAAP,KAAcC,EAAd,KACA,EAA4B3S,oBAAS,GAArC,WAAO4S,EAAP,KAAeC,EAAf,KACA,EAA8B7S,oBAAS,GAAvC,WAAO8S,EAAP,KAAgBC,EAAhB,KACA,EAA8B/S,oBAAS,GAAvC,WAAO+M,EAAP,KAAgBiG,EAAhB,KACA,EAA0BhT,mBAAS,GAAnC,WAAO0Q,EAAP,KAAcuC,EAAd,KACA,EAA0BjT,mBAAS,CAACkT,KAAKC,MAAsB,EAAhBD,KAAKE,YAApD,WAAOvC,EAAP,KAAcwC,EAAd,KACA,EAA8BrT,oBAAS,GAAvC,WAAOP,EAAP,KAAgByD,EAAhB,KACA,EAA0ClD,oBAAU,GAApD,WAAOsT,EAAP,KAAsBC,EAAtB,KACA,EAAkCvT,mBAAS,GAA3C,WAAOkQ,EAAP,KAAkBsD,EAAlB,KACA,EAAoCxT,mBAAS,GAA7C,WAAOoQ,EAAP,KAAmBqD,EAAnB,KACA,EAA8BzT,oBAAS,GAAvC,WAAO0T,EAAP,KAAgBC,EAAhB,KACA,GAAgC3T,oBAAS,GAAzC,aAAO4T,GAAP,MAAiBC,GAAjB,MACA,GAAwB7T,mBAAS,IAAI8T,MAAM,IAA3C,aAAOhD,GAAP,MAAaiD,GAAb,MAEA,GAAsC/T,oBAAS,GAA/C,aAAOgU,GAAP,MAAoBC,GAApB,MAEMzX,GAAe5J,EAAQ,KACvBshB,IAAc,IAAIxF,MAAOgB,mBAAmB,SAElD1K,qBAAU,0BAAAzR,EAAAC,OAAA,oDAEQ,IAAVkf,EAFE,gBAGFM,GAAW,IrB7BM1U,EqB8BAvE,EAAMuE,SrB7BxB3L,GACF4L,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEK,OAAQ,IACfH,MAAK,SAAC/K,EAAKmL,GAIR,OAHInL,GACAoL,QAAQC,MAAMrL,GAEXmL,MqBsB0B/K,MAAK,SAAC+K,GAC/BA,EAAKjL,OAAS,GACd2f,EAAa1U,EAAK,GAAGD,UAG7BsP,GAAgBpU,EAAMuE,SAAU4V,IAAangB,MAAK,SAAC+K,GAC3CA,EAAKjL,OAAS,GACd4f,EAAc3U,EAAK,GAAGD,UAG9BmU,GAAW,GAdT,uBAgBFW,GAAW,GACXZ,GAAW,GAIFjd,EAAI,EArBX,aAqBcA,EAAI+a,EAAMhd,QArBxB,oBAsBO4L,EAtBP,oCAAAlM,EAAA,MAuBY4gB,GAAetD,EAAM/a,KAvBjC,QAqBgCA,IArBhC,wBA0BFid,GAAW,GA1BT,kCrB1BP,IAAsBzU,IqB0Bf,0BA4BP,CAACoU,EAAO7B,IAEX,IAAMuD,GAAe,WACjB,OAAOlB,KAAKC,MAAsB,EAAhBD,KAAKE,WAGrBiB,GAAmB,SAACzO,GACtB,OAAQA,GACJ,KAAK,EACD,OAAOhT,EAAQ,KACnB,KAAK,EACD,OAAOA,EAAQ,KACnB,KAAK,EACD,OAAOA,EAAQ,KACnB,KAAK,EACD,OAAOA,EAAQ,OAMrBuhB,GAAiB,SAAOvO,GAAP,SAAArS,EAAAC,OAAA,yEAEZ,IAAI8gB,SAAQ,SAAOC,EAASC,GAAhB,iBAAAjhB,EAAAC,OAAA,kEAAAD,EAAA,MACSwX,KAAMC,MAAMwE,YAChC6E,GAAiBzO,KAFN,uBACPqF,EADO,EACPA,MAGRlR,EAAMmR,SAASD,GACfsI,EAAiB3N,GALF,WAAArS,EAAA,MAMT0X,EAAMa,YAAY/X,MAAK,SAAO0gB,GAAP,SAAAlhB,EAAAC,OAAA,gDACzB+S,YAAW,oBAAAhT,EAAAC,OAAA,uDACP+f,GAAkB,GADX,WAAAhgB,EAAA,MAED0X,EAAMiB,eAFL,OAGPqI,GAAQ,GAHD,8DAIRE,EAAerI,uBAAyB,KALlB,gEANd,gEAFA,6DA4BjBsI,GAAa,SAAO9O,GAAP,qBAAArS,EAAAC,OAAA,mDACVsf,EADU,sDAIXhC,GAAKjd,QAAUgd,EAAMhd,QAJV,sDAOX+R,GAAO,GAAKA,GAAO,GAPR,qBAQP+O,EAAa7D,IACN8D,KAAKhP,GAChBmO,GAAQY,IAEJ1J,EAZO,oCAAA1X,EAAA,MAaD0X,EAAMiB,eAbL,eAeXqH,EAAiB3N,GAfN,YAAArS,EAAA,MAgBawX,KAAMC,MAAMwE,YAChC6E,GAAiBzO,KAjBV,wBAgBHqF,EAhBG,EAgBHA,MAGRlR,EAAMmR,SAASD,GAnBJ,YAAA1X,EAAA,MAqBM0X,EAAMa,YAAY/X,MAAK,SAAC+K,GACrC,OAAOA,EAAKsN,2BAtBL,WAqBPyI,EArBO,OA2BXtO,YAAW,oBAAAhT,EAAAC,OAAA,kEAAAD,EAAA,MACD0X,EAAMiB,eADL,OAEPqH,GAAkB,GAFX,8DAGRsB,EAAO,KACN/D,GAAKA,GAAKjd,OAAS,KAAOgd,EAAMC,GAAKjd,OAAS,GA/BvC,oCAAAN,EAAA,MAgCDuhB,GAAUD,IAhCT,mCAiCA/D,GAAKjd,SAAWgd,EAAMhd,OAjCtB,oCAAAN,EAAA,MAkCDwhB,GAAaF,EAAM5J,IAlClB,8DAuCb6J,GAAY,SAAOD,GAAP,SAAAthB,EAAAC,OAAA,gDACdqf,GAAU,GACVkB,GAAQ,IACRhB,GAAW,GACXE,EAASvC,EAAQ,GACbA,EAAQ,EACRnK,YAAW,0BAAAhT,EAAAC,OAAA,gDACEsC,EAAI,EADN,YACSA,EAAI+a,EAAMhd,QADnB,kCAAAN,EAAA,MAEG4gB,GAAetD,EAAM/a,KAFxB,OAC2BA,IAD3B,sBAIPid,GAAW,GACXF,GAAU,GALH,8DAMRgC,EAAO,KAEVG,KAdU,6DAkBZA,GAAe,oBAAAzhB,EAAAC,OAAA,uDACjBuG,EAAM8T,UAAS,GADE,WAAAta,EAAA,OrB5HG+K,EqB8HEvE,EAAMuE,SrB9HEO,EqB8HQgS,EAAMhd,OAAS,ErB9HhB4K,EqB8HmByV,GrB7HrDvhB,GAAGmB,YAAY,CAClBwK,SAAUA,EACVG,KAAMA,EACNI,MAAOA,MqBwHU,OAGjBkU,GAAW,GACX7P,GAAW,GACPkN,EAAaS,EAAMhd,OAAS,EAC5BogB,IAAe,GAEfA,IAAe,GARF,iCrB5HlB,IAAqB3V,EAAUO,EAAOJ,IqB4HpB,yBAYfsW,GAAe,SAAOF,EAAM5J,GAAb,SAAA1X,EAAAC,OAAA,gDACjBmgB,GAAW,GACXZ,GAAW,GACXxM,YAAW,oBAAAhT,EAAAC,OAAA,kEAAAD,EAAA,MACD0X,EAAMiB,eADL,OAEPmH,EAAS,GAAD,YAAKxC,GAAL,CAAYuD,QAFb,8DAGRS,EAAO,KACVd,GAAQ,IAPS,6DA0DrB,OACI,qCACKH,GACG,cAAC,KAAD,CACIqB,SAAS,EACTC,WAAW,EACXC,UAAW,IACXC,MAAO,GACPC,OAAQ,CAAEC,GAAI,GAAIC,GAAI,MAG1B,6BAIH9V,EACG,eAAC,IAAD,CACIqP,QAASrP,EACTsP,aAAc5R,GAAO4R,aACrBC,gBAAiB,kBAAM9L,GAAW,IAClC+L,eAAgBC,KAJpB,UAMK8E,IArERJ,IACDC,IAAY,GAGZ,qCACI,cAAC,IAAD,CAAM5d,MAAOkH,GAAOgV,cAApB,SACKI,GAAUxY,EAAM9F,MAAM8c,kBAE3B,cAAC,IAAD,CAAM9a,MAAOkH,GAAOiV,YAApB,SACKG,GAAUxY,EAAM9F,MAAM0c,eAAeE,EAAMhd,OAAS,KAEzD,cAAC,EAAD,CACI2I,aAAcA,GACdM,YAAa0Y,KACbC,UAAU,EACVhZ,MAAM,EACNF,YAAa,CAAEpF,OAAQ,IACvB4F,WAAY,CAAE5F,OAAQ,UAO9B4V,EACO,cAAClH,EAAA,EAAD,IAGP,qCACI,cAAC,IAAD,CAAM5P,MAAOkH,GAAOgV,cAApB,SACKI,GAAUxY,EAAM9F,MAAM+c,QAE3B,cAAC,IAAD,CAAM/a,MAAOkH,GAAOiV,YAApB,SACKG,GAAUxY,EAAM9F,MAAMgd,oBAqCvB,eAAChU,EAAA,EAAD,CAAMhH,MAAO,CAAEiD,cAAe,MAAO9B,UAAW,IAAhD,UACI,cAAC,IAAD,CACIiL,QAAM,EACNvH,QAAS,WAjC7B+Y,IAAY,GACZ3Q,GAAW,GACX2P,GAAU,GACVI,EAAS,GACTI,EAAS,CAACe,QAgCU9W,MAAOiV,GAAUxY,EAAM9F,MAAMid,MAC7BrW,eAAgB,CACZ5C,aAAc,GACd2P,YAAa,MAGrB,cAAC,IAAD,CACIvF,QAAM,EACNvH,QAAS,WACLf,EAAMyY,OAAO,IAEjBlV,MAAOiV,GAAUxY,EAAM9F,MAAMkd,KAC7BtW,eAAgB,CAAE5C,aAAc,IAChCoJ,YAAa,CAAElJ,gBAAiB,eAK5C,6BAIJ,eAAC,IAAD,CACI2W,QAAS/U,EAAM6T,MACfmB,aAAc5R,GAAO4R,aACrBC,gBAAiB,kBAAMjV,EAAM8T,UAAS,IACtCoB,eAAgBC,KAJpB,UAMI,cAAC,IAAD,CAAMjZ,MAAOkH,GAAOgV,cAApB,SACKI,GAAUxY,EAAM9F,MAAMiB,aAE3B,cAAC,IAAD,CAAMe,MAAOkH,GAAOiV,YAApB,SACKG,GAAUxY,EAAM9F,MAAM+b,WAE3B,eAAC/S,EAAA,EAAD,CAAMhH,MAAO,CAAEiD,cAAe,MAAO9B,UAAW,IAAhD,UACI,cAAC,IAAD,CACIiL,QAAM,EACNvH,QAAS,WACLf,EAAM8T,UAAS,IAEnBvQ,MAAOiV,GAAUxY,EAAM9F,MAAM+J,OAC7BnD,eAAgB,CAAE5C,aAAc,GAAI2P,YAAa,MAErD,cAAC,IAAD,CACIvF,QAAM,EACNvH,QAAS,WACLka,MAEJ1X,MAAOiV,GAAUxY,EAAM9F,MAAMod,WAC7BxW,eAAgB,CAAE5C,aAAc,IAChCoJ,YAAa,CAAElJ,gBAAiB,eAM5C,eAAC8E,EAAA,EAAD,CAAMhH,MAAO,CAAEiD,cAAe,MAAOvB,aAAc,IAAnD,UACI,cAACsF,EAAA,EAAD,CACIhH,MAAO,CACHkH,GAAOqU,YACPrU,GAAOsU,gBACPtU,GAAOuU,WACW,IAAlB4B,EAAsBnW,GAAO+U,cAAgB,IAEjDwD,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMjB,GAAW,MAEvC,cAACzX,EAAA,EAAD,CACIhH,MAAO,CACHkH,GAAOqU,YACPrU,GAAOyU,SACW,IAAlB0B,EAAsBnW,GAAO+U,cAAgB,IAEjDwD,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMjB,GAAW,SAK3C,eAACzX,EAAA,EAAD,CAAMhH,MAAO,CAAEiD,cAAe,OAA9B,UACI,cAAC+D,EAAA,EAAD,CACIhH,MAAO,CACHkH,GAAOqU,YACPrU,GAAOsU,gBACPtU,GAAO2U,YACW,IAAlBwB,EAAsBnW,GAAO+U,cAAgB,IAEjDwD,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMjB,GAAW,MAEvC,cAACzX,EAAA,EAAD,CACIhH,MAAO,CACHkH,GAAOqU,YACPrU,GAAO6U,UACW,IAAlBsB,EAAsBnW,GAAO+U,cAAgB,IAEjDwD,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMjB,GAAW,SAI3C,eAACzX,EAAA,EAAD,CAAMhH,MAAO,CAAEmB,UAAW,IAA1B,UACI,cAAC,IAAD,CAAMnB,MAAO,CAAE4B,UAAW,UAA1B,SACK0a,GAAUxY,EAAM9F,MAAMgc,UAAUC,KAErC,cAAC,IAAD,CAAMja,MAAO,CAAE4B,UAAW,UAA1B,SACK0a,GAAUxY,EAAM9F,MAAMkc,WAAWC,KAEtC,cAAC,IAAD,CAAMna,MAAO,CAAE4B,UAAW,SAAUF,aAAc,IAAlD,SACK4a,GAAUxY,EAAM9F,MAAMwc,MAAMC,KAEhCgC,EACG,eAACzV,EAAA,EAAD,CACIhH,MAAO,CAAEuB,aAAc,SAAUD,WAAY,UADjD,UAGI,cAAC,IAAD,CAAMtB,MAAO,CAAE4B,UAAW,SAAUH,SAAU,IAA9C,SACKob,GAAWF,EAzR5BA,EACOL,GAAUxY,EAAM9F,MAAMsc,SACtBmD,EACAnB,GAAUxY,EAAM9F,MAAMuc,UAEtB+B,GAAUxY,EAAM9F,MAAMoc,WAsRPkC,GAAUxY,EAAM9F,MAAMqc,aAEhC,cAAC,IAAD,CAAMra,MAAO,CAAE4B,UAAW,UAA1B,SACK0a,GAAUxY,EAAM9F,MAAM2c,SACnBC,EAAMhd,OACNid,GAAKjd,UAGb,cAAC,IAAD,CACI+hB,UAAW9C,EACXhY,QAAS,kBAAMf,EAAM8T,UAAS,IAC9BxM,YAAa,CAAElJ,gBAAiB,OAChC0C,eAAgB,CACZzD,UAAW,GACXmB,MAAO,IACPN,aAAc,IAElBoK,QAAM,EACN/E,MAAOiV,GAAUxY,EAAM9F,MAAMmd,YAIrC,mCACI,eAACnU,EAAA,EAAD,CACI/D,cAAe,MACfjD,MAAO,CACHuB,aAAc,SACdD,WAAY,UAJpB,UAOI,cAAC,IAAD,CACI8J,YAAa,CACTuG,YAAa,GACb3P,aAAc,IAElBqF,MAAOiV,GAAUxY,EAAM9F,MAAMwJ,MAC7B3C,QAAS,kBAAM6X,GAAS,MAE5B,cAAC,IAAD,CACItR,YAAa,CACTpJ,aAAc,GACdE,gBAAiB,OAErBmF,MAAOiV,GAAUxY,EAAM9F,MAAM8b,MAC7BjV,QAAS,kBAAMf,EAAMyY,OAAO,iBCna7C,SAASpJ,GAAMrP,GAC1B,MAAsBiG,mBAAS,GAA/B,WAAO6V,EAAP,KAAYrD,EAAZ,KACA,EAA0BxS,mBAAS,IAAI+K,KAAMC,OAA7C,WAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BlL,oBAAS,GAAnC,WAAO4N,EAAP,KAAcC,EAAd,KAEA7I,qBAAU,WAGN,IAeMI,EAAcC,IAAYC,iBAC5B,qBAhBe,WAaf,OAZI2F,GACAA,EAAMiB,cAEN2J,EAAM,EACM,IAARA,EACArD,EAAO,GAEP3E,GAAS,GAGb9T,EAAMsU,QAAQ,OAEX,KAMX,OAAO,WACHjJ,EAAYG,YAEjB,CAACsQ,IA8BJ,OACI,mCACI,cAAC5Y,EAAA,EAAD,CAAMhH,MAAOkH,GAAOpB,KAApB,SA7BQ,IAAR8Z,EAEI,cAACxD,GAAD,CACIG,OAAQA,EACRve,KAAM8F,EAAM9F,KACZoa,QAAStU,EAAMsU,UAGR,IAARwH,EAEH,cAACpD,GAAD,CACID,OAAQA,EACRve,KAAM8F,EAAM9F,KACZqK,SAAUvE,EAAMuE,SAChB2M,MAAOA,EACPC,SAAUA,EACV0C,MAAOA,EACPC,SAAUA,IAGH,IAARgI,EACA,cAAC,IAAD,2BAEA,cAAC,IAAD,8BClEnB,IAqBa5hB,GAAO,CAChBC,GAAI,CACA2b,KAAM,QACN5S,KAAM,iBACN6Y,OAAQ,oBACRhG,KAAM,uBACNC,MAAO,SACP3R,WAAY,sCACZ2X,gBAAiB,uBACjBC,YAAa,uBACbC,SAAU,2BAEd5gB,GAAI,CACAwa,KAAM,OACN5S,KAAM,aACN6Y,OAAQ,iBACRhG,KAAM,oBACNC,MAAO,QACP3R,WAAY,iCACZ2X,gBAAiB,gBACjBC,YAAa,iBACbC,SAAU,gC,qBC1CHjf,OAAWC,OAAO,CAC7B8E,KAAM,CACFE,eAAgB,GAChB3E,KAAM,EACNC,WAAY,UAEhB+Z,KAAM,CACF/Y,MAAO,GACPpB,OAAQ,GACR8E,eAAgB,GAChBiM,QAAS,GACTvQ,aAAc,IAElBgB,OAAQ,CACJJ,MAAO,IACPZ,aAAc,GACdM,aAAc,GACdL,iBAAkB,GAEtB2Z,YAAa,CACThZ,MAAO,IACPnB,UAAW,GACXe,gBAAiB,MACjBF,aAAc,GACdL,iBAAkB,GAEtBse,aAAc,CACV3d,MAAO,IACPN,aAAc,IAElB6U,SAAU,CACN3U,gBAAiB,QACjBf,UAAW,EACXO,aAAc,GACdR,OAAQ,OACRoB,MAAO,QAEXyU,WAAY,CACRnV,UAAW,SACXC,MAAO,OACPV,UAAW,IAEf2V,QAAS,CACL3V,UAAW,MCnCJ,SAASib,GAAKtY,GAAQ,IAAD,EAChC,OACI,qCACI,cAAC8C,EAAA,EAAD,CAAO7B,OAAQmb,KAAWlgB,MAAOkH,GAAOmU,QAEvC,SAAAvX,EAAMqc,YAAN,IAAaviB,QAAS,EACnB,cAAC,IAAD,CACIyJ,MAAO+Y,GAAUtc,EAAM9F,MAAM4b,KAC7BhV,eAAgBsC,GAAOxE,OACvB0J,QAAM,EACNvH,QAAS,SAACyC,GAAD,OAAOxD,EAAMyY,OAAO,IAC7BlR,KACI,cAAC,IAAD,CACIC,KAAM,eACN8I,KAAM,UACNvS,MAAO,QACP0J,KAAM,GACNvL,MAAO,CAAE2B,iBAAkB,OAKvC,6BAGJ,cAAC,IAAD,CACI0F,MAAO+Y,GAAUtc,EAAM9F,MAAMgJ,KAC7BpC,eAAgBsC,GAAOxE,OACvB0J,QAAM,EACNvH,QAAS,SAACyC,GAAD,OAAOxD,EAAMyY,OAAO,IAC7BlR,KACI,cAAC,IAAD,CACIC,KAAM,eACN8I,KAAM,UACNvS,MAAO,QACP0J,KAAM,GACNvL,MAAO,CAAE2B,iBAAkB,OAKvC,cAAC,IAAD,CACI0F,MAAO+Y,GAAUtc,EAAM9F,MAAM6b,KAC7BjV,eAAgBsC,GAAOxE,OACvB0J,QAAM,EACNvH,QAAS,SAACyC,GAAD,OAAOxD,EAAMyY,OAAO,IAC7BlR,KACI,cAAC,IAAD,CACIC,KAAM,sBACN8I,KAAM,UACNvS,MAAO,QACP0J,KAAM,GACNvL,MAAO,CAAE2B,iBAAkB,OAKvC,cAAC,IAAD,CACI0F,MAAO+Y,GAAUtc,EAAM9F,MAAM8b,MAC7B1O,YAAa,CAAElJ,gBAAiB,OAChC0C,eAAgBsC,GAAOoU,YACvBlP,QAAM,EACNvH,QAAS,kBAAMf,EAAMsU,QAAQ,OAC7B/M,KACI,cAAC,IAAD,CACIC,KAAM,qBACN8I,KAAM,UACNvS,MAAO,QACP0J,KAAM,GACNvL,MAAO,CAAE2B,iBAAkB,U,qkBC1EpC,SAAS0e,GAAUvc,GAAQ,IAAD,IACjCG,EACgB,QAAhBC,IAASC,GACHxH,EAAQ,KAAgCyH,QACxC,KACNC,EACAP,EAAMQ,MAAQ,IAAM,EACd,CAAEpC,gBAAiB,SACnB,CAAEA,gBAAiB,WACzBqC,EACgB,QAAhBL,IAASC,GACH,CACIK,UAAWP,EACXQ,IAAKX,EAAM4F,IACX/E,eAAe,EACfC,eAAgBP,GAEpB,CAAEI,IAAKX,EAAM4F,IAAK/E,eAAe,EAAMC,eAAgBP,GACjE,OACI,eAAC,IAAD,SAAcE,GAAd,cACI,eAAC,IAASa,QAAV,WACI,cAAC,IAASC,MAAV,UAAiBvB,EAAMwH,OACvB,eAAC,IAAS/F,SAAV,YACK,SAAAzB,EAAMqc,QAAN,WAAavX,YAAb,IAAoBhL,SAAU,EAAG,IACjCwiB,GAAUtc,EAAM9F,MAAM8hB,sBAG/B,cAAC,IAAD,CACIvJ,SAAO,EACPhL,KAAM,GACNvL,MAAO,CAAEkC,gBAAiB,OAC1BoJ,KAAM,gBACN8I,KAAM,UACNvS,MAAO,MACPgD,QAAS,SAACyC,GACNxD,EAAM0S,SAAS1S,EAAM4F,YCrCzC,IAAM4W,GAAY3jB,EAAQ,KAEbD,GAAK,IAAI4jB,GAAU,CAC5B1jB,SAAU,cACVC,QAASC,IACTC,UAAU,IAEDwjB,GAAY,IAAID,GAAU,CACnC1jB,SAAU,qBACVC,QAASC,IACTC,UAAU,ICIC,SAASyjB,GAAU1c,GAAQ,IAAD,IAC/B0S,EAAW,SAACiK,ID4Cf,SAAwBpY,EAAUoY,GAAlC,SAAAnjB,EAAAC,OAAA,kEAAAD,EAAA,MAEGijB,GAAUtM,YAAY,CAAEwM,QAASA,GAAW,CAAEjM,OAAO,KAFxD,gCAGI9X,GAAGuX,YAAY,CAAEvK,IAAK+W,EAASpY,SAAUA,KAH7C,6DC3CC6P,CAAapU,EAAMuE,SAAUoY,GAAS3iB,MAAK,SAAC+K,QAKhD,OACI,qCACI,eAAC7B,EAAA,EAAD,CAAMhH,MAAO,CAAEiD,cAAe,OAA9B,UACI,cAAC,IAAD,CACImJ,QAAM,EACN/E,MAAO+Y,GAAUtc,EAAM9F,MAAM6hB,OAC7Bjb,eAAgBsC,GAAO+Y,aACvB5U,KACI,cAAC,IAAD,CACIC,KAAM,oBACN8I,KAAM,UACNvS,MAAO,QACP0J,KAAM,GACNvL,MAAO,CAAE2B,iBAAkB,KAGnCkD,QAAS,WACLf,EAAMyY,OAAO,MAGrB,cAAC,IAAD,CACIlV,MAAO,GACP+D,YAAa,CAAElJ,gBAAiB,OAChC0C,eAAgB,CACZ5C,aAAc,GACdL,iBAAkB,GAClBW,MAAO,IAEX+I,KACI,cAAC,IAAD,CACIC,KAAM,qBACN8I,KAAM,UACNvS,MAAO,QACP0J,KAAM,KAGd1G,QAAS,kBAAMf,EAAMyY,OAAO,SAGpC,cAAC,IAAD,CACI1a,MAAO,OACPS,MAAO,EACPtC,MAAO,CAAEsC,MAAO,OAAWnB,UAAW,MAE1C,cAAC4O,EAAA,EAAD,CAAc/P,MAAOkH,GAAO2P,SAA5B,SACI,cAACtG,EAAA,EAAD,UACKzM,EAAMgT,QACH,cAAClH,EAAA,EAAD,CACI/N,MAAO,OACP0J,KAAM,QACNvL,MAAOkH,GAAO4P,WAElB,SAAAhT,EAAMqc,YAAN,IAAaviB,QAAS,EAAtB,SACAkG,EAAMqc,YADN,EACA,EAAa1P,KAAI,SAACC,EAAI7Q,GAClB,OACI,cAACwgB,GAAD,CACI/b,MAAOzE,EAEPsgB,MAAOzP,EACP1S,KAAM8F,EAAM9F,KACZwY,SAAUA,GAHL9F,EAAGhH,QAQpB,cAAC3J,EAAA,EAAD,CAAMC,MAAOkH,GAAO6P,WAApB,SACKqJ,GAAUtc,EAAM9F,MAAMmK,oBCzEpC,SAASuY,GAAY5c,GAAQ,IAAD,IACvC,OACI,qCACI,eAACkD,EAAA,EAAD,CAAMhH,MAAO,CAAEiD,cAAe,OAA9B,UACI,cAAC,IAAD,CACImJ,QAAM,EACN/E,MAAO+Y,GAAUtc,EAAM9F,MAAMgiB,SAC7Bpb,eAAgBsC,GAAO+Y,aACvB5U,KACI,cAAC,IAAD,CACIC,KAAM,oBACN8I,KAAM,UACNvS,MAAO,QACP0J,KAAM,GACNvL,MAAO,CAAE2B,iBAAkB,OAIvC,cAAC,IAAD,CACI0F,MAAO,GACP+D,YAAa,CAAElJ,gBAAiB,OAChC0C,eAAgB,CACZ5C,aAAc,GACdL,iBAAkB,GAClBW,MAAO,IAEX+I,KACI,cAAC,IAAD,CACIC,KAAM,qBACN8I,KAAM,UACNvS,MAAO,QACP0J,KAAM,KAGd1G,QAAS,kBAAMf,EAAMyY,OAAO,SAGpC,cAAC,IAAD,CACI1a,MAAO,OACPS,MAAO,EACPtC,MAAO,CAAEsC,MAAO,OAAWnB,UAAW,MAE1C,cAAC4O,EAAA,EAAD,CAAc/P,MAAOkH,GAAO2P,SAA5B,SACI,cAACtG,EAAA,EAAD,UACKzM,EAAMgT,QACH,cAAClH,EAAA,EAAD,CACI/N,MAAO,OACP0J,KAAM,QACNvL,MAAOkH,GAAO4P,WAElB,SAAAhT,EAAMqc,YAAN,IAAaviB,QAAS,EAAtB,SACAkG,EAAMqc,YADN,EACA,EAAa1P,KAAI,SAACC,EAAI7Q,GAClB,OACI,cAACwgB,GAAD,CACI/b,MAAOzE,EAEPsgB,MAAOzP,EACP1S,KAAM8F,EAAM9F,KACZwY,SAAUA,UAHL9F,EAAGhH,QAQpB,cAAC3J,EAAA,EAAD,CAAMC,MAAOkH,GAAO6P,WAApB,SACKqJ,GAAUtc,EAAM9F,MAAMmK,oBCnEpC,SAASmL,GAAMxP,GAC1B,MAAkCiG,oBAAS,GAA3C,WAAOmE,EAAP,KAAkBC,EAAlB,KACA,EAAsBpE,mBAAS,GAA/B,WAAO6V,EAAP,KAAYrD,EAAZ,KACA,EAA0BxS,mBAAS,IAAnC,WAAOoW,EAAP,KAAcQ,EAAd,KAEA5R,qBAAU,WHHP,IAAa1G,KGMJvE,EAAMuE,SHLX3L,GACF4L,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEC,MAAO,IACdC,MAAK,SAAC/K,EAAKmL,GAIR,OAHInL,GACAoL,QAAQC,MAAMrL,GAEXmL,MGFa/K,MAAK,SAAC+K,GAEtBA,EAAKjL,OAAS,GACd+iB,EAAS9X,GAEbsF,GAAa,MAIjB,IAQMgB,EAAcC,IAAYC,iBAC5B,qBATe,WAMf,OALIuQ,EAAM,EACNrD,EAAO,GAEPzY,EAAMsU,QAAQ,OAEX,KAMX,OAAO,WACHjJ,EAAYG,YAEjB,CAACsQ,IAuCJ,OAAO,cAAC5Y,EAAA,EAAD,CAAMhH,MAAOkH,GAAOpB,KAApB,SApCS,IAAR8Z,EAEI,cAAC,GAAD,CACIrD,OAAQA,EACRve,KAAM8F,EAAM9F,KACZoa,QAAStU,EAAMsU,QACf+H,MAAOA,IAGA,IAARP,EACA,cAAC,IAAD,4BACQ,IAARA,EAEH,cAACY,GAAD,CACI1J,QAAS5I,EACTqO,OAAQA,EACRve,KAAM8F,EAAM9F,KACZoa,QAAStU,EAAMsU,QACf+H,MAAOA,IAGA,IAARP,EACA,cAAC,IAAD,4BACQ,IAARA,EAEH,cAACc,GAAD,CACInE,OAAQA,EACRve,KAAM8F,EAAM9F,KACZoa,QAAStU,EAAMsU,UAIhB,cAAC,IAAD,4BC5EJ,SAASxF,GAAW5U,EAAMqK,GAAW,IAAD,UAC/C,MAAO,CACH,CACIiD,KAAI,SAAEgJ,GAAetW,SAAjB,EAAE,EAAsBmV,MAC5B9H,KAAM,eACNuV,gBAAiB,SAAC5iB,EAAMoa,GACpB,OACI,cAACjF,GAAD,CAAOnV,KAAMA,EAAMoa,QAASA,EAAS/P,SAAUA,MAI3D,CACIiD,KAAI,SAAEgJ,GAAetW,SAAjB,EAAE,EAAsBoV,aAC5B/H,KAAM,eACNuV,gBAAiB,SAAC5iB,EAAMoa,GACpB,OAAO,OAGf,CACI9M,KAAI,SAAEgJ,GAAetW,SAAjB,EAAE,EAAsBsV,MAC5BjI,KAAM,sBACNuV,gBAAiB,SAAC5iB,EAAMoa,GACpB,OACI,cAAC9E,GAAD,CAAOtV,KAAMA,EAAMoa,QAASA,EAAS/P,SAAUA,MAI3D,CACIiD,KAAI,SAAEgJ,GAAetW,SAAjB,EAAE,EAAsBuV,oBAC5BlI,KAAM,wBACNuV,gBAAiB,SAAC5iB,EAAMoa,GACpB,OAAO,OAGf,CACI9M,KAAI,SAAEgJ,GAAetW,SAAjB,EAAE,EAAsBqV,WAC5BhI,KAAM,cACNuV,gBAAiB,SAAC5iB,EAAMoa,GACpB,OACI,cAAC/E,GAAD,CACIrV,KAAMA,EACNoa,QAASA,EACT/P,SAAUA,OC7CnBtH,WAAWC,OAAO,CAC7B4D,eAAgB,CACZtD,WAAY,SACZH,UAAW,GACXO,aAAc,IAElB0J,YAAa,CACT9I,MAAO,IACPpB,OAAQ,GACRiC,eAAgB,cAEpBwQ,kBAAmB,CACfrR,MAAO,IACPpB,OAAQ,GACRgB,gBAAiB,OAErB2R,iBAAkB,CACdvR,MAAO,IACPpB,OAAQ,GACRgB,gBAAiB,YCdV,SAAS0Q,GAAW9O,GAC/B,MAAwBiG,qBAAxB,WAAO8W,EAAP,KAAazI,EAAb,KACA,OAAOyI,GAGH,cAACtQ,EAAA,EAAD,CAAYvQ,MAAO,CAAEqB,KAAM,GAA3B,SACKyf,GAAehd,EAAM9F,MAAQ,KAAM8F,EAAMuE,UAAUoI,KAAI,SAACC,EAAI7Q,GACzD,OACI,cAAC,IAAD,CACIwL,KAAM,CACFC,KAAMoF,EAAGrF,KACT+I,KAAM,UACN7I,KAAM,GACN1J,MAAO,SAGXkf,aAAc,OACd1M,mBAAoB,CAAE1C,YAAa,IACnCvG,YAAalE,GAAOkE,YACpBxG,eAAgBsC,GAAOtC,eACvByC,MAAOqJ,EAAGpF,KACVzG,QAAS,SAACyC,GACN8Q,EACI1H,EAAGkQ,gBAAgB9c,EAAM9F,MAAQ,KAAMoa,MAR1CvY,QCpBdkB,IAAWC,OAAO,ICIlB,SAAS6R,GAAM/O,GAC1B,OACI,cAACyM,EAAA,EAAD,CAAYvQ,MAAO,CAAEqB,KAAM,GAA3B,SACI,cAACtB,EAAA,EAAD,qBCCZ,IAAMihB,GAAMC,eAEG,SAASC,GAAKpd,GAAQ,IAAD,MAChC,OACI,eAACkd,GAAIG,UAAL,CACIC,cAAe,CACXC,YAAa,CAAC,CAAEngB,OAAQ,GAAIW,MAAO,YACnCyf,iBAAkB,CAAC,CAAEzf,MAAO,UAAWH,aAAc,MAH7D,UAMI,cAACsf,GAAIO,OAAL,CACIC,QAAS,CACLC,aAAa,EACbC,WAAY,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACI,cAAC,IAAD,CACIvN,KAAM,UACNvS,MAAO,UACPyJ,KAAI,mBACAqW,EAAU,GAAK,gBAMnCrW,KAAI,SAAEgJ,GAAexQ,EAAM9F,YAAvB,EAAE,EAA4B4U,WAClCgP,SAAU,kBACN,cAAC,GAAD,CAAY5jB,KAAM8F,EAAM9F,KAAMqK,SAAUvE,EAAMuE,cAGtD,cAAC2Y,GAAIO,OAAL,CACIC,QAAS,CACLC,aAAa,EACbC,WAAY,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACI,cAAC,IAAD,CACIvN,KAAM,UACNvS,MAAO,UACPyJ,KAAI,QAASqW,EAAU,GAAK,gBAK5CrW,KAAI,SAAEgJ,GAAexQ,EAAM9F,YAAvB,EAAE,EAA4B6U,MAClC+O,SAAU,kBAAM,cAAC/O,GAAD,CAAO7U,KAAM8F,EAAM9F,UAEvC,cAACgjB,GAAIO,OAAL,CACIC,QAAS,CACLC,aAAa,EACbC,WAAY,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACI,cAAC,IAAD,CACIvN,KAAM,UACNvS,MAAO,UACPyJ,KAAI,YAAaqW,EAAU,GAAK,gBAKhDrW,KAAI,SAAEgJ,GAAexQ,EAAM9F,YAAvB,EAAE,EAA4B8U,SAClC8O,SAAU,SAACta,GAAD,OACN,cAACwL,GAAD,CACI9U,KAAM8F,EAAM9F,KACZP,SAAQ,MAAEqG,OAAF,EAAEA,EAAOrG,SACjB2L,OAAQtF,EAAMsF,OACdf,SAAUvE,EAAMuE,SAChB6D,YAAapI,EAAMoI,oB,wBC1E5BnL,OAAWC,OAAO,CAC7BI,UAAW,CACPE,WAAY,SACZC,aAAc,SACdG,aAAc,GACdY,MAAO,OACPJ,gBAAiB,SAErB2f,UAAW,CACP1gB,WAAY,GACZmB,MAAO,IACPpB,OAAQ,IACRQ,cAAe,IAEnBogB,SAAU,CACNxf,MAAO,OACP2P,QAAS,IAEb8P,QAAS,CACL/P,SAAU,WACV1P,MAAO,OACPpB,OAAQ,OACR+Q,QAAS,IAEb7E,SAAU,CACNjM,WAAY,GACZmB,MAAO,IACPpB,OAAQ,IACRQ,cAAe,GACfQ,gBAAiB,SAErBV,QAAS,CACLC,SAAU,GACVI,MAAO,UACPV,UAAW,GACXkM,OAAQ,GAEZ2J,QAAS,CACLrF,YAAa,GACbrP,MAAO,QAEX0f,YAAa,CACT3gB,KAAM,EACNiB,MAAO,QAEX2f,QAAS,CACLxgB,SAAU,IAEdygB,QAAS,CACL5gB,WAAY,SACZC,aAAc,SACde,MAAO,U,qkBCpCA,SAASsQ,KAAc,IAAD,IACjC,EAAgC7I,mBAASoY,YAAU,OAAS,KAA5D,WAAO9Z,EAAP,KACA,GADA,KAC4B0B,sBAA5B,WAAOX,EAAP,KAAegZ,EAAf,KACA,EAAgCrY,qBAAhC,WAAOzE,EAAP,KAAiB4G,EAAjB,KACA,EAAkCnC,oBAAS,GAA3C,WAAOmE,EAAP,KAAkBC,EAAlB,KAEMpK,EAAWC,cACXc,EAAK,SAAGgK,oBAAH,EAAG,EAAehK,MACvB9G,GAAY,MAAL8G,OAAA,EAAAA,EAAO9G,OAAQ,KAEtBuI,EAAe5J,EAAQ,KACvB0lB,EAAW1lB,EAAQ,KAEzBoS,qBAAU,WpCsCP,IAAiBrK,KoCrCD2D,EAAS3D,GpCsCrBhI,GAAGc,UAAU,CAAEkM,IAAKhF,KoCrClB5G,MAAK,SAAC0B,GAAY,IAAD,EACTA,GAA6B,KAAb,MAANA,OAAA,EAAAA,EAAQ5B,SACnBmG,EAAS,SAEbqe,EAAU5iB,EAAO,IACjB0M,EAAW,SAAC1M,EAAO,SAAR,EAAC,EAAW8F,UACvB6I,GAAa,MAEhBvE,OAAM,SAAClM,GACJoL,QAAQe,IAAInM,GACZqG,EAAS,QAAS,CACde,MAAO,CAAErH,SAAQ,MAAEqH,OAAF,EAAEA,EAAOrH,SAAUO,KAAMA,QAGtD,IAMMmR,EAAcC,IAAYC,iBAC5B,qBAPe,WAIf,OAHAtL,EAAS,QAAS,CACde,MAAO,CAAErH,SAAQ,MAAEqH,OAAF,EAAEA,EAAOrH,SAAUO,KAAMA,MAEvC,KAMX,OAAO,kBAAMmR,EAAYG,YAC1B,IAEH,IAAMgT,EAAQ,SACPC,MADO,IAEVC,OAAO,SACAD,KAAaC,QADd,IAEFC,WAAY,kBAIpB,OAAIvU,EAEI,cAAC0B,EAAA,EAAD,CACI/N,MAAO,OACP0J,KAAM,QACNvL,MAAO,CAAEmB,UAAW,OAK5B,qCACI,eAAC6F,EAAA,EAAD,CAAMhH,MAAOkH,GAAO9F,UAApB,UACI,cAAC,EAAD,CACImF,aAAcA,EACdM,YAAaI,KACbX,YAAaY,GAAO2a,UACpB/a,WAAYI,GAAOkG,SACnB5G,MAAM,EACNE,UAAU,IAEd,cAAC,IAAD,CAAM1G,MAAOkH,GAAO1F,QAApB,UACK,SAAA8S,GAAetW,SAAf,IAAsBoF,MAAMkC,KAAa,UAGlD,cAAC,IAAD,CAASzD,MAAO,OAAQS,MAAO,EAAGtC,MAAOkH,GAAO8P,UAEhD,eAAChQ,EAAA,EAAD,CAAMhH,MAAO,CAAEqB,KAAM,GAArB,UACI,cAAC2F,EAAA,EAAD,CAAMhH,MAAO,CAAEqB,KAAM,EAAG2Q,SAAU,YAAlC,SACI,cAAC,EAAD,CACIzL,aAAc8b,EACdxb,YAAa6b,KACbpc,YAAaY,GAAO4a,SACpBhb,WAAYI,GAAO6a,QACnBvb,MAAM,EACNE,UAAU,MAGlB,cAACic,GAAA,EAAD,CAAqBC,MAAON,EAAUtiB,MAAO,CAAE+C,QAAS,KAAxD,SACI,cAACme,GAAD,CACIljB,KAAMA,EACNP,SAAQ,MAAE2L,OAAF,EAAEA,EAAQ9D,SAClB+C,SAAUA,EAAS3D,GACnB0E,OAAQA,EACR8C,YAAaA,YCvGrC2W,aCSe,WAAgB,IAAD,IAC1B,EAA4B9Y,qBAA5B,WAAO+Y,EAAP,KAAeC,EAAf,KACA,EAAkChZ,oBAAS,GAA3C,WAAOmE,EAAP,KAAkBC,EAAlB,KAEAY,qBAAU,WACNiU,MACD,CAACA,IAEJ,IAAIC,GAAQ,SAAAC,UAAA,IAAqBxjB,MAAM,KAAK,KAAM,KAC5C1B,EAAO,CAAC,KAAM,MAAMmlB,SAASF,GAASA,EAAQ,KAE9CD,EAAmBI,uBAAY,oBAAA9lB,EAAAC,OAAA,gDACjC,IACI8lB,IACF,MAAO3lB,GACLoL,QAAQC,MAAMrL,GAJe,8DAMlC,IAEG2lB,EAAY,oBAAA/lB,EAAAC,OAAA,gDACdF,IAAYS,MAAK,SAACC,GACdglB,EAAUhlB,GACVoQ,GAAa,MAHH,6DAOlB,OACI,eAACnH,EAAA,EAAD,CAAMhH,MAAO,CAAEqB,KAAM,GAArB,UACI,cAACiiB,EAAA,EAAD,CAAWC,QAAQ,IAClBrV,EACG,cAAC,GAAD,CACIlO,MAAO,CAAEqB,KAAM,EAAGC,WAAY,UAC9BhC,KAAI,SAAEkkB,EAAcxlB,SAAhB,EAAE,EAAqBmB,gBAG/B,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIskB,OAAK,EACLhX,KAAK,IACLiX,QACI,cAAC,GAAD,CACIvmB,gBAAe,MAAE2lB,OAAF,EAAEA,EAAQ3lB,gBACzBa,KAAMA,EACNP,SAAQ,MAAEqlB,OAAF,EAAEA,EAAQrlB,aAI9B,cAAC,IAAD,CACIgmB,OAAK,EACLhX,KAAK,YACLiX,QAAS,cAAC5iB,GAAD,CAAgB9C,KAAMA,MAEnC,cAAC,IAAD,CACIylB,OAAK,EACLhX,KAAK,QACLiX,QACI,cAACzV,GAAD,CACI9Q,gBAAe,MAAE2lB,OAAF,EAAEA,EAAQ3lB,gBACzBa,KAAMA,EACNP,SAAQ,MAAEqlB,OAAF,EAAEA,EAAQrlB,aAI9B,cAAC,IAAD,CACIgP,KAAK,kBACLiX,QAAS,cAAC,GAAD,mB","file":"static/js/app.e1dbc636.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading_brain.ef5884d9.gif\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.ede08671.png\";","module.exports = __webpack_public_path__ + \"static/media/2.b87932e3.png\";","module.exports = __webpack_public_path__ + \"static/media/3.3ed4e762.png\";","module.exports = __webpack_public_path__ + \"static/media/4.80535fcd.png\";","module.exports = __webpack_public_path__ + \"static/media/5.da0bedf3.png\";","module.exports = __webpack_public_path__ + \"static/media/6.7911d645.png\";","module.exports = __webpack_public_path__ + \"static/media/swipe-right.6dde9c7c.gif\";","module.exports = __webpack_public_path__ + \"static/media/brain.70fc8c58.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.097ce51b.png\";","module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.348cd96d.png\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n}\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n}\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n}\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n}\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n}\n\nexport function reset() {\n    return AsyncStorage.clear();\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retourner sur le formulaire',\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet requise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? C'est possible, le partage est réalisable entre deux appareils par {0} !\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can share data between two devices with {0} technology!\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    textInput: {\n        height: 40,\n        borderColor: 'gray',\n        borderRadius: 20,\n        paddingHorizontal: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        elevation: 2,\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n    },\n    buttonText: {\n        paddingTop: 10,\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to produce today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text, Platform } from 'react-native';\nimport { Button, Image } from 'react-native-elements';\nimport Lottie from '../../../components/utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/home/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/home/addedUser.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <Button\n                title={InterfaceLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { lang as DictaphoneLang } from '../language/activities/dictaphone';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record, lang) {\n    if (record?.name?.length === 0) {\n        record.name = DictaphoneLang[lang].Untiled;\n    }\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n}\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n}\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n}\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n}\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n}\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n}\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n}\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.find({ personId: id }, (err, data) => {\n        if (err) {\n            console.error(err);\n        } else {\n            data.map(async (el, i) => {\n                await FileSystem.deleteAsync(el?.path);\n            });\n        }\n    });\n    await db.findAsync({ _id: id }, async (err, data) => {\n        if (err) {\n            console.error(err);\n        } else if (data[0].picture) {\n            await FileSystem.deleteAsync(data[0]?.picture);\n        }\n    });\n    await DictaphoneDB.removeAsync({ personId: id });\n    return db.removeAsync({ _id: id });\n}\n\nexport function reset() {\n    return db.removeAsync({}, { multi: true });\n}\n","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0) {\n                personId = result._id;\n            }\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                let path = `${FileSystem.documentDirectory}personProfilPicture`;\n                await FileSystem.makeDirectoryAsync(path).catch((err) => {\n                    console.log('Directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    wrapper: {\n        marginTop: 100,\n        textAlign: 'center',\n        alignItems: 'center',\n    },\n    topImage: {\n        flex: 1,\n        width: 80,\n        marginTop: -270,\n    },\n    heading: {\n        marginTop: -190,\n        fontSize: 20,\n        zIndex: 2,\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: '#3B8EFF',\n    },\n    subtitle: {\n        textAlign: 'center',\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: 10,\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1,\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Text,\n    View,\n    Image,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    BackHandler,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input } from 'react-native-elements';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport LoadingBrain from '../../assets/img/home/loading_brain.gif';\nimport { lang as HomeLang } from '../../language/home';\nimport Rows from '../../components/home/Rows';\nimport CreatePerson from '../../components/home/PersonCreation/CreatePerson';\n\nimport * as Person from '../../data/personApi';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        HomeLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const swiper = useRef(null);\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n\n    useEffect(() => {\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - index, true);\n    };\n\n    const changeIndex = (idx) => {\n        setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                setBtnTxt(HomeLang[lang].AddAPerson);\n            } else if (idx === 1) {\n                setBtnTxt(HomeLang[lang].ReturnToList);\n            }\n            setActive(true);\n        }, 400);\n    };\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.wrapper}>\n                <Image\n                    source={LoadingBrain}\n                    resizeMode=\"contain\"\n                    style={styles.topImage}\n                />\n                <Text style={styles.heading}>\n                    {HomeLang[lang].Hello(username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{HomeLang[lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (active === false) {\n                            return;\n                        }\n                        setActive(false);\n                        setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={HomeLang[lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    setSearch(e);\n                                }}\n                                value={search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {persons && persons.length > 0 ? (\n                                printRows(persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {HomeLang[lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={persons}\n                                setPersons={setPersons}\n                                lang={lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    TouchableOpacity,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername, SawTutorial } from '../../data/configApi';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\nimport Home from '../Home';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [confirmed, setConfirmed] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            setUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <TouchableOpacity\n                        style={styles.button}\n                        activeOpacity={0.5}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                    >\n                        <Text style={styles.buttonText}>\n                            {' '}\n                            {isLoading ? (\n                                <ActivityIndicator\n                                    color=\"white\"\n                                    size=\"small\"\n                                    animating={true}\n                                />\n                            ) : (\n                                'OK'\n                            )}\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        );\n    } else {\n        return <Home username={input} lang={props.lang} />;\n    }\n}\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    slideOdd: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#C8EEFF',\n    },\n    title: {\n        color: 'black',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center',\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center',\n    },\n    image: {\n        flex: 3,\n        width: 100 + '%',\n        height: 400,\n    },\n    buttonContainer: {\n        flex: 2,\n        marginTop: -40,\n    },\n    button: {\n        marginTop: 10,\n        paddingTop: 15,\n        paddingBottom: 15,\n        marginLeft: 30,\n        marginRight: 30,\n        backgroundColor: '#00BCD4',\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: '#fff',\n    },\n    buttonText: {\n        color: '#fff',\n        textAlign: 'center',\n    },\n});\n","import React, { useEffect } from 'react';\nimport { Text, View, Image, TouchableOpacity } from 'react-native';\n\nimport { Link } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport SwipeImage from '../../assets/img/tutorial/swipe-right.gif';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport Lottie from '../../components/utils/Lottie';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\nimport Home from '../Home';\n\nexport default function Tutorial(props) {\n    const LottieSource = require('../../assets/lottie/swipe-right.json');\n\n    useEffect(() => {\n        Config.getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    return <Home username={res} lang={props.lang} />;\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SwipeImage}\n                LottieStyle={{\n                    position: 'absolute',\n                    height: 80,\n                    marginTop: 280,\n                    marginLeft: 80,\n                    opacity: 0.8,\n                }}\n                ImageStyle={{\n                    position: 'absolute',\n                    height: 80,\n                    marginTop: 280,\n                    marginLeft: 80,\n                    opacity: 0.8,\n                }}\n            />\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Link\n                            to=\"/username\"\n                            component={TouchableOpacity}\n                            style={styles.button}\n                            onPress={(e) => {\n                                Config.SawTutorial(true);\n                            }}\n                            activeOpacity={0.5}\n                        >\n                            <Text style={styles.buttonText}>\n                                {' '}\n                                {TutorialLang[props.lang].LastStepButton}{' '}\n                            </Text>\n                        </Link>\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} />;\n    }\n    return <Home lang={props.lang} username={props.username} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quizz: 'Commencer un quizz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quizz: 'Start a quizz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#5EA1E4',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { ScrollView, Alert, SafeAreaView, View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/home/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\n\nimport styles from './styles';\nimport Form from '../../../components/home/PersonCreation/Form';\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname(props.person.fullname);\n        setUriPreview(props.person.picture);\n        setImage('');\n        setDescription(props.person.description);\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    const debug = async () => {\n        await Person.reset();\n        await AsyncStorage.clear();\n        navigate('/home');\n        return true;\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/home');\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.username),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: 'bluetooth',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ShareProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/home');\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'bug',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDebug}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ResetAccount}\n                        onPress={debug}\n                    />\n                </ScrollView>\n            ) : (\n                <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => setEdit(false)}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </ScrollView>\n            )}\n        </View>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState('');\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync();\n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = () => {\n        API.create(\n            {\n                name: title?.trim(),\n                path: recording.getURI(),\n                personId: props.personId,\n            },\n            props.lang\n        )\n            .then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            el.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Aide',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated:\n            \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButton: {\n        flex: 1,\n        width: 50,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'help-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/simon/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate);\n        setCanPlay(false);\n        setSuccess(true);\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            {success ? (\n                <Overlay\n                    visible={success}\n                    overlayStyle={styles.overlayStyle}\n                    onBackdropPress={() => setSuccess(false)}\n                    ModalComponent={Modal}\n                >\n                    {scoreBeaten ? successOverlay() : failOverlay()}\n                    <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                        <Button\n                            raised\n                            onPress={() => {\n                                retryGame();\n                            }}\n                            title={SimonLang[props.lang].Retry}\n                            containerStyle={{\n                                borderRadius: 13,\n                                marginRight: 10,\n                            }}\n                        />\n                        <Button\n                            raised\n                            onPress={() => {\n                                props.setTab(0);\n                            }}\n                            title={SimonLang[props.lang].Exit}\n                            containerStyle={{ borderRadius: 13 }}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                        />\n                    </View>\n                </Overlay>\n            ) : (\n                <></>\n            )}\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        styles.SimonButton,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        styles.SimonButton,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        styles.SimonButton,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        styles.SimonButton,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Text>Tab 2 (Help)</Text>;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quizz',\n        Create: 'Créer un quizz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        NothingYet: 'Aucun quizz crée pour le moment.',\n        SuccessfulRatio: 'Ratio de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizz',\n        Create: 'Create a quizz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        NothingYet: 'No quizz has been created yet.',\n        SuccessfulRatio: 'Success ratio',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quizz creation',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizzLang } from '../../../language/activities/quizz';\n\nimport QuizzLogo from '../../../assets/img/activities/quizz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizzLogo} style={styles.logo} />\n\n            {props.quizz?.length > 0 ? (\n                <Button\n                    title={QuizzLang[props.lang].Play}\n                    containerStyle={styles.button}\n                    raised\n                    onPress={(e) => props.setTab(1)}\n                    icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n            ) : (\n                <></>\n            )}\n\n            <Button\n                title={QuizzLang[props.lang].View}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizzLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'help-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizzLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { lang as QuizzLang } from '../../../language/activities/quizz';\n\nexport default function QuizzList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem {...componentProps}>\n            <ListItem.Content>\n                <ListItem.Title>{props.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    {props.quizz?.score?.length || 1}{' '}\n                    {QuizzLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'QuizzSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\nexport const ContentDB = new Datastore({\n    filename: 'ContentQuizzSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getContent(quizzId) {\n    return ContentDB.findAsync({ quizzId: quizzId });\n}\n\nexport function addContent(quizzId, personId, content) {\n    const data = db.find({ _id: quizzId, personId: personId }, (err, data) => {\n        if (err) {\n            console.error(err);\n        } else {\n            return data;\n        }\n    });\n    if (!data) {\n        return null;\n    }\n    if (['audio', 'image'].includes(content.type) && content.path === null) {\n        console.error(\n            'A path is required when the type is \"audio\" or \"image\".'\n        );\n        return null;\n    } else if (!content.question || content.answers?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    return db.insertAsync({ ...content }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n}\n\nexport async function deleteId(personId, quizzId) {\n    // @todo remove files linked to the quizz\n    await ContentDB.removeAsync({ quizzId: quizzId }, { multi: true });\n    return db.removeAsync({ _id: quizzId, personId: personId });\n}\n\nexport async function reset() {\n    await ContentDB.removeAsync({}, { multi: true });\n    return db.removeAsync({}, { multi: true });\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n} from 'react-native';\nimport { Button, Icon, Divider } from 'react-native-elements';\n\nimport QuizzList from './QuizzList';\n\nimport { lang as QuizzLang } from '../../../language/activities/quizz';\nimport * as API from '../../../data/quizzApi';\n\nimport styles from './styles';\n\nexport default function ViewQuizz(props) {\n    const deleteId = (quizzId) => {\n        API.deleteId(props.personId, quizzId).then((data) => {\n            // update props.quizz state\n        });\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    raised\n                    title={QuizzLang[props.lang].Create}\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        props.setTab(4);\n                    }}\n                />\n                <Button\n                    title={{}}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{\n                        borderRadius: 15,\n                        marginHorizontal: 10,\n                        width: 40,\n                    }}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    }\n                    onPress={() => props.setTab(0)}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView>\n                    {props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : props.quizz?.length > 0 ? (\n                        props.quizz?.map((el, i) => {\n                            return (\n                                <QuizzList\n                                    index={i}\n                                    key={el._id}\n                                    quizz={el}\n                                    lang={props.lang}\n                                    deleteId={deleteId}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {QuizzLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n} from 'react-native';\nimport { Button, Icon, Divider } from 'react-native-elements';\n\nimport QuizzList from './QuizzList';\n\nimport { lang as QuizzLang } from '../../../language/activities/quizz';\nimport * as API from '../../../data/quizzApi';\n\nimport styles from './styles';\n\nexport default function CreateQuizz(props) {\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    raised\n                    title={QuizzLang[props.lang].Complete}\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Button\n                    title={{}}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{\n                        borderRadius: 15,\n                        marginHorizontal: 10,\n                        width: 40,\n                    }}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    }\n                    onPress={() => props.setTab(2)}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView>\n                    {props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : props.quizz?.length > 0 ? (\n                        props.quizz?.map((el, i) => {\n                            return (\n                                <QuizzList\n                                    index={i}\n                                    key={el._id}\n                                    quizz={el}\n                                    lang={props.lang}\n                                    deleteId={deleteId}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {QuizzLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\n\n// Child components\nimport ViewQuizz from './ViewQuizz';\nimport CreateQuizz from './CreateQuizz';\n\nimport * as API from '../../../data/quizzApi';\n\nimport styles from './styles';\n\nexport default function Quizz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quizz, setQuizz] = useState([]);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            // setQuizz(['test'])\n            if (data.length > 0) {\n                setQuizz(data);\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quizz={quizz}\n                />\n            );\n        } else if (tab === 1) {\n            return <Text>Tab 1 (Play?)</Text>;\n        } else if (tab === 2) {\n            return (\n                <ViewQuizz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quizz={quizz}\n                />\n            );\n        } else if (tab === 3) {\n            return <Text>Tab 3 (Help?)</Text>;\n        } else if (tab === 4) {\n            return (\n                <CreateQuizz\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return <View style={styles.view}>{printPage()}</View>;\n}\n","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quizz from '../components/activities/Quizz';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Quizz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quizz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({});\n","import React from 'react';\nimport { ScrollView, Text } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport styles from './styles';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <Text>todo</Text>\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: 60, color: '#5bc0de' }],\n                tabBarLabelStyle: [{ color: '#5bc0de', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} />}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#5bc0de'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        marginBottom: 20,\n        width: 100 + '%',\n        backgroundColor: 'white',\n    },\n    topLottie: {\n        marginTop: -20,\n        width: 200,\n        height: 200,\n        marginBottom: -90,\n    },\n    bgLottie: {\n        width: 100 + '%',\n        opacity: 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: 100 + '%',\n        height: 100 + '%',\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: 'white',\n    },\n    heading: {\n        fontSize: 24,\n        color: '#3B8EFF',\n        marginTop: 10,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport SuccessImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/home');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/home', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/home', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={SuccessImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport Home from './pages/Home';\nimport Activities from './pages/Activities';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    let local = Localization.locale?.split('-')[0] || 'fr';\n    const lang = ['en', 'fr'].includes(local) ? local : 'fr';\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={\n                                <Home\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}