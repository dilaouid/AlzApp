{"version":3,"sources":["assets/img/activities/trophy.gif","assets/img/activities/help/question_mark.gif","assets/img/activities/brain.gif","assets/img/interface/profile.jpg","assets/img/activities/sad.gif","assets/sound/global/applause.mp3","assets/sound/global/you_lose.mp3","assets/sound/simon/green.mp3","assets/img/selection/addedUser.gif","assets/img/username/chooseusername.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/alzheimapp_logo.png","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/quiz/logo.png","assets/img/activities/quiz/success.gif","assets/img/activities/double/logo.png","assets/sound/ambiant.mp3","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","assets/img/activities/quiz/thinking.gif","assets/sound/double/ambiant.mp3","assets/sound/double/success.mp3","assets/sound/double/fail.mp3","assets/sound/double/play.mp3","assets/sound/double/next.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","language/selection/index.js","components/selection/Rows.js","components/selection/styles.js","components/utils/Lottie.js","components/selection/PersonCreation/Success.js","data/dictaphoneApi.js","data/simonApi.js","data/quizApi.js","data/doubleApi.js","utils/helpers.js","data/personApi.js","components/selection/PersonCreation/Form.js","components/selection/PersonCreation/CreatePerson.js","pages/SelectionMenu/styles.js","pages/SelectionMenu/index.js","pages/ChooseUsername/styles.js","pages/ChooseUsername/index.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","language/home/index.js","pages/Home/styles.js","pages/Home/Menu.js","utils/dilacrypt.js","utils/share.js","pages/Home/ImportData.js","pages/Home/index.js","components/utils/HomeOrTutorial.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/Help.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/utils/quizFunc.js","components/activities/Quiz/Creation/QuestionList.js","components/activities/Quiz/utils/scoreFunc.js","components/activities/Quiz/QuizList.js","components/activities/Quiz/ViewQuizList.js","components/activities/Quiz/SuccessContent.js","components/activities/Quiz/Creation/FormQuizContent.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Creation/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/Help.js","components/activities/Quiz/index.js","language/activities/double/index.js","components/activities/Double/styles.js","components/activities/Double/Help.js","components/activities/Double/Menu.js","components/activities/Double/subs/helpers.js","components/activities/Double/subs/Card.js","components/activities/Double/Play.js","components/activities/Double/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/QuizScore/index.js","pages/Activities/Score/SimonScore/index.js","pages/Activities/Score/DoubleScore/index.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","OpenActivity","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","color","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","props","navigate","useNavigate","TouchableScale","Platform","OS","default","mod","index","backgroundColor","componentProps","Component","key","id","bottomDivider","containerStyle","onPress","state","source","picture","uri","DefaultProfilePicture","rounded","Content","Title","fullname","Subtitle","description","Chevron","StyleSheet","create","rightButton","minHeight","imageSuccess","width","height","leftButton","view","alignItems","alignSelf","marginVertical","btnImport","borderRadius","btnSave","profilePicture","marginBottom","successPageTitle","textAlign","fontSize","Lottie","LottieStyle","LottieSource","loop","hasOwnProperty","autoPlay","resizeMode","Image","ImageSource","ImageStyle","Success","View","SuccessImage","styles","edit","InterfaceLang","flexDirection","flexWrap","flexShrink","alignContent","flex","title","e","close","buttonStyle","marginRight","paddingHorizontal","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","createQuizContent","el","uuidv4","success","failed","includes","fileType","uploadQuizFile","path","FileSystem","from","to","updateScore","quizId","contentId","_id","quiz","contentIndex","content","findIndex","scoreIndex","getBestScore","insertScore","dailyScoreBeaten","globalScoreBeaten","pushErrors","errors","field","msg","randomNumber","min","max","Math","floor","random","person","trim","Object","keys","upd","$set","catch","log","getById","Form","useState","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","encoding","fsRead","setImage","titleStyle","icon","name","size","marginHorizontal","placeholder","leftIcon","label","errorStyle","renderErrorMessage","maxLength","errorMessage","inputStyle","value","marginTop","onChangeText","setFullname","setDescription","raised","cb","Person","setId","intermediates","image","imgName","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","container","zIndex","wrapper","topBanner","topImage","heading","boldtext","subtitle","button","overflow","buttonText","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","fontStyle","searchBar","searchInputStyle","SelectionMenu","isLoading","setIsLoading","search","setSearch","setIndex","SelectionMenuLang","btnText","setBtnTxt","active","setActive","swiper","useRef","useLocation","setLang","slidePropsState","slide","useEffect","Audio","setIsEnabledAsync","regex","RegExp","$regex","backHandler","BackHandler","addEventListener","remove","list","position","marginLeft","type","LoadingBrain","TouchableOpacity","activeOpacity","idx","ActivityIndicator","current","scrollBy","SafeAreaView","ref","showsButtons","scrollEnabled","pagingEnabled","showsPagination","onIndexChanged","setTimeout","ScrollView","inputContainerStyle","map","textInput","borderColor","shadowOpacity","shadowRadius","shadowOffset","elevation","buttonContainer","padding","viewrow","justifyContent","input","setInput","loadPage","setLoadPage","confirmed","setConfirmed","redirect","setRedirect","setUsername","res","parseUsername","insertUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","animating","Loading","LoadingImage","slideOdd","titleOdd","textOdd","aspectRatio","borderWidth","Tutorial","StepOne","StepTwo","StepThree","StepFour","StepFive","StepSixth","Config","Select","Import","Introduction","Source","License","Language","Step1","Step2","Step3","Step4","Step5","Step6","Step7","Step8","Step9","Step10","Step11","Step12","Step13","Step14","GoBack","InvalidFile","InvalidPersonFile","IncorrectPersonFile","ErrorChekingPerson","InvalidActivitiesLength","InvalidQuizData","InvalidLogData","InvalidDoubleData","InvalidSimonData","header","logo","menu","copyleft","ErrorMessage","Menu","showsVerticalScrollIndicator","HomeLang","ambiant","unloadAsync","iconContainerStyle","DocumentPicker","multiple","setImportFile","prev","Linking","openURL","encrypt","string","encryptedString","j","String","fromCharCode","charCodeAt","isValidDate","d","n","Date","isNaN","fileToBase64","formatQuiz","formatLog","scoreVerification","checkPersonInformations","checkPersonExists","personAPI","checkQuiz","quizKeys","contentKeys","k","l","answers","question","foundInScore","checkDouble","double","checkSimon","simon","checkDictaphone","dictaphone","importPerson","exists","importQuiz","filePath","quizAPI","quizFindAsync","importDouble","doubleAPI","importSimon","simonAPI","importLog","dictaphoneAPI","writeDataFile","fileUri","exportPerson","personFind","personData","simonData","doubleData","quizData","dictaphoneData","JSON","stringify","activities","dilacrypt","ImportData","step","setStep","setError","importFile","parsed","parseJSON","dataImport","found","CannotCreatePerson","inputString","parse","stepStyle","clr","display","disabled","Home","setAmbiant","Sound","createAsync","isLooping","sound","playAsync","AlzheimApp","HomeOrTutorial","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","QuizScore","SimonScore","DoubleScore","NoScore","Global","BestScoreByDay","ExportedProfile","ReturnList","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","load","setLoad","deletePerson","SimonDB","removeAsync","DictaphoneDB","DoubleDB","QuizDB","deleted","ActivitiesLang","Sharing","Alert","setPerson","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","isPlaying","setIsPlaying","progress","setProgress","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","positionMillis","playableDurationMillis","variant","animation","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","getURI","folder","record","DictaphoneLang","created","deleteRecord","goBack","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","Head","RulesHead","TriesHead","Rules","TriesExplain","paddingTop","opacity","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","viewHelpPage","leaveButtonHelpPage","helpHead","helpStepHead","textTransform","helpStep","helpQuestionMark","SimonLogo","SimonLang","setTab","Game","start","setStart","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","QuestionMark","tab","pos","Create","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","GiveUpQuizTitle","GiveUpQuiz","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","EditedQuiz","QuizListRedirection","selectedQuizz","quizName","Questions","SuccessTitle","FailedTitle","join","SuccessQuizTitle","SuccessQuiz","fail","FailQuizTitle","FailQuiz","SaveContent","AddContent","SureCancelEdition","CustomHead","Custom","answersText","leaveButtonPlay","createButton","overlayDescriptionReference","paddingBottom","ScrollViewSuccess","modalTitle","modalDescription","quizTitleInputContainer","quizTitleInput","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","QuizLogo","QuizLang","printFile","clearFile","pauseSound","playSound","QuestionList","quizEdit","newContent","quizEdition","Number","isInteger","questionId","tmp","setNewContent","setQuizEdit","setReload","reload","setEditedQuiz","contentList","setContent","pickOutQuestion","setEditContent","ScoreRatio","filter","parseInt","total","toFixed","QuizList","ViewQuizList","SuccessContent","FormQuizContent","answer","setAnswer","contentContainerStyle","setFileType","setFilename","setUri","mimeType","setQuestion","toLowerCase","setAnswers","addAnswer","badgeStyle","pickOutAnswer","ViewQuiz","newQuestion","setNewQuestion","editContent","editedQuiz","saveQuiz","concat","editedFile","buttonTop","mode","saveContent","pushContent","viewPage","CreateQuiz","createQuestion","setCreateQuestion","setName","modalConfirmation","setModalConfirmation","undefined","substring","ThinkingImage","quizLength","pickRandomQuizz","ThinkingLottie","setPlay","setCurrent","setFail","arr","shuffle","TrophyLottie","SadLottie","openAlertResultQuestion","SadImage","setMediaType","answerTrimedLowercase","answerQuestion","play","setQuiz","setRandom","rand","randomArrayElement","exclude","randNumber","RemaningTries","Reinit","TitleGiveUp","SureToGiveUp","BestDayScore","ScoreHead","ScoreHelp","Remember","Dimensions","factor","hp","wp","RectoCard","PlayingCard","VersoCard","IconCard","viewGame","buttonViewPlay","playButtons","DoubleLang","DoubleLogo","ambiantEnabled","ambiantSoundPlay","soundEnabled","setSoundEnabled","generateRandomPair","colors","icons","indexColor","indexIcon","SCREEN_WIDTH","SCREEN_HEIGHT","Card","cardStyles","inPlay","inFound","show","ReturnCard","setFound","setShow","currentPlay","indexGame","playing","currentGameLength","nFound","setScore","prevScore","prevTries","endGame","bestScoreDay","failOverlay","element","newModel","giveUp","Double","setBestScoreDay","setAmbiantEnabled","bestDayScore","prevEnable","choosenSound","returnComponent","page","ActivitiesList","iconPosition","scoreRow","scoreRowSimon","scoreHeading","margin","quizScore","setQuizScore","horizontal","textStyle","valueSuffix","initialValue","delay","activeStrokeColor","radius","inActiveStrokeColor","inActiveStrokeOpacity","inActiveStrokeWidth","activeStrokeWidth","simonScore","setSimonScore","btnIndex","setBtnIndex","buttons","TotalScore","selectedIndex","global","days","item","highestToLowest","b","labels","datasets","fromZero","showValuesOnTopOfBars","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","printScore","doubleScore","setDoubleScore","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","unmountOnBlur","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","BgSource","navTheme","DefaultTheme","background","TopImage","BackgroundImage","NavigationContainer","theme","defaultProps","allowFontScaling","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,ktyBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,gprFCA3CD,EAAOC,QAAU,IAA0B,mC,m3SCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,u9fCA3CD,EAAOC,QAAU,IAA0B,kC,i6pCCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,khqBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,omvHCK9BC,EAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,eACVC,QAASC,IACTC,UAAU,IAGP,SAASC,EAAYC,GACxB,OAAOP,EAAGQ,YACN,CAAEC,gBAAiB,CAAEC,SAAS,IAC9B,CAAED,gBAAiBF,IAcpB,SAAeI,IAAf,iBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAGoBZ,EAClBc,UAAU,CAAEC,SAAU,CAAEL,SAAS,KAAU,SAACM,EAAKC,GAC9C,OAAoB,IAAhBA,EAAKC,QACLlB,EAAGmB,YAAY,CACXJ,SAAU,KAEP,MAEAE,EAAK,GAAGF,YAGtBK,MAAK,SAACC,GAAU,IAAD,EACZ,OAAO,SAAAA,EAAK,SAAL,IAASN,WAAY,SAfjC,cAGGA,EAHH,kBAAAH,EAAA,MAkB2BZ,EACzBc,UAAU,CAAEL,gBAAiB,CAAEC,SAAS,KAAU,SAACM,EAAKC,GACrD,OAAoB,IAAhBA,EAAKC,QACLlB,EAAGmB,YAAY,CACXV,iBAAiB,KAEd,GAEAQ,EAAK,GAAGR,mBAGtBW,MAAK,SAACC,GAAU,IAAD,EACZ,OAAO,SAAAA,EAAK,SAAL,IAASZ,mBAAmB,MA9BxC,cAkBGA,EAlBH,yBAgCI,CAAEM,WAAUN,oBAhChB,4D,WCXMa,EAAO,CAChBC,GAAI,CAEAC,aAAc,0BACdC,YAAa,qBACbC,SAAU,cACVC,YAAa,wCACbC,YAAa,2BACbC,eAAgB,uCAChBC,cACI,6DACJC,mBAAoB,SAACC,GACjB,MAAM,qCAAmCA,EAAzC,kBAEJC,KAAM,cACNC,cAAe,8DACfC,aAAc,oDACdC,aAAc,SACdC,aAAc,mBAGdC,IAAK,MACLC,GAAI,MACJC,WAAY,2BACZC,aAAc,SAAC1B,GACX,MAAM,uDAAqDA,EAA3D,kLAIJ2B,cAAe,yCAEnBC,GAAI,CAEAnB,aAAc,gBACdC,YAAa,mBACbC,SAAU,YACVC,YAAa,0CACbC,YAAa,yBACbC,eAAgB,kCAChBC,cAAe,yBACfC,mBAAoB,SAACC,GACjB,MAAM,4BAA6BA,EAAnC,eAEJC,KAAM,OACNC,cAAe,uDACfC,aAAc,4CACdC,aAAc,qBACdC,aAAc,oBAGdC,IAAK,MACLC,GAAI,KACJC,WAAY,gBACZC,aAAc,SAAC1B,GACX,MAAM,2BAA4BA,EAAlC,yHAIJ2B,cAAe,2B,gCCzEjBE,EAAiB,SAACC,GACpB,IAAIC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,QAAnC,SACKN,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLzB,EAAO,CAChBC,GAAI,CAEAkC,YAAa,2BACbC,aAAc,WACV,OAAOd,EAAe,CAClBI,SACI,iNACJE,SAAU,CAAC,iBAKnBS,YAAa,qCACbC,aACI,iNAGJC,YAAa,oBACbC,aAAc,WACV,OAAOlB,EAAe,CAClBI,SACI,iMACJE,SAAU,CAAC,aAAc,iBAKjCa,YAAa,eACbC,aAAc,WACV,OAAOpB,EAAe,CAClBI,SACI,4JACJE,SAAU,CAAC,gDAKnBe,YAAa,mBACbC,aACI,kLAGJC,eAAgB,8BAChBC,eAAgB,aAEhBC,eAAgB,qCAChBC,eAAgB,WACZ,OAAO1B,EAAe,CAClBI,SACI,+LACJE,SAAU,CAAC,iBAIvBP,GAAI,CAEAc,YAAa,wBACbC,aAAc,WACV,OAAOd,EAAe,CAClBI,SACI,6KACJE,SAAU,CAAC,iBAKnBS,YAAa,kCACbC,aACI,qKAGJC,YAAa,sBACbC,aAAc,WACV,OAAOlB,EAAe,CAClBI,SACI,mKACJE,SAAU,CAAC,SAAU,aAK7Ba,YAAa,YACbC,aAAc,WACV,OAAOpB,EAAe,CAClBI,SACI,yHACJE,SAAU,CAAC,qCAKnBe,YAAa,kBACbC,aACI,oJAGJC,eAAgB,kBAChBC,eAAgB,QAEhBC,eAAgB,uBAChBC,eAAgB,WACZ,OAAO1B,EAAe,CAClBI,SACI,uJACJE,SAAU,CAAC,kB,0DCxHrBN,EAAiB,SAACC,GACpB,IAAIC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQe,MAAO,WAAlD,SACKrB,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLzB,EAAO,CAChBC,GAAI,CACAiD,MAAO,SAACzD,GACJ,OAAO6B,EAAe,CAClBI,SAAU,gBACVE,SAAU,CAACnC,MAGnB0D,QAAS,yCACTC,WAAY,uBACZC,KAAM,YACNC,OAAQ,YACRC,aAAc,uBACdC,UAAW,wCACXC,cACI,8EACJC,OAAQ,2BAEZrC,GAAI,CACA6B,MAAO,SAACzD,GACJ,OAAO6B,EAAe,CAClBI,SAAU,aACVE,SAAU,CAACnC,MAGnB0D,QAAS,uCACTC,WAAY,eACZC,KAAM,OACNC,OAAQ,SACRC,aAAc,qBACdC,UAAW,wCACXC,cACI,0EACJC,OAAQ,oB,2mBC3CD,SAASC,EAAKC,GACzB,IAAMC,EAAWC,cAEbC,EACgB,QAAhBC,IAASC,GACHtF,EAAQ,KAAgCuF,QACxC,KACNC,EACAP,EAAMQ,MAAQ,IAAM,EACd,CAAEC,gBAAiB,SACnB,CAAEA,gBAAiB,WACzBC,EACgB,QAAhBN,IAASC,GACH,CACIM,UAAWR,EACXS,IAAKZ,EAAMa,GACXC,eAAe,EACfC,eAAgBR,GAEpB,CAAEK,IAAKZ,EAAMa,GAAIC,eAAe,EAAMC,eAAgBR,GAChE,OACI,eAAC,IAAD,OACQG,GADR,IAEIM,QAAS,WAAO,IAAD,EACXf,EAAS,eAAeD,EAAMa,GAAM,CAChCI,MAAO,CACH7E,KAAI,SAAE4D,EAAM5D,MAAR,EAAgB,KACpBP,SAAUmE,EAAMnE,aANhC,UAWI,cAAC,IAAD,CACIqF,OACS,MAALlB,KAAOmB,QACD,CAAEC,IAAKpB,EAAMmB,SACbE,IAEVC,SAAO,IAEX,eAAC,IAASC,QAAV,WACI,cAAC,IAASC,MAAV,UAAiBxB,EAAMyB,WACvB,cAAC,IAASC,SAAV,UAAoB1B,EAAM2B,iBAE9B,cAAC,IAASC,QAAV,CAAkBvC,MAAM,a,WCjDrBwC,MAAWC,OAAO,CAC7BC,YAAa,CACTC,UAAW,OACXvB,gBAAiB,OAErBwB,aAAc,CACVC,MAAO,IACPC,OAAQ,KAEZC,WAAY,CACRJ,UAAW,QAEfK,KAAM,CACFC,WAAY,SACZC,UAAW,SACXC,eAAgB,GAChBN,MAAO,QAEXO,UAAW,CACPC,aAAc,GACdR,MAAO,KAEXS,QAAS,CACLT,MAAO,KAEXU,eAAgB,CACZV,MAAO,IACPC,OAAQ,IACRO,aAAc,IACdG,aAAc,IAElBC,iBAAkB,CACdP,UAAW,SACXL,MAAO,IACPa,UAAW,SACXzE,WAAY,OACZ0E,SAAU,GACV3D,MAAO,UACPwD,aAAc,M,kBClBPI,EAlBA,SAACjD,GAER,MAAuB,QAAhBI,IAASC,GACZ,cAAC,IAAD,CACIhC,MAAO2B,EAAMkD,YACbhC,OAAQlB,EAAMmD,aACdC,MAAMpD,EAAMqD,eAAe,SAAUrD,EAAMoD,KAC3CE,UACItD,EAAMqD,eAAe,aAAcrD,EAAMsD,SAE7CC,WAAW,UAGf,cAACC,EAAA,EAAD,CAAOtC,OAAQlB,EAAMyD,YAAapF,MAAO2B,EAAM0D,c,kBCL5C,SAASC,EAAQ3D,GAC5B,IAAMmD,EAAepI,EAAQ,KACvBkF,EAAWC,cAEjB,OACI,eAAC0D,EAAA,EAAD,WACI,cAAC,EAAD,CACIT,aAAcA,EACdM,YAAaI,IACbX,YAAaY,EAAO7B,aACpByB,WAAYI,EAAO7B,aACnBmB,MAAM,EACNE,UAAU,IAEd,cAAClF,EAAA,EAAD,CAAMC,MAAOyF,EAAOhB,iBAApB,UACoB,IAAf9C,EAAM+D,KACDC,EAAchE,EAAM5D,MAAMY,cAC1BgH,EAAchE,EAAM5D,MAAMa,eAEpC,eAAC2G,EAAA,EAAD,CAAMvF,MAAO,CAAC4F,cAAe,MAAOC,SAAU,OAAQC,WAAY,EAAG7B,WAAY,SAAU8B,aAAc,SAAUC,KAAM,EAAG9B,UAAW,UAAvI,UACI,cAAC,IAAD,CACI+B,MAAON,EAAchE,EAAM5D,MAAMc,aACjC8D,QAAS,SAACuD,GACNvE,EAAMwE,SAEVC,YAAa,CAACC,YAAa,GAAIhC,aAAc,GAAGiC,kBAAmB,GAAIlE,gBAAiB,SAE5E,GAAdT,EAAM+D,KAAgB,cAAC,IAAD,CACpBO,MAAON,EAAchE,EAAM5D,MAAMe,aACjC6D,QAAS,SAACuD,GAAO,IAAD,EACZtE,EAAS,eAAeD,EAAMa,GAAM,CACpCI,MAAO,CACH7E,KAAI,SAAE4D,EAAM5D,MAAR,EAAgB,KACpBP,SAAUmE,EAAMnE,aAIxB4I,YAAa,CAAC/B,aAAc,GAAIiC,kBAAmB,MAClD,mC,kDC7CR7J,GAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,mBACVC,QAASC,IACTC,UAAU,IAYP,SAASyJ,GAAIC,GAChB,OAAO/J,GACFgK,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEC,MAAO,IACdC,MAAK,SAACnJ,EAAKoJ,GACR,OAAOA,KCvBnB,IAEapK,GAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,cACVC,QAASC,IACTC,UAAU,IAeP,SAASgK,GAAYN,EAAUG,GAClC,OAAOlK,GACFgK,KAAK,CAAED,SAAUA,EAAUG,KAAMA,IACjCD,KAAK,CAAEK,OAAQ,IACfH,MAAK,SAACnJ,EAAKuJ,GAIR,OAHIvJ,GACAwJ,QAAQC,MAAMzJ,GAEXuJ,K,qkBCzBnB,IA2CavK,GAAK,IA3CAC,EAAQ,KA2CR,CAAc,CAC5BC,SAAU,aACVC,QAASC,IACTC,UAAU,IAGRqK,GAAoB,SAAOX,EAAUY,GAAjB,SAAA/J,EAAAC,OAAA,mDACtB8J,EAAG5E,GAAK6E,gBACRD,EAAGL,MAAQ,CAAC,CAACP,SAAUA,EAAUc,QAAS,EAAGC,OAAQ,KACjD,CAAC,QAAS,SAASC,SAASJ,EAAGK,UAHb,kCAAApK,EAAA,MAIZqK,GAAeN,IAJH,6DAQpBM,GAAiB,SAAON,GAAP,iBAAA/J,EAAAC,OAAA,uDACbX,EAAc0K,iBAA0B,SAAfD,EAAGK,SAAsB,OAAS,QAC3DE,EAAUC,IAFG,QAEiCR,EAAGK,SAFpC,eAAApK,EAAA,MAGbuK,IAAqB,CACvBC,KAAMT,EAAGrE,IACT+E,GAAG,GAAIH,EAAOhL,KALC,yBAAAU,EAAA,MAObuK,IAAuBR,EAAGrE,MAPb,OAQnBqE,EAAGrE,IAAH,GAAY4E,EAAOhL,EARA,6DAWhB,SAAS4J,GAAIC,GAChB,OAAO/J,GACFgK,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEC,MAAO,IACdC,MAAK,SAACnJ,EAAKuJ,GAIR,OAHIvJ,GACAwJ,QAAQC,MAAMzJ,GAEXuJ,KAuBZ,SAAee,GAAYvB,EAAUwB,EAAQC,EAAWX,GAAxD,mBAAAjK,EAAAC,OAAA,kEAAAD,EAAA,MACgBZ,GAAGc,UAAU,CAAE2K,IAAKF,EAAQxB,SAAUA,IAAY,SAAC/I,EAAKuJ,GAEvE,OADIvJ,GAAKwJ,QAAQC,MAAMzJ,GAChBuJ,MAHR,cACGmB,EADH,OAKGC,EAAeD,EAAK,GAAGE,QAAQC,WAAU,SAAAlB,GAAE,OAAIA,EAAG5E,IAAMyF,KACxDM,EAAaJ,EAAK,GAAGE,QAAQD,GAAcrB,MAAMuB,WAAU,SAAAlB,GAAE,OAAIA,EAAGZ,SAAWA,KACjFc,EAASa,EAAK,GAAGE,QAAQD,GAAcrB,MAAMwB,GAAYjB,UACxDa,EAAK,GAAGE,QAAQD,GAAcrB,MAAMwB,GAAYhB,SARlD,kBASI9K,GAAGQ,YAAY,CAACiL,IAAKF,GAArB,MAAkCG,EAAK,MAT3C,4DCtGP,IAEa1L,GAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,eACVC,QAASC,IACTC,UAAU,IAGP,SAAS0L,GAAahC,GACzB,OAAO/J,GACFgK,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEK,OAAQ,IACfH,MAAK,SAACnJ,EAAKuJ,GAIR,OAHIvJ,GACAwJ,QAAQC,MAAMzJ,GAEVuJ,KA4Bb,SAASyB,GAAYjC,EAAUO,EAAOJ,EAAM+B,EAAkBC,GACjE,OAAOlM,GAAGmB,YAAY,CAClB4I,SAAUA,EACVG,KAAMA,EACNI,MAAOA,EACP2B,iBAAkBA,EAClBC,kBAAmBA,ICpDpB,IAAMC,GAAa,SAACC,EAAQC,EAAOC,GAMtC,OALIF,EAAO7D,eAAe8D,GACtBD,EAAOC,GAASC,EAIbF,GAGEG,GAAe,SAACC,EAAKC,GAC9B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,I,qkBCAxD,IAEaxM,GAAK,IAFAC,EAAQ,KAER,CAAc,CAC5BC,SAAU,eACVC,QAASC,IACTC,UAAU,IAGP,SAAS2G,GAAO6F,GAAS,IAAD,gBACvB7L,EAAM,GAWV,IATI,MAAC6L,MAAQlG,WACT,SAAAkG,EAAOlG,WAAP,WAAiBmG,aAAjB,IAAyB5L,QAAS,KAClC,SAAA2L,EAAOlG,WAAP,WAAiBmG,aAAjB,IAAyB5L,QAAS,IAElCiL,GAAWnL,EAAK,WAAY,MAEtB,MAAN6L,KAAQhG,cAAe,SAAAgG,EAAOhG,cAAP,WAAoBiG,aAApB,IAA4B5L,QAAS,KAC5DiL,GAAWnL,EAAK,cAAe,MAE/B+L,OAAOC,KAAKhM,GAAKE,OAAS,EAC1B,MAAO,CAAE2J,SAAS,EAAON,KAAMvJ,GAEnC,IAAMuJ,EAAO,CACT5D,SAAQ,SAAEkG,EAAOlG,eAAT,EAAE,EAAiBmG,OAC3BjG,YAAW,SAAEgG,EAAOhG,kBAAT,EAAE,EAAoBiG,OACjCzG,QAAS,MAEb,OAAOrG,GAAGmB,YAAH,MAAoBoJ,IAAQ,SAACvJ,EAAK+B,GACrC,OAAI/B,EACO,CAAE6J,SAAS,EAAON,KAAM,IAE5B,CACHM,SAAS,EACTN,KAAMxH,MAKX,SAASkG,GAAKlD,EAAIkH,GACrB,IACoC,EAGG,EAGJ,EAP/B1C,EAAO,GACP0C,EAAI1E,eAAe,cACnBgC,EAAK5D,SAAL,SAAgBsG,EAAItG,eAApB,EAAgB,EAAcmG,QAE9BG,EAAI1E,eAAe,iBACnBgC,EAAK1D,YAAL,SAAmBoG,EAAIpG,kBAAvB,EAAmB,EAAiBiG,QAEpCG,EAAI1E,eAAe,aACnBgC,EAAKlE,QAAL,SAAe4G,EAAI5G,cAAnB,EAAe,EAAayG,QAEhC,OAAO9M,GAAGQ,YAAY,CAAEiL,IAAK1F,GAAM,CAAEmH,KAAK,MAAM3C,KAAU4C,OAAM,SAACnM,GAC7DwJ,QAAQ4C,IAAIpM,MASb,SAASqM,GAAQtH,GACpB,OAAO/F,GAAGc,UAAU,CAAE2K,IAAK1F,IC1DhB,SAASuH,GAAKpI,GACzB,MAA0CqI,mBAAS,IAAnD,WAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAgDF,mBAAS,IAAzD,WAAOG,EAAP,KAAyBC,EAAzB,KAiHA,OACI,eAAC7E,EAAA,EAAD,CAAMvF,MAAOyF,EAAOzB,KAApB,UACI,cAACmB,EAAA,EAAD,CACItC,OACIlB,EAAM0I,WACA,CAAEtH,IAAKpB,EAAM0I,YACbC,IAEVtK,MAAOyF,EAAOlB,iBAElB,cAAC,IAAD,CACI0B,MAAON,EAAa,MAAChE,OAAD,EAACA,EAAO5D,MAAMG,YAClCyE,QA1CM,8BAAAtF,EAAAC,OAAA,kEAAAD,EAAA,MACKkN,KAAoC,CACnDC,WAAYD,KAA6BE,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,KALC,WAQW,KAPrBpL,EADU,QAQHqL,UARG,oDAYM,QAAhB9I,IAASC,GAZC,gBAaV8I,MAAM,QAbI,uCAgBF/H,EAAMvD,EAAOuD,IACjBpB,EAAMoJ,cAAchI,GAjBd,YAAA1F,EAAA,MAkBeuK,IAA6B7E,EAAK,CACnDiI,SAAU,WACXpB,OAAM,SAACnM,GACNwJ,QAAQ4C,IAAIpM,OArBV,QAkBAwN,EAlBA,OAuBNtJ,EAAMuJ,SAASD,GAvBT,kDAyBNhE,QAAQ4C,IAAR,MAzBM,kEA2CNsB,WAAY,CAAExG,SAAU,IACxByB,YAAaX,EAAOrB,UACpBgH,KACI,cAAC,IAAD,CACIC,KAAK,QACLC,KAAM,GACNtK,MAAM,QACNhB,MAAO,CAAEuL,iBAAkB,OAIvC,cAAC,IAAD,CACIvL,MAAO,CAAE6D,MAAO,OAAWM,eAAgB,IAC3CN,MAAO,IAEX,cAAC,IAAD,CACI2H,YAAa7F,EAAa,MAAChE,OAAD,EAACA,EAAO5D,MAAMK,YACxCqN,SAAU,cAAC,IAAD,CAAMJ,KAAK,SAASC,KAAM,GAAItK,MAAM,SAC9C0K,MAAO/F,EAAa,MAAChE,OAAD,EAACA,EAAO5D,MAAMI,SAClCwN,WAAY,CAAE3K,MAAO,OACrB4K,oBAAoB,EACpBC,UAAW,GACXC,aAAc7B,EACd8B,WAAY,CAAEpH,SAAU,GAAI4G,iBAAkB,IAC9CS,MAAOrK,EAAMyB,SACbV,eAAgB,CAAEmB,MAAO,IAAKoI,WAAY,IAC1CC,aAAc,SAAChG,GACXvE,EAAMwK,YAAYjG,MAI1B,cAAC,IAAD,CACIsF,YAAa7F,EAAa,MAAChE,OAAD,EAACA,EAAO5D,MAAMO,eACxCmN,SAAU,cAAC,IAAD,CAAMJ,KAAK,OAAOC,KAAM,GAAItK,MAAM,SAC5C0K,MAAO/F,EAAa,MAAChE,OAAD,EAACA,EAAO5D,MAAMM,YAClCsN,WAAY,CAAE3K,MAAO,OACrB6K,UAAW,IACXD,oBAAoB,EACpBE,aAAc3B,EACd4B,WAAY,CAAEpH,SAAU,GAAI4G,iBAAkB,IAC9C7I,eAAgB,CAAEmB,MAAO,IAAKW,aAAc,GAC5CwH,MAAOrK,EAAM2B,YACb4I,aAAc,SAAChG,GACXvE,EAAMyK,eAAelG,MAI7B,cAAC,IAAD,CACImG,QAAQ,EACRpG,MAAON,EAAa,MAAChE,OAAD,EAACA,EAAO5D,MAAMW,KAClCiE,QAAS,SAACuD,IA9KN,iCAAA7I,EAAAC,OAAA,uDACRkJ,EADQ,SACG7E,EAAM6E,UADT,EACqB,EAC3B8F,GACa,IAAf3K,EAAM+D,KACA6G,GAAY5K,EAAM6E,SAAU,CACxBpD,SAAUzB,EAAMyB,SAChBE,YAAa3B,EAAM2B,cAEvBiJ,GACI,CACInJ,SAAUzB,EAAMyB,SAChBE,YAAa3B,EAAM2B,aAEvB3B,EAAM5D,MAbR,WAAAV,EAAA,MAeSiP,GAfT,WAgBW,KADjB9M,EAfM,QAgBD8H,QAhBC,wBAiBJ9H,EAAOwF,eAAe,aACtBkF,EAAiBvE,EAAa,MAAChE,OAAD,EAACA,EAAO5D,MAAMQ,eAE5CiB,EAAOwF,eAAe,gBACtBoF,EACIzE,EAAa,MAAChE,OAAD,EAACA,EAAO5D,MAAMS,mBAAmB,MAtB9C,mBAyBD,GAzBC,eA2BS,IAAbgI,IACAA,EAAWhH,EAAO0I,KACtBvG,EAAM6K,MAAMhG,GA7BJ,YAAAnJ,EAAA,MA8BFuK,IAAiCA,IAAjC,WAAwEpB,EAAY,CAACiG,eAAe,KA9BlG,cA+BJ,SAAA9K,EAAM+K,YAAN,IAAa/O,QAAS,GA/BlB,wBAgCAgP,EAAUtF,gBACRM,EAAUC,IAjCZ,WAiCmDpB,EAjCnD,kBAAAnJ,EAAA,MAkCEuK,IAA8BD,EAAM,CAAC8E,eAAe,IAAO7C,OAAM,SAACnM,GACpEwJ,QAAQ4C,IAAI,gCAnCZ,QAqCJjC,IACID,EAAI,IAAOgF,EAAP,OACJhL,EAAM+K,MACN,CACI1B,SAAU,WAGbnN,MAAK,WACF0O,GAAY/F,EAAU,CAClB1D,QAAS6E,EAAI,IAAOgF,EAAP,SAEZ9O,MAAK,SAACmJ,GAOK,IAAD,GANY,IAAfrF,EAAM+D,MACNlG,EAAOsD,QAAU6E,EAAI,IAAOgF,EAAP,OACrBhL,EAAMiL,WAAU,SAACC,GAAD,qBACTA,GADS,CAEZrN,QAGJmC,EAAMmL,kBAAN,SACInL,EAAMyB,eADV,EACI,EAAgBmG,QAGxB5H,EAAMoL,SAETnD,OAAM,SAACnM,GAEJ,OADAwJ,QAAQ4C,IAAI,YAAapM,IAClB,QAGlBmM,OAAM,SAACnM,GACJwJ,QAAQ4C,IAAI,kBAAmBpM,MApEnC,yBAuEe,IAAfkE,EAAM+D,KACN/D,EAAMiL,WAAU,SAACC,GAAD,qBAAiBA,GAAjB,CAA0BrN,OAE1CmC,EAAMmL,kBAAN,SAAwBnL,EAAMyB,eAA9B,EAAwB,EAAgBmG,QAE5C5H,EAAMoL,MA5EF,6DA+KAC,IAEJ7B,WAAY,CAAExG,SAAU,IACxByB,YAAaX,EAAOnB,QACpB2I,WAAW,EACX7B,KACI,cAAC,IAAD,CACIC,KAAK,OACLC,KAAM,GACNtK,MAAM,QACNhB,MAAO,CAAEuL,iBAAkB,U,qkBCnMpC,SAAS2B,GAAavL,GACjC,MAA0BqI,qBAA1B,WAAO0C,EAAP,KAAcxB,EAAd,KACA,EAAgClB,mBAAS,IAAzC,WAAO5G,EAAP,KAAiB+I,EAAjB,KACA,EAAoCnC,qBAApC,WAAOK,EAAP,KAAmBU,EAAnB,KACA,EAAsCf,mBAAS,IAA/C,WAAO1G,EAAP,KAAoB8I,EAApB,KACA,EAA8BpC,oBAAS,GAAvC,WAAO1C,EAAP,KAAgB6F,EAAhB,KACA,EAAoBnD,mBAAS,GAA7B,WAAOxH,EAAP,KAAWgK,EAAX,KAcMY,EAAY,CACdrP,KAAM4D,EAAM5D,KAEZqF,SAAUA,EACV+I,YAAaA,EAEbO,MAAOA,EACPxB,SAAUA,EAEVb,WAAYA,EACZU,cAAeA,EAEfzH,YAAaA,EACb8I,eAAgBA,EAEhB5J,GAAIA,EACJgK,MAAOA,GAGX,OACI,cAACjH,EAAA,EAAD,CAAMvF,MAAOyF,EAAOzB,KAApB,SACKsD,EACG,cAAChC,EAAD,SAAa8H,GAAb,IAAwBjH,MA9BtB,WACVgG,EAAY,IACZpB,EAAc,IACdG,EAAS,IACTkB,EAAe,IACfe,GAAW,IAyBmCzH,MAAM,KAE5C,cAACqE,GAAD,SACQqD,GADR,IAEI1H,MAAM,EACNmH,QAASlL,EAAMkL,QACfD,UAAWjL,EAAM0L,WACjBN,IAzCH,WACTI,GAAW,S,aCbJ3J,OAAWC,OAAO,CAC7B6J,UAAW,CACPtH,KAAM,EACNuH,OAAQ,GAEZC,QAAS,CACLvB,UAAW,GACXvH,UAAW,SACXT,WAAY,SACZsJ,OAAQ,GAEZE,UAAW,CACPrL,gBAAgB,WAEpBsL,SAAU,CAEN5J,OAAQ,IAGZ6J,QAAS,CACL1B,UAAW,GACXtH,SAAU,GACV4I,OAAQ,EACRvM,MAAO,SAEX4M,SAAU,CACN3N,WAAY,OACZe,MAAO,SAEX6M,SAAU,CACNnJ,UAAW,SACX1D,MAAO,SAEX0L,MAAO,CACH1G,KAAM,EACNnC,MAAO,KAEXiK,OAAQ,CACJ1L,gBAAiB,UACjB+B,eAAgB,GAChBL,OAAQ,GACRD,MAAO,IACPQ,aAAc,GACd0J,SAAU,UAEdC,WAAY,CACRhN,MAAO,QACP0D,UAAW,SACXuH,UAA2B,QAAhBlK,IAASC,GAAe,EAAI,IAE3CiM,SAAU,CACNvJ,UAAW,SACXT,WAAY,SACZiK,kBAAmB,OACnBC,kBAAmB,GACnBJ,SAAU,UAEdK,cAAe,CACXpI,KAAM,GAEVqI,UAAW,CACP3J,UAAW,SACXP,eAAgB,GAChBnD,MAAO,OACPsN,UAAW,UAEfC,UAAW,CACP/J,cAAe,IAEnBgK,iBAAkB,CACd9J,UAAW,SACX1D,MAAO,UACP2D,SAAU,MChDH,SAAS8J,GAAc9M,GAAQ,IAAD,EACzC,EAAkCqI,oBAAS,GAA3C,WAAO0E,EAAP,KAAkBC,EAAlB,KACA,EAA8B3E,qBAA9B,WAAO6C,EAAP,KAAgBQ,EAAhB,KACA,EAA4BrD,qBAA5B,WAAO4E,EAAP,KAAeC,EAAf,KACA,EAA0B7E,mBAAS,GAAnC,WAAO7H,EAAP,KAAc2M,EAAd,KACA,EAA6B9E,mBACzB+E,EAAkBpN,EAAM5D,MAAQA,GAAMoD,YAD1C,WAAO6N,EAAP,KAAgBC,EAAhB,KAGA,EAA4BjF,oBAAS,GAArC,WAAOkF,EAAP,KAAeC,EAAf,KAEMC,EAASC,iBAAO,MAChBzM,EAAK,SAAG0M,oBAAH,EAAG,EAAe1M,MACvBhB,EAAWC,cAEXiD,EAAepI,EAAQ,KACvBc,GAAgB,MAALoF,OAAA,EAAAA,EAAOpF,WAAYmE,EAAMnE,SACpCO,GAAY,MAAL6E,OAAA,EAAAA,EAAO7E,OAAQ4D,EAAM5D,KAC5BwR,GAAe,MAAL3M,OAAA,EAAAA,EAAO2M,UAAW5N,EAAM4N,QAClCC,GAAuB,MAAL5M,OAAA,EAAAA,EAAO6M,SAAP,MAAgB9N,OAAhB,EAAgBA,EAAO8N,OAE/CC,qBAAU,WAAO,IAAD,EACZC,KAAMC,mBAAkB,IACnBpS,IAAoB,MAARA,GAAA,SAAAA,EAAU+L,aAAV,IAAkB5L,QAAS,EACxCiE,EAAS,KJed,SAAayJ,GAChB,IAAMwE,EAAQ,IAAIC,OAAOzE,EAAM,KAC/B,OAAO5O,GAAGc,UAAU,CAAE6F,SAAU,CAAE2M,OAAQF,KIflCtD,CAAWqC,GAAQ/Q,MAAK,SAACmJ,GACrBqG,EAAWrG,GACX2H,GAAa,MAGrB,IAAMqB,EAAcC,IAAYC,iBAC5B,qBACA,WACI,OAAO,KAGf,OAAO,kBAAMF,EAAYG,YAC1B,CAACvB,EAAQpR,EAAUoE,IAEtB8N,qBAAW,WACPZ,EAASU,GAAmB,GAC5BP,EAAoB,IAAV9M,EAAc4M,EAAkBhR,GAAMoD,WAAa4N,EAAkBhR,GAAMuD,gBACtF,IAEH,IAmBmB8O,EAiBnB,OACI,eAAC7K,EAAA,EAAD,CAAMvF,MAAOyF,GAAO6H,UAApB,UACI,cAAC,IAAD,CACItM,MAAM,QACNhB,MAAO,CACHqQ,SAAU,WACVC,WAAY,MACZrE,UAAW,GACXsB,OAAQ,GAEZjC,KAAK,QACLF,KACI,CACIC,KAAM,eACNkF,KAAM,UACNvP,MAAM,UACNsK,KAAM,GACNtL,MAAO,CAACiM,UAAW,IAG3BtJ,QAAS,kBAAMf,EAAS,QAAS,CAC7BgB,MAAO,CAAEpF,SAAUA,EAAU+R,QAASA,QAG9C,eAAChK,EAAA,EAAD,CAAMvF,MAAOyF,GAAOgI,UAApB,UACA,eAAClI,EAAA,EAAD,CAAMvF,MAAOyF,GAAO+H,QAApB,UACI,cAAC,EAAD,CACI1I,aAAcA,EACdM,YAAaoL,IACb3L,YAAaY,GAAOiI,SACpBrI,WAAYI,GAAOiI,SACnB3I,MAAM,EACNE,UAAU,IAEd,cAAClF,EAAA,EAAD,CAAMC,MAAOyF,GAAOkI,QAApB,SACKoB,EAAkBhR,GAAMkD,MAAMzD,QAGvC,cAACuC,EAAA,EAAD,CAAMC,MAAOyF,GAAOoI,SAApB,SAA+BkB,EAAkBhR,GAAMmD,UACvD,cAACqE,EAAA,EAAD,CAAMvF,MAAOyF,GAAOwI,SAApB,SACI,cAACwC,EAAA,EAAD,CACIzQ,MAAOyF,GAAOqI,OACd4C,cAAe,GACf/N,QAAS,SAACuD,GA/ER,IAACyK,GAgFgB,IAAXzB,IAGJC,GAAU,GACVF,EACI,cAAC2B,EAAA,EAAD,CAAmB5P,MAAO,QAASsK,KAAM,YApFhD,KADEqF,EAuFWxO,EAAQ,KArF9BwO,EAAM,GAEVvB,EAAOyB,QAAQC,SAASH,EAAMxO,GAAO,KAwE7B,SAcI,cAACpC,EAAA,EAAD,CAAMC,MAAOyF,GAAOuI,WAApB,SAAiCgB,WAIzC,cAAC+B,EAAA,EAAD,CAAc/Q,MAAOyF,GAAO2I,cAA5B,SACKM,EACG,cAACkC,EAAA,EAAD,CACI5P,MAAO,OACPhB,MAAO,CAAEiM,UAAW,MAGxB,eAAC,IAAD,CACI+E,IAAK5B,EACL6B,cAAc,EACdC,eAAe,EACfnM,MAAI,EACJoM,eAAa,EACbhP,MAAOqN,GAAmB,EAC1B4B,iBAAiB,EACjBC,eAAgB,SAACnL,GAtGjB,IAACyK,EACjB7B,EADiB6B,EAuGezK,GArGhCoL,YAAW,WACK,IAARX,EACA1B,EAAUF,EAAkBhR,GAAMoD,YACnB,IAARwP,GACP1B,EAAUF,EAAkBhR,GAAMuD,cAEtC6N,GAAU,KACX,MAqFS,UAYI,eAACoC,EAAA,EAAD,WACI,cAAC,IAAD,CACI/F,YAAauD,EAAkBhR,GAAM0D,OACrC+P,oBAAqB/L,GAAO8I,UAC5BrC,aAAc,SAAChG,GACX2I,EAAU3I,IAEd8F,MAAO4C,EACP7C,WAAYtG,GAAO+I,mBAEtB3B,GAAWA,EAAQlP,OAAS,GAxGlCyS,EAyGmBvD,EAxG3BuD,EAAKqB,KAAI,SAACrK,EAAIvH,GACjB,OACI,cAAC6B,EAAD,CACIS,MAAOtC,EAEPrC,SAAUA,EACVgF,GAAI4E,EAAGc,IACP9E,SAAUgE,EAAGhE,SACbE,YAAa8D,EAAG9D,YAChBR,QAASsE,EAAGtE,QACZ/E,KAAMA,GANDqJ,EAAGc,SAsGI,cAACnI,EAAA,EAAD,CAAMC,MAAOyF,GAAO4I,UAApB,SACKU,EAAkBhR,GAAMwD,eAIrC,cAACgQ,EAAA,EAAD,UACI,cAACrE,GAAD,CACIL,QAASA,EACTQ,WAAYA,EACZtP,KAAMA,MAGd,cAACwT,EAAA,EAAD,Y,yBC/MT/N,OAAWC,OAAO,CAC7B+J,QAAS,CACL1J,OAAQ,IACRmI,UAAW,IAEfqB,UAAW,CACPtH,KAAM,EACN/B,WAAY,SACZ8B,aAAc,UAElB4H,QAAS,CACLhJ,SAAU,GACV1E,WAAY,OACZuE,aAAc,GACd+G,iBAAkB,GAClBU,WAAY,GACZvH,UAAW,SACX1D,MAAO,SAEXsC,YAAa,CACTqB,SAAU,GACVH,aAAc,GACd+G,iBAAkB,GAClBA,iBAAkB,GAClB7G,UAAW,SACX1D,MAAO,QAEX0Q,UAAW,CACP5N,OAAQ,GACR6N,YAAa,OACbtN,aAAc,GACdrD,MAAO,QACPoB,gBAAiB,QACjBwP,cAAe,GACfC,aAAc,EACdC,aAAc,CACVhO,OAAQ,EACRD,MAAO,GAEXA,MAAO,IACPa,UAAW,SACXqN,UAAW,IAEfrF,MAAO,CACH1G,KAAM,EACNnC,MAAO,KAEXmO,gBAAiB,CACb/N,WAAY,UACZJ,MAAO,KAEXiK,OAAQ,CACJ1L,gBAAiB,yBACjBiC,aAAc,GACdR,MAAO,GACPyM,WAAY,GACZxM,OAAQ,IAEZkK,WAAY,CACRhN,MAAO,QACP0D,UAAW,UAEf+K,MAAO,CACHzJ,KAAM,EACNiM,QAAS,IAEbC,QAAS,CACLnM,aAAc,SACdlC,MAAO,OACP+B,cAAe,MACfC,SAAU,SACVsM,eAAgB,YCnDT,SAASrR,GAAea,GACnC,MAA0BqI,mBAAS,IAAnC,WAAOoI,EAAP,KAAcC,EAAd,KACA,EAAkCrI,oBAAS,GAA3C,WAAO0E,EAAP,KAAkBC,EAAlB,KACA,EAAgC3E,oBAAS,GAAzC,WAAOsI,EAAP,KAAiBC,EAAjB,KACA,EAAkCvI,oBAAS,GAA3C,WAAOwI,EAAP,KAAkBC,EAAlB,KACA,EAAgCzI,oBAAS,GAAzC,WAAO0I,EAAP,KAAiBC,EAAjB,KACA,EAAgC3I,mBAAS,IAAzC,WAAOxM,EAAP,KAAiBoV,EAAjB,KAEAlD,qBAAU,WnBRP,EAAArS,EAAAC,OAAA,yEACIb,EAAGc,UAAU,CAAEC,SAAU,CAAEL,SAAS,KAAU,SAACM,EAAKC,GACvD,OAAOA,MAFR,4DmBUMG,MAAK,SAACgV,GAAS,IAAD,EACX,SAAIA,EAAI,KAAJ,EAAQrV,WACRoV,EAAYC,EAAI,GAAGrV,UACnBmV,GAAY,IAEhBJ,GAAY,MAEf3I,OAAM,SAACnM,GACJwJ,QAAQ4C,IAAIpM,GACZ8U,GAAY,QAErB,IAEH,IAAM3Q,EAAWC,cAEjB6N,qBAAU,WACN,IAUMM,EAAcC,IAAYC,iBAC5B,qBAXe,WACf,OAAOnT,GAAY,GACdc,MAAK,WAEF,OADA+D,EAAS,MACF,KAEVgI,OAAM,SAACnM,GACJ,OAAO,QAOnB,OAAO,kBAAMuS,EAAYG,YAC1B,IAEH,IAAM2C,EAAgB,SAACV,GACnBzD,GAAa,GACb,IAAInR,GAAgB,MAAL4U,OAAA,EAAAA,EAAO7I,SAAU,KAC5B/L,IAAoB,MAARA,OAAA,EAAAA,EAAUG,SAAU,IAAa,MAARH,OAAA,EAAAA,EAAUG,QAAS,GnBlD7D,SAA2ByU,GAA3B,SAAA/U,EAAAC,OAAA,yEACIb,EAAGQ,YAAY,CAAEO,SAAU,CAAEL,SAAS,IAAU,CAAEK,SAAU4U,KADhE,4DmBmDKW,CAAevV,GACVK,MAAK,SAACmV,GACHrE,GAAa,GACb0D,EAAS7U,GACToV,EAAYpV,GACZiV,GAAa,MAEhB7I,OAAM,SAACnM,GACJwJ,QAAQ4C,IAAIpM,MAGpBkR,GAAa,IAIrB,OAAI+D,EACO,cAACjE,GAAD,CAAejR,SAAUA,EAAUO,KAAM4D,EAAM5D,KAAMwR,QAAS5N,EAAM4N,QAASE,MAAO,IAE3F6C,EACO,cAAC/M,EAAA,EAAD,CAAMvF,MAAOyF,GAAO6H,YAE1BkF,EA+CM,cAAC/D,GAAD,CAAejR,SAAUA,EAAUO,KAAM4D,EAAM5D,KAAMwR,QAAS5N,EAAM4N,QAASE,MAAO,IA7CvF,eAAClK,EAAA,EAAD,CAAMvF,MAAOyF,GAAO6H,UAApB,UACI,cAAC/H,EAAA,EAAD,CAAMvF,MAAOyF,GAAO+H,QAApB,SACI,cAACrI,EAAA,EAAD,CACItC,OAAQoQ,KACR/N,WAAW,UACXlF,MAAOyF,GAAOiH,UAGtB,cAAC3M,EAAA,EAAD,CAAMC,MAAOyF,GAAOkI,QAApB,SACKuF,EAAavR,EAAM5D,MAAM+C,iBAE9B,cAACf,EAAA,EAAD,CAAMC,MAAOyF,GAAOnC,YAApB,SACK4P,EAAavR,EAAM5D,MAAMgD,mBAE9B,eAACwE,EAAA,EAAD,CAAMvF,MAAOyF,GAAOyM,QAApB,UACI,cAACiB,EAAA,EAAD,CACIC,sBAAsB,cACtBpT,MAAOyF,GAAOiM,UACd1F,MAAOoG,EACP5G,YAAa7F,EAAchE,EAAM5D,MAAME,aACvC4N,UAAW,GACXK,aAAc,SAAChG,GACXmM,EAASnM,MAGjB,cAAC,IAAD,CACID,MAAOyI,EACH,cAACkC,EAAA,EAAD,CACI5P,MAAM,QACNsK,KAAK,QACL+H,WAAW,IAGf,KAEJ1Q,QAAS,SAACuD,GACN4M,EAAcV,IAElBhM,YAAaX,GAAOqI,OACpB3C,WAAY1F,GAAOuI,mB,yBC7F5BsF,GAhCC,SAAC3R,GACb,IAAMmD,EAAepI,EAAQ,KACvB+I,EAAS,CAAE5B,MAAO,IAAKoI,UAAW,KACxC,OACI,eAAC1G,EAAA,EAAD,CAAMvF,MAAO2B,EAAM3B,MAAnB,UACI,cAAC,EAAD,CACI8E,aAAcA,EACdD,YAAaY,EACbJ,WAAYI,EACZL,YAAamO,OAEjB,cAACxT,EAAA,EAAD,CACIC,MAAO,CACHiM,UAAW,IACXjL,MAAO,UACP6C,MAAO,IACPa,UAAW,UALnB,SAQK/C,EAAMrC,OAEX,cAACS,EAAA,EAAD,CAAMC,MAAO,CAAEiM,UAAW,KAA1B,SACI,cAAC2E,EAAA,EAAD,CACI5P,MAAO,UACPsK,KAAM,QACNtL,MAAO,CAAEiM,UAAW,Y,8HC7BzBzI,OAAWC,OAAO,CAC7B+J,QAAS,CACL2E,eAAgB,SAChBlO,WAAY,UAEhBwL,MAAO,CACH3L,OAAQ,OACRmO,QAAS,GACThO,WAAY,UAEhBuP,SAAU,CACN1P,OAAQ,OACRG,WAAY,SACZ7B,gBAAiB,WAErB6D,MAAO,CACHjF,MAAO,QACP2D,SAAU,GACV1E,WAAY,OACZyE,UAAW,SACXF,aAAc,IAElBlF,KAAM,CACF0B,MAAO,QACP2D,SAAU,GACVd,MAAO,MACPa,UAAW,UAEf+O,SAAU,CACNzS,MAAO,QACP2D,SAAU,GACV1E,WAAY,OACZyE,UAAW,SACXF,aAAc,IAElBkP,QAAS,CACL1S,MAAO,QACP2D,SAAU,GACVd,MAAO,MACPa,UAAW,UAEfgI,MAAO,CACH5I,OAAQ,MACRU,aAAc,GACdyH,UAAW,GACX0H,YAAa,GAEjB7F,OAAQ,CACJ7B,UAAW,GACX7J,gBAAiB,QACjBiC,aAAc,GACduP,YAAa,EACb9P,OAAQ,IAEZkK,WAAY,CACRhN,MAAO,WAEXgR,gBAAiB,CACbnO,MAAO,OCxCA,SAASgQ,GAASlS,GAC7B,IAAMC,EAAWC,cAEjB,OACI,mCACI,eAAC,IAAD,CACI7B,MAAOyF,GAAO+H,QACdyD,cAAc,EACdG,iBAAiB,EACjBrM,MAAM,EAJV,UAMI,eAACQ,EAAA,EAAD,CAAMvF,MAAOyF,GAAOgK,MAApB,UACI,cAACtK,EAAA,EAAD,CACItC,OAAQiR,KACR5O,WAAW,UACXlF,MAAOyF,GAAOiH,QAElB,cAAC3M,EAAA,EAAD,CAAMC,MAAOyF,GAAOQ,MAApB,SACKiN,EAAavR,EAAM5D,MAAMmC,cAE9B,cAACH,EAAA,EAAD,CAAMC,MAAOyF,GAAOnG,KAApB,SACK4T,EAAavR,EAAM5D,MAAMoC,oBAIlC,eAACoF,EAAA,EAAD,CAAMvF,MAAOyF,GAAO+N,SAApB,UACI,cAACrO,EAAA,EAAD,CACItC,OAAQkR,KACR7O,WAAW,UACXlF,MAAOyF,GAAOiH,QAElB,cAAC3M,EAAA,EAAD,CAAMC,MAAOyF,GAAOgO,SAApB,SACKP,EAAavR,EAAM5D,MAAMqC,cAE9B,cAACL,EAAA,EAAD,CAAMC,MAAOyF,GAAOiO,QAApB,SACKR,EAAavR,EAAM5D,MAAMsC,kBAIlC,eAACkF,EAAA,EAAD,CAAMvF,MAAOyF,GAAOgK,MAApB,UACI,cAACtK,EAAA,EAAD,CACItC,OAAQmR,KACR9O,WAAW,UACXlF,MAAOyF,GAAOiH,QAElB,cAAC3M,EAAA,EAAD,CAAMC,MAAOyF,GAAOQ,MAApB,SACKiN,EAAavR,EAAM5D,MAAMuC,cAE9B,cAACP,EAAA,EAAD,CAAMC,MAAOyF,GAAOnG,KAApB,SACK4T,EAAavR,EAAM5D,MAAMwC,oBAIlC,eAACgF,EAAA,EAAD,CAAMvF,MAAOyF,GAAO+N,SAApB,UACI,cAACrO,EAAA,EAAD,CACItC,OAAQoR,KACR/O,WAAW,UACXlF,MAAOyF,GAAOiH,QAElB,cAAC3M,EAAA,EAAD,CAAMC,MAAOyF,GAAOgO,SAApB,SACKP,EAAavR,EAAM5D,MAAMyC,cAE9B,cAACT,EAAA,EAAD,CAAMC,MAAOyF,GAAOiO,QAApB,SACKR,EAAavR,EAAM5D,MAAM0C,oBAIlC,eAAC8E,EAAA,EAAD,CAAMvF,MAAOyF,GAAOgK,MAApB,UACI,cAACtK,EAAA,EAAD,CACItC,OAAQqR,KACRhP,WAAW,UACXlF,MAAOyF,GAAOiH,QAElB,cAAC3M,EAAA,EAAD,CAAMC,MAAOyF,GAAOQ,MAApB,SACKiN,EAAavR,EAAM5D,MAAM2C,cAE9B,cAACX,EAAA,EAAD,CAAMC,MAAOyF,GAAOnG,KAApB,SACK4T,EAAavR,EAAM5D,MAAM4C,kBAIlC,eAAC4E,EAAA,EAAD,CAAMvF,MAAOyF,GAAO+N,SAApB,UACI,cAACrO,EAAA,EAAD,CACItC,OAAQsR,KACRjP,WAAW,UACXlF,MAAOyF,GAAOiH,QAElB,cAAC3M,EAAA,EAAD,CAAMC,MAAOyF,GAAOgO,SAApB,SACKP,EAAavR,EAAM5D,MAAM6C,iBAE9B,cAAC2E,EAAA,EAAD,CAAMvF,MAAOyF,GAAOuM,gBAApB,SACI,cAAC,IAAD,CACI/L,MAAOiN,EAAavR,EAAM5D,MAAM8C,eAChCuF,YAAaX,GAAOqI,OACpBpL,eAAgB+C,GAAOuM,gBACvBrP,QAAS,WACLyR,GAAmB,GACnBxS,EAAS,YAAa,CAClBgB,MAAO,CAAE2M,QAAS5N,EAAM4N,YAGhCpE,WAAY1F,GAAOuI,uB,6CCxGlCjQ,GAAO,CAChBC,GAAI,CACAqW,OAAQ,6BACRC,OAAQ,qBACRC,aAAc,eACdC,OAAQ,0BACRC,QAAS,0EACTC,SAAU,oBACVC,MAAO,iCACPC,MAAO,kDACPC,MAAO,+CACPC,MAAO,uCACPC,MAAO,+BACPC,MAAO,yCACPC,MAAO,+BACPC,MAAO,uCACPC,MAAO,iCACPC,OAAQ,2BACRC,OAAQ,qCACRC,OAAQ,2BACRC,OAAQ,gCACRC,OAAQ,yDACRC,OAAQ,SACRC,YAAa,8CACbC,kBAAmB,uCACnBC,oBAAqB,gDACrBC,mBAAoB,gGACpBC,wBAAyB,+EACzBC,gBAAiB,8CACjBC,eAAgB,oDAChBC,kBAAmB,uDACnBC,iBAAkB,gDAGtB9W,GAAI,CACAiV,OAAQ,kBACRC,OAAQ,kBACRC,aAAc,eACdC,OAAQ,wBACRC,QAAS,yEACTC,SAAU,kBACVC,MAAO,uBACPC,MAAO,gCACPC,MAAO,4CACPC,MAAO,iCACPC,MAAO,oBACPC,MAAO,6BACPC,MAAO,qBACPC,MAAO,2BACPC,MAAO,sBACPC,OAAQ,oBACRC,OAAQ,6BACRC,OAAQ,4BACRC,OAAQ,2BACRC,OAAQ,iDACRC,OAAQ,OACRC,YAAa,2CACbC,kBAAmB,gCACnBC,oBAAqB,gDACrBC,mBAAoB,+CACpBC,wBAAyB,qDACzBC,gBAAiB,gCACjBC,eAAgB,wCAChBC,kBAAmB,8CACnBC,iBAAkB,mCC/EX1S,OAAWC,OAAO,CAC7B6J,UAAW,CACPxJ,OAAQ,OACR1B,gBAAiB,UACjB6B,WAAY,UAEhBkS,OAAQ,CACJlK,UAAW,MACXhI,WAAY,SACZS,UAAW,UAEf0R,KAAM,CACFvS,MAAO,IACPC,OAAQ,KAEZuS,KAAM,CACFpK,UAAW,KACXjG,KAAM,EACNxB,aAAc,IAElBsJ,OAAQ,CACJjK,MAAO,IACPC,OAAQ,GACR1B,gBAAiB,QACjBpB,MAAO,UACPmR,eAAgB,aAChB9N,aAAc,IAElB2N,gBAAiB,CACb3N,aAAc,GACdJ,WAAY,SACZO,aAAc,IAElB8R,SAAU,CACNrK,UAAW,MACXtH,SAAU,GACV3D,MAAO,QACP0D,UAAW,SACX4J,UAAW,UAEfiI,aAAc,CACVvV,MAAO,MACPf,WAAY,OACZyE,UAAU,SACVuH,UAAW,GACXV,iBAAkB,MChCX,SAASiL,GAAK7U,GACzB,IAAMC,EAAWC,cAEjB,OACI,eAAC0P,EAAA,EAAD,CAAYvR,MAAOyF,GAAO4Q,KAAMI,8BAA8B,EAA9D,UACI,cAAC,IAAD,CACIxQ,MAAOyQ,GAAS/U,EAAM5D,MAAMsW,OAC5BjO,YAAaX,GAAOqI,OACpB3C,WAAY,CAAEnK,MAAO,UAAW0D,UAAW,SAAUC,SAAU,IAC/DjC,eAAgB+C,GAAOuM,gBACvB5G,KACI,cAAC,IAAD,CACIC,KAAM,iBACNkF,KAAM,UACNvP,MAAO,UACPsK,KAAM,GACNtL,MAAO,CAAEqG,YAAa,GAAIiK,WAAY,MAG9CjE,QAAM,EACN1J,QAAS,0BAAAtF,EAAAC,OAAA,oDACDqE,EAAMgV,QADL,kCAAAtZ,EAAA,eACoBsE,EAAMgV,cAD1B,EACoB,EAAeC,eADnC,OAELhV,EAAS,aAAc,CACnBgB,MAAO,CAAEpF,SAAUmE,EAAMnE,SAAUO,KAAM4D,EAAM5D,KAAMwR,QAAS5N,EAAM4N,WAHnE,+DAOb,cAAC,IAAD,CACItJ,MAAOyQ,GAAS/U,EAAM5D,MAAMuW,OAC5BlO,YAAaX,GAAOqI,OACpB3C,WAAY,CAAEnK,MAAO,UAAW2D,SAAU,IAC1CjC,eAAgB+C,GAAOuM,gBACvB6E,mBAAoB,CAAExQ,YAAa,IACnC+E,KACI,cAAC,IAAD,CACIC,KAAM,qBACNkF,KAAM,UACNvP,MAAO,UACPsK,KAAM,GACNtL,MAAO,CAAEqG,YAAa,GAAIiK,WAAY,MAG9CjE,QAAM,EACN1J,QAAS,WACLmU,KAAgC,CAACC,UAAU,IAAQlZ,MAAM,SAAAqI,GACrDvE,EAAMqV,cAAc9Q,EAAEnD,WAIlC,cAAC,IAAD,CACIkD,MAAOyQ,GAAS/U,EAAM5D,MAAM2W,SAC5BtO,YAAaX,GAAOqI,OACpB3C,WAAY,CAAEnK,MAAO,UAAW2D,SAAU,IAC1CjC,eAAgB+C,GAAOuM,gBACvB6E,mBAAoB,CAAExQ,YAAa,IACnC+E,KACI,cAAC,IAAD,CACIC,KAAM,UACNkF,KAAM,WACNvP,MAAO,UACPsK,KAAM,GACNtL,MAAO,CAAEqG,YAAa,GAAIiK,WAAY,MAG9C3N,QAAS,kBAAMhB,EAAM4N,SAAQ,SAAA0H,GAAI,MAAY,MAARA,EAAe,KAAO,SAC3D5K,QAAM,IAEV,cAAC,IAAD,CACIpG,MAAOyQ,GAAS/U,EAAM5D,MAAMwW,aAC5BnO,YAAaX,GAAOqI,OACpB3C,WAAY,CAAEnK,MAAO,UAAW2D,SAAU,IAC1CjC,eAAgB,CAAC+C,GAAOuM,gBAAiB,CAACxN,aAAc,KACxDqS,mBAAoB,CAAExQ,YAAa,IACnC+E,KACI,cAAC,IAAD,CACIC,KAAM,eACNkF,KAAM,UACNvP,MAAO,UACPsK,KAAM,GACNtL,MAAO,CAAEqG,YAAa,GAAIiK,WAAY,MAG9CjE,QAAM,EACN1J,QAAS,oBAAAtF,EAAAC,OAAA,kEAAAD,EAAA,MACCsE,EAAMgV,QAAQC,eADf,OAELhV,EAAS,aAFJ,+DAKb,cAAC,IAAD,CACIqE,MAAOyQ,GAAS/U,EAAM5D,MAAMyW,OAC5BpO,YAAaX,GAAOqI,OACpB3C,WAAY,CAAEnK,MAAO,UAAW2D,SAAU,IAC1CjC,eAAgB+C,GAAOuM,gBACvB6E,mBAAoB,CAAExQ,YAAa,IACnC+E,KACI,cAAC,IAAD,CACIC,KAAM,cACNkF,KAAM,UACNvP,MAAO,UACPsK,KAAM,GACNtL,MAAO,CAAEqG,YAAa,GAAIiK,WAAY,MAG9CjE,QAAM,EACN1J,QAAS,kBAAMuU,KAAQC,QAAQ,6CAEnC,cAAC,IAAD,CAAMnX,MAAOyF,GAAO6Q,SAApB,SAAgCI,GAAS/U,EAAM5D,MAAM0W,aCzH1D,IAAM2C,GAAU,SAACC,EAAQ9U,GAC5B,IAAKA,IAAQ8U,EAAQ,OAAQ,EAG7B,IAFA,IAAIC,EAAkB,GAClBC,EAAI,EACC1X,EAAI,EAAGA,EAAIwX,EAAO1Z,OAAQkC,IAC3B0C,EAAI5E,SAAW4Z,IAAGA,EAAI,GAC1BD,GAAmBE,OAAOC,aAAcJ,EAAOK,WAAW7X,GAAK0C,EAAImV,WAAWH,GAAKhV,EAAI5E,QAE3F,OAAQ2Z,GC2BNK,GAAc,SAACC,GACjB,IAAIC,EAAI,IAAIC,KAAKF,GACjB,OAAOC,aAAaC,OAASC,MAAMF,IAGjCG,GAAe,SAAOjV,GAAP,SAAA1F,EAAAC,OAAA,kEAAAD,EAAA,MACJuK,IAA6B7E,EAAK,CAC3CiI,SAAU,YAFG,qGAMfiN,GAAa,SAAO9P,GAAP,qBAAA9K,EAAAC,OAAA,gDACNuC,EAAI,EADE,YACCA,EAAIsI,EAAKxK,QADV,iBAELyJ,EAAKe,EAAKtI,GACP0X,EAAI,EAHF,YAGKA,EAAInQ,EAAGiB,QAAQ1K,QAHpB,sBAIDuI,EAAIkB,EAAGiB,QAAQkP,IACfxU,IALC,mCAAA1F,EAAA,MAMW2a,GAAa9R,EAAEnD,MAN1B,OAMHmD,EAAEnD,IANC,eAG4BwU,IAH5B,uBACkB1X,IADlB,gDASPsI,GATO,8DAYb+P,GAAY,SAAOrO,GAAP,iBAAAxM,EAAAC,OAAA,gDACLuC,EAAI,EADC,YACEA,EAAIgK,EAAIlM,QADV,uBAEJyJ,EAAKyC,EAAIhK,GAFL,WAAAxC,EAAA,MAGM2a,GAAa5Q,EAAGO,OAHtB,OAGVP,EAAGO,KAHO,cACkB9H,IADlB,+CAKNgK,GALM,8DAQZsO,GAAoB,SAAC/Q,EAAIZ,GAC3B,SAAKY,EAAGpC,eAAe,aAAeoC,EAAGZ,WAAaA,QACjDY,EAAGpC,eAAe,UAAoC,IAAzB2S,GAAYvQ,EAAGT,YAC5CS,EAAGpC,eAAe,UAAgC,kBAAboC,EAAGL,YACxCK,EAAGpC,eAAe,qBAAsD,mBAAxBoC,EAAGsB,uBACnDtB,EAAGpC,eAAe,sBAAwD,mBAAzBoC,EAAGuB,uBACpDvB,EAAGpC,eAAe,QAA4B,kBAAXoC,EAAGc,UAMlCkQ,GAA0B,SAAC9O,GAEpC,IADA,IAAMG,EAAO,CAAC,MAAO,cAAe,WAAY,UAAW,cAClD5J,EAAI,EAAGA,EAAI4J,EAAK9L,OAAQkC,IAAK,CAClC,IAAMuH,EAAKqC,EAAK5J,GAChB,IAAkC,IAA9ByJ,EAAOtE,eAAeoC,GACtB,OAAO,EAEf,OAAO,GAOEiR,GAAoB,SAAO7R,GAAP,SAAAnJ,EAAAC,OAAA,kEAAAD,EAAA,MAChBib,GAAU/a,UAAU,CAAE2K,IAAK1B,KADX,qGAIpB+R,GAAY,SAAOpQ,EAAM3B,GAAb,6CAAAnJ,EAAAC,OAAA,gDACfkb,EAAW,CAAC,OAAQ,UAAW,WAAY,OAC3CC,EAAc,CAAC,UAAW,WAAY,KAAM,SACzC5Y,EAAI,EAHQ,YAGLA,EAAIsI,EAAKxK,QAHJ,iBAIXyJ,EAAKe,EAAKtI,GACP0X,EAAI,EALI,YAKDA,EAAIiB,EAAS7a,QALZ,oBAMP+a,EAAIF,EAASjB,IACU,IAAzBnQ,EAAGpC,eAAe0T,GAPT,2CAO8B,GAP9B,QAKoBnB,IALpB,uBASRK,EAAI,EATI,aASDA,EAAIxQ,EAAGiB,QAAQ1K,QATd,uBAUP0K,EAAUjB,EAAGiB,QAAQuP,IACf5S,eAAe,QAAUqD,EAAQrD,eAAe,aAAeqD,EAAQrD,eAAe,aAXrF,oBAYJqD,EAAQrD,eAAe,OAZnB,2CAYkC,GAZlC,WAaCqD,EAAQrD,eAAe,YAbxB,2CAa4C,GAb5C,WAcCqD,EAAQrD,eAAe,YAdxB,2CAc4C,GAd5C,QAgBJuS,EAAI,EAhBA,aAgBGA,EAAIkB,EAAY9a,QAhBnB,oBAiBHgb,EAAIF,EAAYlB,IACY,IAA9BlP,EAAQrD,eAAe2T,GAlBlB,2CAkBuC,GAlBvC,QAgB2BpB,IAhB3B,2BAoBkB,kBAApBlP,EAAQuQ,SAAoD,KAA5B,SAAAvQ,EAAQuQ,cAAR,IAAiBjb,QApB/C,2CAoBoE,GApBpE,aAqBmB,kBAArB0K,EAAQwQ,iBAAyB,SAAOxQ,EAAQwQ,eAAf,EAAO,EAAkBlb,QAAS,IArBjE,2CAqB4E,GArB5E,WAsBgB,kBAAlB0K,EAAQtB,OAAkD,KAA5B,SAAAsB,EAAQuQ,cAAR,IAAiBjb,QAtB7C,2CAsBkE,GAtBlE,QAuBTmb,GAAe,EACVjB,EAAI,EAxBA,aAwBGA,EAAIxP,EAAQtB,MAAMpJ,QAxBrB,qBAyBHoJ,EAAQsB,EAAQtB,MAAM8Q,IAClBrR,WAAaA,IAAUsS,GAAe,GAC3C/R,EAAM/B,eAAe,YA3BjB,2CA2BqC,GA3BrC,WA4BJ+B,EAAM/B,eAAe,YAAuC,kBAAlB+B,EAAMO,QA5B5C,2CA4ByE,GA5BzE,WA6BJP,EAAM/B,eAAe,WAAsC,kBAAlB+B,EAAMO,QA7B3C,2CA6BwE,GA7BxE,QAwB6BuQ,IAxB7B,2BA+BRiB,EA/BQ,2CA+Ba,GA/Bb,QASsBlB,IATtB,wBAGY/X,IAHZ,iDAkCd,GAlCc,8DAqCZkZ,GAAc,SAACC,EAAQxS,GAChC,GAAsB,kBAAXwS,EAAqB,OAAO,EACvC,IAAK,IAAInZ,EAAI,EAAGA,EAAImZ,EAAOrb,OAAQkC,IAC/B,IAAKsY,GAAkBa,EAAOnZ,GAAI2G,GAAW,OAAO,EACxD,OAAO,GAGEyS,GAAa,SAACC,EAAO1S,GAC9B,GAAqB,kBAAV0S,EAAoB,OAAO,EACtC,IAAK,IAAIrZ,EAAI,EAAGA,EAAIqZ,EAAMvb,OAAQkC,IAC9B,IAAKsY,GAAkBe,EAAMrZ,GAAI2G,GAAW,OAAO,EACvD,OAAO,GAGE2S,GAAkB,SAACC,EAAY5S,GACxC,GAA0B,kBAAf4S,EAAyB,OAAO,EAC3C,IAAK,IAAIvZ,EAAI,EAAGA,EAAIuZ,EAAWzb,OAAQkC,IAAK,CACxC,IAAMuH,EAAKgS,EAAWvZ,GACtB,IAAKuH,EAAGpC,eAAe,QAA4B,kBAAXoC,EAAGc,IAAkB,OAAO,EACpE,IAAKd,EAAGpC,eAAe,SAA8B,kBAAZoC,EAAGiE,MAAqBjE,EAAGiE,KAAK1N,OAAS,EAAG,OAAO,EAC5F,IAAKyJ,EAAGpC,eAAe,SAA8B,kBAAZoC,EAAGO,MAAqBP,EAAGO,KAAKhK,OAAS,IAAK,OAAO,EAC9F,IAAKyJ,EAAGpC,eAAe,aAAeoC,EAAGZ,WAAaA,EAAU,OAAO,EACvE,IAAKY,EAAGpC,eAAe,UAAoC,IAAzB2S,GAAYvQ,EAAGT,MAAiB,OAAO,EAE7E,OAAO,GAGE0S,GAAe,SAAO/P,EAAQgQ,GAAf,iBAAAjc,EAAAC,OAAA,oDAET,IAAXgc,EAFoB,kCAAAjc,EAAA,MAGduK,IAAiCA,IAAjC,WAAwE0B,EAAOpB,IAAO,CAACuE,eAAe,KAHxF,UAMpB3J,EAAU,MACVwG,EAAOxG,QAPa,wBAQpBA,EAAUuE,gBACJM,EAAUC,IATI,WASmC0B,EAAOpB,IAT1C,iBAAA7K,EAAA,MAUduK,IAA8BD,EAAM,CAAC8E,eAAe,IAAO7C,OAAM,SAAAnM,GACnEwJ,QAAQ4C,IAAI,oCAXI,0BAAAxM,EAAA,MAaduK,IAA8BD,EAAI,IAAO7E,EAAP,OAAsBwG,EAAOxG,QAAS,CAAEkI,SAAU,WAAYnN,MAAK,SAAAuJ,GACvGtE,EAAU6E,EAAI,IAAO7E,EAAP,UACf8G,OAAM,SAAAnM,GACLqF,EAAU,SAhBM,YAoBT,IAAXwW,EApBoB,0CAqBbhB,GAAU1a,YACb,CACIsK,IAAKoB,EAAOpB,IACZpF,QAASA,EACTQ,aAAmB,MAANgG,OAAA,EAAAA,EAAQhG,cAAe,KACpCF,SAAUkG,EAAOlG,YA1BL,iCA8BbkV,GAAUrb,YAAY,CAACiL,IAAKoB,EAAOpB,KAAM,CAC5CyB,KAAM,CACF7G,QAASA,EACTQ,aAAmB,MAANgG,OAAA,EAAAA,EAAQhG,cAAe,KACpCF,SAAUkG,EAAOlG,aAlCL,8DAuCfmW,GAAa,SAAOpR,GAAP,mBAAA9K,EAAAC,OAAA,gDAClBuV,GAAM,EADY,WAEbhT,GAFa,uBAAAxC,EAAAC,OAAA,uDAGZ8J,EAAKe,EAAKtI,GACV8H,EAAUC,IAJE,WAIqCR,EAAGZ,SAJxC,mBAAAnJ,EAAA,MAKZuK,IAA8BD,EAAM,CAAC8E,eAAe,IAAO7C,OAAM,SAAAnM,GACnEwJ,QAAQ4C,IAAI,oCANE,kBAQT0N,GARS,mBAAAla,EAAAC,OAAA,qDASR4I,EAAIiC,EAAKtI,GAAGwI,QAAQkP,IACpBvS,eAAe,OAVP,uBAYNrI,EAAW0K,gBAZL,WAAAhK,EAAA,MAcJuK,IAA8BD,EAAI,IAAOhL,EAAP,KAAkC,UAAfuJ,EAAEuB,SAAuB,MAAQ,OAASvB,EAAEnD,IAAK,CAAEiI,SAAU,WAAYnN,MAAK,SAAAuJ,GACrIoS,EAAW7R,EAAI,IAAOhL,EAAP,KAAkC,UAAfuJ,EAAEuB,SAAuB,MAAQ,OACnE9K,EAAW6c,EACXtT,EAAEnD,IAAMyW,KACT5P,OAAM,SAAAnM,GACLd,EAAW,KACXuJ,EAAEnD,IAAM,SApBF,6DAQTwU,EAAI,EARK,YAQFA,EAAIpP,EAAKtI,GAAGwI,QAAQ1K,QARlB,mCAAAN,EAAA,QAQTka,IARS,OAQ0BA,IAR1B,0CAAAla,EAAA,MAwBUoc,GAAQlc,UAAW,CAAC2K,IAAKd,EAAGc,MAAO,SAACzK,EAAKC,GAEjE,OADID,IAAKoV,GAAM,GACRnV,MA1BO,WAwBZgc,EAxBY,SA4BCA,EAAc/b,OAAS,GA5BxB,oCAAAN,EAAA,MA8BRoc,GAAQxc,YAAa,CAACiL,IAAKd,EAAGc,KAAM,CACtCyB,KAAM,CACF0B,KAAMjE,EAAGiE,KACThD,QAASjB,EAAGiB,WAEjBuB,OAAM,SAAAnM,GACLoV,GAAM,MApCI,mDAAAxV,EAAA,MAuCRoc,GAAQ7b,YAAYwJ,GAAIwC,OAAM,SAAAnM,GAChCoV,GAAM,MAxCI,8DAEbhT,EAAI,EAFS,YAENA,EAAIsI,EAAKxK,QAFH,kCAAAN,EAAA,QAEbwC,IAFa,OAEWA,IAFX,+CA4CfgT,GA5Ce,8DA+Cb8G,GAAe,SAAOX,GAAP,mBAAA3b,EAAAC,OAAA,gDACpBuV,GAAM,EACDhT,EAAI,EAFW,YAERA,EAAImZ,EAAOrb,QAFH,wBAGdyJ,EAAK4R,EAAOnZ,GAHE,WAAAxC,EAAA,MAIOuc,GAAUrc,UAAW,CAAC2K,IAAKd,EAAGc,MAAO,SAACzK,EAAKC,GAElE,OADID,IAAKoV,GAAM,GACRnV,MANS,UAQQ,IARR,OAQHC,OARG,oCAAAN,EAAA,MASVuc,GAAUhc,YAAYwJ,GAAIwC,OAAM,SAAAnM,GAClCoV,GAAM,MAVM,QAEWhT,IAFX,gDAcjBgT,GAdiB,8DAiBfgH,GAAc,SAAOX,GAAP,mBAAA7b,EAAAC,OAAA,gDACnBuV,GAAM,EACDhT,EAAI,EAFU,YAEPA,EAAIqZ,EAAMvb,QAFH,wBAGbyJ,EAAK8R,EAAMrZ,GAHE,WAAAxC,EAAA,MAIOyc,GAASvc,UAAW,CAAC2K,IAAKd,EAAGc,MAAO,SAACzK,EAAKC,GAEhE,OADID,IAAKoV,GAAM,GACRnV,MANQ,UAQQ,IARR,OAQHC,OARG,oCAAAN,EAAA,MASTyc,GAASlc,YAAYwJ,GAAIwC,OAAM,SAAAnM,GACjCoV,GAAM,MAVK,QAEWhT,IAFX,gDAchBgT,GAdgB,8DAiBdkH,GAAY,SAAOX,EAAY5S,GAAnB,qBAAAnJ,EAAAC,OAAA,uDACjBuV,GAAM,EACJlL,EAAUC,IAFK,WAEkCpB,EAFlC,yBAAAnJ,EAAA,MAGfuK,IAA8BD,EAAM,CAAC8E,eAAe,IAAO7C,OAAM,SAAAnM,GACnEwJ,QAAQ4C,IAAI,oCAJK,kBAMZhK,GANY,mBAAAxC,EAAAC,OAAA,uDAOX8J,EAAKgS,EAAWvZ,GAPL,WAAAxC,EAAA,MAQO2c,GAAczc,UAAW,CAAC2K,IAAKd,EAAGc,MAAO,SAACzK,EAAKC,GAEnE,OADID,IAAKoV,GAAM,GACRnV,MAVM,UAYQ,IAZR,OAYHC,OAZG,wBAabyJ,EAAGT,KAAO,IAAImR,KAAK1Q,EAAGT,MAClBhK,EAAW0K,gBAdF,WAAAhK,EAAA,MAgBPuK,IAA8BD,EAAI,IAAOhL,EAAP,OAAuByK,EAAGO,KAAM,CAAEqD,SAAU,WAAYnN,MAAK,SAAAqI,GAEjGvJ,EADA6c,EAAW7R,EAAI,IAAOhL,EAAP,OAEfyK,EAAGO,KAAO6R,KACX5P,OAAM,SAAAnM,GACLwJ,QAAQ4C,IAAIpM,GACZd,EAAW,KACXyK,EAAGO,KAAO,SAvBD,0BAAAtK,EAAA,MAyBP2c,GAAcpc,YAAYwJ,GAAIwC,OAAM,SAAAnM,GACtCoV,GAAM,MA1BG,8DAMZhT,EAAI,EANQ,YAMLA,EAAIuZ,EAAWzb,QANV,mCAAAN,EAAA,QAMZwC,IANY,OAMkBA,IANlB,gDA8BdgT,GA9Bc,8DAiCZoH,GAAgB,SAAO7W,EAAUiF,GAAjB,eAAAhL,EAAAC,OAAA,uDACrB4c,EAAUtS,KAAkCxE,EAAlC,QADW,WAAA/F,EAAA,MAEZuK,IAA8BsS,EAAS7R,GAASuB,OAAM,SAAAnM,GAC/DwJ,QAAQ4C,IAAIpM,MACbI,MAAM,SAACqI,GACN,OAAQgU,MALa,qGAShBC,GAAe,SAAO3T,EAAUjE,GAAjB,mCAAAlF,EAAAC,OAAA,kEAAAD,EAAA,MACCib,GAAU/a,UAAU,CAAE2K,IAAK1B,KAD5B,UAClB4T,EADkB,gDAEC,oBAFD,WAGlB9Q,EAAS8Q,EAAW,IACdlS,KAAQoB,EAAOlG,SAJH,yCAIqB,kBAJrB,eAMfkG,EAAOpB,IANQ,KAOPoB,EAAOhG,YAPA,KAQVgG,EAAOlG,UACRkG,EAAOxG,QATI,oCAAAzF,EAAA,MASY2a,GAAa1O,EAAOxG,UAThC,iDAS2C,KAT3C,yBAKlBuX,EALkB,CAMpBnS,IANoB,KAOpB5E,YAPoB,KAQpBF,SARoB,KASpBN,QAToB,kBAAAzF,EAAA,MAWAyc,GAASvc,UAAU,CAAEiJ,SAAUA,KAX/B,eAWlB8T,EAXkB,mBAAAjd,EAAA,MAYCuc,GAAUrc,UAAU,CAAEiJ,SAAUA,KAZjC,eAYlB+T,EAZkB,mBAAAld,EAAA,MAaLoc,GAAQlc,UAAU,CAAEiJ,SAAUA,KAbzB,aAalB2B,EAbkB,4CAAA9K,EAAA,MAcM4a,GAAW9P,IAdjB,iDAcyB,GAdzB,eAclBqS,EAdkB,iBAAAnd,EAAA,MAgBC2c,GAAczc,UAAU,CAAEiJ,SAAUA,KAhBrC,aAgBlB4S,EAhBkB,4CAAA/b,EAAA,MAiBkB6a,GAAUkB,IAjB5B,iDAiB0C,GAjB1C,eAiBlBqB,EAjBkB,KAmBlBjb,EAASkb,KAAKC,UAAU,CAC1BzS,IAAKmS,EAAWnS,IAChB5E,YAAa+W,EAAW/W,YACxBF,SAAUiX,EAAWjX,SACrBN,QAASuX,EAAWvX,QACpB8X,WAAY,CACRzS,KAAMqS,EACNxB,OAAQuB,EACRrB,MAAOoB,EACPlB,WAAYqB,KA5BI,YAAApd,EAAA,MA+BN4c,GAAcI,EAAWjX,SAAUb,EAAMsY,GAAkBrb,EAAQ+C,GAAO/C,IA/BpE,eA+BlBuD,EA/BkB,yBAgChBA,GAhCgB,8DCpTb,SAAS+X,GAAWnZ,GAC/B,MAAwBqI,mBAAS,GAAjC,WAAO+Q,EAAP,KAAaC,EAAb,KACA,EAA0BhR,qBAA1B,WAAO9C,EAAP,KAAc+T,EAAd,KAEAvL,qBAAW,8BAAArS,EAAAC,OAAA,2EAAAD,EAAA,MAImBuK,IAA6BjG,EAAMuZ,YAAYtR,OAAM,SAAA1D,GACvE,MAAMwQ,GAAS/U,EAAM5D,MAAM2X,gBAL5B,UAIGrN,EAJH,OAOG8S,EAASC,EAAU/S,GAPtB,sBAQgBqO,GAAS/U,EAAM5D,MAAM4X,kBARrC,UASmB,kBAAXwF,GAAwBA,EAAOjT,IATvC,sBAUOwO,GAAS/U,EAAM5D,MAAM4X,kBAV5B,UAaHqF,EAAQ,IAC2C,IAA/CK,GAAmCF,GAdpC,uBAeOzE,GAAS/U,EAAM5D,MAAM4X,kBAf5B,YAgBsD,MDsDvBrM,ECtDW6R,GDuDvC/X,SAASzF,QAAU,IAAM2L,EAAOhG,YAAY3F,QAAU,KCvEzD,uBAiBO+Y,GAAS/U,EAAM5D,MAAM6X,oBAjB5B,eAoBHoF,EAAQ,GApBL,YAAA3d,EAAA,MAqBiBge,GAA6BF,EAAOjT,MArBrD,WAqBGoT,EArBH,OAwBHN,EAAQ,KACJG,EAAOP,WAAWjd,OAAS,GAzB5B,uBAyBqC+Y,GAAS/U,EAAM5D,MAAM+X,wBAzB1D,eA4BHkF,EAAQ,GA5BL,YAAA3d,EAAA,MA6BOge,GAAqBF,EAAOP,WAAWzS,KAAMgT,EAAOjT,MA7B3D,wBA6BoE,IA7BpE,4BA6BiFwO,GAAS/U,EAAM5D,MAAMgY,gBA7BtG,eAgCHiF,EAAQ,GAhCL,YAAA3d,EAAA,MAiCOge,GAAuBF,EAAOP,WAAW5B,OAAQmC,EAAOjT,MAjC/D,wBAiCwE,IAjCxE,4BAiCqFwO,GAAS/U,EAAM5D,MAAMkY,kBAjC1G,eAoCH+E,EAAQ,GApCL,YAAA3d,EAAA,MAqCOge,GAAsBF,EAAOP,WAAW1B,MAAOiC,EAAOjT,MArC7D,wBAqCsE,IArCtE,4BAqCmFwO,GAAS/U,EAAM5D,MAAMmY,iBArCxG,eAwCH8E,EAAQ,GAxCL,YAAA3d,EAAA,MAyCOge,GAA2BF,EAAOP,WAAWxB,WAAY+B,EAAOjT,MAzCvE,wBAyCgF,IAzChF,4BAyC6FwO,GAAS/U,EAAM5D,MAAMiY,eAzClH,eA8CHgF,EAAQ,GACRK,GAAwBF,EAAQG,EAAM3d,OAAS,GAAGiM,OAAO,SAACnM,GACtD,MAAMiZ,GAAS/U,EAAM5D,MAAMwd,sBAI/BP,EAAQ,IACRK,GAAsBF,EAAOP,WAAWzS,MAAMyB,OAAM,SAAAnM,GAChD,MAAMiZ,GAAS/U,EAAM5D,MAAMgY,mBAI/BiF,EAAQ,IACRK,GAAwBF,EAAOP,WAAW5B,QAAQpP,OAAM,SAAAnM,GACpD,MAAMiZ,GAAS/U,EAAM5D,MAAMkY,qBAI/B+E,EAAQ,IACRK,GAAuBF,EAAOP,WAAW1B,OAAOtP,OAAM,SAAAnM,GAClD,MAAMiZ,GAAS/U,EAAM5D,MAAMmY,oBAI/B8E,EAAQ,IACRK,GAAqBF,EAAOP,WAAWxB,WAAY+B,EAAOjT,KAAK0B,OAAM,SAAAnM,GACjE,MAAMiZ,GAAS/U,EAAM5D,MAAMiY,kBAI/BgF,EAAQ,IA5EL,YAAA3d,EAAA,MA8EGuK,IAAuBjG,EAAMuZ,YAAYtR,OAAM,SAAA1D,GACjD,MAAMwQ,GAAS/U,EAAM5D,MAAM4X,sBA/E5B,iEAoFHsF,EAAS,EAAD,IApFL,mBAqFI,GArFJ,kCDsE8B,IAAC3R,ICtE/B,8BAwFR,IAEH,IAAM8R,EAAY,SAACI,GACf,GAAIA,EACF,IACE,OAAOd,KAAKe,MAAMD,GAClB,MAAOtV,GACP,OAAO,IAKTwV,EAAY,SAAC/K,GACf,IAAIgL,EAAMhL,IAAQoK,EAAO,QAAU,UAGnC,OAFI7T,GAASyJ,IAAQoK,IAAMY,EAAM,OACpB,KAATZ,IAAaY,EAAM,WAChB,CACH3a,MAAO2a,EACPrN,UAAWqC,IAAQoK,GAAQ7T,EAAQ,SAAW,SAC9C1C,aAAsB,KAARmM,EAAa,GAAK,EAChCiL,QAASb,GAAQpK,EAAM,OAAS,OAChC5K,aAAc,SACdrB,UAAW,SACXC,SAAUgM,IAAQoK,EAAO,GAAK,IAUtC,OACI,eAACxJ,EAAA,EAAD,CAAYvR,MAAOyF,GAAO4Q,KAA1B,UACM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAI5E,KAAK,SAACvL,EAAGrG,GACvD,OAAO,eAAC,IAAD,CAAcG,MAAQ0b,EAAUxV,GAAhC,cAAwCwQ,GAAS/U,EAAM5D,MAAM,OAASmI,GAAtE,KATIyK,EASuFzK,EARtGyK,IAAQoK,GAAS7T,GAAkB,KAAT6T,EAEvB,6BADI,cAACnK,EAAA,EAAD,CAAmB5P,MAAO,QAASsK,KAAM,aAO1BzL,GATR,IAAC8Q,KAWbzJ,EAAQ,cAAC,IAAD,CAAMlH,MAAOyF,GAAO8Q,aAApB,SAAoCrP,IAAkB,6BAChE,cAAC,IAAD,CAAQ2U,UAAW3U,GAAS6T,EAAO,GAAIrY,eAAgB,CAACuJ,UAAW,IAAK5H,aAAc,IAAK4B,MAAOyQ,GAAS/U,EAAM5D,MAAM0X,OAAQ9S,QAAS,kBAAMhB,EAAMqV,cAAc,YCjI/J,SAAS8E,GAAKna,GAAQ,IAAD,EAChC,EAAoCqI,qBAApC,WAAOkR,EAAP,KAAmBlE,EAAnB,KACA,EAA8BhN,qBAA9B,WAAO2M,EAAP,KAAgBoF,EAAhB,KACApM,KAAMC,mBAAkB,GAExBF,qBAAW,4BAAArS,EAAAC,OAAA,oDACHqZ,EADG,mEAAAtZ,EAAA,MAEiBsS,KAAMqM,MAAMC,YAEhCvf,EAAQ,KACR,CACIwf,WAAW,KANZ,gBAECC,EAFD,EAECA,MAORJ,EAAWI,GACXA,EAAMC,YAVC,8DAWR,IAEH,IAAMxZ,EAAK,SAAG0M,oBAAH,EAAG,EAAe1M,MAEvBpF,EAAWmE,EAAMnE,WAAN,MAAkBoF,OAAlB,EAAkBA,EAAOpF,UAE1C,OACI,eAAC+H,EAAA,EAAD,CAAMvF,MAAOyF,GAAO6H,UAApB,UACI,cAAC/H,EAAA,EAAD,CAAMvF,MAAOyF,GAAO0Q,OAApB,SACI,cAAChR,EAAA,EAAD,CAAOtC,OAAQwZ,KAAYrc,MAAOyF,GAAO2Q,KAAMlR,WAAY,YAE7DgW,EACE,cAACJ,GAAD,CAAY/c,KAAM4D,EAAM5D,KAAMmd,WAAYA,EAAYlE,cAAeA,IACrE,cAACR,GAAD,CAAMzY,KAAM4D,EAAM5D,KAAMP,SAAUA,EAAU+R,QAAS5N,EAAM4N,QAASyH,cAAeA,EAAeL,QAASA,OCvC3H,IAUe2F,GAVQ,SAAC3a,GAAW,IAAD,EAC9B,OAAI,MAACA,KAAOzE,gBAGR,MAACyE,MAAOnE,WAAiB,MAALmE,GAAA,SAAAA,EAAOnE,eAAP,IAAiBG,QAAS,EACvC,cAACmD,GAAD,CAAgB/C,KAAM4D,EAAM5D,KAAMwR,QAAS5N,EAAM4N,UAErD,cAACuM,GAAD,CAAM/d,KAAM4D,EAAM5D,KAAMP,SAAUmE,EAAMnE,SAAU+R,QAAS5N,EAAM4N,UAL7D,cAACsE,GAAD,CAAU9V,KAAM4D,EAAM5D,KAAMwR,QAAS5N,EAAM4N,W,qBCNpDlQ,GAAiB,SAACC,GACpB,IAAIC,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQe,MAAO,SAAlD,SACKrB,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLzB,GAAO,CAChBC,GAAI,CACAiD,MAAO,SAACzD,GACJ,OAAO6B,GAAe,CAClBI,SAAU,gBACVE,SAAU,CAACnC,MAGnB+e,WAAY,eACZC,MAAO,QACPC,SAAU,gBACVX,KAAM,UACNY,cAAe,qBACfC,aAAc,qBACdC,cAAe,sBACfC,aAAc,2BACdC,MAAO,iBACPC,aAAc,gBACdC,WAAY,gBACZC,KAAM,qBACNC,oBAAqB,+BACrBC,KAAM,8BACNC,UAAW,iBACXC,WAAY,iBACZC,YAAa,yBACbC,QAAS,sDACTjY,QAAS,cACTkY,OAAQ,iBACRC,eAAgB,yBAChBC,gBAAiB,oBAEjBC,WAAY,UAEhBve,GAAI,CACA6B,MAAO,SAACzD,GACJ,OAAO6B,GAAe,CAClBI,SAAU,aACVE,SAAU,CAACnC,MAGnB+e,WAAY,aACZC,MAAO,QACPC,SAAU,WACVX,KAAM,OACNY,cAAe,qBACfC,aAAc,oBACdC,cAAe,qBACfC,aAAc,2BACdC,MAAO,gBACPE,WAAY,YACZC,KAAM,eACNF,aAAc,gBACdG,oBAAqB,uBACrBC,KAAM,0BACNC,UAAW,aACXC,WAAY,cACZC,YAAa,sBACbC,QAAS,2CACTjY,QAAS,UACTkY,OAAQ,cACRC,eAAgB,oBAChBC,gBAAiB,mBAEjBC,WAAY,W,6BC9ELna,OAAWC,OAAO,CAC7Bf,eAAgB,CACZuB,WAAY,SACZgI,UAAW,GACXzH,aAAc,IAElB4B,YAAa,CACTvC,MAAO,IACPC,OAAQ,GACR1B,gBAAiB,WAErBwb,kBAAmB,CACf/Z,MAAO,IACPC,OAAQ,IAEZ+Z,kBAAmB,CACfha,MAAO,IACPC,OAAQ,GACR1B,gBAAiB,OAErB0b,gBAAiB,CACbja,MAAO,IACPC,OAAQ,IAEZia,iBAAkB,CACdla,MAAO,IACPC,OAAQ,GACR1B,gBAAiB,Y,qkBCRV,SAASqa,GAAS9a,GAAQ,IAAD,UACpC,EAAwBqI,oBAAS,GAAjC,WAAOtE,EAAP,KAAasY,EAAb,KACA,EAA8BhU,oBAAS,GAAvC,WAAO1C,EAAP,KAAgB6F,EAAhB,KACA,EAA0BnD,qBAA1B,WAAO0C,EAAP,KAAcxB,EAAd,KACA,EAAgClB,mBAASrI,EAAM2H,OAAOlG,UAAtD,WAAOA,EAAP,KAAiB+I,EAAjB,KACA,EAAoCnC,mBAASrI,EAAM2H,OAAOxG,SAA1D,WAAOuH,EAAP,KAAmBU,EAAnB,KACA,EAAsCf,mBAASrI,EAAM2H,OAAOhG,aAA5D,WAAOA,EAAP,KAAoB8I,EAApB,KACA,EAAwBpC,oBAAS,GAAjC,WAAOiU,EAAP,KAAaC,EAAb,KACA,EAAoBlU,mBAAS,GAA7B,WAAOxH,EAAP,KAAWgK,EAAX,KAEM5K,EAAWC,cAaXuL,EAAY,CACdrP,KAAM4D,EAAM5D,KAEZqF,SAAUA,EACV+I,YAAaA,EAEbO,MAAOA,EACPxB,SAAUA,EAEVb,WAAYA,EACZU,cAAeA,EAEfzH,YAAaA,EACb8I,eAAgBA,EAEhB5J,GAAIA,EACJgK,MAAOA,GAGL2R,EAAe,YpBWlB,SAA0B3b,GAA1B,SAAAnF,EAAAC,OAAA,kEAAAD,EAAA,MACG+gB,GAAQC,YAAY,CAAE7X,SAAUhE,KADnC,yBAAAnF,EAAA,MAEGihB,GAAaD,YAAY,CAAE7X,SAAUhE,KAFxC,yBAAAnF,EAAA,MAGGkhB,GAASF,YAAY,CAAE7X,SAAUhE,KAHpC,yBAAAnF,EAAA,MAIGmhB,GAAOH,YAAY,CAAE7X,SAAUhE,KAJlC,0BAAAnF,EAAA,MAKGuK,IAA0BA,IAA1B,WAAiEpF,GAAMoH,OAAM,SAAAnM,GAC/EwJ,QAAQC,MAAM,qBAAqBzJ,OANpC,iCAQIhB,GAAG4hB,YAAY,CAAEnW,IAAK1F,KAR1B,8DoBVC+J,CAAkB5K,EAAM6E,UAAU3I,MAAK,SAAC4gB,GACpC7c,EAAS,aAAc,CACnBgB,MAAO,CAAEpF,SAAUmE,EAAMnE,SAAUO,KAAM4D,EAAM5D,YAsB3D,OACI,cAACwH,EAAA,EAAD,CAAMvF,MAAO,CAAEgG,KAAM,GAArB,UACc,IAATN,EACG,eAAC6L,EAAA,EAAD,CAAYvR,MAAO,CAAEgG,KAAM,GAA3B,UACI,cAAC,IAAD,CACIoF,KAAM,CACFC,KAAM,OACNkF,KAAM,eACNjF,KAAM,GACNtK,MAAO,SAEX6V,mBAAoB,CAAExQ,YAAa,IACnCD,YAAaX,GAAOW,YACpB1D,eAAgB+C,GAAO/C,eACvBC,QAAS,WACLqb,GAAQ,IAEZ/X,MAAK,SAAEyY,GAAe/c,EAAM5D,YAAvB,EAAE,EAA4B2e,gBAEvC,cAAC,IAAD,CACItR,KAAM,CACFC,KAAM4S,EAAO,GAAK,YAClB1N,KAAM,eACNjF,KAAM,GACNtK,MAAO,SAEX6V,mBAAoB,CAAExQ,YAAa,IACnCD,YAAaX,GAAOW,YACpB1D,eAAgB+C,GAAO/C,eACvBuD,MAAOgY,EAAO,cAACrN,EAAA,EAAD,CAAmB5P,MAAO,QAASsK,KAAM,UAA5C,SAA0DoT,GAAe/c,EAAM5D,YAA/E,EAA0D,EAA4B4e,aACjGha,QAAS,0BAAAtF,EAAAC,OAAA,uDACL4gB,GAAQ,GACRjX,QAAQ4C,IAAI,8BACZ5C,QAAQ4C,IAAI,2BAHP,WAAAxM,EAAA,MAIa8c,GAAaxY,EAAM6E,SAAU,OAJ1C,OAICzD,EAJD,OAKLkE,QAAQ4C,IAAI,gCAAkC9G,GAC9C4b,KAAmB5b,GAAKlF,MAAM,SAAOqI,GAAP,SAAA7I,EAAAC,OAAA,kEAAAD,EAAA,MACpBuK,IAAuB7E,IADH,OAE1Bmb,GAAQ,GAFkB,+DANzB,6DAWTrC,SAAUoC,IAEd,cAAC,IAAD,CACI7S,KAAM,CACFC,KAAM,SACNkF,KAAM,eACNjF,KAAM,GACNtK,MAAO,SAEX6V,mBAAoB,CAAExQ,YAAa,IACnCD,YAAaX,GAAOoY,kBACpBnb,eAAgB+C,GAAO/C,eACvBuD,MAAK,SAAEyY,GAAe/c,EAAM5D,YAAvB,EAAE,EAA4B6e,cACnCja,QAAS,WAtElBic,KAAM9T,MACTnF,EAAchE,EAAM5D,MAAMkB,WAC1B0G,EAAchE,EAAM5D,MAAMmB,aAAayC,EAAMyB,UAC7C,CACI,CACI9D,KAAMqG,EAAchE,EAAM5D,MAAMgB,IAChC4D,QAAS,WACLwb,MAGR,CACI7e,KAAMqG,EAAchE,EAAM5D,MAAMiB,SA+DhC,cAAC,IAAD,CACIoM,KAAM,CACFC,KAAM,aACNkF,KAAM,eACNjF,KAAM,GACNtK,MAAO,SAEX6V,mBAAoB,CAAExQ,YAAa,IACnCD,YAAaX,GAAOqY,gBACpBpb,eAAgB+C,GAAO/C,eACvBuD,MAAK,SAAEyY,GAAe/c,EAAM5D,YAAvB,EAAE,EAA4Bof,KACnCxa,QAAS,WACLf,EAAS,aAAc,CACnBgB,MAAO,CAAEpF,SAAUmE,EAAMnE,SAAUO,KAAM4D,EAAM5D,cAM/D,eAACwT,EAAA,EAAD,CAAYvR,MAAO,CAAEgG,KAAM,EAAG5D,gBAAiB,SAA/C,UACI,cAAC,IAAD,CACIgJ,KAAM,CACFC,KAAM,oBACNkF,KAAM,eACNjF,KAAM,GACNtK,MAAO,SAEX6V,mBAAoB,CAAExQ,YAAa,IACnCD,YAAaX,GAAOmY,kBACpBlb,eAAgB+C,GAAO/C,eACvBuD,MAAK,SAAEyY,GAAe/c,EAAM5D,YAAvB,EAAE,EAA4B4f,WACnChb,QAAS,WACLwJ,EAAYxK,EAAM2H,OAAOlG,UACzB2H,EAAcpJ,EAAM2H,OAAOxG,SAC3BoI,EAAS,IACTkB,EAAezK,EAAM2H,OAAOhG,aAC5B0a,GAAQ,MAGf1W,EACG,cAAChC,EAAD,SAAa8H,GAAb,IAAwBjH,MAlJ9B,WACVgH,GAAW,IAiJ2CzH,MAAM,KAE5C,cAACqE,GAAD,SACQqD,GADR,IAEI1H,MAAM,EACNmH,QAASlL,EAAM2H,OACfwD,kBAAmBnL,EAAMwK,YACzB3F,SAAU7E,EAAM6E,SAChBuG,IAjKX,WACTR,GAAe5K,EAAM6E,UAAU3I,MAAK,SAAC2B,GACjCmC,EAAMkd,UAAUrf,EAAO,OAE3B2N,GAAW,Y,aCpBNpP,GAAO,CAChBC,GAAI,CACA8gB,MAAO,cACPC,MAAO,QACPC,KAAM,OACNC,SAAU,YACVC,SAAU,aACVC,YAAa,uBACbC,mBAAoB,oDACpBjc,MAAO,0BACPkc,OAAQ,UACR3gB,KAAM,cACN4gB,YAAa,8CACbC,YAAa,kCACbC,gBACI,qGACJne,OAAQ,YACRoe,WAAY,sCAEhBrgB,GAAI,CACA0f,MAAO,kBACPC,MAAO,kBACPC,KAAM,iBACNC,SAAU,qBACVC,SAAU,WACVC,YAAa,iBACbC,mBAAoB,wCACpBjc,MAAO,cACPkc,OAAQ,SACR3gB,KAAM,OACN4gB,YAAa,qCACbC,YAAa,mBACbC,gBACI,oEACJne,OAAQ,SACRoe,WAAY,sB,qkBC/CL,SAAS/d,GAAKC,GACzB,MAAkCqI,oBAAS,GAA3C,WAAO0V,EAAP,KAAkBC,EAAlB,KACA,EAAgC3V,mBAAS,GAAzC,WAAO4V,EAAP,KAAiBC,EAAjB,KACA,EAA0B7V,mBAAS,IAAI2F,KAAMqM,OAA7C,WAAOG,EAAP,KAAc2D,EAAd,KAEApQ,qBAAU,WACNiQ,GAAa,KACd,CAAChe,EAAMoe,gBAEV,IA2CIje,EACgB,QAAhBC,IAASC,GACHtF,EAAQ,KAAgCuF,QACxC,KACNC,EACAP,EAAMQ,MAAQ,IAAM,EACd,CAAEC,gBAAiB,SACnB,CAAEA,gBAAiB,WACzBC,EACgB,QAAhBN,IAASC,GACH,CACIM,UAAWR,EACXS,IAAKZ,EAAMuG,IACXzF,eAAe,EACfC,eAAgBR,GAEpB,CAAEK,IAAKZ,EAAMuG,IAAKzF,eAAe,EAAMC,eAAgBR,GACjE,OACI,eAAC,IAAD,SACQG,GADR,IAEIM,QAAS+c,EAzBE,oBAAAriB,EAAAC,OAAA,kEAAAD,EAAA,MACT8e,EAAM6D,cADG,OAEfL,GAAa,GAFE,6DAtCD,0BAAAtiB,EAAAC,OAAA,2EAAAD,EAAA,MAEJsE,EAAMse,YAFF,yBAAA5iB,EAAA,MAGJsS,KAAMuQ,kBAAkB,CAC1BC,yBAAyB,EACzBC,mBAAmB,KALb,cAOVT,GAAa,GAPH,WAAAtiB,EAAA,YAQmB8e,OARnB,EAQmBA,EAAOkE,kBAR1B,WASuB,KAAf,OADZC,EARI,aASN,EAAAA,EAAgBC,UATV,oCAAAljB,EAAA,MAUA8e,EAAMqE,UAAU,CAAEzd,IAAKpB,EAAMgG,QAV7B,QAWNmY,EAAS3D,GACTxa,EAAM8e,iBAAN,eAA2B9e,EAAMoe,eAAjC,CAAgD5D,KAZ1C,wBAcNxa,EAAM8e,iBAAN,KAA2B9e,EAAMoe,gBAd3B,2BAAA1iB,EAAA,MAgBJ8e,EAAMC,aAhBF,QAiBVD,EAAMuE,2BAA0B,SAAOC,GAAP,SAAAtjB,EAAAC,OAAA,oDACxBqjB,EAAeC,cADS,kCAAAvjB,EAAA,MAElB8e,EAAMvF,eAFY,OAGxBiJ,EAAY,GACZF,GAAa,GAJW,sBAMxBgB,EAAeE,eACXF,EAAeG,uBACnB,GAEAjB,EACIc,EAAeE,eACXF,EAAeG,wBAZC,+DAgBhCnB,GAAa,GAjCH,kDAmCV1Y,QAAQC,MAAR,MAnCU,kEA6Dd,UAII,cAAC,IAAD,CACImF,QAAM,EACNhB,KAAMqU,EAAY,eAAiB,sBACnCnP,KAAM,UACNvP,MAAO,SAEX,eAAC,IAASkC,QAAV,WACI,cAAC,IAASC,MAAV,UAAiBxB,EAAMsE,QACvB,cAAC,IAAS5C,SAAV,UAAoB1B,EAAMgF,OAC1B,cAAC,IAAD,CACI3G,MAAO,CAAEmE,eAAgB,IACzB6H,MAAO4T,EACPmB,QAAQ,cACRC,UAAW,CAAEC,SAAU,QAG/B,cAAC,IAAD,CACIC,SAAO,EACP5V,KAAM,GACNtL,MAAO,CAAEoC,gBAAiB,OAC1BiJ,KAAM,gBACNkF,KAAM,UACNvP,MAAO,MACP2B,QAAS,SAACuD,GACNvE,EAAMwf,SAASxf,EAAMuG,YCrG1B1E,WAAWC,OAAO,CAC7BO,KAAM,CACFG,eAAgB,GAChB6B,KAAM,EACN/B,WAAY,UAEhBvB,eAAgB,CACZmB,MAAO,OAEXud,aAAc,CACVhf,gBAAiB,OAErBif,YAAa,CACTphB,WAAY,QAEhBqhB,kBAAmB,CACf1b,cAAe,OAEnB2b,cAAe,CACXhW,iBAAkB,GAEtBiW,SAAU,CACNpf,gBAAiB,QACjBoC,aAAc,GACdV,OAAQ,OACRD,MAAO,QAEX4d,QAAS,CACL1b,aAAc,SACdkG,UAAW,IAEfyV,WAAY,CACRhd,UAAW,SACX1D,MAAO,OACPiL,UAAW,IAEf0V,QAAS,CACL9d,MAAO,OACPoI,UAAW,IAEf2V,QAAS,CACLvd,aAAc,GACdiC,kBAAmB,GACnBub,gBAAiB,GACjB5d,WAAY,UAEhB6d,aAAc,CACV7hB,WAAY,OACZyE,UAAW,SACXC,SAAU,GACVR,eAAgB,IAEpB4d,mBAAoB,CAChBrd,UAAW,SACXP,eAAgB,GAChBN,MAAO,KAEXme,aAAc,CACVrd,SAAU,GACV4G,iBAAkB,MC9BX,SAASyR,GAAWrb,GAC/B,MAAkCqI,qBAAlC,WAAOiY,EAAP,KAAkBC,EAAlB,KACA,EAA8BlY,mBAAS,IAAvC,WAAOmY,EAAP,KAAgBC,EAAhB,KACA,EAA0BpY,qBAA1B,WAAO/D,EAAP,KAAcoc,EAAd,KACA,EAA0CrY,mBAAS,IAAnD,WAAO+V,EAAP,KAAsBU,EAAtB,KACA,EAA0BzW,oBAAS,GAAnC,WAAOsY,EAAP,KAAcC,EAAd,KACA,EAAgCvY,mBAAS,GAAzC,WAAOmX,EAAP,KAAiBqB,EAAjB,KACA,EAAkCxY,oBAAS,GAA3C,WAAO0E,EAAP,KAAkBC,EAAlB,KACA,EAA0B3E,oBAAS,GAAnC,WAAOyY,EAAP,KAAcC,EAAd,KAmDA,SAAeC,IAAf,SAAAtlB,EAAAC,OAAA,uDACIolB,GAAS,GADb,WAAArlB,EAAA,MAEU4kB,EAAUW,sBAFpB,OAGIL,GAAS,GAHb,4DAjDA7S,qBAAU,WAINmT,GAAQlhB,EAAM6E,UAAU3I,MAAK,SAACmJ,GAC1Bob,EAAWpb,GACX2H,GAAa,MAIjB,IAUMqB,EAAcC,IAAYC,iBAC5B,qBAXe,WAQf,OAPI+R,GACAU,KAEa,MAAb5C,OAAA,EAAAA,EAAepiB,QAAS,GACxBmlB,IAEJnhB,EAAMohB,QAAQ,OACP,KAMX,OAAO,kBAAM/S,EAAYG,YAC1B,CAAC8R,EAAWlC,IAwCf,IAAMiD,EAAa,8BAAA3lB,EAAAC,OAAA,mDACXqK,EAAOsa,EAAUgB,SACD,QAAhBlhB,IAASC,GAFE,uBAGLkhB,EAAYtb,IAHP,WAG8CjG,EAAM6E,SAHpD,cAIL7J,EAAW0K,gBAJN,WAAAhK,EAAA,MAKLuK,IAAqB,CACvBC,KAAMF,EACNG,GAAIob,GAAYvmB,EAAN,WAPH,yBAAAU,EAAA,MASLuK,IAAuBD,IATlB,OAUXA,EAAOub,GAAYvmB,EAAN,QAVF,Q7B/FAwmB,E6B2GJ,CACP9X,MAAW,MAALpF,OAAA,EAAAA,EAAOsD,SAAU6Z,GAAezhB,EAAM5D,MAAMmhB,SAClDvX,KAAMA,EACNnB,SAAU7E,EAAM6E,U7B7GjB/J,GAAGmB,YAAY,CAClByN,KAAM8X,EAAO9X,KACb1E,KAAM,IAAImR,KACVnQ,KAAMwb,EAAOxb,KACbnB,SAAU2c,EAAO3c,Y6B0Gd3I,MAAK,SAACwlB,GACDd,GAAS,GACTF,EAAS,IACTH,GAAa,MAClBtY,OAAM,SAACnM,GACNwJ,QAAQ4C,IAAIpM,MArBD,kC7B/FhB,IAAgB0lB,I6B+FA,yBA0BbG,EAAe,Y7BvGlB,SAAmB9c,EAAUhE,GAA7B,eAAAnF,EAAAC,OAAA,kEAAAD,EAAA,MACgBZ,GACdgK,KAAK,CAAED,SAAUA,EAAU0B,IAAK1F,IAChCoE,MAAK,SAACnJ,EAAKoV,GACR,OAAOA,MAJZ,YACG7L,EADH,0CAAA3J,EAAA,MAOOuK,IAAuBZ,EAAK,GAAGW,OAPtC,gCASIlL,GAAG4hB,YAAY,CAAEnW,IAAK1F,EAAIgE,SAAUA,KATxC,6D6BwGCqc,CAAQlhB,EAAM6E,SAAU2a,GACnBtjB,MAAK,SAACmJ,GACHwb,EAAY,GACZK,GAAQlhB,EAAM6E,UACT3I,MAAK,SAACmJ,GACHob,EAAWpb,MAEd4C,OAAM,SAACnM,GACJwJ,QAAQ4C,IAAIpM,SAGvBmM,OAAM,SAACnM,GACJwJ,QAAQ4C,IAAIpM,OAIlB8lB,EAAS,oBAAAlmB,EAAAC,OAAA,oDACP2kB,EADO,kCAAA5kB,EAAA,YACU4kB,OADV,EACUA,EAAWW,sBADrB,OAEXE,IACAnhB,EAAMohB,QAAQ,GAHH,6DAOTD,EAAoB,WACtB/C,EAActO,KAAI,SAACrK,EAAIvH,GACfuH,IAAM,MAAFA,KAAIwP,mBAKdqJ,EAAW,oBAAA5iB,EAAAC,OAAA,gDACTyiB,EAAcpiB,OAAS,IACV,MAAboiB,KAAetO,KAAI,SAAOrK,EAAIvH,GAAX,SAAAxC,EAAAC,OAAA,kEAAAD,EAAA,MACT+J,EAAG4Y,aAAapW,OAAM,SAACnM,GACzBwJ,QAAQ4C,IAAI,4BAFD,gEAFV,6DAUjB,OACI,eAACtE,EAAA,EAAD,CAAMvF,MAAOyF,GAAOzB,KAApB,UAEI,eAAC,IAAD,CACIwf,QAASlB,EACTmB,aAAche,GAAOmc,QACrB8B,gBAAiB,kBAAMV,KACvBW,eAAgBC,KAJpB,UAMI,cAAC,IAAD,CAAM5jB,MAAOyF,GAAOqc,aAApB,SACKsB,GAAezhB,EAAM5D,MAAMohB,cAEhC,cAAC,IAAD,CAAMnf,MAAOyF,GAAOqc,aAApB,SACKsB,GAAezhB,EAAM5D,MAAMqhB,qBAEhC,cAAC,IAAD,CACI5T,YAAa4X,GAAezhB,EAAM5D,MAAMuhB,YACxC7T,SACI,cAAC,IAAD,CACIJ,KAAK,eACLC,KAAM,GACNtK,MAAM,OACNuP,KAAK,YAGb7E,MAAO0X,GAAezhB,EAAM5D,MAAMoF,MAClC0I,UAAW,GACXE,WAAYtG,GAAOuc,aACnBhW,MAAO/F,EACPiG,aAAc,SAAChG,GACXmc,EAASnc,MAGjB,eAACX,EAAA,EAAD,CAAMvF,MAAO,CAAE4F,cAAe,OAA9B,UACI,cAAC,IAAD,CACIK,MAAOmd,GAAezhB,EAAM5D,MAAMshB,OAClCjZ,YAAa,CAAEhE,gBAAiB,OAChCM,eAAgB,CAAE2D,YAAa,IAC/B1D,QAASqgB,IAEb,cAAC,IAAD,CACI/c,MAAOmd,GAAezhB,EAAM5D,MAAMW,KAClC0H,YAAa,CAAEnG,WAAY,QAC3B0C,QAASqgB,UAMrB,eAAC,IAAD,CACIQ,QAAsB,IAAbrC,EACTsC,aAAche,GAAOmc,QACrB+B,eAAgBC,KAHpB,UAKI,cAAC,IAAD,CAAM5jB,MAAOyF,GAAOqc,aAApB,SACKsB,GAAezhB,EAAM5D,MAAMwhB,cAEhC,cAAC,IAAD,CAAMvf,MAAOyF,GAAOsc,mBAApB,SACKqB,GAAezhB,EAAM5D,MAAMyhB,kBAEhC,eAACja,EAAA,EAAD,CAAMvF,MAAO,CAAE4F,cAAe,OAA9B,UACI,cAAC,IAAD,CACIK,MAAOmd,GAAezhB,EAAM5D,MAAMshB,OAClCjZ,YAAa,CAAEnG,WAAY,QAC3ByC,eAAgB,CAAE2D,YAAa,IAC/B1D,QAAS,SAACuD,GACNsc,EAAY,MAGpB,cAAC,IAAD,CACIvc,MAAOmd,GAAezhB,EAAM5D,MAAMsD,OAClC+E,YAAa,CAAEhE,gBAAiB,OAChCO,QAAS,SAACuD,GACNod,aAMfrB,EAEG,eAAC1c,EAAA,EAAD,CAAMvF,MAAOyF,GAAO6b,kBAApB,UACI,cAAC,IAAD,CACIrb,MACIwc,EACMW,GAAezhB,EAAM5D,MAAMkhB,SAC3BmE,GAAezhB,EAAM5D,MAAMghB,MAErCrc,eAAgB+C,GAAO8b,cACvBnW,KAAM,CACFC,KAAMoX,EACA,sBACA,uBACNlS,KAAM,UACNjF,KAAM,GACNtK,MAAO,SAEX2B,QAAS8f,EAzK7B,oBAAAplB,EAAAC,OAAA,uDACIolB,GAAS,GADb,WAAArlB,EAAA,MAEU4kB,EAAU4B,cAFpB,6DALA,oBAAAxmB,EAAAC,OAAA,uDACIolB,GAAS,GADb,WAAArlB,EAAA,MAEU4kB,EAAUjC,cAFpB,+DAiLgB,cAAC,IAAD,CACI/Z,MAAOmd,GAAezhB,EAAM5D,MAAMihB,KAClCtc,eAAgB+C,GAAO8b,cACvBnW,KAAM,CACFC,KAAM,sBACNkF,KAAM,UACNjF,KAAM,GACNtK,MAAO,SAEX2B,QAASggB,IAEb,cAAC,IAAD,CACIjgB,eAAgB+C,GAAO8b,cACvBnW,KAAM,CACFC,KAAM,qBACNkF,KAAM,UACNjF,KAAM,GACNtK,MAAO,SAEXoF,YAAaX,GAAO2b,aACpBnb,MAAO,GACPkF,WAAY1F,GAAO4b,YACnB1e,QAAS,kBAAM4gB,UAKvB,eAAChe,EAAA,EAAD,CAAMvF,MAAOyF,GAAO6b,kBAApB,UACA,cAAC,IAAD,CACI5e,eAAgB+C,GAAO/C,eACvB0I,KAAM,CACFC,KAAM,aACNkF,KAAM,UACNjF,KAAM,GACNtK,MAAO,SAEXoF,YAAaX,GAAO2b,aACpBnb,MAAOmd,GAAezhB,EAAM5D,MAAM+gB,MAClC3T,WAAY1F,GAAO4b,YACnB1e,QApPhB,4BAAAtF,EAAAC,OAAA,2EAAAD,EAAA,MAEcsS,KAAMmU,0BAA0BjmB,MAAM,WACxCoJ,QAAQ4C,IAAI,8BAEfD,OAAM,SAAA1D,GACHe,QAAQC,MAAMhB,OAN1B,yBAAA7I,EAAA,MAQcsS,KAAMuQ,kBAAkB,CAC1B6D,oBAAoB,EACpBC,sBAAsB,EACtB7D,yBAAyB,KAXrC,yBAAA9iB,EAAA,MAaoCsS,KAAMsU,UAAUhI,YACxCtM,KAAMuU,wCAdlB,gBAagBjC,EAbhB,EAagBA,UAGRC,EAAaD,GAhBrB,kDAkBQhb,QAAQC,MAAM,4BAAd,MAlBR,oEAsPY,cAAC,IAAD,CACIxE,eAAgB+C,GAAO8b,cACvBnW,KAAM,CACFC,KAAM,qBACNkF,KAAM,UACNjF,KAAM,GACNtK,MAAO,SAEXoF,YAAaX,GAAO2b,aACpBnb,MAAO,GACPkF,WAAY1F,GAAO4b,YACnB1e,QAAS,kBAAM4gB,UAIvB,cAAC,IAAD,CAASvjB,MAAOyF,GAAOkc,QAAS9d,MAAO,IACvC,cAACkN,EAAA,EAAD,CAAc/Q,MAAOyF,GAAO+b,SAA5B,SACI,cAACjQ,EAAA,EAAD,CAAYvR,MAAO,CAACwE,aAAc,IAAlC,SACKkK,EACG,cAACkC,EAAA,EAAD,CACI5P,MAAO,OACPsK,KAAM,QACNtL,MAAOyF,GAAOgc,UAElBU,EAAQxkB,OAAS,EACjBwkB,EAAQ1Q,KAAI,SAACrK,EAAIvH,GACb,OACI,cAAC,GAAD,CACIogB,SAAUA,EACVF,cAAeA,EACfU,iBAAkBA,EAClBU,SAAUqB,EACVrgB,MAAOtC,EAEPoG,MAAOmB,EAAGiE,KACVnD,IAAKd,EAAGc,IACRvB,KAASS,EAAGT,KAAKwd,mBACb,SADA,IAEC/c,EAAGT,KAAKyd,mBAAmB,SAChCzc,KAAMP,EAAGO,MANJP,EAAGc,QAWpB,cAAC,IAAD,CAAMlI,MAAOyF,GAAOic,WAApB,SACK0B,GAAezhB,EAAM5D,MAAM0hB,oBCrWxD,IAAMpgB,GAAiB,SAACC,EAAMqc,GAC1B,IAAI3a,EAAQ,UACA,QAAR2a,EACA3a,EAAQ,UACO,UAAR2a,IACP3a,EAAQ,WAEZ,IAAIzB,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQe,MAAOA,GAAlD,SACKrB,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLzB,GAAO,CAChBC,GAAI,CACAqmB,KAAM,QACNC,KAAM,uBACNC,MAAO,SACPtlB,WAAY,2BACZulB,SACI,gHACJC,UAAW,SAACC,GACR,OAAOrlB,GAAe,CAClBI,SAAU,sBACVE,SAAU,CAAC+kB,MAGnBC,WAAY,SAACC,GACT,OAAOvlB,GAAe,CAClBI,SAAU,8BACVE,SAAU,CAACilB,MAGnBC,SAAU,WACN,OAAOxlB,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,qBAGnBmlB,SAAU,WACN,OAAOzlB,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,gCAGnBolB,OAAQ,WACJ,OAAO1lB,GACH,CACII,SAAU,MACVE,SAAU,CAAC,kBAEf,QAGRqlB,QAAS,WACL,OAAO3lB,GACH,CACII,SAAU,MACVE,SAAU,CAAC,oBAEf,UAGRslB,MAAO,SAACC,GACJ,OAAO7lB,GACH,CACII,SAAU,2BACVE,SAAU,CAACulB,IAEf,QAGRC,eAAgB,SAACpe,GACb,OAAO1H,GAAe,CAClBI,SAAU,oDACVE,SAAU,CAACoH,MAGnBqe,SAAU,SAACC,EAAOC,GACd,OAAOjmB,GAAe,CAClBI,SAAS,6BAAwB6lB,EAAzB,SACR3lB,SAAU,CAAC0lB,MAGnBE,gBAAiB,sBACjBC,MAAO,aACPC,eAAgB,yFAChBC,MAAO,cACPC,KAAM,mBACNC,OAAQ,aACR9G,MAAO,uBACPO,OAAQ,UACRwG,WAAY,4BAMZC,KAAM,mCACNC,UAAW,gBACXC,UAAW,aACXC,MAAO,WACH,OAAO5mB,GAAe,CAClBI,SAAS,4bACTE,SAAU,CAAC,oBAAkB,aAAW,iBAAkB,6DAA8D,oDAAyC,aAGzKumB,aAAc,WACV,OAAO7mB,GAAe,CAClBI,SAAS,+SACTE,SAAU,CAAC,kBAAmB,iBAAkB,gCAAiC,qDAI7FP,GAAI,CACAilB,KAAM,OACNC,KAAM,OACNC,MAAO,UACPtlB,WAAY,gBACZulB,SACI,qGACJC,UAAW,SAACC,GACR,OAAOrlB,GAAe,CAClBI,SAAU,kBACVE,SAAU,CAAC+kB,MAGnBC,WAAY,SAACC,GACT,OAAOvlB,GAAe,CAClBI,SAAU,wBACVE,SAAU,CAACilB,MAGnBC,SAAU,WACN,OAAOxlB,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,iBAGnBmlB,SAAU,WACN,OAAOzlB,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,wBAGnBolB,OAAQ,WACJ,OAAO1lB,GACH,CACII,SAAU,MACVE,SAAU,CAAC,gBAEf,QAGRslB,MAAO,SAACC,GACJ,OAAO7lB,GACH,CACII,SAAU,uBACVE,SAAU,CAACulB,IAEf,QAGRF,QAAS,WACL,OAAO3lB,GACH,CACII,SAAU,MACVE,SAAU,CAAC,gBAEf,UAGRwlB,eAAgB,SAACpe,GACb,OAAO1H,GAAe,CAClBI,SAAU,qCACVE,SAAU,CAACoH,MAGnBqe,SAAU,SAACC,EAAOC,GACd,OAAOjmB,GAAe,CAClBI,SAAS,aAAc6lB,EAAf,SACR3lB,SAAU,CAAC0lB,MAGnBE,gBAAiB,oBACjBC,MAAO,YACPC,eACI,6DACJC,MAAO,QACPC,KAAM,OACNC,OAAQ,UACR9G,MAAO,eACPO,OAAQ,SACRwG,WAAY,sBAMZC,KAAK,gCACLC,UAAW,YACXC,UAAW,YACXC,MAAO,WACH,OAAO5mB,GAAe,CAClBI,SAAS,iZACTE,SAAU,CAAC,cAAe,UAAW,mBAAoB,oDAAqD,4CAA6C,UAGnKumB,aAAc,WACV,OAAO7mB,GAAe,CAClBI,SAAS,kOACTE,SAAU,CAAC,aAAc,qBAAsB,2BAA4B,0C,qBC3N5E6D,OAAWC,OAAO,CAC7BO,KAAM,CACFmiB,WAAY,GACZngB,KAAM,EACN/B,WAAY,UAEhBmS,KAAM,CACFvS,MAAO,GACPC,OAAQ,GACRK,eAAgB,GAChBiiB,QAAS,GACT5hB,aAAc,IAElBsJ,OAAQ,CACJjK,MAAO,IACPW,aAAc,GACdH,aAAc,GACdkH,iBAAkB,GAEtB8a,YAAa,CACTxiB,MAAO,IACPoI,UAAW,GACX7J,gBAAiB,MACjBiC,aAAc,GACdkH,iBAAkB,GAEtB+a,eAAgB,CAEZziB,MAAO,IACPC,OAAQ,IACRO,aAAc,GACd+hB,QAAS,IAEbG,YAAa,CAET1iB,MAAO,IACPC,OAAQ,IACRO,aAAc,GACd+hB,QAAS,IAEbI,gBAAiB,CACblW,WAAY,GACZjK,YAAa,IAEjBogB,WAAY,CACRC,oBAAqB,GACrBtkB,gBAAiB,WAErBukB,SAAU,CACNtgB,YAAa,GACbugB,qBAAsB,GACtBxkB,gBAAiB,WAErBykB,YAAa,CACTvW,WAAY,GACZjK,YAAa,GACbygB,uBAAwB,GACxB1kB,gBAAiB,WAErB2kB,UAAW,CACP1gB,YAAa,GACb2gB,sBAAuB,GACvB5kB,gBAAiB,WAErB6kB,cAAe,CACXb,QAAS,EACTzU,YAAa,UACbiC,YAAa,GAEjB6P,aAAc,CACVxR,QAAS,GACT5N,aAAc,GACdP,OAAQ,IACRiC,aAAc,SACd9B,WAAY,UAEhBijB,cAAe,CACXviB,SAAU,GACV1E,WAAY,QAEhBknB,YAAa,CACTtjB,MAAO,IACPc,SAAU,GACVH,aAAc,GACdE,UAAW,UAKf0iB,aAAc,CACVnb,WAAY,GACZ7J,gBAAiB,QACjByB,MAAO,QAEXwjB,oBAAqB,CACjBxjB,MAAO,IACPzB,gBAAiB,MACjB8B,UAAW,SACXG,aAAc,GACd4H,UAAW,GACXV,iBAAkB,GAEtB+b,SAAU,CACNnjB,eAAgB,GAChBlE,WAAY,OACZ0E,SAAU,GACVD,UAAW,SACX1D,MAAO,WAEXumB,aAAc,CACV/iB,aAAc,GACdvE,WAAY,OACZ0E,SAAU,GACVD,UAAW,OACXR,UAAW,aACXoM,WAAY,GACZtP,MAAO,UACPwmB,cAAe,aAEnBC,SAAU,CACNlc,iBAAkB,GAClB/G,aAAc,GACdX,MAAO,KAEX6jB,iBAAkB,CACdrX,SAAU,WACVxM,MAAO,IACPuiB,QAAS,GACT7Y,QAAS,KCxHF,SAASiJ,GAAK7U,GACzB,OACI,qCACI,cAACwD,EAAA,EAAD,CAAOtC,OAAQ8kB,KAAW3nB,MAAOyF,GAAO2Q,OACxC,cAAC,IAAD,CACInQ,MAAO2hB,GAAUjmB,EAAM5D,MAAMsmB,KAC7B3hB,eAAgB+C,GAAOqI,OACvBzB,QAAM,EACN1J,QAAS,SAACuD,GAAD,OAAOvE,EAAMkmB,OAAO,IAC7Bzc,KACI,cAAC,IAAD,CACIC,KAAM,eACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,OAIvC,cAAC,IAAD,CACItF,MAAO2hB,GAAUjmB,EAAM5D,MAAMumB,KAC7B5hB,eAAgB+C,GAAOqI,OACvBzB,QAAM,EACN1J,QAAS,SAACuD,GAAD,OAAOvE,EAAMkmB,OAAO,IAC7Bzc,KACI,cAAC,IAAD,CACIC,KAAM,6BACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,OAIvC,cAAC,IAAD,CACItF,MAAO2hB,GAAUjmB,EAAM5D,MAAMwmB,MAC7Bne,YAAa,CAAEhE,gBAAiB,OAChCM,eAAgB+C,GAAO4gB,YACvBha,QAAM,EACN1J,QAAS,kBAAMhB,EAAMohB,QAAQ,OAC7B3X,KACI,cAAC,IAAD,CACIC,KAAM,qBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,U,mCCxCpC,SAASuc,GAAKnmB,GACzB,MAA0BqI,oBAAS,GAAnC,WAAO+d,EAAP,KAAcC,EAAd,KACA,EAA4Bhe,oBAAS,GAArC,WAAOzC,EAAP,KAAe0gB,EAAf,KACA,EAA8Bje,oBAAS,GAAvC,WAAOke,EAAP,KAAgBC,EAAhB,KACA,EAA8Bne,oBAAS,GAAvC,WAAOyX,EAAP,KAAgB2G,EAAhB,KACA,EAA0Bpe,mBAAS,GAAnC,WAAOkb,EAAP,KAAcmD,EAAd,KACA,EAA0Bre,mBAAS,CAACb,KAAKmf,MAAsB,EAAhBnf,KAAKE,YAApD,WAAOgc,EAAP,KAAckD,EAAd,KACA,EAA8Bve,oBAAS,GAAvC,WAAO1C,EAAP,KAAgB6F,EAAhB,KACA,EAA0CnD,oBAAU,GAApD,WAAOwe,EAAP,KAAsBC,EAAtB,KACA,EAAkCze,mBAAS,GAA3C,WAAO0a,EAAP,KAAkBgE,EAAlB,KACA,EAAoC1e,mBAAS,GAA7C,WAAO4a,EAAP,KAAmB+D,EAAnB,KACA,EAA8B3e,oBAAS,GAAvC,WAAO4e,EAAP,KAAgBC,GAAhB,KACA,GAAgC7e,oBAAS,GAAzC,aAAO8e,GAAP,MAAiBC,GAAjB,MACA,GAAwB/e,mBAAS,IAAIgf,MAAM,IAA3C,aAAO1D,GAAP,MAAa2D,GAAb,MAEA,GAAsCjf,oBAAS,GAA/C,aAAOkf,GAAP,MAAoBC,GAApB,MAEMrkB,GAAepI,EAAQ,KACvB0sB,IAAc,IAAItR,MAAOqM,mBAAmB,SAE5CkF,GAAkC,OAAftnB,IAASC,GAAcyD,GAAO6gB,eAAiB7gB,GAAO8gB,YAE/E7W,qBAAU,0BAAArS,EAAAC,OAAA,oDAEQ,IAAVyqB,EAFE,gBAGFK,GAAW,IhC/BM5hB,EgCgCA7E,EAAM6E,ShC/BxB/J,GACFgK,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEK,OAAQ,IACfH,MAAK,SAACnJ,EAAKuJ,GAIR,OAHIvJ,GACAwJ,QAAQC,MAAMzJ,GAEXuJ,MgCwB0BnJ,MAAK,SAACmJ,GAC/BA,EAAKrJ,OAAS,GACd+qB,EAAa1hB,EAAK,GAAGD,UAG7B8b,GAAgBlhB,EAAM6E,SAAU4iB,IAAavrB,MAAK,SAACmJ,GAC3CA,EAAKrJ,OAAS,GACdgrB,EAAc3hB,EAAK,GAAGD,UAG9BqhB,GAAW,GAdT,uBAgBFS,IAAW,GACXV,GAAW,GAIFtoB,EAAI,EArBX,aAqBcA,EAAIwlB,EAAM1nB,QArBxB,oBAsBO2J,EAtBP,oCAAAjK,EAAA,MAuBYisB,GAAejE,EAAMxlB,KAvBjC,QAqBgCA,IArBhC,wBA0BFsoB,GAAW,GA1BT,kChC5BP,IAAsB3hB,IgC4Bf,0BA4BP,CAACuhB,EAAO1C,IAEX,IAAMrc,GAAe,WACjB,OAAOG,KAAKmf,MAAsB,EAAhBnf,KAAKE,WAGrBkgB,GAAmB,SAAC5Y,GACtB,OAAQA,GACJ,KAAK,EACD,OAAOjU,EAAQ,KACnB,KAAK,EACD,OAAOA,EAAQ,KACnB,KAAK,EACD,OAAOA,EAAQ,KACnB,KAAK,EACD,OAAOA,EAAQ,OAMrB4sB,GAAiB,SAAO3Y,GAAP,SAAAtT,EAAAC,OAAA,yEAEZ,IAAIksB,SAAQ,SAAOC,EAASC,GAAhB,iBAAArsB,EAAAC,OAAA,kEAAAD,EAAA,MACSsS,KAAMqM,MAAMC,YAChCsN,GAAiB5Y,KAFN,uBACPwL,EADO,EACPA,MAGRxa,EAAMme,SAAS3D,GACfsM,EAAiB9X,GALF,WAAAtT,EAAA,MAMT8e,EAAMC,YAAYve,MAAK,SAAO8rB,GAAP,SAAAtsB,EAAAC,OAAA,gDACzBgU,YAAW,oBAAAjU,EAAAC,OAAA,uDACPmrB,GAAkB,GADX,WAAAprB,EAAA,MAED8e,EAAMvF,eAFL,OAGP6S,GAAQ,GAHD,8DAIRE,EAAe7I,uBAAyB,KALlB,gEANd,gEAFA,6DA4BjB8I,GAAa,SAAOjZ,GAAP,qBAAAtT,EAAAC,OAAA,mDACV4qB,EADU,sDAIX5C,GAAK3nB,QAAU0nB,EAAM1nB,QAJV,sDAOXgT,GAAO,GAAKA,GAAO,GAPR,qBAQPkZ,EAAavE,IACNwE,KAAKnZ,GAChBsY,GAAQY,IAEJ1N,EAZO,oCAAA9e,EAAA,MAaD8e,EAAMvF,eAbL,eAeX6R,EAAiB9X,GAfN,YAAAtT,EAAA,MAgBasS,KAAMqM,MAAMC,YAChCsN,GAAiB5Y,KAjBV,wBAgBHwL,EAhBG,EAgBHA,MAGRxa,EAAMme,SAAS3D,GAnBJ,YAAA9e,EAAA,MAqBM8e,EAAMC,YAAYve,MAAK,SAACmJ,GACrC,OAAOA,EAAK8Z,2BAtBL,WAqBPiJ,EArBO,OA2BXzY,YAAW,oBAAAjU,EAAAC,OAAA,kEAAAD,EAAA,MACD8e,EAAMvF,eADL,OAEP6R,GAAkB,GAFX,8DAGRsB,EAAO,KACNzE,GAAKA,GAAK3nB,OAAS,KAAO0nB,EAAMC,GAAK3nB,OAAS,GA/BvC,oCAAAN,EAAA,MAgCD2sB,GAAUD,IAhCT,mCAiCAzE,GAAK3nB,SAAW0nB,EAAM1nB,OAjCtB,oCAAAN,EAAA,MAkCD4sB,GAAaF,EAAM5N,IAlClB,8DAuCb6N,GAAY,SAAOD,GAAP,SAAA1sB,EAAAC,OAAA,gDACd2qB,GAAU,GACVgB,GAAQ,IACRd,GAAW,GACXE,EAASnD,EAAQ,GACbA,EAAQ,EACR5T,YAAW,0BAAAjU,EAAAC,OAAA,gDACEuC,EAAI,EADN,YACSA,EAAIwlB,EAAM1nB,QADnB,kCAAAN,EAAA,MAEGisB,GAAejE,EAAMxlB,KAFxB,OAC2BA,IAD3B,sBAIPsoB,GAAW,GACXF,GAAU,GALH,8DAMR8B,EAAO,KAEVG,KAdU,6DAkBZA,GAAe,8BAAA7sB,EAAAC,OAAA,uDACjBqE,EAAM4gB,UAAS,GADE,WAAAllB,EAAA,OhC9HGmJ,EgCgIE7E,EAAM6E,ShChIEO,EgCgIQse,EAAM1nB,OAAS,EhChIhBgJ,EgCgImByiB,GhChIb1gB,EgCgI0Bkc,EAAaS,EAAM1nB,OAAS,EhChIpCgL,EgCgIuC+b,EAAYW,EAAM1nB,OAAS,EhC/H5HlB,GAAGmB,YAAY,CAClB4I,SAAUA,EACVG,KAAMA,EACNI,MAAOA,EACP2B,iBAAkBA,EAClBC,kBAAmBA,MgCwHF,cAGjBwf,GAAW,GACXhb,GAAW,GACLxF,EAAOid,EAAaS,EAAM1nB,OAAS,EAAIjB,EAAQ,KAA+CA,EAAQ,KAL3F,WAAAW,EAAA,MAMOsS,KAAMqM,MAAMC,YAAYtU,IAN/B,gBAMTwU,EANS,EAMTA,MACRxa,EAAMme,SAAS3D,GACfA,EAAMC,YACFwI,EAAaS,EAAM1nB,OAAS,EAC5BwrB,IAAe,GAEfA,IAAe,GAZF,kChC9HlB,IAAqB3iB,EAAUO,EAAOJ,EAAM+B,EAAkBC,IgC8H5C,yBAgBfshB,GAAe,SAAOF,EAAM5N,GAAb,SAAA9e,EAAAC,OAAA,gDACjBurB,IAAW,GACXV,GAAW,GACX7W,YAAW,oBAAAjU,EAAAC,OAAA,kEAAAD,EAAA,MACD8e,EAAMvF,eADL,OAEP2R,EAAS,GAAD,YAAKlD,GAAL,CAAYrc,QAFb,8DAGR+gB,EAAO,KACVd,GAAQ,IAPS,6DA0DrB,OACI,qCACKH,GACG,cAAC,KAAD,CACIqB,SAAS,EACTC,WAAW,EACXC,UAAW,IACXC,MAAO,GACPC,OAAQ,CAAEC,GAAI,GAAIC,GAAI,MAG1B,6BAIJ,eAAC,IAAD,CACIjH,QAASlc,EACTmc,aAAche,GAAOge,aACrBC,gBAAiB,kBAAMvW,GAAW,IAClCwW,eAAgBC,KAJpB,UAMKsF,IApEJJ,IACDC,IAAY,GAGZ,qCACI,cAAC,IAAD,CAAM/oB,MAAOyF,GAAOyhB,cAApB,SACKU,GAAUjmB,EAAM5D,MAAMwnB,kBAE3B,cAAC,IAAD,CAAMvlB,MAAOyF,GAAO0hB,YAApB,SACKS,GAAUjmB,EAAM5D,MAAMonB,eAAeE,EAAM1nB,OAAS,KAEzD,cAAC,EAAD,CACImH,aAAcA,GACdM,YAAaslB,KACbC,UAAU,EACV5lB,MAAM,EACNF,YAAa,CAAEf,OAAQ,IACvBuB,WAAY,CAAEvB,OAAQ,UAO9B2d,EACO,cAAC7Q,EAAA,EAAD,IAGP,qCACI,cAAC,IAAD,CAAM5Q,MAAOyF,GAAOyhB,cAApB,SACKU,GAAUjmB,EAAM5D,MAAMynB,QAE3B,cAAC,IAAD,CAAMxlB,MAAOyF,GAAO0hB,YAApB,SACKS,GAAUjmB,EAAM5D,MAAM0nB,oBAoC3B,eAAClgB,EAAA,EAAD,CAAMvF,MAAO,CAAE4F,cAAe,MAAOqG,UAAW,IAAhD,UACI,cAAC,IAAD,CACII,QAAM,EACN1J,QAAS,WAhCzBomB,IAAY,GACZ5b,GAAW,GACX8a,GAAU,GACVI,EAAS,GACTE,EAAS,CAACvf,QA+BM/C,MAAO2hB,GAAUjmB,EAAM5D,MAAM2nB,MAC7BhjB,eAAgB,CACZ2B,aAAc,GACdgC,YAAa,MAGrB,cAAC,IAAD,CACIgG,QAAM,EACN1J,QAAS,WACLhB,EAAMkmB,OAAO,IAEjB5hB,MAAO2hB,GAAUjmB,EAAM5D,MAAM4nB,KAC7BjjB,eAAgB,CAAE2B,aAAc,IAChC+B,YAAa,CAAEhE,gBAAiB,eAM5C,eAAC,IAAD,CACIohB,QAAS7hB,EAAM2gB,MACfmB,aAAche,GAAOge,aACrBC,gBAAiB,kBAAM/hB,EAAM4gB,UAAS,IACtCoB,eAAgBC,KAJpB,UAMI,cAAC,IAAD,CAAM5jB,MAAOyF,GAAOyhB,cAApB,SACKU,GAAUjmB,EAAM5D,MAAMkB,aAE3B,cAAC,IAAD,CAAMe,MAAOyF,GAAO0hB,YAApB,SACKS,GAAUjmB,EAAM5D,MAAMymB,WAE3B,eAACjf,EAAA,EAAD,CAAMvF,MAAO,CAAE4F,cAAe,MAAOqG,UAAW,IAAhD,UACI,cAAC,IAAD,CACII,QAAM,EACN1J,QAAS,WACLhB,EAAM4gB,UAAS,IAEnBtc,MAAO2hB,GAAUjmB,EAAM5D,MAAMshB,OAC7B3c,eAAgB,CAAE2B,aAAc,GAAIgC,YAAa,MAErD,cAAC,IAAD,CACIgG,QAAM,EACN1J,QAAS,WACLunB,MAEJjkB,MAAO2hB,GAAUjmB,EAAM5D,MAAM8nB,WAC7BnjB,eAAgB,CAAE2B,aAAc,IAChC+B,YAAa,CAAEhE,gBAAiB,eAM5C,eAACmD,EAAA,EAAD,CAAMvF,MAAO,CAAE4F,cAAe,MAAOpB,aAAc,IAAnD,UACI,cAACe,EAAA,EAAD,CACIvF,MAAO,CACHqpB,GACA5jB,GAAO+gB,gBACP/gB,GAAOghB,WACW,IAAlB+B,EAAsB/iB,GAAOwhB,cAAgB,IAEjD2D,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMjB,GAAW,MAEvC,cAACrkB,EAAA,EAAD,CACIvF,MAAO,CACHqpB,GACA5jB,GAAOkhB,SACW,IAAlB6B,EAAsB/iB,GAAOwhB,cAAgB,IAEjD2D,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMjB,GAAW,SAK3C,eAACrkB,EAAA,EAAD,CAAMvF,MAAO,CAAE4F,cAAe,OAA9B,UACI,cAACL,EAAA,EAAD,CACIvF,MAAO,CACHqpB,GACA5jB,GAAO+gB,gBACP/gB,GAAOohB,YACW,IAAlB2B,EAAsB/iB,GAAOwhB,cAAgB,IAEjD2D,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMjB,GAAW,MAEvC,cAACrkB,EAAA,EAAD,CACIvF,MAAO,CACHqpB,GACA5jB,GAAOshB,UACW,IAAlByB,EAAsB/iB,GAAOwhB,cAAgB,IAEjD2D,0BAA2B,kBAAM,GACjCC,iBAAkB,kBAAMjB,GAAW,SAI3C,eAACrkB,EAAA,EAAD,CAAMvF,MAAO,CAAEiM,UAAW,IAA1B,UACI,cAAC,IAAD,CAAMjM,MAAO,CAAE0E,UAAW,UAA1B,SACKkjB,GAAUjmB,EAAM5D,MAAM0mB,UAAUC,KAErC,cAAC,IAAD,CAAM1kB,MAAO,CAAE0E,UAAW,UAA1B,SACKkjB,GAAUjmB,EAAM5D,MAAM4mB,WAAWC,KAEtC,cAAC,IAAD,CAAM5kB,MAAO,CAAE0E,UAAW,SAAUF,aAAc,IAAlD,SACKojB,GAAUjmB,EAAM5D,MAAMknB,MAAMC,KAEhC6C,EACG,eAACxiB,EAAA,EAAD,CACIvF,MAAO,CAAE+F,aAAc,SAAU9B,WAAY,UADjD,UAGI,cAAC,IAAD,CAAMjE,MAAO,CAAE0E,UAAW,SAAUC,SAAU,IAA9C,SACKujB,GAAW3gB,EAzR5BA,EACOqgB,GAAUjmB,EAAM5D,MAAMgnB,SACtB6D,EACAhB,GAAUjmB,EAAM5D,MAAMinB,UAEtB4C,GAAUjmB,EAAM5D,MAAM8mB,WAsRP+C,GAAUjmB,EAAM5D,MAAM+mB,aAEhC,cAAC,IAAD,CAAM9kB,MAAO,CAAE0E,UAAW,UAA1B,SACKkjB,GAAUjmB,EAAM5D,MAAMqnB,SACnBC,EAAM1nB,OACN2nB,GAAK3nB,UAGb,cAAC,IAAD,CACIke,UAAWqM,EACXvlB,QAAS,kBAAMhB,EAAM4gB,UAAS,IAC9Bnc,YAAa,CAAEhE,gBAAiB,OAChCM,eAAgB,CACZuJ,UAAW,GACXpI,MAAO,IACPQ,aAAc,IAElBgI,QAAM,EACNpG,MAAO2hB,GAAUjmB,EAAM5D,MAAM6nB,YAIrC,mCACI,eAACrgB,EAAA,EAAD,CACIK,cAAe,MACf5F,MAAO,CACH+F,aAAc,SACd9B,WAAY,UAJpB,UAOI,cAAC,IAAD,CACImC,YAAa,CACTC,YAAa,GACbhC,aAAc,IAElB4B,MAAO2hB,GAAUjmB,EAAM5D,MAAM+gB,MAC7Bnc,QAAS,kBAAMqlB,GAAS,MAE5B,cAAC,IAAD,CACI5hB,YAAa,CACT/B,aAAc,GACdjC,gBAAiB,OAErB6D,MAAO2hB,GAAUjmB,EAAM5D,MAAMwmB,MAC7B5hB,QAAS,kBAAMhB,EAAMkmB,OAAO,iB,yBCta7C,SAASvD,GAAK3iB,GACzB,IAAMmD,EAAepI,EAAQ,KAC7B,OACI,cAACqU,EAAA,EAAD,CAAc/Q,MAAOyF,GAAO2hB,aAA5B,SACI,eAAC7V,EAAA,EAAD,WACI,cAAC,IAAD,CACItL,MAAO2hB,GAAUjmB,EAAM5D,MAAMwmB,MAC7Bne,YAAa,CAAEhE,gBAAiB,OAChCM,eAAgB+C,GAAO4hB,oBACvBhb,QAAM,EACN1J,QAAS,kBAAMhB,EAAMkmB,OAAO,IAC5Bzc,KACI,cAAC,IAAD,CACIC,KAAM,qBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,OAIvC,cAAC,EAAD,CACIzG,aAAcA,EACdM,YAAa0lB,KACbjmB,YAAaY,GAAOiiB,iBACpBriB,WAAYI,GAAOiiB,iBACnB3iB,MAAM,EACNE,UAAU,IAEd,cAAC,IAAD,CAAMjF,MAAOyF,GAAO6hB,SAApB,SAA+BM,GAAUjmB,EAAM5D,MAAM+nB,OACrD,eAAC,IAAD,CAAM9lB,MAAOyF,GAAO8hB,aAApB,UACI,cAAC,IAAD,CACIlc,KAAM,iBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,KAE9Bqc,GAAUjmB,EAAM5D,MAAMgoB,aAE3B,cAAC,IAAD,CAAM/lB,MAAOyF,GAAOgiB,SAApB,SAA+BG,GAAUjmB,EAAM5D,MAAMkoB,UAGrD,eAAC,IAAD,CAAMjmB,MAAOyF,GAAO8hB,aAApB,UACI,cAAC,IAAD,CACIlc,KAAM,iBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,KAE9Bqc,GAAUjmB,EAAM5D,MAAMioB,aAE3B,cAAC,IAAD,CAAMhmB,MAAOyF,GAAOgiB,SAApB,SAA+BG,GAAUjmB,EAAM5D,MAAMmoB,sBCnDtD,SAASpJ,GAAMnb,GAC1B,MAAsBqI,mBAAS,GAA/B,WAAO+gB,EAAP,KAAYlD,EAAZ,KACA,EAA0B7d,mBAAS,IAAI2F,KAAMqM,OAA7C,WAAOG,EAAP,KAAc2D,EAAd,KACA,EAA0B9V,oBAAS,GAAnC,WAAOsY,EAAP,KAAcC,EAAd,KAEA7S,qBAAU,WAGN,IAeMM,EAAcC,IAAYC,iBAC5B,qBAhBe,WAaf,OAZIiM,GACAA,EAAMvF,cAENmU,EAAM,EACM,IAARA,EACAlD,EAAO,GAEPtF,GAAS,GAGb5gB,EAAMohB,QAAQ,OAEX,KAMX,OAAO,WACH/S,EAAYG,YAEjB,CAAC4a,IA8BJ,OACI,mCACI,cAACxlB,EAAA,EAAD,CAAMvF,MAAOyF,GAAOzB,KAApB,SA7BQ,IAAR+mB,EAEI,cAAC,GAAD,CACIlD,OAAQA,EACR9pB,KAAM4D,EAAM5D,KACZglB,QAASphB,EAAMohB,UAGR,IAARgI,EAEH,cAACjD,GAAD,CACID,OAAQA,EACR9pB,KAAM4D,EAAM5D,KACZyI,SAAU7E,EAAM6E,SAChB2V,MAAOA,EACP2D,SAAUA,EACVwC,MAAOA,EACPC,SAAUA,IAGH,IAARwI,EACA,cAACzG,GAAD,CAAMvmB,KAAM4D,EAAM5D,KAAM8pB,OAAQA,IAEhC,cAAC,IAAD,8BCnEnB,IAAMxoB,GAAiB,SAACC,EAAMqc,EAAKqP,GAC/B,IAAIhqB,EAAQ,UACA,QAAR2a,EACA3a,EAAQ,UACO,UAAR2a,IACP3a,EAAQ,WAEZ,IAAIzB,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQe,MAAOnB,GAAKmrB,EAAMhqB,EAAQ,WAArE,SACKrB,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLzB,GAAO,CAChBC,GAAI,CACAqmB,KAAM,QACN9e,KAAM,gBACN0lB,OAAQ,mBACR3G,KAAM,uBACNC,MAAO,SACPlF,OAAQ,UACR5J,OAAQ,qCACRgK,WAAY,qCACZyL,cAAe,0CACfC,gBAAiB,iBACjBC,YAAa,uBACbC,SAAU,0BACVC,WAAY,yCACZC,cAAe,0NACfC,kBAAmB,2BACnBC,UAAW,yBACXC,aAAc,2PACdC,GAAI,UACJC,gBAAiB,qBACjBC,WAAY,qFACZhtB,aAAc,0CACditB,gBAAiB,mDACjBC,eAAgB,wDAChBC,gBAAiB,4BACjBC,WAAY,oBACZC,eAAgB,0FAChBC,mBAAoB,iGACpBC,wBAAyB,mBACzBC,kBAAmB,6IACnBC,UAAW,cACXC,YAAa,gCACbC,WAAY,mCACZC,oBAAqB,oEACrBC,cAAe,SAACC,GACZ,OAAOttB,GAAe,CAClBI,SAAU,sDACVE,SAAU,CAACgtB,MAGnBC,UAAW,cACXC,aAAc,+BACdvnB,QAAS,4FACTwnB,YAAa,0BACb/H,OAAQ,SAACnM,GAEL,MAAM,+FADYA,EAAQmU,KAAK,MAC/B,KAEJC,iBAAkB,iBAClBC,YAAa,SAACC,EAAM5lB,GAChB,OAAOjI,GAAe,CAClBI,SAAU,0GACVE,SAAU,CAAC2H,EAAS4lB,IACrB,MAAO,IAEdC,cAAe,uBACfC,SAAU,SAACF,EAAM5lB,GACb,OAAOjI,GAAe,CAClBI,SAAU,wGACVE,SAAU,CAAC2H,EAAS4lB,IACrB,MAAO,IAEdxuB,KAAM,sBACN2uB,YAAa,0BACbC,WAAY,sBACZC,kBAAmB,iIAGnBzH,KAAM,kCACNC,UAAW,gBACXyH,WAAY,mBACZvH,MAAO,WACH,OAAO5mB,GAAe,CAClBI,SAAS,+QACTE,SAAU,CAAC,0DAAwD,gBAG3E8tB,OAAQ,WACJ,OAAOpuB,GAAe,CAClBI,SAAS,i0CACTE,SAAU,CAAC,WACP,gBACA,gBACA,mBACA,uBACA,2CACA,yBACA,yCACA,QACA,4BACA,UACA,4CACA,+BAKhBP,GAAI,CACAilB,KAAM,OACN9e,KAAM,eACN0lB,OAAQ,gBACR3G,KAAM,oBACNC,MAAO,QACPlF,OAAQ,SACR5J,OAAQ,yBACRgK,WAAY,gCACZyL,cAAe,oCACfC,gBAAiB,aACjBC,YAAa,iBACbC,SAAU,6BACVC,WAAY,0BACZC,cAAe,gJACfC,kBAAmB,wBACnBC,UAAW,gBACXC,aAAc,wJACdC,GAAI,SACJC,gBAAiB,UACjBC,WAAY,8DACZhtB,aAAc,iCACditB,gBAAiB,6CACjBC,eAAgB,4CAChBC,gBAAiB,qBACjBC,WAAY,gBACZC,eAAgB,kEAChBC,mBAAoB,sEACpBC,wBAAyB,gBACzBC,kBAAmB,iHACnBC,UAAW,aACXC,YAAa,4BACbC,WAAY,2BACZC,oBAAqB,6CACrBC,cAAe,SAACC,GACZ,OAAOttB,GAAe,CAClBI,SAAU,qCACVE,SAAU,CAACgtB,MAGnBC,UAAW,cACXC,aAAc,6BACdvnB,QAAS,6EACTwnB,YAAa,uBACb/H,OAAQ,SAACnM,GACL,IAAI8U,EAAc9U,EAAQmU,KAAK,MAC/B,MAAM,uDAAuDnU,EAAQjb,OAAS,EAAI,SAAW,QAA7F,MAAyG+vB,EAAzG,KAEJV,iBAAkB,cAClBC,YAAa,SAACC,EAAM5lB,GAChB,OAAOjI,GAAe,CAClBI,SAAU,6FACVE,SAAU,CAAC2H,EAAS4lB,IACrB,MAAO,IAEdC,cAAe,wBACfC,SAAU,SAACF,EAAM5lB,GACb,OAAOjI,GAAe,CAClBI,SAAU,iGACVE,SAAU,CAAC2H,EAAS4lB,IACrB,MAAO,IAEdxuB,KAAM,gBACN2uB,YAAa,oBACbC,WAAY,mBACZC,kBAAmB,iFAGnBzH,KAAM,+BACNC,UAAW,YACXyH,WAAY,gBACZvH,MAAO,WACH,OAAO5mB,GAAe,CAClBI,SAAS,2NACTE,SAAU,CAAC,gDAAiD,uBAGpE8tB,OAAQ,WACJ,OAAOpuB,GAAe,CAClBI,SAAS,qmCACTE,SAAU,CAAC,SACP,YACA,eACA,gBACA,iBACA,0BACA,uBACA,2BACA,QACA,qBACA,SACA,iCACA,mC,qBCnNL6D,OAAWC,OAAO,CAC7BO,KAAM,CACFiI,UAAW,GACXjG,KAAM,EACN/B,WAAY,UAEhBmS,KAAM,CACFvS,MAAO,GACPC,OAAQ,GACRK,eAAgB,GAChBiiB,QAAS,GACT5hB,aAAc,IAElBsJ,OAAQ,CACJjK,MAAO,IACPW,aAAc,GACdH,aAAc,GACdkH,iBAAkB,GAEtB8a,YAAa,CACTxiB,MAAO,IACPoI,UAAW,GACX7J,gBAAiB,MACjBiC,aAAc,GACdkH,iBAAkB,GAEtBoiB,gBAAiB,CACb9pB,MAAO,IACPoI,UAAW,GACX7J,gBAAiB,MACjBiC,aAAc,GACdkH,iBAAkB,GAEtBqe,WAAY,CACR/lB,MAAO,IACPoI,UAAW,GACX7J,gBAAiB,OACjBiC,aAAc,GACdkH,iBAAkB,GAEtBqiB,aAAc,CACV/pB,MAAO,IACPQ,aAAc,IAElBmd,SAAU,CACNpf,gBAAiB,QACjB6J,UAAW,EACXzH,aAAc,GACdV,OAAQ,OACRD,MAAO,QAEX6d,WAAY,CACRhd,UAAW,SACX1D,MAAO,OACPiL,UAAW,IAEfwV,QAAS,CACLxV,UAAW,IAEf2V,QAAS,CACLvd,aAAc,GACdiC,kBAAmB,GACnBub,gBAAiB,GACjB5d,WAAY,UAEhB4pB,4BAA6B,CACzBhqB,MAAO,IACPa,UAAW,SACX1D,MAAO,UACPmD,eAAgB,IAEpBoN,WAAY,CACRtN,WAAY,SACZE,eAAgB,GAChB2pB,cAAe,IAEnBC,kBAAmB,CACf9pB,WAAY,SACZE,gBAAiB,GACjB2pB,cAAe,IAEnBlqB,aAAc,CACVC,MAAO,IACPC,OAAQ,KAEZW,iBAAkB,CACdP,UAAW,SACXL,MAAO,IACPa,UAAW,SACXzE,WAAY,OACZ0E,SAAU,GACV3D,MAAO,UACPwD,aAAc,IAElB8d,MAAO,CACHje,aAAc,GACdiC,kBAAmB,GACnBub,gBAAiB,GACjB5d,WAAY,UAEhB+pB,WAAY,CACRxpB,aAAc,GACdX,MAAO,IACPa,UAAW,SACXzE,WAAY,OACZ0E,SAAU,IAEdspB,iBAAkB,CACdpqB,MAAO,IACPa,UAAW,SACX1D,MAAO,WAGXktB,wBAAyB,CACrBrqB,MAAO,IACPoI,UAAW,IAEfkiB,eAAgB,CACZxpB,SAAU,IAEdypB,WAAY,CACRxoB,cAAe,MACfuM,eAAe,SACftM,SAAS,OACT5B,WAAW,SACX8B,aAAa,SACbvB,aAAc,IAElB6pB,WAAY,CACRpuB,WAAY,OACZ0E,SAAU,GACVD,UAAW,SACXb,MAAO,KAEXyqB,iBAAkB,CACdjqB,aAAc,GACdR,MAAO,IACPC,OAAQ,KAEZyqB,aAAc,CACV5pB,SAAU,GACVsH,UAAW,GACXhM,WAAY,OACZe,MAAO,WAEXwtB,aAAc,CACVxoB,KAAM,EACNJ,cAAe,MACfqG,UAAW,GACXlG,aAAa,SACblC,MAAO,MACPsO,eAAgB,cAEpBsc,cAAe,CACXrsB,gBAAiB,QACjBskB,oBAAqB,GACrBE,qBAAsB,GACtBjV,YAAa,OACbiC,YAAa,EACbtN,kBAAmB,GACnB6H,kBAAmB,EACnBnN,MAAO,QAEX0tB,iBAAkB,CACdpoB,kBAAmB,GACnBjC,aAAc,IAMlB+iB,aAAc,CACVnjB,WAAY,SACZ7B,gBAAiB,QACjB6J,WAAY,GACZpI,MAAO,OACPa,UAAW,UAEf2iB,oBAAqB,CACjBxjB,MAAO,IACPzB,gBAAiB,MACjB8B,UAAW,SACXG,aAAc,GACd4H,UAAW,GACXV,iBAAkB,GAEtB+b,SAAU,CACNnjB,eAAgB,GAChBN,MAAO,IACP5D,WAAY,OACZ0E,SAAU,GACVD,UAAW,SACX1D,MAAO,UACPkD,UAAW,UAEfqjB,aAAc,CACV/iB,aAAc,GACdvE,WAAY,OACZ0E,SAAU,GACVD,UAAW,OACXR,UAAW,aACXoM,WAAY,GACZtP,MAAO,UACPwmB,cAAe,aAEnBC,SAAU,CACNlc,iBAAkB,GAClB/G,aAAc,GACdX,MAAO,KAEX6jB,iBAAkB,CACdrX,SAAU,WACVxM,MAAO,IACPuiB,QAAS,GACT7Y,QAAS,KC9MF,SAASiJ,GAAK7U,GACzB,OACI,qCACI,cAACwD,EAAA,EAAD,CAAOtC,OAAQ8rB,KAAU3uB,MAAOyF,GAAO2Q,OAEvC,cAAC,IAAD,CACInQ,MAAOtE,EAAM+M,UAAY,cAACkC,EAAA,EAAD,CAAmB5P,MAAO,OAAQsK,KAAM,UAAcsjB,GAASjtB,EAAM5D,MAAMsmB,KACpG3hB,eAAgB+C,GAAOqI,OACvBnL,QAAS,kBAAMhB,EAAMkmB,OAAO,IAC5Bzc,KACI,cAAC,IAAD,CACIC,KAAM,eACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,KAGnCsQ,SAAgC,IAAtBla,EAAMwG,KAAKxK,SAGzB,cAAC,IAAD,CACIsI,MAAO2oB,GAASjtB,EAAM5D,MAAMwH,KAC5B7C,eAAgB+C,GAAOqI,OACvBnL,QAAS,kBAAMhB,EAAMkmB,OAAO,IAC5Bzc,KACI,cAAC,IAAD,CACIC,KAAM,eACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,OAKvC,cAAC,IAAD,CACItF,MAAO2oB,GAASjtB,EAAM5D,MAAMumB,KAC5B5hB,eAAgB+C,GAAOqI,OACvBnL,QAAS,kBAAMhB,EAAMkmB,OAAO,IAC5Bzc,KACI,cAAC,IAAD,CACIC,KAAM,6BACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,OAKvC,cAAC,IAAD,CACItF,MAAO2oB,GAASjtB,EAAM5D,MAAMwmB,MAC5Bne,YAAa,CAAEhE,gBAAiB,OAChCM,eAAgB+C,GAAO4gB,YACvB1jB,QAAS,kBAAMhB,EAAMohB,QAAQ,OAC7B3X,KACI,cAAC,IAAD,CACIC,KAAM,qBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,UCjE5C,IAAMsjB,GAAY,SAACpnB,EAAU1E,EAAK+rB,EAAWpP,EAAWqP,EAAYpP,EAAcxD,EAAO2D,GAC5F,MAAiB,UAAbrY,EAEI,eAAClC,EAAA,EAAD,WACI,cAAC,IAAD,CACIvE,MAAM,MACNhB,MAAO,CAACsQ,WAAY,GAAID,SAAS,WAAY9C,OAAQ,GACrDjC,KAAK,QACLF,KAAM,CAACC,KAAM,uBAAwBkF,KAAM,UAAWvP,MAAM,SAC5D2B,QAAS,WACLmsB,OAGR,cAAC3pB,EAAA,EAAD,CAAOtC,OAAQ,CAACE,IAAKA,GAAM/C,MAAO,CAAC6D,MAAO,IAAKC,OAAQ,IAAKO,aAAc,IAAKG,aAAc,SAGjF,UAAbiD,EAEH,eAAClC,EAAA,EAAD,WACI,cAAC,IAAD,CACIvE,MAAM,MACNhB,MAAO,CAACsQ,WAAY,IAAKD,SAAS,WAAY9C,OAAQ,GACtDjC,KAAK,QACLF,KAAM,CAACC,KAAM,uBAAwBkF,KAAM,UAAWvP,MAAM,SAC5D2B,QAAS,WACLmsB,OAGR,cAAC,IAAD,CAAMnsB,QAAS,kBAAM+c,EAAYqP,IAAeC,GAAUrP,EAAcxD,EAAO2D,EAAU/c,IAAOsJ,QAAM,EAACf,KAAM,GAAID,KAAMqU,EAAY,uBAAyB,sBAAuB1e,MAAO,UAAWuP,KAAM,UAAW7N,eAAgB,CAAC8B,aAAc,GAAI+I,OAAQ,aAZtQ,GAkBEyhB,GAAY,SAAOrP,EAAcxD,EAAO2D,EAAU/c,GAAtC,eAAA1F,EAAAC,OAAA,uDACrBqiB,GAAa,GADQ,WAAAtiB,EAAA,MAEfsS,KAAMuQ,kBAAkB,CAC1BC,yBAAyB,EACzBC,mBAAmB,KAJF,yBAAA/iB,EAAA,YAMQ8e,OANR,EAMQA,EAAOkE,kBANf,WAOY,KAAf,OADZC,EANe,aAOjB,EAAAA,EAAgBC,UAPC,mCAAAljB,EAAA,MAQX8e,EAAMqE,UAAU,CAAEzd,IAAKA,KARZ,OASjB+c,EAAS3D,GATQ,2BAAA9e,EAAA,MAWf8e,EAAMC,aAXS,QAYrBD,EAAMuE,2BAA0B,SAAOC,GAAP,SAAAtjB,EAAAC,OAAA,oDACxBqjB,EAAeC,cADS,kCAAAvjB,EAAA,MAElB8e,EAAMvF,eAFY,OAGxB+I,GAAa,GAHW,+DAZX,8D,qkBC3BV,SAASsP,GAAattB,GAAQ,IAAD,UD+CZ8F,EAAU1E,EC9CtC,EAA0BiH,oBAAS,GAAnC,WAAOsY,EAAP,KAAcC,EAAd,KAEM5kB,GAAS,SAAAgE,EAAMutB,WAAN,WAAgB7mB,cAAhB,IAAyB1K,SAAzB,SAAkCgE,EAAMwtB,iBAAxC,EAAkC,EAAkBxxB,QAkC/DmE,EAAiC,QAAhBC,IAASC,GAAetF,EAAQ,KAAgCuF,QAAU,KAC3FC,EAAMP,EAAMQ,MAAQ,GAAK,EAAI,CAACC,gBAAiB,SAAW,CAACA,gBAAiB,WAC5EC,EACgB,QAAhBN,IAASC,GACL,CAAEM,UAAUR,EAAgBS,IAAIZ,EAAMQ,MAAOM,eAAc,EAAMC,eAAeR,GAChF,CAAEK,IAAKZ,EAAMQ,MAAOM,eAAc,EAAMC,eAAeR,GAC/D,OACI,qCACA,eAAC,IAAD,CACIshB,QAASlB,EACTmB,aAAche,GAAOmc,QACrB8B,gBAAiB,kBAAMnB,GAAS,IAChCoB,eAAgBC,KAJpB,UAMI,cAAC7jB,EAAA,EAAD,CAAMC,MAAO,CAACwE,aAAc,GAAIX,MAAO,IAAKa,UAAW,UAAvD,SAAmEkqB,GAASjtB,EAAM5D,MAAMouB,qBACxF,eAAC5mB,EAAA,EAAD,CAAMvF,MAAO,CAAE4F,cAAe,OAA9B,UACI,cAAC,IAAD,CACIK,MAAO2oB,GAASjtB,EAAM5D,MAAMwmB,MAC5Bne,YAAa,CAAEhE,gBAAiB,OAChCM,eAAgB,CAAE2D,YAAa,IAC/B1D,QAAS,kBAAM4f,GAAS,MAE5B,cAAC,IAAD,CACItc,MAAO2oB,GAASjtB,EAAM5D,MAAM4tB,GAC5BvlB,YAAa,CAAEnG,WAAY,QAC3B0C,QAAS,kBAzDD,WACpB,KAAIhF,GAAU,GAAKgE,EAAMytB,aAAzB,CACA,IAA0B,IAAtBztB,EAAMytB,YACN,GAAIC,OAAOC,UAAU3tB,EAAM4tB,YAAa,CAAC,IAAD,IAK9BptB,EAAQR,EAAM4tB,YAAN,SAAmB5tB,EAAMutB,WAAzB,SAAmB,EAAgB7mB,cAAnC,EAAmB,EAAyB1K,QACpD6xB,EAAM7tB,EAAMwtB,WAClBK,EAAI1vB,OAAOqC,EAAO,GAGlBR,EAAM8tB,cAAN,KAAwBD,QACrB,CAGH,IAAMrtB,EAAQR,EAAMutB,SAAS7mB,QAAQC,WAAU,SAAAlB,GAAE,OAAIA,EAAG5E,IAAMb,EAAM4tB,cAC9DC,EAAM7tB,EAAMutB,SAClBM,EAAInnB,QAAQvI,OAAOqC,EAAO,GAC1BR,EAAM+tB,YAAYF,GAClB7tB,EAAMguB,WAAWhuB,EAAMiuB,QACvBjuB,EAAMkuB,eAAc,OAErB,CACH,IAAML,EAAM7tB,EAAMytB,YAAcztB,EAAM0G,QAAU1G,EAAMmuB,YACtDN,EAAI1vB,OAAO6B,EAAMQ,MAAO,GACxBR,EAAMouB,WAAN,KAAqBP,IAEzBjN,GAAS,IA4BkByN,YAIvB,eAAC,IAAD,SAAc3tB,GAAd,IAA8BM,QAAS,WAAQhB,EAAMsuB,eAAetuB,EAAM4tB,aAA1E,WDnBoB9nB,ECoBE9F,EAAM0G,QAAQZ,SDpBN1E,ECoBgBpB,EAAM0G,QAAQtF,IDnBnD,UAAb0E,EAEI,cAAC,IAAD,CACI5E,OAAQ,CAAEE,IAAKA,GACfE,SAAO,EACPqI,KAAM,SACN5I,eAAgB,CAAC6I,iBAAkB,KAGvB,UAAb9D,EAEH,cAAC,IAAD,CACI4E,QAAM,EACNhB,KAAM,wBACNkF,KAAM,UACNvP,MAAO,YAKX,cAAC,IAAD,CACIqL,QAAM,EACNhB,KAAM,eACNkF,KAAM,UACNvP,MAAO,aCJP,eAAC,IAASkC,QAAV,WACI,cAAC,IAASC,MAAV,UAAiBxB,EAAM0G,QAAQwQ,WAC/B,eAAC,IAASxV,SAAV,YAAoB,SAAA1B,EAAM0G,UAAN,WAAeuQ,cAAf,IAAwBjb,SAAU,EAAtD,IAA0DixB,GAASjtB,EAAM5D,MAAMiuB,sBAEnF,cAAC,IAAD,CAAMnQ,SAA+B,GAArBla,EAAMytB,aAAuBzxB,GAAU,EAAGujB,SAAO,EAAC5V,KAAM,GAAItL,MAAO,CAACoC,gBAAgB,OAAQiJ,KAAM,gBAAiBkF,KAAM,UAAWvP,MAAO,MAAO2B,QAAS,SAACuD,GAAQqc,GAAS,aCtFtM,SAAS2N,GAAY7nB,EAAS7B,GACjC,IAAIc,EAAU,EACV4lB,EAAO,EACX7kB,EAAQoJ,KAAK,SAACrK,EAAIvH,GACAuH,EAAGL,MAAMopB,QAAQ,SAAC/oB,GAAD,OAAQA,EAAGZ,UAAYA,KAChDiL,KAAK,SAACrK,EAAIvH,GACZyH,GAAW8oB,SAAShpB,EAAGE,SACvB4lB,GAAQkD,SAAShpB,EAAGG,cAG5B,IAAM8oB,EAAQ/oB,EAAU4lB,EACxB,OAAa,GAATmD,EACO,GACK/oB,EAAU+oB,EAAS,KAAKC,QAAQ,G,qkBCNrC,SAASC,GAAS5uB,GAAQ,IAAD,IAChCG,EACgB,QAAhBC,IAASC,GACHtF,EAAQ,KAAgCuF,QACxC,KACNC,EACAP,EAAMQ,MAAQ,IAAM,EACd,CAAEC,gBAAiB,SACnB,CAAEA,gBAAiB,WACzBC,EACgB,QAAhBN,IAASC,GACH,CACIM,UAAWR,EACXS,IAAKZ,EAAMuG,IACXzF,eAAe,EACfC,eAAgBR,GAEpB,CAAEK,IAAKZ,EAAMuG,IAAKzF,eAAe,EAAMC,eAAgBR,GAEjE,OACI,eAAC,IAAD,SAAcG,GAAd,IAA8BM,QAAS,WAC/BhB,EAAMqc,SAAQ,GACdrc,EAAM+tB,YAAY/tB,EAAMwG,OAFhC,UAII,eAAC,IAASjF,QAAV,WACI,cAAC,IAASC,MAAV,UAAiBxB,EAAMwG,KAAKkD,OAC5B,eAAC,IAAShI,SAAV,WACM6sB,GAAWvuB,EAAMwG,KAAKE,QAAS1G,EAAM6E,UAAY,KAClDooB,GAASjtB,EAAM5D,MAAMotB,mBAE1B,eAAC,IAAS9nB,SAAV,YACK,SAAA1B,EAAMwG,OAAN,WAAYE,cAAZ,IAAqB1K,SAAU,EAAG,IAClCixB,GAASjtB,EAAM5D,MAAM6uB,gBAG9B,cAAC,IAAD,CACI1L,SAAO,EACP5V,KAAM,GACNtL,MAAO,CAAEoC,gBAAiB,OAC1BiJ,KAAM,gBACNkF,KAAM,UACNvP,MAAO,MACP2B,QAAS,WACL,OAAOic,KAAM9T,MACT8jB,GAASjtB,EAAM5D,MAAMkuB,WACrB2C,GAASjtB,EAAM5D,MAAMmuB,eACrB,CACI,CACI5sB,KAAMsvB,GAASjtB,EAAM5D,MAAMwmB,MAC3B5hB,QAAS,aACT3C,MAAO,UAEX,CACIV,KAAMsvB,GAASjtB,EAAM5D,MAAM4tB,GAC3BhpB,QAAS,WACLhB,EAAMwf,SAASxf,EAAMwG,KAAKD,gBClD/C,SAASsoB,GAAa7uB,GAAQ,IAAD,IAElCwf,EAAW,SAACnZ,IzCsGf,SAAwBxB,EAAUwB,GAAlC,mBAAA3K,EAAAC,OAAA,kEAAAD,EAAA,MACgBZ,GAAGc,UAAU,CAAE2K,IAAKF,EAAQxB,SAAUA,IAAY,SAAC/I,EAAKuJ,GAEvE,OADIvJ,GAAKwJ,QAAQC,MAAMzJ,GAChBuJ,MAHR,OACGmB,EADH,OAKMtI,EAAI,EALV,YAKaA,EAAIsI,EAAK,GAAGE,QAAQ1K,QALjC,oBAMOyJ,EAAKe,EAAK,GAAGE,QAAQxI,IACvB,CAAC,QAAS,SAAS2H,SAASJ,EAAGK,UAPpC,kCAAApK,EAAA,MAQWuK,IAAuBR,EAAGrE,MARrC,OAKyClD,IALzC,gDAUIpD,GAAG4hB,YAAY,CAAEnW,IAAKF,EAAQxB,SAAUA,KAV5C,8DyCrGCqc,CAAalhB,EAAM6E,SAAUwB,GAAQnK,MAAK,SAACmJ,GACvCrF,EAAMguB,WAAWhuB,EAAMiuB,YAI/B,OACI,cAACre,EAAA,EAAD,UACK5P,EAAM8f,QACH,cAAC7Q,EAAA,EAAD,CACI5P,MAAO,OACPsK,KAAM,QACNtL,MAAOyF,GAAOgc,WAElB,SAAA9f,EAAMwG,WAAN,IAAYxK,QAAS,EAArB,SACAgE,EAAMwG,WADN,EACA,EAAYsJ,KAAI,SAACrK,EAAIvH,GACjB,OACI,cAAC0wB,GAAD,CACIpuB,MAAOtC,EAEPsI,KAAMf,EACNrJ,KAAM4D,EAAM5D,KACZojB,SAAUA,EACV3a,SAAU7E,EAAM6E,SAChBwX,QAASrc,EAAMqc,QACf0R,YAAa/tB,EAAM+tB,aANdtoB,EAAGc,QAWpB,cAACnI,EAAA,EAAD,CAAMC,MAAOyF,GAAOic,WAApB,SACKkN,GAASjtB,EAAM5D,MAAM0hB,e,yBClC3B,SAASgR,GAAe9uB,GACnC,IAAMmD,EAAepI,EAAQ,KAE7B,OACI,eAAC6I,EAAA,EAAD,WACI,cAAC,EAAD,CACIT,aAAcA,EACdM,YAAaI,KACbX,YAAaY,GAAO7B,aACpByB,WAAYI,GAAO7B,aACnBmB,MAAM,EACNE,UAAU,IAEd,cAAClF,EAAA,EAAD,CAAMC,MAAOyF,GAAOhB,iBAApB,UACoB,IAAf9C,EAAM+D,KACDkpB,GAASjtB,EAAM5D,MAAM+tB,gBACrB8C,GAASjtB,EAAM5D,MAAMguB,iBAE/B,cAAC,IAAD,CACI9lB,MAAO2oB,GAASjtB,EAAM5D,MAAMc,aAC5BmB,MAAO,CAAEoC,gBAAiB,QAC1BO,QAAS,SAACuD,GACNvE,EAAMwE,cCjBX,SAASuqB,GAAgB/uB,GACpC,MAA4BqI,qBAA5B,WAAO2mB,EAAP,KAAeC,EAAf,KA2CA,OAAIjvB,EAAM2F,QAEF,cAACyJ,EAAA,EAAD,CAAc/Q,MAAOyF,GAAO+b,SAA5B,SACI,cAACjQ,EAAA,EAAD,CAAYsf,sBAAuBprB,GAAOsoB,kBAA1C,SACI,cAAC0C,GAAD,CAAgB/qB,MAAM,EAAO3H,KAAM4D,EAAM5D,KAAMoI,MARjD,WACVxE,EAAMwL,YAAW,UAcjB,cAAC4D,EAAA,EAAD,CAAc/Q,MAAOyF,GAAO+b,SAA5B,SACI,eAACjQ,EAAA,EAAD,CAAYsf,sBAAuBprB,GAAO8L,WAA1C,UACMsd,GAAUltB,EAAM8F,SAAU9F,EAAMoB,KAvC5B,WACdpB,EAAMmvB,cACNnvB,EAAMovB,cACNpvB,EAAMqvB,WAoCoDrvB,EAAM+d,UAAW/d,EAAMotB,WAAYptB,EAAMge,aAAche,EAAMwa,MAAOxa,EAAMme,UAC5H,cAAC,IAAD,CACI7Z,MAAO2oB,GAASjtB,EAAM5D,MAAMutB,WAC5BllB,YAAa,CAAE/B,aAAc,IAC7B1B,QArCC,0BAAAtF,EAAAC,OAAA,mDACO,QAAhByE,SAASC,GADA,uBAET8I,MAAM,QAFG,4CAAAzN,EAAA,MAMMyZ,KAAgC,CAACvG,KAAM,CAAC,UAAW,cANzD,UAOO,YADhB/Q,EANS,QAOF+Q,KAPE,iDAWb5O,EAAMqvB,OAAOxxB,EAAOuD,KACpBpB,EAAMmvB,YAAYtxB,EAAOyxB,SAASvxB,MAAM,KAAK,IAC7CiC,EAAMovB,YAAYvxB,EAAO6L,MAbZ,gEAuCL,cAACtL,EAAA,EAAD,CAAMC,MAAOyF,GAAOooB,4BAApB,SACKe,GAASjtB,EAAM5D,MAAMwtB,gBAE1B,eAAChmB,EAAA,EAAD,CAAMvF,MAAO,CAAC4F,cAAe,MAAO3B,WAAY,SAAUsH,iBAAkB,GAAIzF,WAAY,EAAGD,SAAS,QAAxG,UACI,cAAC,IAAD,CACImG,MAAOrK,EAAMkX,SACb9M,WAAY,CAACpH,SAAU,IACvBjC,eAAgB,CAAC8B,aAAc,IAC/BgH,YAAaojB,GAASjtB,EAAM5D,MAAMytB,kBAClCtf,aAAc,SAAChG,GAAD,OAAOvE,EAAMuvB,YAAYhrB,MAE3C,eAACX,EAAA,EAAD,CAAMvF,MAAO,CAAC4F,cAAe,MAAO3B,WAAY,SAAU6B,WAAY,EAAGD,SAAS,SAAUhC,MAAO,OAAnG,UACA,cAAC,IAAD,CACI2H,YAAaojB,GAASjtB,EAAM5D,MAAM0tB,UAClC1f,WAAY,CAACpH,SAAU,IACvBqH,MAAO2kB,EACPzkB,aAAc,SAAChG,GAAD,OAAO0qB,EAAU1qB,MAEnC,cAAC,IAAD,CACIkF,KACI,cAAC,IAAD,CACIC,KAAM,aACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,KAGnC5I,QAAS,kBAxFX,WAAO,IAAD,IAGyD,EAF7E,GAAI,MAACguB,MAAQpnB,QAAU5H,EAAMiX,QAAQjb,QAAU,GAC3C,OAAO,MAC2D,KAA3D,SAAAgE,EAAMiX,cAAN,IAAepR,SAAf,MAAwBmpB,GAAxB,SAAwBA,EAAQpnB,aAAhC,EAAwB,EAAgB4nB,iBAC/CxvB,EAAMyvB,WAAN,eAAqBzvB,EAAMiX,SAA3B,OAAoC+X,GAApC,SAAoCA,EAAQpnB,aAA5C,EAAoC,EAAgB4nB,iBAExDP,IAkF+BS,IACfxV,SAAUla,EAAMiX,QAAQjb,QAAU,WAI1C,cAACoC,EAAA,EAAD,CAAMC,MAAOyF,GAAOooB,4BAApB,SACKe,GAASjtB,EAAM5D,MAAM2tB,eAE1B,cAACnmB,EAAA,EAAD,CAAMvF,MAAOyF,GAAO2oB,WAApB,SACKzsB,EAAMiX,QAAQnH,KAAK,SAACrK,EAAIvH,GACrB,OACI,cAAC,IAAD,CAEImM,MAAO5E,EACPkqB,WAAY,CAAChrB,kBAAmB,GAAIxC,OAAQ,GAAIyH,iBAAkB,GAAIpH,eAAgB,GACtFxB,QAAS,kBA9Ff,SAAC9C,GACnB,IAAM2vB,EAAM7tB,EAAMiX,QAClB4W,EAAI1vB,OAAOD,EAAG,GACd8B,EAAMyvB,WAAN,KAAqB5B,IA2FkB+B,CAAc1xB,KAHxBA,aChGtB,SAAS2xB,GAAS7vB,GAE7B,MAAwBqI,oBAAS,GAAjC,WAAOtE,EAAP,KAAasY,EAAb,KAGA,EAAsChU,oBAAS,GAA/C,WAAOynB,EAAP,KAAoBC,EAApB,KAGA,EAAsC1nB,qBAAtC,WAAO2nB,EAAP,KAAoB1B,EAApB,KAGA,EAAgCjmB,qBAAhC,WAAOklB,EAAP,KAAiBQ,EAAjB,KAGA,EAAoC1lB,mBAAS,IAA7C,WAAOmlB,EAAP,KAAmBM,EAAnB,KAGA,EAAoCzlB,oBAAS,GAA7C,WAAO4nB,EAAP,KAAmB/B,EAAnB,KAGA,EAA0B7lB,oBAAS,GAAnC,WAAOsY,EAAP,KAAcC,EAAd,KAGA,EAAgCvY,qBAAhC,WAAO6O,EAAP,KAAiBqY,EAAjB,KACA,EAA8BlnB,mBAAS,IAAvC,WAAO4O,EAAP,KAAgBwY,EAAhB,KACA,EAAsBpnB,qBAAtB,WAAOjH,EAAP,KAAYiuB,EAAZ,KACA,EAAgChnB,qBAAhC,WAAOrN,EAAP,KAAiBo0B,EAAjB,KACA,GAAgC/mB,qBAAhC,aAAOvC,GAAP,MAAiBqpB,GAAjB,MACA,GAAkC9mB,oBAAS,GAA3C,aAAO0V,GAAP,MAAkBC,GAAlB,MACA,GAA0B3V,mBAAS,IAAI2F,KAAMqM,OAA7C,aAAOG,GAAP,MAAc2D,GAAd,MACA,GAA8B9V,oBAAS,GAAvC,aAAO1C,GAAP,MAAgB6F,GAAhB,MAoEM0kB,GAAW,WACb,GAAKD,EAAL,CACA,IAAMvpB,EAAU6mB,EAAS7mB,QAAQypB,OAAO3C,I5C0BzC,SAAwB3oB,EAAUwB,EAAQK,GAA1C,mBAAAhL,EAAAC,OAAA,kEAAAD,EAAA,MACgBZ,GAAGc,UAAU,CAAE2K,IAAKF,IAAS,SAACvK,EAAKuJ,GAElD,OADIvJ,GAAKwJ,QAAQC,MAAM,oBAAqBzJ,GACpCuJ,MAHT,UACGmB,EADH,wDAMMtI,EAAI,EANV,YAMaA,EAAIwI,EAAQ1K,QANzB,qBAOOyJ,EAAKiB,EAAQxI,IACX2C,GART,oCAAAnF,EAAA,MASW8J,GAAkBX,EAAUY,IATvC,oCAUUA,EAAG5E,KAAM4E,EAAG2qB,WAVtB,oCAAA10B,EAAA,MAWWqK,GAAeN,IAX1B,eAYYA,EAAG2qB,WAZf,QAMiClyB,IANjC,8BAeHsI,EAAK,GAAGE,QAAUA,EAff,kBAgBI5L,GAAGQ,YAAY,CAACiL,IAAKF,GAArB,MAAkCG,EAAK,MAhB3C,8D4CzBC0a,CAAalhB,EAAM6E,SAAU0oB,EAAShnB,IAAKG,GAASxK,MAAK,SAACmJ,GACtD,OAAO4X,KAAM9T,MACT8jB,GAASjtB,EAAM5D,MAAMyuB,WACrBoC,GAASjtB,EAAM5D,MAAM0uB,oBACrB,CACI,CACIntB,KAAMsvB,GAASjtB,EAAM5D,MAAM4tB,GAC3BhpB,QAAS,WACLhB,EAAMguB,WAAWhuB,EAAMiuB,QACvBH,EAAc,IACdlM,cAQlBwL,GAAa,oBAAA1xB,EAAAC,OAAA,kEAAAD,EAAA,YACc8e,QADd,EACcA,GAAOkE,kBADrB,kBAEIE,SAFJ,kCAAAljB,EAAA,MAGL8e,GAAM6D,cAHD,OAIfL,IAAa,GAJE,6DAgFb4D,GAAS,WAENjc,IAAS6F,IAAW,GAEnBykB,IAAeH,GAAgBtC,EAAWxxB,OAAS,EACrD4kB,GAAS,GAIToP,GAvHJP,EAAW,IACXF,IACAJ,KACAC,IACAC,IACAlR,GAAS,IAAInQ,KAAMqM,OAoHfiU,IACAyB,GAAe,IACRD,EACPC,GAAe,GACVhsB,GACLmqB,GAAc,GACd7R,GAAQ,IAERrc,EAAMkmB,OAAO,IAGfmK,GAAY,SAACC,GACf,GAAIN,EAAa,CAEb,GAAY,SAARM,EAAiB,OAAOrD,GAASjtB,EAAM5D,MAAMsvB,YAC5C,GAAY,YAAR4E,EAAoB,QAASrZ,EAAQjb,OAAS,GAAKkb,EAASlb,OAAS,GACzE,GAAY,WAARs0B,EAAmB,OA7KhB,WAChB,IAAI5pB,EACAlG,EAC+B,EAA/BktB,OAAOC,UAAUqC,GAEjBtpB,EAAU8mB,EAAWwC,GAAW,MAAGzC,GAAH,SAAGA,EAAU7mB,cAAb,EAAG,EAAmB1K,UAMtDwE,EAAQ+sB,EAAS7mB,QAAQC,WAAU,SAAAlB,GAAE,OAAIA,EAAG5E,IAAMmvB,KAClDtpB,EAAU6mB,EAAS7mB,QAAQlG,GACvBsF,IAAYY,EAAQZ,UAAY1E,GAAOsF,EAAQtF,MAC/CsF,EAAQ0pB,YAAa,IAE7B1pB,EAAQ1L,SAAUA,EAClB0L,EAAQZ,SAAWA,GACnBY,EAAQtF,IAAMA,EACdsF,EAAQuQ,QAAUA,EAClBvQ,EAAQwQ,SAAWA,EACnBgX,GAAc,GACd1iB,IAAW,GACPkiB,OAAOC,UAAUqC,GACQ,GAArBxC,EAAWxxB,OACX8xB,EAAc,CAACpnB,IAEfonB,EAAc,KAAIpnB,KAEtB6mB,EAAS7mB,QAAQlG,GAASkG,EAC1BqnB,EAAYR,IA+IuBgD,QAChC,GAAIT,EAAa,CAEpB,GAAY,SAARQ,EAAiB,OAAOrD,GAASjtB,EAAM5D,MAAMuvB,WAC5C,GAAY,YAAR2E,EAAoB,QAASrZ,EAAQjb,OAAS,GAAKkb,EAASlb,OAAS,GACzE,GAAY,WAARs0B,EAAmB,OAtMhB,WAChB,IAAMnI,EAAO,CACT/mB,IAAKA,EACLpG,SAAUA,EACVic,QAASA,EACTC,SAAUA,EACVpR,SAAUA,IAGdqpB,KACAE,IACAD,IACAK,EAAW,IACXF,IAEAzB,EAAc,GAAD,YAAKN,GAAL,CAAiBrF,KAC9B+F,GAAc,GACd1iB,IAAW,GAqL4BglB,QAChC,GAAIzsB,EAAM,CAEb,GAAY,SAARusB,EAAiB,OAAOrD,GAASjtB,EAAM5D,MAAMW,KAC5C,GAAY,YAARuzB,EAAoB,OAASL,EACjC,GAAY,WAARK,EAAmB,OAAOJ,SAChC,CAEH,GAAY,SAARI,EAAiB,OAAOrD,GAASjtB,EAAM5D,MAAMktB,OAC5C,GAAY,YAARgH,QACJ,GAAY,WAARA,EAAmB,OAAOtwB,EAAMkmB,OAAO,KAIxD,OACI,qCACI,eAACtiB,EAAA,EAAD,CAAMvF,MAAO,CAAE4F,cAAe,OAA9B,UAEI,eAAC,IAAD,CACI4d,QAASlB,EACTmB,aAAche,GAAOmc,QACrB8B,gBAAiB,kBAAMnB,GAAS,IAChCoB,eAAgBC,KAJpB,UAMI,cAAC7jB,EAAA,EAAD,CAAMC,MAAO,CAACwE,aAAc,GAAIX,MAAO,IAAKa,UAAW,UAAvD,SAAmEkqB,GAASjtB,EAAM5D,MAAMwvB,oBACxF,eAAChoB,EAAA,EAAD,CAAMvF,MAAO,CAAE4F,cAAe,OAA9B,UACI,cAAC,IAAD,CACIK,MAAO2oB,GAASjtB,EAAM5D,MAAMshB,OAC5BjZ,YAAa,CAAEhE,gBAAiB,OAChCM,eAAgB,CAAE2D,YAAa,IAC/B1D,QAAS,kBAAM4f,GAAS,MAE5B,cAAC,IAAD,CACItc,MAAO2oB,GAASjtB,EAAM5D,MAAM0X,OAC5BrP,YAAa,CAAEnG,WAAY,QAC3B0C,QAAS,WACLktB,GAAc,GACdI,IACAjS,GAAQ,GACRyR,EAAc,IACdlN,GAAS,YAOzB,cAAC,IAAD,CACItc,MAAQ+rB,GAAU,SAClBtvB,eAAgB+C,GAAOmoB,aACvBxiB,KACI,cAAC,IAAD,CACIC,KAAM3F,EAAO,eAAiB,oBAC9B6K,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,KAGnC5I,QAAS,WACLqvB,GAAU,YAEdnW,SAAWmW,GAAU,cAEzB,cAAC,IAAD,CACIhxB,MAAM,MACNhB,MAAO,CAACsQ,WAAY,IACpBhF,KAAK,QACLF,KAAM,CAACC,KAAM,qBAAsBkF,KAAM,UAAWvP,MAAM,SAC1D2B,QAAS,kBAAM4gB,WAGvB,cAAC,IAAD,CACIviB,MAAO,OACP6C,MAAO,EACP7D,MAAO,CAAE6D,MAAO,OAAWoI,UAAW,MAE1C,eAAC8E,EAAA,EAAD,CAAc/Q,MAAOyF,GAAO+b,SAA5B,WAEQ9b,GAAS+rB,GAAgBE,EAapB,6BAZL,cAAC,IAAD,CACI1rB,MAAO2oB,GAASjtB,EAAM5D,MAAMqtB,YAC5BhgB,KACI,cAAC,IAAD,CACIC,KAAM,qBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,KAGnC5I,QAAS,kBAAM+uB,GAAe,MAGtC,cAACngB,EAAA,EAAD,CAAYvR,MAAO,CAACwE,aAAc,IAAlC,SAvMK,WAsCqB,IAAD,IAnCzB6D,EAFR,IAAIspB,GAAgBF,EAgBb,OAAIA,EACC,cAACf,GAAD,CACI3yB,KAAM4D,EAAM5D,KACZqzB,WAAYA,EACZN,YAAaA,GACbI,YAAaA,EACbF,OAAQA,EACRD,YAAaA,EACb5jB,WAAYA,GACZ2S,SAAUA,GACVH,aAAcA,GACdoP,WAAYA,GACZhsB,IAAKA,EACLpG,SAAUA,EACVic,QAASA,EACTnR,SAAUA,GACVoR,SAAUA,EACVvR,QAASA,GACT6U,MAAOA,GACPuD,UAAWA,KAEhBha,IAAS+rB,EAEhB,SAAQvC,EAAS7mB,UAAjB,SAAO,EAAoBypB,OAAO3C,SAAlC,EAAO,EAAwC1d,KAAI,SAACrK,EAAIvH,GACpD,OAAQ,cAACovB,GAAD,CACJ9sB,MAAOtC,EAEP2C,GAAI0sB,EAAShnB,KAAO,EACpBgnB,SAAUA,EACVC,WAAYA,EACZ9mB,QAASjB,EACTrJ,KAAM4D,EAAM5D,KACZwxB,WAAYnoB,EAAG5E,IAAM3C,EACrBuvB,aAAa,EACbQ,OAAQjuB,EAAMiuB,OACdD,UAAWhuB,EAAMguB,UACjBE,cAAeA,EACfI,eAAgBA,EAChBP,YAAaA,EACbD,cAAeA,GAbV5vB,MAkBL,cAAC2wB,GAAD,CACJroB,KAAMxG,EAAMwG,KACZsZ,QAAS9f,EAAM8f,QACf1jB,KAAM4D,EAAM5D,KACZyI,SAAU7E,EAAM6E,SAChBwX,QAASA,EACT0R,YAAaA,EACbC,UAAWhuB,EAAMguB,YAhErB,GAFIroB,IAAS6F,IAAW,GAEpBkiB,OAAOC,UAAUqC,GAAc,CAAC,IAAD,EAC/BtpB,EAAU8mB,EAAWwC,GAAW,MAAGzC,GAAH,SAAGA,EAAU7mB,cAAb,EAAG,EAAmB1K,aACnD,CACH,IAAMwE,EAAQ+sB,EAAS7mB,QAAQC,WAAU,SAAAlB,GAAE,OAAIA,EAAG5E,IAAMmvB,KACxDtpB,EAAU6mB,EAAS7mB,QAAQlG,GAE1BkG,IACL0oB,EAAY1oB,EAAQ1L,UACpBm0B,GAAYzoB,EAAQZ,UACpBupB,EAAO3oB,EAAQtF,KACfmuB,EAAY7oB,EAAQwQ,UACpBuY,EAAW,KAAI/oB,EAAQuQ,UACvB8Y,GAAe,IAwLTU,WCvUH,SAASC,GAAW1wB,GAC/B,MAA4CqI,oBAAS,GAArD,WAAOsoB,EAAP,KAAuBC,EAAvB,KACA,EAA8BvoB,mBAAS,IAAvC,WAAO3B,EAAP,KAAgB0nB,EAAhB,KACA,EAAwB/lB,mBAAS,IAAjC,WAAOqB,EAAP,KAAamnB,EAAb,KACA,EAA0BxoB,oBAAS,GAAnC,WAAOsY,EAAP,KAAcC,EAAd,KACA,EAAkDvY,oBAAS,GAA3D,WAAOyoB,EAAP,KAA0BC,EAA1B,KAEA,EAAsC1oB,qBAAtC,WAAO2nB,EAAP,KAAoB1B,EAApB,KAGA,EAAsBjmB,qBAAtB,WAAOjH,EAAP,KAAYiuB,EAAZ,KACA,EAAgChnB,qBAAhC,WAAOrN,EAAP,KAAiBo0B,EAAjB,KACA,EAAgC/mB,qBAAhC,WAAOvC,EAAP,KAAiBqpB,EAAjB,KACA,EAA8B9mB,mBAAS,IAAvC,WAAO4O,EAAP,KAAgBwY,EAAhB,KACA,EAAgCpnB,qBAAhC,WAAO6O,EAAP,KAAiBqY,GAAjB,KACA,GAA8BlnB,oBAAS,GAAvC,aAAO1C,GAAP,MAAgB6F,GAAhB,MACA,GAAkCnD,oBAAS,GAA3C,aAAO0V,GAAP,MAAkBC,GAAlB,MACA,GAA0B3V,mBAAS,IAAI2F,KAAMqM,OAA7C,aAAOG,GAAP,MAAc2D,GAAd,MAyDMiP,GAAa,oBAAA1xB,EAAAC,OAAA,kEAAAD,EAAA,YACc8e,QADd,EACcA,GAAOkE,kBADrB,kBAEIE,SAFJ,kCAAAljB,EAAA,MAGL8e,GAAM6D,cAHD,OAIXN,IAAWC,IAAa,GAJb,6DAwCbqS,GAAY,SAACC,GACf,QAAoBU,IAAhBhB,EAA2B,CAE3B,GAAY,SAARM,EAAiB,OAAOrD,GAASjtB,EAAM5D,MAAMsvB,YAC5C,GAAY,YAAR4E,EAAoB,SAAgB,MAAPrZ,OAAA,EAAAA,EAASjb,QAAS,GAAKkb,EAASlb,OAAS,GAC1E,GAAY,WAARs0B,EAAmC,OAAdlD,KAtDlC1mB,EAAQspB,GAAalqB,SAAWA,EAChCY,EAAQspB,GAAah1B,SAAWA,EAChC0L,EAAQspB,GAAa5uB,IAAMA,EAC3BsF,EAAQspB,GAAa9Y,SAAWA,EAChCxQ,EAAQspB,GAAa/Y,QAAUA,EAC/BmX,EAAW,KAAI1nB,SACf8E,IAAW,QAiDJ,GAAImlB,EAAgB,CAEvB,GAAY,SAARL,EAAiB,OAAOrD,GAASjtB,EAAM5D,MAAM4tB,GAC5C,GAAY,YAARsG,EAAoB,SAAgB,MAAPrZ,OAAA,EAAAA,EAASjb,QAAS,GAAKkb,EAASlb,OAAS,GAC1E,GAAY,WAARs0B,EAAoD,OAA/BlD,KAAcxM,GAAS,GAhFzC,WAChB,IAAM4M,EAAa,CACfpsB,IAAKA,EACLpG,SAAUA,EACVic,QAASA,EACTC,SAAUA,EACVpR,SAAUA,GAGdqpB,IACAE,IACAD,IACAK,EAAW,IACXF,KAEAnB,EAAW,GAAD,YAAK1nB,GAAL,CAAc8mB,KACxBhiB,IAAW,GAgE6DglB,OACjE,CACH,GAAY,SAARF,EAAiB,OAAOrD,GAASjtB,EAAM5D,MAAMstB,SAC5C,GAAY,YAAR4G,EAAoB,QAAS5pB,EAAQ1K,OAAS,GAClD,GAAY,WAARs0B,EAAqB,OAAO1P,GAAS,KAgEtD,OACI,qCAEI,eAAC,IAAD,CACIiB,QAASlB,EACTmB,aAAche,GAAO6c,MACrBoB,gBAAiB,kBAAMnB,GAAS,IAChCoB,eAAgBC,KAJpB,UAMI,cAAC7jB,EAAA,EAAD,CAAMC,MAAOyF,GAAOuoB,WAApB,SAAiCY,GAASjtB,EAAM5D,MAAMquB,0BACtD,cAACrsB,EAAA,EAAD,CAAMC,MAAOyF,GAAOwoB,iBAApB,SAAuCW,GAASjtB,EAAM5D,MAAMsuB,oBAC5D,eAAC9mB,EAAA,EAAD,CAAMvF,MAAO,CAAE4F,cAAe,OAA9B,UACI,cAAC,IAAD,CAAO4F,YAAaojB,GAASjtB,EAAM5D,MAAMuuB,UACrC5pB,eAAgB+C,GAAOyoB,wBACvBniB,WAAYtG,GAAO0oB,eACnBjiB,aAAc,SAAChG,GAAD,OAAOssB,EAAO,MAACtsB,OAAD,EAACA,EAAGqD,WAEpC,cAAC,IAAD,CAAQ7G,eAAgB,CAAEuJ,UAAW,GAAIpI,MAAO,IAAMoC,MAAO,GAAImF,KAC7D,cAAC,IAAD,CACIC,KAAM,2BACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,KAEZuQ,UAAc,MAAJxQ,OAAA,EAAAA,EAAM1N,QAAS,GAAK0N,EAAK1N,OAAS,GAAmBgF,QArM9D,Y7C4ChB,SAAsB6D,EAAU2B,GAAhC,mBAAA9K,EAAAC,OAAA,mDACE6K,EAAKkD,MAAiC,KAAzB,SAAAlD,EAAKE,cAAL,IAAc1K,QAD7B,uBAECsJ,QAAQC,MAAM,mCAFf,kBAGQ,MAHR,OAKMrH,EAAI,EALV,YAKaA,EAAIsI,EAAKE,QAAQ1K,QAL9B,wBAMOyJ,EAAKe,EAAKE,QAAQxI,GANzB,WAAAxC,EAAA,MAOO8J,GAAkBX,EAAUY,IAPnC,OAKsCvH,IALtC,gDASIpD,GAAGmB,YAAH,MAAoBuK,IAAQ,SAAC1K,EAAK+B,GACrC,OAAI/B,GACAwJ,QAAQC,MAAMzJ,GACP,MAEA+B,MAdZ,8D6C3CCqjB,CAAWlhB,EAAM6E,SAAU,CACvB6E,KAAMA,EAAKunB,UAAU,EAAG,IACxBvqB,QAASA,EACT7B,SAAU7E,EAAM6E,WACjB3I,MAAK,SAAAmJ,GACJ,OAAO4X,KAAM9T,MACT8jB,GAASjtB,EAAM5D,MAAMwuB,YACrBqC,GAASjtB,EAAM5D,MAAM0uB,oBACrB,CACI,CACIntB,KAAMsvB,GAASjtB,EAAM5D,MAAM4tB,GAC3BhpB,QAAS,WACL4f,GAAS,GACT5gB,EAAMkmB,OAAO,UAK9Bje,OAAM,SAAAnM,GACLwJ,QAAQ4C,IAAIpM,eAsLZ,eAAC,IAAD,CACI+lB,QAASiP,EACThP,aAAche,GAAOmc,QACrB8B,gBAAiB,kBAAMgP,GAAqB,IAC5C/O,eAAgBC,KAJpB,UAMI,cAAC7jB,EAAA,EAAD,CAAMC,MAAO,CAACwE,aAAc,GAAIX,MAAO,IAAKa,UAAW,UAAvD,SAAmEkqB,GAASjtB,EAAM5D,MAAMwvB,oBACxF,eAAChoB,EAAA,EAAD,CAAMvF,MAAO,CAAE4F,cAAe,OAA9B,UACI,cAAC,IAAD,CACIK,MAAO2oB,GAASjtB,EAAM5D,MAAMshB,OAC5BjZ,YAAa,CAAEhE,gBAAiB,OAChCM,eAAgB,CAAE2D,YAAa,IAC/B1D,QAAS,kBAAM+vB,GAAqB,MAExC,cAAC,IAAD,CACIzsB,MAAO2oB,GAASjtB,EAAM5D,MAAM0X,OAC5BrP,YAAa,CAAEnG,WAAY,QAC3B0C,QAAS,WACL+vB,GAAqB,GACrB/wB,EAAMkmB,OAAO,YAM7B,eAACtiB,EAAA,EAAD,CAAMvF,MAAO,CAAE4F,cAAe,OAA9B,UACI,cAAC,IAAD,CAEIK,MAAQ+rB,GAAU,SAClBtvB,eAAgB+C,GAAOmoB,aACvBxiB,KACI,cAAC,IAAD,CACIC,KAAMinB,EAAiB,eAAiB,gCACxC/hB,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,KAGnCsQ,SAAWmW,GAAU,YACrBrvB,QAAU,kBAAMqvB,GAAU,cAE9B,cAAC,IAAD,CACIhxB,MAAM,MACNhB,MAAO,CAACsQ,WAAY,IACpBhF,KAAK,QACLF,KAAM,CAACC,KAAM,qBAAsBkF,KAAM,UAAWvP,MAAM,SAC1D2B,QAAS,WA1LrByuB,EAAW,IACXN,IACAC,IACAC,IACAE,KACA/jB,IAAW,GAuLK4hB,KACIuD,EACAC,GAAmBD,GACI,GAAlBjqB,EAAQ1K,OAAagE,EAAMkmB,OAAO,GACtC6K,GAAqB,SAItC,cAAC,IAAD,CACI1xB,MAAO,OACP6C,MAAO,EACP7D,MAAO,CAAE6D,MAAO,OAAWoI,UAAW,YApJ1B0mB,IAAhBhB,GAA8BW,IAC1BhrB,IAAS6F,IAAW,GACxBikB,EAAW/oB,EAAQspB,GAAa/Y,SAChCkY,EAAYzoB,EAAQspB,GAAalqB,UACjCspB,EAAY1oB,EAAQspB,GAAah1B,UACjCq0B,EAAO3oB,EAAQspB,GAAa5uB,KAC5BmuB,GAAY7oB,EAAQspB,GAAa9Y,UACjC0Z,GAAkB,IAElBD,EACO,cAAC5B,GAAD,CAEH3yB,KAAM4D,EAAM5D,KACZqzB,WAAYA,EACZN,YAAaA,EACbI,YAAaA,GACbF,OAAQA,EACRD,YAAaA,EACb5jB,WAAYA,GACZ2S,SAAUA,GACVH,aAAcA,GACdoP,WAAYA,GACZhsB,IAAKA,EACLpG,SAAUA,EACVic,QAASA,EACTnR,SAAUA,EACVoR,SAAUA,EACVvR,QAASA,GACT6U,MAAOA,GACPuD,UAAWA,KAGR,eAAC3O,EAAA,EAAD,CAAc/Q,MAAOyF,GAAO+b,SAA5B,UACH,cAAC,IAAD,CACIvb,MAAO2oB,GAASjtB,EAAM5D,MAAMqtB,YAC5BhgB,KACI,cAAC,IAAD,CACIC,KAAM,qBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,KAGnC5I,QAAS,kBAAM4vB,GAAkB,MAErC,cAAChhB,EAAA,EAAD,CAAYvR,MAAO,CAACwE,aAAc,IAAlC,SACM7C,EAAM8f,QACJ,cAAC7Q,EAAA,EAAD,CACI5P,MAAO,OACPsK,KAAM,QACNtL,MAAOyF,GAAOgc,UA7FX,IAAnBpZ,EAAQ1K,OACA,cAACoC,EAAA,EAAD,CAAMC,MAAOyF,GAAOic,WAApB,SACHkN,GAASjtB,EAAM5D,MAAMmtB,gBAG1B,MAAO7iB,OAAP,EAAOA,EAASoJ,KAAI,SAACrK,EAAIvH,GACrB,OACI,cAACovB,GAAD,CACI9sB,MAAOtC,EAEP2C,GAAI3C,EACJwI,QAASjB,EACTrJ,KAAM4D,EAAM5D,KACZgyB,WAAYA,EACZE,eAAgBA,EAChBV,WAAY1vB,EACZiwB,YAAaznB,GAPRxI,e,cCjHd,SAAS2W,GAAK7U,GACzB,IAAMkxB,EAAgBn2B,EAAQ,KAC9B,OACA,qCACMiF,EAAMmxB,WAAa,EAAI,cAAC,IAAD,CACrB9yB,MAAO,CAACiM,UAAW,IAAKoE,SAAU,WAAY9C,OAAQ,IACtD7K,eAAgB,CAAC4N,WAAY,KAC7BhF,KAAK,QACLF,KAAM,CAACC,KAAM,eAAgBkF,KAAM,UAAWvP,MAAM,SACpD2B,QAAS,kBAAMhB,EAAMoxB,qBACpB,6BACL,cAAC,EAAD,CAAQjuB,aAAckuB,GAAgB5tB,YAAaytB,EAAehuB,YAAa,CAACoH,WAAY,GAAInI,OAAQ,IAAKU,cAAe,MAC5H,cAAC,IAAD,CAAMxE,MAAOyF,GAAO4oB,WAApB,SAAiCO,GAASjtB,EAAM5D,MAAM2uB,cAAc/qB,EAAMwG,KAAKkD,QAC/E,cAAC,IAAD,CACIpF,MAAO2oB,GAASjtB,EAAM5D,MAAMsmB,KAC5B3hB,eAAgB+C,GAAOmkB,WACvBjnB,QAAS,kBAAMhB,EAAMsxB,SAAQ,IAC7BhmB,WAAW,EACX7B,KACI,cAAC,IAAD,CACIC,KAAM,wBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,OAIvC,cAAC,IAAD,CACItF,MAAO2oB,GAASjtB,EAAM5D,MAAMwmB,MAC5Bne,YAAa,CAAEhE,gBAAiB,OAChCM,eAAgB+C,GAAOkoB,gBACvBhrB,QAAS,kBAAMhB,EAAMkmB,OAAO,IAC5Bzc,KACI,cAAC,IAAD,CACIC,KAAM,qBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,U,yBC9BhC,SAASuc,GAAKnmB,GACzB,MAAwBqI,mBAAS,IAAjC,WAAOsb,EAAP,KAAa2D,EAAb,KACA,EAA8Bjf,oBAAS,GAAvC,WAAOyX,EAAP,KAAgB2G,EAAhB,KACA,EAA8Bpe,mBAAS,GAAvC,WAAO6G,EAAP,KAAgBqiB,EAAhB,KACA,EAA4BlpB,qBAA5B,WAAO2mB,EAAP,KAAeC,EAAf,KACA,EAA0B5mB,oBAAS,GAAnC,WAAOsY,EAAP,KAAcC,EAAd,KACA,EAAkCvY,oBAAS,GAA3C,WAAO0V,EAAP,KAAkBC,EAAlB,KACA,EAA0B3V,mBAAS,IAAI2F,KAAMqM,OAA7C,WAAOG,EAAP,KAAc2D,EAAd,KAEA,EAA8B9V,mBAAS,GAAvC,WAAO1C,EAAP,KAAgB6F,EAAhB,KACA,EAAwBnD,mBAAS,GAAjC,WAAOkjB,EAAP,KAAaiG,EAAb,KACA,EAAgCnpB,oBAAS,GAAzC,WAAO8e,EAAP,KAAiBC,EAAjB,KAEArZ,qBAAW,WACPuZ,EChCe,SAACmK,GACpB,IAAK,IAAIvzB,EAAIuzB,EAAIz1B,OAAS,EAAGkC,EAAI,EAAGA,IAAK,CACrC,IAAM0X,EAAIpO,KAAKC,MAAMD,KAAKE,UAAYxJ,EAAI,IADL,EAElB,CAACuzB,EAAI7b,GAAI6b,EAAIvzB,IAA/BuzB,EAAIvzB,GAFgC,KAE5BuzB,EAAI7b,GAFwB,KAIzC,OAAO6b,ED2BKC,CAAQ1xB,EAAMwG,OACtBigB,GAAW,KACZ,IAEH,IAAMkL,EAAe52B,EAAQ,KACvB62B,EAAY72B,EAAQ,KAGpBqyB,EAAa,oBAAA1xB,EAAAC,OAAA,kEAAAD,EAAA,YACc8e,OADd,EACcA,EAAOkE,kBADrB,kBAEIE,SAFJ,kCAAAljB,EAAA,MAGL8e,EAAM6D,cAHD,OAIfL,GAAa,GAJE,6DA6Cb6T,EAA0B,SAACh0B,GAC7B,OACIof,KAAM9T,MACFtL,EAASovB,GAASjtB,EAAM5D,MAAM8uB,aAAe+B,GAASjtB,EAAM5D,MAAM+uB,YAClEttB,EAASovB,GAASjtB,EAAM5D,MAAMuH,QAAUspB,GAASjtB,EAAM5D,MAAMgnB,OAAOO,EAAKzU,GAAS+H,SAClF,CACI,CACItZ,KAAMsvB,GAASjtB,EAAM5D,MAAM4tB,GAC3BhpB,QAAS,8BAAAtF,EAAAC,OAAA,qDACDuT,EAAU,GAAKyU,EAAK3nB,OAAS,GAD5B,gBAEDu1B,EAAWriB,EAAU,GAFpB,8BAIKlJ,EAAyBjL,EAAlB4K,GAAW4lB,EAAe,IAA0D,KAC7F5lB,GAAW4lB,GAAMnE,GAAY,GALhC,WAAA1rB,EAAA,MAMuBsS,KAAMqM,MAAMC,YAAYtU,IAN/C,gBAMOwU,EANP,EAMOA,MACR2D,EAAS3D,GACTA,EAAMC,YACNmG,GAAS,GATR,kEAmC7B,OACA,mCACKd,EACG,cAAC7Q,EAAA,EAAD,CAAmBtF,KAAM,QAAStL,MAAO,CAACiM,UAAW,IAAKjL,MAAO,SAEjE,qCACK8nB,GAAYxhB,GAAW4lB,EACpB,cAAC,KAAD,CACI/C,SAAS,EACTC,WAAW,EACXC,UAAW,IACXC,MAAO,GACPC,OAAQ,CAAEC,GAAI,GAAIC,GAAI,MAG1B,6BAEJ,eAAC,IAAD,CACIjH,QAASlB,EACTmB,aAAche,GAAOmc,QACrB8B,gBAAiB,kBAAM/hB,EAAMkmB,OAAO,IACpClE,eAAgBC,KAJpB,UAMKtc,GAAW4lB,EACR,qCACI,cAAC,EAAD,CAAQpoB,aAAcwuB,EAAcluB,YAAaslB,KAAa7lB,YAAa,CAACoH,WAAY,GAAInI,OAAQ,IAAKU,cAAe,IAAKO,MAAM,IACnI,cAAC,IAAD,CAAM/E,MAAO,CAACgB,MAAM,OAAQ0D,UAAW,SAAUC,SAAU,GAAI1E,WAAY,QAA3E,SAAqF2uB,GAASjtB,EAAM5D,MAAMivB,mBAC1G,cAAC,IAAD,CAAMhtB,MAAO,CAAC0E,UAAW,SAAUuH,UAAW,GAAItH,SAAU,IAA5D,SAAkEiqB,GAASjtB,EAAM5D,MAAMkvB,YAAYC,EAAM5lB,QAG7G,qCACI,cAAC,EAAD,CAAQxC,aAAcyuB,EAAWnuB,YAAaquB,KAAU5uB,YAAa,CAACoH,WAAY,GAAInI,OAAQ,IAAKU,cAAe,MAClH,cAAC,IAAD,CAAMxE,MAAO,CAACgB,MAAM,MAAO0D,UAAW,SAAUC,SAAU,GAAI1E,WAAY,QAA1E,SAAoF2uB,GAASjtB,EAAM5D,MAAMovB,gBACzG,cAAC,IAAD,CAAMntB,MAAO,CAAC0E,UAAW,SAAUuH,UAAW,GAAItH,SAAU,IAA5D,SAAkEiqB,GAASjtB,EAAM5D,MAAMqvB,SAASF,EAAM5lB,QAG9G,cAAC,IAAD,CAAQrB,MAAO2oB,GAASjtB,EAAM5D,MAAMwmB,MAAO5hB,QAAS,kBAAMhB,EAAMkmB,OAAO,IAAInlB,eAAgB+C,GAAO4gB,YAAajb,KAC3G,cAAC,IAAD,CACIC,KAAM,qBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,UAjG9B,WACjB,GAAK+Z,EAAKzU,GACV,OAAQyU,EAAKzU,GAASpJ,UAClB,IAAK,QACD,OAAO,cAAC,IAAD,CAAO5E,OAAS,CAACE,IAAKuiB,EAAKzU,GAAS9N,KAAQ/C,MAAOyF,GAAO6oB,mBACrE,IAAK,QACD,OAAO,cAAC,IAAD,CAAM3rB,QAAS,kBAAM+c,EAAYqP,IA1BlC,0BAAA1xB,EAAAC,OAAA,uDACdqiB,GAAa,GADC,WAAAtiB,EAAA,MAERsS,KAAMuQ,kBAAkB,CAC1BC,yBAAyB,EACzBC,mBAAmB,KAJT,yBAAA/iB,EAAA,YAMe8e,OANf,EAMeA,EAAOkE,kBANtB,WAOmB,KAAf,OADZC,EANQ,aAOV,EAAAA,EAAgBC,UAPN,mCAAAljB,EAAA,MAQJ8e,EAAMqE,UAAU,CAAEzd,IAAKuiB,EAAKzU,GAAS9N,OARjC,OASV+c,EAAS3D,GATC,2BAAA9e,EAAA,MAWR8e,EAAMC,aAXE,QAYdD,EAAMuE,2BAA0B,SAAOC,GAAP,SAAAtjB,EAAAC,OAAA,oDACxBqjB,EAAeC,cADS,kCAAAvjB,EAAA,MAElB8e,EAAMvF,eAFY,OAGxB+I,GAAa,GAHW,+DAZlB,6DA0BiDqP,IAAc3iB,QAAM,EAACf,KAAM,GAAID,KAAMqU,EAAY,uBAAyB,sBAAuB1e,MAAO,UAAWuP,KAAM,UAAW7N,eAAgB,CAAC8B,aAAc,MAC9N,QACI,OAAO,8BA6FLkvB,GACF,cAAC,IAAD,CAAM1zB,MAAOyF,GAAO8oB,aAApB,SAAmCjJ,EAAKzU,GAASgI,WACjD,eAACtT,EAAA,EAAD,CAAMvF,MAAOyF,GAAO+oB,aAApB,UACI,cAAC,IAAD,CAAOxuB,MAAOyF,GAAOgpB,cAAeviB,aAAc,SAAChG,GAAQ0qB,EAAU1qB,IAAO8F,MAAO2kB,IACnF,cAAC,IAAD,CAAQvqB,YAAaX,GAAOipB,iBAAkBzoB,MAAO2oB,GAASjtB,EAAM5D,MAAM4tB,GAAIhpB,QAAS,YAnEhF,uBAAAtF,EAAAC,OAAA,mDACbq2B,EADa,MACWhD,GADX,SACWA,EAAQpnB,aADnB,EACW,EAAgB4nB,cAjEhC,EAAA9zB,EAAAC,OAAA,kEAAAD,EAAA,MACR0xB,KADQ,cAEdjP,EAAS,IAAInQ,KAAMqM,OAFL,WAAA3e,EAAA,YAGR8e,OAHQ,EAGRA,EAAOvF,eAHC,4DAmEdga,EAAU,KAEK,KADTpxB,EAAS8lB,EAAKzU,GAAS+H,QAAQpR,SAASmsB,IAJ3B,wBAOfR,EAAQjG,EAAO,GAPA,WAAA7vB,EAAA,MAQTwlB,GAAgBlhB,EAAM6E,SAAU7E,EAAMqG,OAAQsd,EAAKzU,GAASrO,IAAI,IARvD,sCAWf2K,EAAW7F,EAAU,GAXN,YAAAjK,EAAA,MAYTwlB,GAAgBlhB,EAAM6E,SAAU7E,EAAMqG,OAAQsd,EAAKzU,GAASrO,IAAI,IAZvD,QAcnBgxB,EAAwBh0B,GAdL,6DAmEwFo0B,cEzKpG,SAASvP,GAAK1iB,GACzB,MAAwBqI,oBAAS,GAAjC,WAAO6pB,EAAP,KAAaZ,EAAb,KAEA,OACA,cAAC1tB,EAAA,EAAD,CAAMvF,MAAOyF,GAAOzB,KAApB,SACM6vB,EACE,cAAC,GAAD,CACI91B,KAAM4D,EAAM5D,KACZiK,OAAQrG,EAAMwG,KAAKD,IACnB1B,SAAU7E,EAAM6E,SAChB2B,KAAMxG,EAAMwG,KAAKE,QACjBwf,OAAQlmB,EAAMkmB,OACdoL,QAASA,IAGb,cAAC,GAAD,CACIl1B,KAAM4D,EAAM5D,KACZg1B,gBAAiBpxB,EAAMoxB,gBACvB5qB,KAAMxG,EAAMwG,KACZ0f,OAAQlmB,EAAMkmB,OACdoL,QAASA,EACTH,WAAYnxB,EAAMmxB,eCnBnB,SAASxO,GAAK3iB,GACzB,IAAMmD,EAAepI,EAAQ,KAC7B,OACI,cAACqU,EAAA,EAAD,CAAc/Q,MAAOyF,GAAO2hB,aAA5B,SACI,eAAC7V,EAAA,EAAD,CAAYvR,MAAO,CAAC6D,MAAO,QAA3B,UACI,cAAC,IAAD,CACIoC,MAAO2oB,GAASjtB,EAAM5D,MAAMwmB,MAC5Bne,YAAa,CAAEhE,gBAAiB,OAChCM,eAAgB+C,GAAO4hB,oBACvBhb,QAAM,EACN1J,QAAS,kBAAMhB,EAAMkmB,OAAO,IAC5Bzc,KACI,cAAC,IAAD,CACIC,KAAM,qBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,OAIvC,cAAC,EAAD,CACIzG,aAAcA,EACdM,YAAa0lB,KACbjmB,YAAaY,GAAOiiB,iBACpBriB,WAAYI,GAAOiiB,iBACnB3iB,MAAM,EACNE,UAAU,IAEd,cAAC,IAAD,CAAMjF,MAAOyF,GAAO6hB,SAApB,SAA+BsH,GAASjtB,EAAM5D,MAAM+nB,OAEpD,eAAC,IAAD,CAAM9lB,MAAOyF,GAAO8hB,aAApB,UACI,cAAC,IAAD,CACIlc,KAAM,iBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,KAE9BqjB,GAASjtB,EAAM5D,MAAMgoB,aAE1B,cAAC,IAAD,CAAM/lB,MAAOyF,GAAOgiB,SAApB,SAA+BmH,GAASjtB,EAAM5D,MAAMkoB,UAGpD,eAAC,IAAD,CAAMjmB,MAAOyF,GAAO8hB,aAApB,UACI,cAAC,IAAD,CACIlc,KAAM,iBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,KAE9BqjB,GAASjtB,EAAM5D,MAAMyvB,cAE1B,cAAC,IAAD,CAAMxtB,MAAOyF,GAAOgiB,SAApB,SAA+BmH,GAASjtB,EAAM5D,MAAM0vB,gBC/CrD,SAASxQ,GAAKtb,GACzB,MAAkCqI,oBAAS,GAA3C,WAAO0E,EAAP,KAAkBC,EAAlB,KACA,EAAsB3E,mBAAS,GAA/B,WAAO+gB,EAAP,KAAYlD,EAAZ,KACA,EAAwB7d,mBAAS,IAAjC,WAAO7B,EAAP,KAAa2rB,EAAb,KACA,EAA4B9pB,mBAAS,GAArC,WAAOX,EAAP,KAAe0qB,EAAf,KACA,EAA4B/pB,oBAAS,GAArC,WAAO4lB,EAAP,KAAeD,EAAf,KAEAjgB,qBAAU,WAGNmT,GAAQlhB,EAAM6E,UAAU3I,MAAK,SAACmJ,GACtBA,EAAKrJ,OAAS,IACdm2B,EAAQ9sB,GACR+sB,EAAU/qB,GAAa,EAAGb,EAAKxK,OAAS,KAE5CgR,GAAa,MAIjB,IA2BMqB,EAAcC,IAAYC,iBAC5B,qBA5Be,WAyBf,OAxBI6a,EAAM,EACM,IAARA,EACAnM,KAAM9T,MACF8jB,GAASjtB,EAAM5D,MAAM6tB,gBACrBgD,GAASjtB,EAAM5D,MAAM8tB,WACrB,CACI,CACIvsB,KAAMsvB,GAASjtB,EAAM5D,MAAMwmB,MAC3B5hB,QAAS,aACT3C,MAAO,UAEX,CACIV,KAAMsvB,GAASjtB,EAAM5D,MAAM4tB,GAC3BhpB,QAAS,WACLklB,EAAO,OAMtBA,EAAO,GAEZlmB,EAAMohB,QAAQ,OAEX,KAMX,OAAO,WACH/S,EAAYG,YAEjB,CAAC4a,EAAK6E,IAET,IAAMmD,EAAkB,WACpB,GAAI5qB,EAAKxK,OAAS,EAAG,CACjB,IAAIq2B,EjD9DkB,SAArBC,EAAsBC,EAASjrB,EAAKC,GAE7C,OADAirB,WAAanrB,GAAaC,EAAKC,GAC3BirB,YAAcD,EACPD,EAAmBC,EAASjrB,EAAKC,GACrCirB,WiD0DYF,CAAmB5qB,EAAQ,EAAGlB,EAAKxK,OAAS,GACvDo2B,EAAUC,KAsDlB,OAAO,cAACzuB,EAAA,EAAD,CAAMvF,MAAOyF,GAAOzB,KAApB,SAjDS,IAAR+mB,EAEI,cAAC,GAAD,CACIlD,OAAQA,EACR9pB,KAAM4D,EAAM5D,KACZglB,QAASphB,EAAMohB,QACf5a,KAAMA,EACNuG,UAAWA,IAGJ,IAARqc,EACA,cAAC1G,GAAD,CACHlc,KAAMA,EAAKkB,GACXypB,WAAY3qB,EAAKxK,OACjBI,KAAM4D,EAAM5D,KACZyI,SAAU7E,EAAM6E,SAChBqhB,OAAQA,EACRkL,gBAAiBA,IAEN,IAARhI,EAEH,cAACyG,GAAD,CACI/P,QAAS/S,EACTmZ,OAAQA,EACR9pB,KAAM4D,EAAM5D,KACZglB,QAASphB,EAAMohB,QACf5a,KAAMA,EACN3B,SAAU7E,EAAM6E,SAChBopB,OAAQA,EACRD,UAAWA,IAGJ,IAAR5E,EACA,cAAC,GAAD,CAAMhtB,KAAM4D,EAAM5D,KAAM8pB,OAAQA,IACxB,IAARkD,EAEH,cAACsH,GAAD,CACI7rB,SAAU7E,EAAM6E,SAChBqhB,OAAQA,EACR9pB,KAAM4D,EAAM5D,KACZglB,QAASphB,EAAMohB,QACf4M,UAAWA,IAIZ,cAAC,IAAD,4BC5HnB,IAAMtwB,GAAiB,SAACC,EAAMqc,GAC1B,IAAI3a,EAAQ,UACA,UAAR2a,IACA3a,EAAQ,WACZ,IAAIzB,EAAqB,EACnBC,EAASF,EAAKG,SAASC,MAAM,WAUnC,OATAJ,EAAKK,SAASC,SAAQ,SAACD,EAAUE,GAAX,OAClBL,EAAOM,SACDP,EAAqBM,EACvB,EACA,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,OAAQe,MAAOA,GAAlD,SACKrB,GADME,OAKZ,cAACE,EAAA,EAAD,UAAOP,KAGLzB,GAAO,CAChBC,GAAI,CACAqmB,KAAM,QACNC,KAAM,uBACNC,MAAO,SACP6P,cAAe,SAAClP,GACZ,OAAO7lB,GAAe,CAClBI,SAAS,SAASylB,EAAQ,EAAI,IAAM,IAA5B,YAAyCA,EAAQ,EAAI,IAAM,IAA3D,QACRvlB,SAAU,CAACulB,MAGnB1I,MAAO,SAACzV,GACJ,OAAO1H,GAAe,CAClBI,SAAS,oBACTE,SAAU,CAACoH,MAGnB+X,MAAO,aACP8G,OAAQ,aACRyO,OAAQ,oBACRC,YAAa,uBACbC,aAAc,0FACdhP,gBAAiB,sBACjBJ,eAAgB,SAACpe,GACb,OAAO1H,GAAe,CAClBI,SAAU,oDACVE,SAAU,CAACoH,MAGnBye,MAAO,aACPC,eAAgB,yFAChBC,MAAO,cACP8O,aAAc,SAACztB,GACX,OAAO1H,GAAe,CAClBI,SAAU,8BACVE,SAAU,CAACoH,MAKnB+e,KAAM,2CACNC,UAAW,gBACXE,MAAO,WACH,OAAO5mB,GAAe,CAClBI,SAAS,6dACTE,SAAU,CAAC,qDAAmD,YAAa,mDAA4C,eAG/H80B,UAAW,WACXC,UAAW,WACP,OAAOr1B,GAAe,CAClBI,SAAS,mcACTE,SAAU,CAAC,uBAAwB,iCAAkC,uBAAwB,gDAGrGg1B,SAAU,WACN,OAAOt1B,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,oCACZ,WAGXP,GAAI,CACAilB,KAAM,OACNC,KAAM,mBACNC,MAAO,OACP6P,cAAe,SAAClP,GACZ,OAAO7lB,GAAe,CAClBI,SAAS,eAAeylB,EAAQ,EAAI,MAAQ,KAApC,QACRvlB,SAAU,CAACulB,MAGnB1I,MAAO,SAACzV,GACJ,OAAO1H,GAAe,CAClBI,SAAS,oBACTE,SAAU,CAACoH,MAGnB+X,MAAO,SACP8G,OAAQ,UACRyO,OAAQ,YACRC,YAAa,mBACbC,aAAc,gEACdhP,gBAAiB,oBACjBJ,eAAgB,SAACpe,GACb,OAAO1H,GAAe,CAClBI,SAAU,qCACVE,SAAU,CAACoH,MAGnBye,MAAO,YACPC,eAAgB,6DAChBC,MAAO,QACP8O,aAAc,SAACztB,GACX,OAAO1H,GAAe,CAClBI,SAAU,6BACVE,SAAU,CAACoH,MAKnB+e,KAAM,wCACNC,UAAW,YACXE,MAAO,WACH,OAAO5mB,GAAe,CAClBI,SAAS,6UACTE,SAAU,CAAC,4CAA6C,QAAS,0CAA2C,cAGpH80B,UAAW,YACXC,UAAW,WACP,OAAOr1B,GAAe,CAClBI,SAAS,2WACTE,SAAU,CAAC,mBAAoB,+BAAgC,mBAAoB,yCAG3Fg1B,SAAU,WACN,OAAOt1B,GAAe,CAClBI,SAAU,MACVE,SAAU,CAAC,oCACZ,Y,kBCrITsyB,GAHe2C,KAAWruB,IAAI,UAAU1C,OACxB+wB,KAAWruB,IAAI,UAAUzC,OAEF,YAAc,WACrD+wB,GAAiB,aAAR5C,GAAsB6C,KAAKC,KAE3BvxB,OAAWC,OAAO,CAC7BO,KAAM,CACFF,OAAQgxB,aAAG,QACXhH,cAAe,GACf9nB,KAAM,GAEVoQ,KAAM,CACFvS,MAAO,IACPC,YAAQ6uB,EACRxuB,eAAgB,GAChBiiB,QAAS,GACT5hB,aAAc,GACdU,WAAY,SACZyO,YAAa,GAEjB7F,OAAQ,CACJjK,MAAO,IACPW,aAAc,GACdH,aAAc,GACdkH,iBAAkB,GAEtB8a,YAAa,CACTxiB,MAAO,IACPoI,UAAW,GACX7J,gBAAiB,MACjBiC,aAAc,GACdkH,iBAAkB,EAClB/G,aAAc,IAElBwwB,UAAW,CACPnxB,MAAOgxB,GAAO,OACd/wB,OAAQ,EACR1B,gBAAiB,UACjBiC,aAAc,GACdsN,YAAa,UACbiC,YAAa,EACbD,YAAa,EACbyS,QAAS,GACT7a,iBAAkB,EAClBpH,eAAgB,GAEpB8wB,YAAa,CACTpxB,MAAOgxB,GAAO,OACd/wB,OAAQ,EACRO,aAAc,GACdsP,YAAa,EACbhC,YAAa,UACbiC,YAAa,EACbwS,QAAS,GACT7a,iBAAkB,EAClBpH,eAAgB,GAEpB+wB,UAAW,CACPrxB,MAAOgxB,GAAO,OACd/wB,OAAQ,EACRO,aAAc,GACd+hB,QAAS,GACT7a,iBAAkB,EAClBoI,YAAa,EACbxP,eAAgB,GAEpBgxB,SAAU,CACNlpB,UAAW,OAEfmpB,SAAU,CACNnpB,UAAW,GACXpI,MAAOkxB,aAAG,OACVjxB,OAAQgxB,aAAG,OACXlvB,cAAe,MACfC,SAAU,OACVsM,eAAgB,UAEpBkjB,eAAgB,CACZzvB,cAAe,MACf/B,MAAe,YAARouB,GAAqB8C,aAAG,QAAUD,aAAG,QAC5C3iB,eAAgB,SAChBpM,aAAc,SACdkG,UAAW,IAEfqpB,YAAa,CACTvvB,aAAc,SACdrB,UAAW,SACX4B,kBAAmB,GACnBjC,aAAc,GACdkH,iBAAkB,GAEtBqW,QAAS,CACLvd,aAAc,GACdiC,kBAAmB,GACnBub,gBAAiB,GACjB5d,WAAY,UAEhBijB,cAAe,CACXviB,SAAU,GACV1E,WAAY,QAEhBknB,YAAa,CACTtjB,MAAO,IACPc,SAAU,GACVH,aAAc,GACdE,UAAW,UAKf0iB,aAAc,CACVnjB,WAAY,SACZ7B,gBAAiB,QACjB+jB,WAAY,GACZtiB,MAAOkxB,aAAG,QACVjH,cAAe,IAEnBzG,oBAAqB,CACjBxjB,MAAO,IACPzB,gBAAiB,MACjB8B,UAAW,SACXG,aAAc,GACd4H,UAAW,GACXV,iBAAkB,GAEtB+b,SAAU,CACNnjB,eAAgB,GAChBN,MAAO,IACP5D,WAAY,OACZ0E,SAAU,GACVD,UAAW,SACX1D,MAAO,UACPkD,UAAW,UAEfqjB,aAAc,CACV/iB,aAAc,GACdvE,WAAY,OACZ0E,SAAU,GACVD,UAAW,OACXR,UAAW,aACXoM,WAAY,GACZtP,MAAO,UACPwmB,cAAe,aAEnBC,SAAU,CACNlc,iBAAkB,GAClB/G,aAAc,GACdX,MAAO,KAEX6jB,iBAAkB,CACdrX,SAAU,WACVxM,MAAO,IACPuiB,QAAS,GACT7Y,QAAS,KCnJF,SAAS+W,GAAK3iB,GACzB,IAAMmD,EAAepI,EAAQ,KAC7B,OACI,cAACqU,EAAA,EAAD,CAAc/Q,MAAOyF,GAAO2hB,aAA5B,SACI,eAAC7V,EAAA,EAAD,CAAYvR,MAAO,CAAC6D,MAAO,QAA3B,UACI,cAAC,IAAD,CACIoC,MAAOsvB,GAAW5zB,EAAM5D,MAAMwmB,MAC9Bne,YAAa,CAAEhE,gBAAiB,OAChCM,eAAgB+C,GAAO4hB,oBACvBhb,QAAM,EACN1J,QAAS,kBAAMhB,EAAMkmB,OAAO,IAC5Bzc,KACI,cAAC,IAAD,CACIC,KAAM,qBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,OAIvC,cAAC,EAAD,CACIzG,aAAcA,EACdM,YAAa0lB,KACbjmB,YAAaY,GAAOiiB,iBACpBriB,WAAYI,GAAOiiB,iBACnB3iB,MAAM,EACNE,UAAU,IAEd,cAAC,IAAD,CAAMjF,MAAOyF,GAAO6hB,SAApB,SAA+BiO,GAAW5zB,EAAM5D,MAAM+nB,OAEtD,eAAC,IAAD,CAAM9lB,MAAOyF,GAAO8hB,aAApB,UACI,cAAC,IAAD,CACIlc,KAAM,iBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,KAE9BgqB,GAAW5zB,EAAM5D,MAAMgoB,aAE5B,cAAC,IAAD,CAAM/lB,MAAOyF,GAAOgiB,SAApB,SAA+B8N,GAAW5zB,EAAM5D,MAAMkoB,UAEtD,eAAC,IAAD,CAAMjmB,MAAOyF,GAAO8hB,aAApB,UACI,cAAC,IAAD,CACIlc,KAAM,iBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,KAE9BgqB,GAAW5zB,EAAM5D,MAAM02B,aAE5B,cAAC,IAAD,CAAMz0B,MAAOyF,GAAOgiB,SAApB,SAA+B8N,GAAW5zB,EAAM5D,MAAM22B,mB,yBCtDvD,SAASle,GAAK7U,GACzB,OACI,qCACI,cAACwD,EAAA,EAAD,CAAOtC,OAAQ2yB,KAAYx1B,MAAOyF,GAAO2Q,KAAMlR,WAAY,UAE3D,cAAC,IAAD,CACIe,MAAOsvB,GAAW5zB,EAAM5D,MAAMsmB,KAC9B3hB,eAAgB+C,GAAOqI,OACvBnL,QAAS,kBAAMhB,EAAMkmB,OAAO,IAC5Bzc,KACI,cAAC,IAAD,CACIC,KAAM,eACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,OAKvC,cAAC,IAAD,CACItF,MAAOsvB,GAAW5zB,EAAM5D,MAAMumB,KAC9B5hB,eAAgB+C,GAAOqI,OACvBnL,QAAS,kBAAMhB,EAAMkmB,OAAO,IAC5Bzc,KACI,cAAC,IAAD,CACIC,KAAM,6BACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,OAKvC,eAAChG,EAAA,EAAD,WAEA,cAAC,IAAD,CACIvE,MAAM,UACNhB,MAAO,CACHqQ,SAAU,WACVC,YAAa,GACbrE,WAAY,IAEhBX,KAAK,QACLF,KACI,CACIC,KAAM1J,EAAM8zB,eAAiB,sBAAwB,sBACrDllB,KAAM,UACNvP,MAAM,QACNsK,KAAM,GACNtL,MAAO,CAACiM,UAAW,IAG3BtJ,QAAS,kBAAMhB,EAAM+zB,sBAEzB,cAAC,IAAD,CACI10B,MAAM,UACNhB,MAAO,CACHqQ,SAAU,WACVC,WAAY,GACZrE,WAAY,IAEhBX,KAAK,QACLF,KACI,CACIC,KAAM1J,EAAMg0B,aAAe,QAAU,aACrCplB,KAAM,SACNvP,MAAM,QACNsK,KAAM,GACNtL,MAAO,CAACiM,UAAW,IAG3BtJ,QAAS,kBAAMhB,EAAMi0B,iBAAgB,SAAA3e,GAAI,OAAKA,WAIlD,cAAC,IAAD,CACIhR,MAAOsvB,GAAW5zB,EAAM5D,MAAMwmB,MAC9Bne,YAAa,CAAEhE,gBAAiB,OAChCM,eAAgB+C,GAAO4gB,YACvB1jB,QAAS,WACLhB,EAAMgV,QAAQC,cACdjV,EAAMohB,QAAQ,OAElB3X,KACI,cAAC,IAAD,CACIC,KAAM,qBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,UCrGnD,IAQasqB,GAAqB,SAACl4B,GAsB/B,IArBA,IAAMm4B,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,WAEEC,EAAQ,CACV,WACA,OACA,OACA,gBACA,QACA,OACA,QACA,eACA,aACA,UAEA3C,EAAM,GACDvzB,EAAI,EAAGA,EAAIlC,EAAS,EAAGkC,IAAK,CACjC,IAAIm2B,EAAa7sB,KAAKC,MAAMD,KAAKE,SAAWysB,EAAOn4B,QAC/Cs4B,EAAY9sB,KAAKC,MAAMD,KAAKE,SAAW0sB,EAAMp4B,QACjDy1B,EAAItJ,KAAK,CAAE9oB,MAAO80B,EAAOE,GAAa5qB,KAAM2qB,EAAME,IAAc,CAAEj1B,MAAO80B,EAAOE,GAAa5qB,KAAM2qB,EAAME,KACzGH,EAAOh2B,OAAOk2B,EAAY,GAC1BD,EAAMj2B,OAAOm2B,EAAW,GAE5B7C,EArCY,SAACA,GACb,IAAK,IAAIvzB,EAAIuzB,EAAIz1B,OAAS,EAAGkC,EAAI,EAAGA,IAAK,CACrC,IAAM0X,EAAIpO,KAAKC,MAAMD,KAAKE,UAAYxJ,EAAI,IADL,EAElB,CAACuzB,EAAI7b,GAAI6b,EAAIvzB,IAA/BuzB,EAAIvzB,GAFgC,KAE5BuzB,EAAI7b,GAFwB,KAIzC,OAAO6b,EAgCDC,CAAQD,GACd,IAAK,IAAIvzB,EAAI,EAAGA,EAAIuzB,EAAIz1B,OAAQkC,IAAK,CACtBuzB,EAAIvzB,GACZ8Q,IAAM9Q,EAGb,OAAQuzB,GCrCN8C,GAAetB,KAAWruB,IAAI,UAAU1C,MACxCsyB,GAAgBvB,KAAWruB,IAAI,UAAUzC,OAIhC,SAASsyB,GAAKz0B,GACzB,IAAI00B,EACExB,EAASqB,IAAgBC,GAAgBA,GAAgBD,GAC7CG,EAAd10B,EAAM20B,OAAqB,CAAC,CAACl0B,gBAAiBT,EAAMS,iBAAkB,CAACqD,GAAOwvB,cACzEtzB,EAAM40B,SAAW50B,EAAM60B,KAAmB,CAAC,CAACp0B,gBAAiBT,EAAMS,iBAAkB,CAACqD,GAAOyvB,YACpFzvB,GAAOuvB,UAEzB,IAAM5pB,EAAQzJ,EAAM40B,SAAY50B,EAAM20B,QAAW30B,EAAM60B,KAA+B70B,EAAMyJ,KAA9B,sBAE9D,OACI,mCACI,cAACqF,EAAA,EAAD,CAAkBzQ,MAAQq2B,EAAa1zB,QAAS,WACvChB,EAAM20B,QAAW30B,EAAM40B,SAAS50B,EAAM80B,WAAW90B,EAAMQ,QADhE,SAGI,cAAC,IAAD,CACIkJ,KAAMD,EACNE,MAAM3J,EAAM40B,SAAW50B,EAAM60B,MAAQ70B,EAAM20B,OAAkB,IAATzB,GACpD7zB,MAAOW,EAAM40B,SAAW50B,EAAM60B,MAAQ70B,EAAM20B,OAAS,QAAU,OAC/D/lB,KAAK,UACLvQ,MAAOyF,GAAO0vB,eCVnB,SAAS9Q,GAAK1iB,GACzB,MAAwBqI,mBAAS,KAAI6rB,GAAmB,KAAxD,WAAOvQ,EAAP,KAAa2D,EAAb,KACA,EAA0Bjf,mBAAS,IAAnC,WAAOsR,EAAP,KAAcob,EAAd,KACA,EAA0B1sB,mBAAS,GAAnC,WAAOkb,EAAP,KAAcmD,EAAd,KACA,EAAwBre,mBAAS,IAAjC,WAAO6pB,EAAP,KAAaZ,EAAb,KACA,EAAwBjpB,oBAAS,GAAjC,WAAOwsB,EAAP,KAAaG,EAAb,KACA,EAAgC3sB,oBAAS,GAAzC,WAAO8e,EAAP,KAAiBC,EAAjB,KACA,EAA0B/e,oBAAS,GAAnC,WAAOyY,EAAP,KAAcC,EAAd,KAEM4Q,EAAe52B,EAAQ,KACvB62B,EAAY72B,EAAQ,KA4JpB+5B,EAAa,SAACl0B,GAChB,IAAIkgB,IAAS+T,EAAb,CACA,IAAMI,EAAc/C,EACdgD,EAAYvR,EAAK/iB,GACjBu0B,EAAO,eAAOF,GAAP,CAAoBC,IACjC,GAAsB,GAAlBC,EAAQn5B,OAER,GAAIm5B,EAAQ,GAAG91B,QAAU81B,EAAQ,GAAG91B,OAAS81B,EAAQ,GAAG1rB,OAAS0rB,EAAQ,GAAG1rB,KAAM,CAC9E,IAAM2rB,EAAoBzR,EAAK3nB,OACzBq5B,EAAM,eAAO1b,GAAP,CAAcwb,EAAQ,GAAIA,EAAQ,KAC1CE,EAAOr5B,QAAUo5B,GACjBp1B,EAAMqtB,UAAU,QAChBrtB,EAAMs1B,UAAS,SAAAC,GAAS,OAAIA,EAAY,KACxCP,GAAQ,GACRtO,EAAS,GACTY,EAAQ,KAAI4M,GAxKpBl0B,EAAMoF,OAAS,EACR,EACFpF,EAAMoF,OAAS,GACb,EACFpF,EAAMoF,OAAS,GACb,EACFpF,EAAMoF,OAAS,GACb,GAEA,MAgKC2vB,EAAS,MAET/0B,EAAMqtB,UAAU,WAChB0H,EAASM,IAEb/D,EAAQ,SAERA,EAAQ6D,GACRn1B,EAAMqtB,UAAU,QAChBtM,GAAS,GACTpR,YAAW,WACM,GAAT4T,GAAYmD,GAAS,SAAA8O,GAAS,OAAIA,EAAY,KACpC,IAAVjS,EACAvjB,EAAMy1B,WAENnE,EAAQ,IACRyD,EAAS,KAEbhU,GAAS,KACV,UAGPuQ,EAAQ6D,GACRn1B,EAAMqtB,UAAU,UAwBxB,OACI,qCACKlG,EACO,cAAC,KAAD,CACIqB,SAAS,EACTC,WAAW,EACXC,UAAW,IACXC,MAAO,GACPC,OAAQ,CAAEC,GAAI,GAAIC,GAAI,MAG1B,6BAER,eAAC,IAAD,CACIjH,QAAS7hB,EAAM2gB,MACfmB,aAAche,GAAOmc,QACrB8B,gBAAiB,kBAAM/hB,EAAM4gB,UAAS,IACtCoB,eAAgBC,KAJpB,UAMMjiB,EAAM2F,SAAW3F,EAAM2gB,OA7K5BwG,GAAUC,GAAY,GAEvB,qCACI,cAAChpB,EAAA,EAAD,CAAMC,MAAOyF,GAAOyhB,cAApB,SACKqO,GAAW5zB,EAAM5D,MAAMwnB,kBAE5B,cAACxlB,EAAA,EAAD,CAAMC,MAAOyF,GAAO0hB,YAApB,SACKoO,GAAW5zB,EAAM5D,MAAMonB,eAAexjB,EAAM01B,gBAEjD,cAAC,EAAD,CACIvyB,aAAcwuB,EACdluB,YAAaslB,KACbC,UAAU,EACV5lB,MAAM,EACNF,YAAa,CAAEf,OAAQ,IACvBuB,WAAY,CAAEvB,OAAQ,UAtClB,WAChB,GAAmB,GAAfnC,EAAM2gB,MACV,OACI,qCACI,cAAC,EAAD,CACIxd,aAAcyuB,EACdnuB,YAAaquB,KACb9I,UAAU,EACV5lB,MAAM,EACNF,YAAa,CAAEf,OAAQ,IACvBuB,WAAY,CAAEvB,OAAQ,MAE1B,cAAC/D,EAAA,EAAD,CAAMC,MAAOyF,GAAOyhB,cAApB,SACKqO,GAAW5zB,EAAM5D,MAAMynB,QAE5B,cAACzlB,EAAA,EAAD,CAAMC,MAAOyF,GAAO0hB,YAApB,SACKoO,GAAW5zB,EAAM5D,MAAM0nB,oBAoLwB6R,GACpD,eAAC/xB,EAAA,EAAD,CAAMvF,MAAO,CAAC4F,cAAe,MAAOqG,UAAW,IAA/C,UACI,cAAC,IAAD,CAAQhG,MAAOsvB,GAAW5zB,EAAM5D,MAAM2nB,MAAO/iB,QAAS,kBA9B9DmmB,GAAUC,GAAY,GAC1BpnB,EAAM4gB,UAAS,GACfoU,GAAQ,GACRtO,EAAS,GACTqO,EAAS,IACTzD,EAAQ,SACRhK,EAAQ,KAAI4M,GAAmB,MAwBoDzvB,YAAa,CAACC,YAAa,IAAK+E,KACnG,cAAC,IAAD,CACIC,KAAM,eACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,OAInC,cAAC,IAAD,CAAQtF,MAAOsvB,GAAW5zB,EAAM5D,MAAMwmB,MAAO5hB,QAAS,WAC9CmmB,GAAUC,GAAY,GAC1BpnB,EAAM4gB,UAAS,GACf5gB,EAAMkmB,OAAO,IACdzhB,YAAa,CAAChE,gBAAiB,OAAQgJ,KACtC,cAAC,IAAD,CACIC,KAAM,qBACNkF,KAAM,UACNvP,MAAO,QACPsK,KAAM,GACNtL,MAAO,CAAEuL,iBAAkB,aAK3C,cAAChG,EAAA,EAAD,CAAMvF,MAAOyF,GAAO2vB,SAApB,SAjEG9P,EAAK7T,KAAK,SAACrK,EAAIvH,GAClB,IAAI02B,GAAU,EACVD,GAAS,EAGb,OAFIhb,EAAM7U,MAAK,SAAA8wB,GAAO,OAAIA,EAAQ5mB,MAAQ9Q,KAAK02B,GAAU,EAChD1C,EAAKptB,MAAK,SAAA8wB,GAAO,OAAIA,EAAQ5mB,MAAQ9Q,OAAKy2B,GAAS,GACpD,cAACF,GAAD,CAAMI,KAAMA,EAAcr0B,MAAOtC,EAAG02B,QAASA,EAASD,OAAQA,EAAQl0B,gBAAiBgF,EAAGpG,MAAOoK,KAAMhE,EAAGgE,KAAMqrB,WAAYA,GAArG52B,QA+D/B,eAAC0F,EAAA,EAAD,CAAMvF,MAAO,CAACiE,WAAY,SAAUJ,MAAOkxB,aAAG,QAAS9oB,WAAY,IAAnE,WACe,IAATuqB,EAAgB,cAACz2B,EAAA,EAAD,UAAOw1B,GAAW5zB,EAAM5D,MAAM42B,aAAqB,6BACrE,cAAC50B,EAAA,EAAD,UAAOw1B,GAAW5zB,EAAM5D,MAAMye,MAAM7a,EAAMoF,SAC1C,cAAChH,EAAA,EAAD,UAAOw1B,GAAW5zB,EAAM5D,MAAMy2B,aAAa7yB,EAAM01B,gBACjD,cAACt3B,EAAA,EAAD,UAAOw1B,GAAW5zB,EAAM5D,MAAMq2B,cAAclP,KA7KhD,eAAC3f,EAAA,EAAD,CAAMvF,MAAOyF,GAAO4vB,eAApB,UACI,cAAC,IAAD,CAAQpvB,MAAOuwB,EAAOjB,GAAW5zB,EAAM5D,MAAM+gB,MAAQyW,GAAW5zB,EAAM5D,MAAMs2B,OAAQ1xB,QAAS,WAAY6zB,EAAMG,GAAQ,GAdlH,WACb,GAAmB,GAAfh1B,EAAMoF,MAAV,CACA,IAAMgwB,EAAoBzR,EAAK3nB,OAC/BgE,EAAMs1B,UAAS,SAAAC,GAAS,OAAIA,EAAY,KACxCP,GAAQ,GACRtO,EAAS,GACTqO,EAAS,IACTzD,EAAQ,IACRhK,EAAQ,KAAI4M,GAAmBkB,MAM6GS,IAAepxB,YAAa,CAACX,GAAO6vB,YAAa,CAAClzB,gBAAiBo0B,EAAO,UAAY,UAAWprB,KACjO,cAAC,IAAD,CACAC,KAAMmrB,EAAO,OAAS,GACtBlrB,KAAM,GACNtK,MAAM,QACNuP,KAAK,YAEPtD,WAAW,EAAM4O,UAAW2a,GAAwB,IAAhB70B,EAAMoF,OAAeme,GAAS,IACpE,cAAC,IAAD,CACIlkB,MAAM,UACNsK,KAAK,QACLF,KACI,CACIC,KAAM1J,EAAM8zB,eAAiB,sBAAwB,sBACrDllB,KAAM,UACNvP,MAAM,QACNsK,KAAM,GACNtL,MAAO,CAACiM,UAAW,IAG3BtJ,QAAS,kBAAMhB,EAAM+zB,oBACrB11B,MAAO,CAACuL,iBAAkB,KAE9B,cAAC,IAAD,CACIvK,MAAM,UACNsK,KAAK,QACLF,KACI,CACIC,KAAM1J,EAAMg0B,aAAe,QAAU,aACrCplB,KAAM,SACNvP,MAAM,QACNsK,KAAM,GACNtL,MAAO,CAACiM,UAAW,IAG3BtJ,QAAS,kBAAMhB,EAAMi0B,iBAAgB,SAAA3e,GAAI,OAAKA,MAC9CjX,MAAO,CAACuL,iBAAkB,KAE9B,cAAC,IAAD,CACIvK,MAAM,MACNsK,KAAK,QACLF,KACI,CACIC,KAAM,aACNkF,KAAM,UACNvP,MAAM,QACNsK,KAAM,GACNtL,MAAO,CAACiM,UAAW,IAG3BtJ,QAAS,kBAAMhB,EAAM81B,UACrBz3B,MAAO,CAACuL,iBAAkB,cClK9C,IAAM6d,IAAc,IAAItR,MAAOqM,mBAAmB,SAEnC,SAASuT,GAAO/1B,GAC3B,MAAsBqI,mBAAS,GAA/B,WAAO+gB,EAAP,KAAYlD,EAAZ,KACA,EAA0B7d,mBAAS,GAAnC,WAAOjD,EAAP,KAAckwB,EAAd,KACA,EAAwCjtB,mBAAS,GAAjD,WAAOqtB,EAAP,KAAqBM,EAArB,KACA,EAAkC3tB,mBAAS,GAA3C,WAAkB0e,GAAlB,WACA,EAA0B1e,oBAAS,GAAnC,WAAOsY,EAAP,KAAcC,EAAd,KACA,EAA0BvY,mBAAS,IAAI2F,KAAMqM,OAA7C,WAAc8D,GAAd,WACA,EAA8B9V,mBAAS,IAAI2F,KAAMqM,OAAjD,WAAOrF,EAAP,KAAgBoF,EAAhB,KACA,EAA8B/R,oBAAS,GAAvC,WAAO1C,EAAP,KAAgB6F,EAAhB,KACA,EAAwCnD,oBAAS,GAAjD,WAAO2rB,EAAP,KAAqBC,EAArB,KACA,EAA4C5rB,oBAAS,GAArD,WAAOyrB,EAAP,KAAuBmC,EAAvB,KAEAloB,qBAAW,4BAAArS,EAAAC,OAAA,kEAAAD,EAAA,MAGiBsS,KAAMqM,MAAMC,YAEhCvf,EAAQ,KACR,CACIwf,WAAW,KAPZ,gBAGCC,EAHD,EAGCA,MAORJ,EAAWI,GACXA,EAAMC,a1DtBc5V,E0DwBJ7E,EAAM6E,S1DxBQG,E0DwBEyiB,G1DvB7B3sB,GACFgK,KAAK,CAAED,SAAUA,EAAUG,KAAMA,IACjCD,KAAK,CAAEK,OAAQ,IACfH,MAAK,SAACnJ,EAAKuJ,GAIR,OAHIvJ,GACAwJ,QAAQC,MAAMzJ,GAEVuJ,M0DgBiCnJ,MAAK,SAACmJ,GAC3CA,EAAKrJ,OAAS,GAAGg6B,EAAgB3wB,EAAK,GAAGD,UAGjD8b,GAAiBlhB,EAAM6E,UAAU3I,MAAK,SAACmJ,GAC/BA,EAAKrJ,OAAS,GAAG+qB,EAAa1hB,EAAK,GAAGD,UAlBvC,iC1DXR,IAAqBP,EAAUG,I0DWvB,0BAqBR,IAEH+I,qBAAU,WAEN,IAaMM,EAAcC,IAAYC,iBAC5B,qBAde,WACf,GAAI6a,EAAM,EAAG,CACT,GAAY,IAARA,GAAahkB,EAAQ,EAErB,YADA0wB,IAGJ5P,EAAO,QAEPlR,EAAQC,cACRjV,EAAMohB,QAAQ,MAElB,OAAO,KAMX,OAAO,WACH/S,EAAYG,YAEjB,CAAC4a,EAAKpU,IAET,IAAMygB,EAAU,4BAAA/5B,EAAAC,OAAA,uDACZilB,GAAS,GACLsV,GAAe,EACfnT,GAAY,EACZ3d,EAAQswB,GACRrI,EAAU,YACV7hB,GAAW,GACXwqB,EAAgB5wB,GAChB8wB,GAAe,EACX9wB,EAAQ2d,IACRA,GAAY,EACZgE,EAAa3hB,MAGjBioB,EAAU,QACV7hB,GAAW,IAfH,WAAA9P,EAAA,MAiBNwlB,GAAgBlhB,EAAM6E,SAAUO,EAAOqiB,GAAayO,EAAcnT,IAjB5D,OAkBZuS,EAAS,GAlBG,6DAqBVvB,EAAmB,WACjBD,EAAgB9e,EAAQqJ,aACvBrJ,EAAQyF,YACbwb,GAAkB,SAAAE,GAAU,OAAKA,MAG/BL,EAAS,WACX,GAAc,IAAV1wB,EACC,OAAO6X,KAAM9T,MACdyqB,GAAW5zB,EAAM5D,MAAMu2B,YACvBiB,GAAW5zB,EAAM5D,MAAMw2B,aACvB,CACI,CACIj1B,KAAMi2B,GAAW5zB,EAAM5D,MAAMwmB,MAC7B5hB,QAAS,aACT3C,MAAO,UAEX,CACIV,KAAMi2B,GAAW5zB,EAAM5D,MAAM6nB,OAC7BjjB,QAAS,WACLy0B,QAbCvP,EAAO,IAoBtBmH,EAAY,SAAOze,GAAP,mBAAAlT,EAAAC,OAAA,mDACTq4B,GAAiB,CAAC,WAAY,QAAQnuB,SAAS+I,GADtC,iDAEV4L,IAAY,MAALA,KAAOvF,eAFJ,KAINrG,EAJM,OAKL,YALK,OAQL,SARK,OAWL,SAXK,QAcL,SAdK,QAiBL,aAjBK,QAoBL,SApBK,+BAMNwnB,EAAer7B,EAAQ,KANjB,mCASNq7B,EAAer7B,EAAQ,KATjB,oCAYNq7B,EAAer7B,EAAQ,KAZjB,oCAeNq7B,EAAer7B,EAAQ,KAfjB,oCAkBNq7B,EAAer7B,EAAQ,KAlBjB,oCAqBNq7B,EAAer7B,EAAQ,KArBjB,oFAAAW,EAAA,MA0BUsS,KAAMqM,MAAMC,YAAY8b,IA1BlC,iBA0BN5b,EA1BM,EA0BNA,MACR2D,EAAS3D,GACTA,EAAMC,YA5BQ,8DAsElB,OACI,cAAC7K,EAAA,EAAD,CAAYvR,MAAOyF,GAAOzB,KAAM6sB,sBAAuB,CAAC5sB,WAAY,UAApE,SAvCY,IAAR8mB,EAEI,cAAC,GAAD,CACIlD,OAAQA,EACR9pB,KAAM4D,EAAM5D,KACZglB,QAASphB,EAAMohB,QACfpM,QAASA,EACTif,gBAAiBA,EACjBD,aAAcA,EACdF,eAAgBA,EAChBC,iBAAkBA,IAGX,IAAR3K,EACA,cAAC,GAAD,CACKhtB,KAAM4D,EAAM5D,KACZ8pB,OAAQA,EACR9gB,MAAOA,EACPkwB,SAAUA,EACVQ,OAAQA,EACRnV,MAAOA,EACPC,SAAUA,EACV8U,aAAcA,EACd/vB,QAASA,EACT8vB,QAASA,EACTpI,UAAWA,EACX0G,iBAAkBA,EAClBD,eAAgBA,EAChBE,aAAcA,EACdC,gBAAiBA,IAEd,IAAR7K,EACC,cAAC,GAAD,CAAMhtB,KAAM4D,EAAM5D,KAAM8pB,OAAQA,IAEjC,cAAC9nB,EAAA,EAAD,4BC5LJ,SAASwc,GAAWxe,EAAMyI,GAAW,IAAD,QAC/C,MAAO,CACH,CACI6E,KAAI,SAAEqT,GAAe3gB,SAAjB,EAAE,EAAsBkf,KAC5B7R,KAAM,sBACN4sB,gBAAiB,SAACj6B,EAAMglB,GACpB,OACI,cAAC9F,GAAD,CAAMlf,KAAMA,EAAMglB,QAASA,EAASvc,SAAUA,MAI1D,CACI6E,KAAI,SAAEqT,GAAe3gB,SAAjB,EAAE,EAAsBgf,aAC5B3R,KAAM,eACN4sB,gBAAiB,SAACj6B,EAAMglB,GACpB,OAAO,cAAC2U,GAAD,CAAQ35B,KAAMA,EAAMglB,QAASA,EAASvc,SAAUA,MAG/D,CACI6E,KAAI,SAAEqT,GAAe3gB,SAAjB,EAAE,EAAsB+e,MAC5B1R,KAAM,eACN4sB,gBAAiB,SAACj6B,EAAMglB,GACpB,OACI,cAACjG,GAAD,CAAO/e,KAAMA,EAAMglB,QAASA,EAASvc,SAAUA,MAI3D,CACI6E,KAAI,SAAEqT,GAAe3gB,SAAjB,EAAE,EAAsBif,WAC5B5R,KAAM,cACN4sB,gBAAiB,SAACj6B,EAAMglB,GACpB,OACI,cAAC/F,GAAD,CACIjf,KAAMA,EACNglB,QAASA,EACTvc,SAAUA,OCvCnBhD,WAAWC,OAAO,CAC7Bf,eAAgB,CACZuB,WAAY,SACZgI,UAAW,GACXzH,aAAc,IAElB4B,YAAa,CACTvC,MAAO,IACPC,OAAQ,GACRqO,eAAgB,aAChB/P,gBAAiB,WAErByb,kBAAmB,CACfha,MAAO,IACPC,OAAQ,GACR1B,gBAAiB,OAErB2b,iBAAkB,CACdla,MAAO,IACPC,OAAQ,GACR1B,gBAAiB,YCbV,SAASma,GAAW5a,GAC/B,MAAwBqI,qBAAxB,WAAOiuB,EAAP,KAAalV,EAAb,KAMA,OAJArT,qBAAW,WACPC,KAAMC,mBAAkB,KACzB,IAEIqoB,GAGH,cAAC1mB,EAAA,EAAD,CAAYvR,MAAO,CAAEgG,KAAM,GAA3B,SACKkyB,GAAev2B,EAAM5D,MAAQ,KAAM4D,EAAM6E,UAAUiL,KAAI,SAACrK,EAAIvH,GACzD,OACI,cAAC,IAAD,CACIuL,KAAM,CACFC,KAAMjE,EAAGgE,KACTmF,KAAM,UACNjF,KAAM,GACNtK,MAAO,SAGXm3B,aAAc,OACdthB,mBAAoB,CAAExQ,YAAa,IACnCD,YAAaX,GAAOW,YACpB1D,eAAgB+C,GAAO/C,eACvBuD,MAAOmB,EAAGiE,KACV1I,QAAS,SAACuD,GACN6c,EACI3b,EAAG4wB,gBAAgBr2B,EAAM5D,MAAQ,KAAMglB,MAR1CljB,QC3Bd2D,WAAWC,OAAO,CAC7B20B,SAAU,CACNpyB,KAAM,EACNlC,OAAQ,IACR1B,gBAAiB,QACjB+B,eAAgB,GAChBwN,YAAa,OACbiC,YAAa,GAEjBykB,cAAe,CACXryB,KAAM,EACNlC,OAAQ,IACR1B,gBAAiB,QACjB+B,eAAgB,GAChBwN,YAAa,OACbiC,YAAa,GAEjB0kB,aAAc,CACV3zB,SAAU,GACV3D,MAAO,UACPf,WAAY,OACZs4B,OAAQ,GAEZhb,QAAS,CACLvc,MAAO,OACPsN,UAAW,SACXrC,UAAW,GACXqE,WAAY,M,UCjBL,SAAS8M,GAAUzb,GAC9B,MAAkCqI,oBAAS,GAA3C,WAAO0E,EAAP,KAAkBC,EAAlB,KACA,EAAkC3E,mBAAS,IAA3C,WAAOwuB,EAAP,KAAkBC,EAAlB,KAEA/oB,qBAAW,WACPmT,GAAQlhB,EAAM6E,UAAU3I,MAAK,SAACmJ,GAE1B,IADA,IAAMosB,EAAM,GACHvzB,EAAI,EAAGA,EAAImH,EAAKrJ,OAAQkC,IAAK,CAClC,IAAMuH,EAAKJ,EAAKnH,GAChBuzB,EAAItJ,KAAK,CAAC/iB,MAAOmpB,GAAW9oB,EAAGiB,QAAS1G,EAAM6E,UAAW6E,KAAMjE,EAAGiE,OAEtEotB,EAAarF,GACbzkB,GAAa,QAElB,IAoCH,OACI,cAAC4C,EAAA,EAAD,CAAYvR,MAAOyF,GAAO2yB,SAAUM,YAAY,EAAhD,SACI,eAACnzB,EAAA,EAAD,WACI,cAACxF,EAAA,EAAD,CAAMC,MAAOyF,GAAO6yB,aAApB,SAAmC5Z,GAAe/c,EAAM5D,MAAMqf,YAC5D1O,EAAY,cAACkC,EAAA,EAAD,CAAmBtF,KAAM,QAAStK,MAAO,YACnD,cAACuQ,EAAA,EAAD,CAAYmnB,YAAY,EAAxB,SAtCa,IAArBF,EAAU76B,OACF,cAACoC,EAAA,EAAD,CAAMC,MAAOyF,GAAO8X,QAApB,SAA8BmB,GAAe/c,EAAM5D,MAAMwf,UAE1Dib,EAAU/mB,KAAK,SAACrK,EAAGvH,GACtB,OACI,eAAC0F,EAAA,EAAD,CAAMvF,MAAO,CAACuL,iBAAkB,IAAhC,UACI,cAAC,IAAD,CACIS,MAAO5E,EAAGiE,KACVstB,UAAW,CAACj0B,UAAW,UACvB4sB,WAAY,CAACjhB,SAAS,WAAY/J,kBAAmB,GAAIxC,OAAQ,GAAIyH,iBAAkB,GAAIpH,eAAgB,IAAKoJ,OAAQ,KAE5H,cAAC,KAAD,CACIvB,MAAO5E,EAAGL,MACV4xB,UAAW,CAACn0B,cAAe,IAC3ByB,MAAOyY,GAAe/c,EAAM5D,MAAMuH,QAClCszB,YAAa,IACbztB,WAAY,CAAC3G,aAAc,IAC3Bq0B,aAAc,EAEdC,MAAO,IACPC,kBAAmB,UACnBC,OAAQ,GACRC,oBAAqB,UACrBC,sBAAuB,GACvBC,oBAAqB,EACrBC,kBAAmB,OApBev5B,a,mlBCrB/C,SAASwd,GAAW1b,GAC/B,MAAkCqI,oBAAS,GAA3C,WAAO0E,EAAP,KAAkBC,EAAlB,KACA,EAAoC3E,mBAAS,IAA7C,WAAOqvB,EAAP,KAAmBC,EAAnB,KACA,EAAgCtvB,mBAAS,GAAzC,WAAOuvB,EAAP,KAAiBC,EAAjB,KAEMC,EAAU,CAAC/a,GAAe/c,EAAM5D,MAAMyf,OAAQkB,GAAe/c,EAAM5D,MAAM0f,gBAE/E/N,qBAAW,WlEcR,IAAkBlJ,KkEbJ7E,EAAM6E,SlEchB/J,GACFgK,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEC,MAAO,IACdC,MAAK,SAACnJ,EAAKuJ,GAIR,OAHIvJ,GACAwJ,QAAQC,MAAMzJ,GAEXuJ,MkErBkBnJ,MAAK,SAAC2B,GAC/B,IAAMk6B,EAAal6B,EAAO2wB,QAAQ,SAAC/oB,GAAD,OAAQA,EAAGL,MAAQ,KACrDuyB,EAAcI,GACd/qB,GAAa,QAElB,IA8EH,OACI,cAAC4C,EAAA,EAAD,CAAYvR,MAAOyF,GAAO4yB,cAAeK,YAAY,EAArD,SACI,eAACnzB,EAAA,EAAD,WACI,eAACA,EAAA,EAAD,CAAMvF,MAAO,CAAC4F,cAAe,OAA7B,UACI,cAAC7F,EAAA,EAAD,CAAMC,MAAOyF,GAAO6yB,aAApB,SAAmC5Z,GAAe/c,EAAM5D,MAAMsf,aAC9D,cAAC,IAAD,CACI1a,QAAS,SAACgO,GAAD,OAAS6oB,EAAY7oB,IAC9BgpB,cAAeJ,EACfE,QAASA,EACTrzB,YAAa,CAACE,kBAAmB,SAGvCoI,EAAY,cAACkC,EAAA,EAAD,CAAmBtF,KAAM,QAAStK,MAAO,UAAWhB,MAAO,CAACsQ,WAAY,IAAKrE,UAAW,MAClG,cAACsF,EAAA,EAAD,CAAYmnB,YAAY,EAAM14B,MAAO,CAACiM,UAAW,GAAjD,SAzFG,WACf,GAA0B,IAAtBotB,EAAW17B,OACX,OAAQ,cAACoC,EAAA,EAAD,CAAMC,MAAOyF,GAAO8X,QAApB,SAA8BmB,GAAe/c,EAAM5D,MAAMwf,UAEjE,IAAMqc,EAAS,GACTC,EAAO,GACP9yB,EAAQ,GAERyoB,EAAM6J,EAAW5nB,KAAI,SAAAqoB,GAAI,aAASA,MACxC,GAAiB,IAAbP,EACA,IADiB,IAAD,WACP15B,GACL,IAAMuH,EAAKooB,EAAI3vB,GACf,GAA8B,GAA1Bg6B,EAAKryB,SAASJ,EAAGT,MAAgB,CACjC,IAEIozB,EAFMvK,EAAI/d,KAAI,SAAAqoB,GAAI,aAASA,MACZ3J,QAAQ,SAACjqB,GAAD,OAAOA,EAAES,OAASS,EAAGT,QACjBD,MAAK,SAACrJ,EAAG28B,GAAJ,OAAUA,EAAEjzB,MAAQ1J,EAAE0J,SAC1D8yB,EAAK/P,KAAK1iB,EAAGT,MACbI,EAAM+iB,KAAKiQ,EAAgB,GAAGhzB,SAP7BlH,EAAI,EAAGA,EAAI2vB,EAAI7xB,OAAQkC,IAAM,EAA7BA,GAWb,IAAK,IAAIA,EAAI,EAAGA,EAAI2vB,EAAI7xB,OAAQkC,IAAK,CACjC,IAAI8Q,EAAMipB,EAAOj8B,OACXyJ,EAAKooB,EAAI3vB,GACE,IAAb05B,GAAkB5oB,EAAM,GAAKipB,EAAOjpB,EAAM,GAAGhK,OAASS,EAAGT,KACzDizB,EAAOjpB,EAAM,GAAG5J,OAASK,EAAGL,MACR,IAAbwyB,GAAkB5oB,EAAM,GAAKipB,EAAOjpB,EAAM,GAAG5J,MAAQK,EAAGL,OAAS6yB,EAAOjpB,EAAM,GAAGhK,OAASS,EAAGT,MACpGizB,EAAOjpB,EAAM,GAAG5J,MAAQK,EAAGL,MAC3ByoB,EAAI1vB,OAAOD,EAAG,IACX+5B,EAAO9P,KAAK1iB,GAGN,IAAbmyB,IAEAK,EAAOnoB,KAAK,SAACrK,GACTL,EAAM+iB,KAAK1iB,EAAGL,UAGlB6yB,EAAOnoB,KAAK,SAACrK,GACTyyB,EAAK/P,KAAK1iB,EAAGT,UAIrB,IAAMK,EAAO,CACTizB,OAAQJ,EACRK,SAAU,CACN,CACIlzB,KAAMD,KAIlB,OACI,cAACxB,EAAA,EAAD,CAAMvF,MAAO,CAACuL,iBAAkB,IAAhC,SACI,cAAC,KAAD,CACIvE,KAAMA,EACNnD,MAAqB,IAAdg2B,EAAKl8B,OACZmG,OAAQ,IACRq2B,UAAU,EACVC,uBAAuB,EACvBC,YAAa,CACTj4B,gBAAiB,UACjBk4B,uBAAwB,UACxBC,qBAAsB,UACtBC,cAAe,EACfx5B,MAAO,iBAAM,WACby5B,WAAY,iBAAM,YAEtBz6B,MAAO,CACHsQ,YAAa,QAsBfoqB,U,qkBCzGX,SAASpd,GAAY3b,GAChC,MAAkCqI,oBAAS,GAA3C,WAAO0E,EAAP,KAAkBC,EAAlB,KACA,EAAsC3E,mBAAS,IAA/C,WAAO2wB,EAAP,KAAoBC,EAApB,KACA,EAAgC5wB,mBAAS,GAAzC,WAAOuvB,EAAP,KAAiBC,EAAjB,KAEMC,EAAU,CAAC/a,GAAe/c,EAAM5D,MAAMyf,OAAQkB,GAAe/c,EAAM5D,MAAM0f,gBAE/E/N,qBAAW,WjEcR,IAAkBlJ,KiEbJ7E,EAAM6E,SjEchB/J,GACFgK,KAAK,CAAED,SAAUA,IACjBE,KAAK,CAAEC,MAAO,IACdC,MAAK,SAACnJ,EAAKuJ,GAIR,OAHIvJ,GACAwJ,QAAQC,MAAMzJ,GAEVuJ,MiErBiBnJ,MAAK,SAAC2B,GAC/B,IAAMk6B,EAAal6B,EAAO2wB,QAAQ,SAAC/oB,GAAD,OAAQA,EAAGL,MAAQ,KACrD6zB,EAAelB,GACf/qB,GAAa,QAElB,IA8EH,OACI,cAAC4C,EAAA,EAAD,CAAYvR,MAAOyF,GAAO4yB,cAAeK,YAAY,EAArD,SACI,eAACnzB,EAAA,EAAD,WACI,eAACA,EAAA,EAAD,CAAMvF,MAAO,CAAC4F,cAAe,OAA7B,UACI,cAAC7F,EAAA,EAAD,CAAMC,MAAOyF,GAAO6yB,aAApB,SAAmC5Z,GAAe/c,EAAM5D,MAAMuf,cAC9D,cAAC,IAAD,CACI3a,QAAS,SAACgO,GAAD,OAAS6oB,EAAY7oB,IAC9BgpB,cAAeJ,EACfE,QAASA,EACTrzB,YAAa,CAACE,kBAAmB,SAGvCoI,EAAY,cAACkC,EAAA,EAAD,CAAmBtF,KAAM,QAAStK,MAAO,UAAWhB,MAAO,CAACsQ,WAAY,IAAKrE,UAAW,MAClG,cAACsF,EAAA,EAAD,CAAYmnB,YAAY,EAAM14B,MAAO,CAACiM,UAAW,GAAjD,SAzFG,WACf,GAA2B,IAAvB0uB,EAAYh9B,OACZ,OAAQ,cAACoC,EAAA,EAAD,CAAMC,MAAOyF,GAAO8X,QAApB,SAA8BmB,GAAe/c,EAAM5D,MAAMwf,UAEjE,IAAMqc,EAAS,GACTC,EAAO,GACP9yB,EAAQ,GAERyoB,EAAMmL,EAAYlpB,KAAI,SAAAqoB,GAAI,aAASA,MACzC,GAAiB,IAAbP,EACA,IADiB,IAAD,WACP15B,GACL,IAAMuH,EAAKooB,EAAI3vB,GACf,GAA8B,GAA1Bg6B,EAAKryB,SAASJ,EAAGT,MAAgB,CACjC,IAEIozB,EAFMvK,EAAI/d,KAAI,SAAAqoB,GAAI,aAASA,MACZ3J,QAAQ,SAACjqB,GAAD,OAAOA,EAAES,OAASS,EAAGT,QACjBD,MAAK,SAACrJ,EAAG28B,GAAJ,OAAUA,EAAEjzB,MAAQ1J,EAAE0J,SAC1D8yB,EAAK/P,KAAK1iB,EAAGT,MACbI,EAAM+iB,KAAKiQ,EAAgB,GAAGhzB,SAP7BlH,EAAI,EAAGA,EAAI2vB,EAAI7xB,OAAQkC,IAAM,EAA7BA,GAWb,IAAK,IAAIA,EAAI,EAAGA,EAAI2vB,EAAI7xB,OAAQkC,IAAK,CACjC,IAAI8Q,EAAMipB,EAAOj8B,OACXyJ,EAAKooB,EAAI3vB,GACE,IAAb05B,GAAkB5oB,EAAM,GAAKipB,EAAOjpB,EAAM,GAAGhK,OAASS,EAAGT,KACzDizB,EAAOjpB,EAAM,GAAG5J,OAASK,EAAGL,MACR,IAAbwyB,GAAkB5oB,EAAM,GAAKipB,EAAOjpB,EAAM,GAAG5J,MAAQK,EAAGL,OAAS6yB,EAAOjpB,EAAM,GAAGhK,OAASS,EAAGT,MACpGizB,EAAOjpB,EAAM,GAAG5J,MAAQK,EAAGL,MAC3ByoB,EAAI1vB,OAAOD,EAAG,IACX+5B,EAAO9P,KAAK1iB,GAGN,IAAbmyB,IAEAK,EAAOnoB,KAAK,SAACrK,GACTL,EAAM+iB,KAAK1iB,EAAGL,UAGlB6yB,EAAOnoB,KAAK,SAACrK,GACTyyB,EAAK/P,KAAK1iB,EAAGT,UAIrB,IAAMK,EAAO,CACTizB,OAAQJ,EACRK,SAAU,CACN,CACIlzB,KAAMD,KAIlB,OACI,cAACxB,EAAA,EAAD,CAAMvF,MAAO,CAACuL,iBAAkB,IAAhC,SACI,cAAC,KAAD,CACIvE,KAAMA,EACNnD,MAAqB,IAAdg2B,EAAKl8B,OACZmG,OAAQ,IACRq2B,UAAU,EACVC,uBAAuB,EACvBC,YAAa,CACTj4B,gBAAiB,UACjBk4B,uBAAwB,UACxBC,qBAAsB,UACtBC,cAAe,EACfx5B,MAAO,iBAAM,WACby5B,WAAY,iBAAM,YAEtBz6B,MAAO,CACHsQ,YAAa,QAsBfoqB,UC7GX,SAASle,GAAM7a,GAC1B,OACI,eAAC4P,EAAA,EAAD,CAAYvR,MAAO,CAAEgG,KAAM,GAA3B,UACI,cAACoX,GAAD,CAAWrf,KAAM4D,EAAM5D,KAAMyI,SAAU7E,EAAM6E,WAC7C,cAAC8W,GAAD,CAAavf,KAAM4D,EAAM5D,KAAMyI,SAAU7E,EAAM6E,WAC/C,cAAC6W,GAAD,CAAYtf,KAAM4D,EAAM5D,KAAMyI,SAAU7E,EAAM6E,cCF1D,IAAMq0B,GAAMC,eAEG,SAASC,GAAKp5B,GAAQ,IAAD,MAEfE,cAEjB,OACI,eAACg5B,GAAIG,UAAL,CACIC,cAAe,CACXC,YAAa,CAAC,CAAEp3B,OAAQ,GAAI9C,MAAO,UAAWoB,gBAAiB,YAC/D+4B,iBAAkB,CAAC,CAAEn6B,MAAO,QAASwD,aAAc,MAH3D,UAMI,cAACq2B,GAAIO,OAAL,CACIC,QAAS,CACLC,aAAa,EACbC,WAAY,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACI,cAAC,IAAD,CACIjrB,KAAM,UACNvP,MAAO,QACPqK,KAAI,mBACAmwB,EAAU,GAAK,gBAMnCnwB,KAAI,SAAEqT,GAAe/c,EAAM5D,YAAvB,EAAE,EAA4Bwe,WAClCkf,SAAU,kBACN,cAAC,GAAD,CAAY19B,KAAM4D,EAAM5D,KAAMyI,SAAU7E,EAAM6E,cAGtD,cAACq0B,GAAIO,OAAL,CACIC,QAAS,CACLC,aAAa,EACbI,eAAe,EACfH,WAAY,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACI,cAAC,IAAD,CACIjrB,KAAM,UACNvP,MAAO,QACPqK,KAAI,QAASmwB,EAAU,GAAK,gBAK5CnwB,KAAI,SAAEqT,GAAe/c,EAAM5D,YAAvB,EAAE,EAA4Bye,MAClCif,SAAU,kBAAM,cAACjf,GAAD,CAAOze,KAAM4D,EAAM5D,KAAMyI,SAAU7E,EAAM6E,cAE7D,cAACq0B,GAAIO,OAAL,CACIC,QAAS,CACLC,aAAa,EACbI,eAAe,EACfH,WAAY,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACI,cAAC,IAAD,CACIjrB,KAAM,UACNvP,MAAO,QACPqK,KAAI,YAAamwB,EAAU,GAAK,gBAKhDnwB,KAAI,SAAEqT,GAAe/c,EAAM5D,YAAvB,EAAE,EAA4B0e,SAClCgf,SAAU,SAACv1B,GAAD,OACN,cAACuW,GAAD,CACI1e,KAAM4D,EAAM5D,KACZP,SAAQ,MAAEmE,OAAF,EAAEA,EAAOnE,SACjB4F,SAAQ,MAAEzB,OAAF,EAAEA,EAAOyB,SACjBkG,OAAQ3H,EAAM2H,OACd9C,SAAU7E,EAAM6E,SAChB2F,YAAaxK,EAAMwK,YACnB0S,UAAWld,EAAMkd,kB,wBClF1Brb,OAAWC,OAAO,CAC7B6J,UAAW,CACPrJ,WAAY,SACZ8B,aAAc,SACd+nB,cAAe,GACfjqB,MAAOkxB,aAAG,QACV3yB,gBAAiB,WAErBu5B,UAAW,CACP1vB,UAAW,GACXpI,MAAO,GACPC,YAAQ6uB,EACRnuB,aAAc,GACdpC,gBAAiB,WAErBw5B,SAAU,CACN/3B,MAAOkxB,aAAG,QACV3O,QAAS,IAEbyV,QAAS,CACLxrB,SAAU,WACVxM,MAAOkxB,aAAG,QACVjxB,OAAQgxB,aAAG,QACX1O,QAAS,IAEb1Y,SAAU,CACNzB,WAAY,GACZpI,MAAO,IACPC,OAAQ,IACRU,cAAe,GACfpC,gBAAiB,WAErBuL,QAAS,CACLhJ,SAAU,GACV3D,MAAO,QACPiL,UAAW,EACXsB,OAAQ,GAEZoU,QAAS,CACLtb,YAAa,GACbxC,MAAO,QAEXi4B,YAAa,CACT91B,KAAM,EACNnC,MAAO,QAEXk4B,QAAS,CACLp3B,SAAU,IAEdq3B,QAAS,CACL/3B,WAAY,SACZ8B,aAAc,SACdlC,MAAO,U,qkBCtCA,SAAS0Y,KAAc,IAAD,IACjC,EAAgCvS,mBAASiyB,YAAU,OAAS,KAA5D,WAAOz1B,EAAP,KACA,GADA,KAC4BwD,sBAA5B,WAAOV,EAAP,KAAeuV,EAAf,KACA,EAAgC7U,qBAAhC,WAAO5G,EAAP,KAAiB+I,EAAjB,KACA,EAAkCnC,oBAAS,GAA3C,WAAO0E,EAAP,KAAkBC,EAAlB,KAEM/M,EAAWC,cACXe,EAAK,SAAG0M,oBAAH,EAAG,EAAe1M,MACvB7E,GAAY,MAAL6E,OAAA,EAAAA,EAAO7E,OAAQ,KAEtB+G,EAAepI,EAAQ,KACvBw/B,EAAWx/B,EAAQ,KAEzBgT,qBAAU,WACNnD,GAAe/F,EAAShE,IACnB3E,MAAK,SAAC2B,GAAY,IAAD,EACTA,GAA6B,KAAb,MAANA,OAAA,EAAAA,EAAQ7B,SACnBiE,EAAS,cAEbid,EAAUrf,EAAO,IACjB2M,EAAW,SAAC3M,EAAO,SAAR,EAAC,EAAW4D,UACvBuL,GAAa,MAEhB/E,OAAM,SAACnM,GACJwJ,QAAQ4C,IAAIpM,GACZmE,EAAS,aAAc,CACnBgB,MAAO,CAAEpF,SAAQ,MAAEoF,OAAF,EAAEA,EAAOpF,SAAUO,KAAMA,QAGtD,IAMMiS,EAAcC,IAAYC,iBAC5B,qBAPe,WAIf,OAHAtO,EAAS,aAAc,CACnBgB,MAAO,CAAEpF,SAAQ,MAAEoF,OAAF,EAAEA,EAAOpF,SAAUO,KAAMA,MAEvC,KAMX,OAAO,kBAAMiS,EAAYG,YAC1B,IAEH,IAAMgsB,EAAQ,SACPC,MADO,IAEVtG,OAAO,SACAsG,KAAatG,QADd,IAEFuG,WAAY,kBAIpB,OAAI3tB,EAEI,cAACkC,EAAA,EAAD,CACI5P,MAAO,OACPsK,KAAM,QACNtL,MAAO,CAAEiM,UAAW,OAK5B,qCACI,eAAC1G,EAAA,EAAD,CAAMvF,MAAOyF,GAAO6H,UAApB,UACI,cAAC,EAAD,CACIxI,aAAcA,EACdM,YAAak3B,IACbz3B,YAAaY,GAAOk2B,UACpBt2B,WAAYI,GAAOiI,SACnB3I,MAAM,EACNE,UAAU,IAEd,cAAC,IAAD,CAAMjF,MAAOyF,GAAOkI,QAApB,UACK,SAAA+Q,GAAe3gB,SAAf,IAAsBkD,MAAMmC,KAAa,UAGlD,cAAC,IAAD,CAASpC,MAAO,OAAQ6C,MAAO,EAAG7D,MAAOyF,GAAOkc,UAEhD,eAACpc,EAAA,EAAD,CAAMvF,MAAO,CAAEgG,KAAM,GAArB,UACI,cAACT,EAAA,EAAD,CAAMvF,MAAO,CAAEgG,KAAM,EAAGqK,SAAU,YAAlC,SACI,cAAC,EAAD,CACIvL,aAAco3B,EACd92B,YAAam3B,KACb13B,YAAaY,GAAOm2B,SACpBv2B,WAAYI,GAAOo2B,QACnB92B,MAAM,EACNE,UAAU,MAGlB,cAACu3B,GAAA,EAAD,CAAqBC,MAAON,EAAUn8B,MAAO,CAAEiS,QAAS,KAAxD,SACI,cAAC8oB,GAAD,CACIh9B,KAAMA,EACNP,SAAQ,MAAEoF,OAAF,EAAEA,EAAOpF,SACjB4F,SAAQ,MAAEkG,OAAF,EAAEA,EAAQlG,SAClBoD,SAAUA,EAAShE,GACnB8G,OAAQA,EACRuV,UAAWA,EACX1S,YAAaA,YC1GrCpM,IAAK28B,aAAe38B,IAAK28B,cAAgB,GACzC38B,IAAK28B,aAAaC,kBAAmB,EAKrCC,aCMe,WAAgB,IAAD,EAC1B,EAA4B5yB,qBAA5B,WAAO6yB,EAAP,KAAeC,EAAf,KACA,EAAwB9yB,mBAAS,MAAjC,WAAOjM,EAAP,KAAawR,EAAb,KACA,EAAkCvF,oBAAS,GAA3C,WAAO0E,EAAP,KAAkBC,EAAlB,KAEAe,qBAAU,WAENqtB,MACD,CAACA,IAEJrtB,qBAAW,WAAO,IAAD,EACTstB,GAAQ,SAAAC,UAAA,IAAqBv9B,MAAM,KAAK,KAAM,KAClD6P,EAAQ,CAAC,KAAM,MAAM/H,SAASw1B,GAASA,EAAQ,MAC/C/1B,QAAQ4C,IAAI,8BACb,CAACgzB,IAEJ,IAAME,EAAmBG,uBAAY,oBAAA7/B,EAAAC,OAAA,gDACjC,IACI6/B,IACF,MAAO1/B,GACLwJ,QAAQC,MAAMzJ,GAJe,8DAMlC,IAEG0/B,EAAY,oBAAA9/B,EAAAC,OAAA,gDACdF,IAAYS,MAAK,SAACC,GACdg/B,EAAUh/B,GACV6Q,GAAa,MAHH,6DAOlB,OACI,eAACpJ,EAAA,EAAD,CAAMvF,MAAO,CAAEgG,KAAM,GAArB,UACI,cAACo3B,EAAA,EAAD,CAAWC,QAAQ,IAClB3uB,EACG,cAAC,GAAD,CACI1O,MAAO,CAAEgG,KAAM,EAAG/B,WAAY,UAC9B3E,KAAI,SAAEg+B,EAAcv/B,SAAhB,EAAE,EAAqBoB,gBAG/B,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIo+B,OAAK,EACL51B,KAAK,IACL4vB,QACI,cAAC,GAAD,CACIr6B,gBAAe,MAAE2/B,OAAF,EAAEA,EAAQ3/B,gBACzBa,KAAMA,EACNP,SAAQ,MAAEq/B,OAAF,EAAEA,EAAQr/B,SAClB+R,QAASA,MAIrB,cAAC,IAAD,CACIguB,OAAK,EACL51B,KAAK,YACL4vB,QACI,cAAC1jB,GAAD,CACI9V,KAAMA,MAIlB,cAAC,IAAD,CACIw/B,OAAK,EACL51B,KAAK,QACL4vB,QAAS,cAACzb,GAAD,CAAM/d,KAAMA,EAAMP,SAAQ,MAAEq/B,OAAF,EAAEA,EAAQr/B,SAAU+R,QAASA,MAEpE,cAAC,IAAD,CACIguB,OAAK,EACL51B,KAAK,YACL4vB,QAAS,cAACz2B,GAAD,CAAgB/C,KAAMA,EAAMP,SAAQ,MAAEq/B,OAAF,EAAEA,EAAQr/B,SAAU+R,QAASA,MAE9E,cAAC,IAAD,CACIguB,OAAK,EACL51B,KAAK,aACL4vB,QACI,cAAC9oB,GAAD,CACIvR,gBAAe,MAAE2/B,OAAF,EAAEA,EAAQ3/B,gBACzBa,KAAMA,EACNP,SAAQ,MAAEq/B,OAAF,EAAEA,EAAQr/B,aAI9B,cAAC,IAAD,CACImK,KAAK,kBACL4vB,QAAS,cAAC,GAAD,mB","file":"static/js/app.140234e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/question_mark.c1494184.gif\";","module.exports = __webpack_public_path__ + \"static/media/brain.abdab59b.gif\";","module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sad.bfdab12f.gif\";","module.exports = __webpack_public_path__ + \"static/media/applause.3560ad8b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/you_lose.e1f971d7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.c4ec63da.png\";","module.exports = __webpack_public_path__ + \"static/media/2.c9afe178.png\";","module.exports = __webpack_public_path__ + \"static/media/3.95e52180.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e18a9e44.png\";","module.exports = __webpack_public_path__ + \"static/media/5.1a0c5df5.png\";","module.exports = __webpack_public_path__ + \"static/media/6.64d544d0.png\";","module.exports = __webpack_public_path__ + \"static/media/alzheimapp_logo.efbaee1c.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.42d4e3d2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.d22dea5d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.5d28b463.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.baee48bf.png\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.e46e92e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e82f415e.gif\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.af08ce07.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.d73909c9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fail.4f8cf1ae.mp3\";","module.exports = __webpack_public_path__ + \"static/media/play.25c902a7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.44546c82.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n}\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n}\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n}\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n}\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n}\n\nexport function reset() {\n    FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return AsyncStorage.clear();\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retour',\n        OpenActivity: 'Ouvrir le profil',\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n        OpenActivity: 'Open this profile',\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet\\nrequise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? Il est possible {0} la donnée d'une personne et de {1} dans un autre appareil !\",\n                boldText: [\"d'exporter\", \"l'importer\"],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can {0} a person's data and {1} it in another device!\",\n                boldText: ['export', 'import'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer {0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to achieve today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport { useNavigate } from 'react-router-native';\nimport SuccessImage from '../../../assets/img/selection/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/selection/addedUser.json');\n    const navigate = useNavigate();\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <View style={{flexDirection: 'row', flexWrap: 'wrap', flexShrink: 1, alignItems: 'center', alignContent: 'center', flex: 1, alignSelf: 'center'}}>\n                <Button\n                    title={InterfaceLang[props.lang].ReturnToForm}\n                    onPress={(e) => {\n                        props.close();\n                    }}\n                    buttonStyle={{marginRight: 20, borderRadius: 15,paddingHorizontal: 15, backgroundColor: 'red'}}\n                />\n                { props.edit == false ? <Button\n                    title={InterfaceLang[props.lang].OpenActivity}\n                    onPress={(e) => {\n                        navigate(`/activities/${props.id}`, {\n                        state: {\n                            lang: props.lang ?? 'fr',\n                            username: props.username,\n                        }\n                    });\n                    }}\n                    buttonStyle={{borderRadius: 15, paddingHorizontal: 15}}\n                /> : <></> }\n            </View>\n        </View>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nconst createQuizContent = async (personId, el) => {\n    el.id = uuidv4();\n    el.score = [{personId: personId, success: 0, failed: 0}];\n    if (['audio', 'image'].includes(el.fileType)) {\n        await uploadQuizFile(el);\n    }\n};\n\nconst uploadQuizFile = async (el) => {\n    const filename = `${uuidv4()}${el.fileType == 'audio' ? '.m4a' : '.png'}`;\n    const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n    await FileSystem.copyAsync({\n        from: el.uri,\n        to: `${path}${filename}`\n    });\n    await FileSystem.deleteAsync(el.uri);\n    el.uri = `${path}${filename}`;\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        await createQuizContent(personId, el);\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport async function updateScore(personId, quizId, contentId, success) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    const contentIndex = quiz[0].content.findIndex(el => el.id == contentId );\n    const scoreIndex = quiz[0].content[contentIndex].score.findIndex(el => el.personId = personId);\n    if (success) quiz[0].content[contentIndex].score[scoreIndex].success++\n    else quiz[0].content[contentIndex].score[scoreIndex].failed++\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function deleteId(personId, quizId) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n};\n\nexport async function deleteQuestion(quizId, questionId) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    const content = quiz[0].content;\n    const contentIndex = content.findIndex(el => el.id == questionId );\n    if (['audio', 'image'].includes(content[contentIndex]))\n        await FileSystem.deleteAsync(content.uri);\n    quiz[0].content = content.splice(0, contentIndex);\n    return db.updateAsync({_id: quizId}, {...quiz[0]})\n};\n\nexport async function getById(quizId) {\n    return db.findAsync({ _id: quizId }, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n};\n\nexport async function saveQuiz(personId, quizId, content) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    if (!quiz) return;\n    for (let i = 0; i < content.length; i++) {\n        const el = content[i];\n        if (!el.id)\n            await createQuizContent(personId, el);\n        else if (el.id && el.editedFile) {\n            await uploadQuizFile(el);\n            delete el.editedFile;\n        }\n    }\n    quiz[0].content = content;\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function reset() {\n    return db.removeAsync({}, { multi: true });\n};\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DoubleSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nexport const randomArrayElement = (exclude, min, max) => {\n    randNumber = randomNumber(min, max);\n    if (randNumber == exclude)\n        return randomArrayElement(exclude, min, max);\n    return randNumber;\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\nimport { db as QuizDB } from './quizApi'\nimport { db as DoubleDB } from './doubleApi';\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await DoubleDB.removeAsync({ personId: id });\n    await QuizDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return db.removeAsync({ _id: id });\n};\n\nexport async function reset() {\n    return FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(async res => {\n        await SimonDB.removeAsync({}, { multi: true });\n        await QuizDB.removeAsync({}, { multi: true });\n        await DictaphoneDB.removeAsync({}, { multi: true });\n        return db.removeAsync({}, { multi: true });\n    });\n};","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0)\n                personId = result._id;\n            props.setId(personId);\n            await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${personId}`, {intermediates: true});\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n    const [id, setId] = useState(0);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n\n        id: id,\n        setId: setId\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { Platform } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n        zIndex: 1,\n    },\n    wrapper: {\n        marginTop: 20,\n        textAlign: 'center',\n        alignItems: 'center',\n        zIndex: 1,\n    },\n    topBanner: {\n        backgroundColor:'#355c7d'\n    },\n    topImage: {\n        // flex: 1,\n        height: 70,\n        //marginTop: -10,\n    },\n    heading: {\n        marginTop: 10,\n        fontSize: 20,\n        zIndex: 2,\n        color: 'white'\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    subtitle: {\n        textAlign: 'center',\n        color: 'white'\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: Platform.OS === 'ios' ? 0 : 10\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1,\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Text,\n    View,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    BackHandler,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB } from 'react-native-elements';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport LoadingBrain from '../../assets/img/activities/brain.gif';\nimport { lang as SelectionMenuLang } from '../../language/selection';\nimport Rows from '../../components/selection/Rows';\nimport CreatePerson from '../../components/selection/PersonCreation/CreatePerson';\n\nimport Lottie from '../../components/utils/Lottie';\n\nimport * as Person from '../../data/personApi';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function SelectionMenu(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        SelectionMenuLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const swiper = useRef(null);\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n    const setLang = state?.setLang || props.setLang;\n    const slidePropsState = state?.slide || props?.slide;\n\n    useEffect(() => {\n        Audio.setIsEnabledAsync(false);\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    useEffect( () => {\n        setIndex(slidePropsState || 0);\n        setBtnTxt(index === 0 ? SelectionMenuLang[lang].AddAPerson : SelectionMenuLang[lang].ReturnToList);\n    }, []);\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - index, true);\n    };\n\n    const changeIndex = (idx) => {\n        setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                setBtnTxt(SelectionMenuLang[lang].AddAPerson);\n            } else if (idx === 1) {\n                setBtnTxt(SelectionMenuLang[lang].ReturnToList);\n            }\n            setActive(true);\n        }, 400);\n    };\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 85 + '%',\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home', {\n                    state: { username: username, setLang: setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n            <View style={styles.wrapper}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={LoadingBrain}\n                    LottieStyle={styles.topImage}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[lang].Hello(username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (active === false) {\n                            return;\n                        }\n                        setActive(false);\n                        setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={slidePropsState || 0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={SelectionMenuLang[lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    setSearch(e);\n                                }}\n                                value={search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {persons && persons.length > 0 ? (\n                                printRows(persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={persons}\n                                setPersons={setPersons}\n                                lang={lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 40,\n        marginTop: -40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 50,\n        borderColor: 'gray',\n        borderRadius: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        width: 180,\n        textAlign: 'center',\n        elevation: 10\n    },\n    image: {\n        flex: 1,\n        width: 100\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n        height: 50\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername as insertUsername, SawTutorial, getUsername } from '../../data/configApi';\n\nimport SelectionMenu from '../SelectionMenu';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\nimport { Button } from 'react-native-elements';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [loadPage, setLoadPage] = useState(true);\n    const [confirmed, setConfirmed] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const [username, setUsername] = useState('');\n\n    useEffect(() => {\n        getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    setUsername(res[0].username);\n                    setRedirect(true);\n                }\n                setLoadPage(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoadPage(false);\n            });\n    }, []);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            insertUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setUsername(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (redirect)\n        return <SelectionMenu username={username} lang={props.lang} setLang={props.setLang} slide={1} />\n\n    if (loadPage)\n        return <View style={styles.container}></View>\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <Button\n                        title={isLoading ? (\n                            <ActivityIndicator\n                                color=\"white\"\n                                size=\"small\"\n                                animating={true}\n                            />\n                        ) : (\n                            'OK'\n                        )}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                        buttonStyle={styles.button}\n                        titleStyle={styles.buttonText}\n                    />\n                </View>\n            </View>\n        );\n    } else {\n        return <SelectionMenu username={username} lang={props.lang} setLang={props.setLang} slide={1} />\n    }\n}\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        height: 100 + '%',\n        padding: 20,\n        alignItems: 'center'\n    },\n    slideOdd: {\n        height: 100 + '%',\n        alignItems: 'center',\n        backgroundColor: '#355c7d',\n    },\n    title: {\n        color: 'black',\n        fontSize: 22,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    titleOdd: {\n        color: 'white',\n        fontSize: 22,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    textOdd: {\n        color: 'white',\n        fontSize: 15,\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    image: {\n        height: 30 + '%',\n        marginBottom: 40,\n        marginTop: 20,\n        aspectRatio: 1\n    },\n    button: {\n        marginTop: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        borderWidth: 1,\n        height: 60\n    },\n    buttonText: {\n        color: '#355c7d'\n    },\n    buttonContainer: {\n        width: 250,\n    }\n});\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { Button } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\n\nexport default function Tutorial(props) {\n    const navigate = useNavigate();\n\n    return (\n        <>\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Button \n                            title={TutorialLang[props.lang].LastStepButton}\n                            buttonStyle={styles.button}\n                            containerStyle={styles.buttonContainer}\n                            onPress={() => {\n                                Config.SawTutorial(true);\n                                navigate('/username', {\n                                    state: { setLang: props.setLang }\n                                });\n                            }}\n                            titleStyle={styles.buttonText}\n                        />\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Select: \"Sélection des personnes\",\n        Import: \"Importer un profil\",\n        Introduction: \"Introduction\",\n        Source: \"Accès au code source\",\n        License: \"Code sous licence GPL v3.\\nCréation originale par Diyaeddine LAOUID.\",\n        Language: \"Changer la langue\",\n        Step1: \"Vérification du format ... \",\n        Step2: \"Vérification du format de l'identité ... \",\n        Step3: \"Vérification d'une personne similaire ...\",\n        Step4: \"Vérification des activités ...\",\n        Step5: \"Vérification des quiz ...\",\n        Step6: \"Vérification des jeux des pairs ...\",\n        Step7: \"Vérification du Simon ...\",\n        Step8: \"Vérification du Journal vocal ...\",\n        Step9: \"Création de la personne ...\",\n        Step10: \"Création des quiz ...\",\n        Step11: \"Création des jeux des pairs ...\",\n        Step12: \"Création du Simon ...\",\n        Step13: \"Création du Dictaphone ...\",\n        Step14: \"L'importation s'est déroulée sans encombre ! :-)\",\n        GoBack: \"Retour\",\n        InvalidFile: \"Le fichier a été supprimé du cache\",\n        InvalidPersonFile: \"Le fichier importé est invalide !\",\n        IncorrectPersonFile: \"L'identité de la personne est mal saisie !\",\n        ErrorChekingPerson: \"Une erreur est survenue au moment de la vérification de la personne dans le système ...\",\n        InvalidActivitiesLength: \"Le nombre d'activités dans le tableau du fichier est beaucoup trop grand.\",\n        InvalidQuizData: \"Les données du quiz sont incorrectes ...\",\n        InvalidLogData: \"Les données du dictaphone sont incorrectes ...\",\n        InvalidDoubleData: \"Les données du jeu des pairs sont incorrectes ...\",\n        InvalidSimonData: \"Les données du Simon sont incorrectes ...\",\n        \n    },\n    en: {\n        Select: \"Select a person\",\n        Import: \"Import a profil\",\n        Introduction: \"Introduction\",\n        Source: \"Source code on GitHub\",\n        License: \"Licensed GPL v3 source code.\\nOriginally created by Diyaeddine LAOUID.\",\n        Language: \"Change language\",\n        Step1: \"Format checking ... \",\n        Step2: \"Identity format checking ... \",\n        Step3: \"Checking if person already registered ...\",\n        Step4: \"Activities length checking ...\",\n        Step5: \"Quiz checking ...\",\n        Step6: \"Double Memory checking ...\",\n        Step7: \"Simon checking ...\",\n        Step8: \"Journal log checking ...\",\n        Step9: \"Person creation ...\",\n        Step10: \"Quiz creation ...\",\n        Step11: \"Double Memory creation ...\",\n        Step12: \"Simon Memory creation ...\",\n        Step13: \"Journal log creation ...\",\n        Step14: \"The person has been successfully imported! :-)\",\n        GoBack: \"Back\",\n        InvalidFile: \"The file has been deleted from the cache\",\n        InvalidPersonFile: \"The imported file is invalid!\",\n        IncorrectPersonFile: \"The format of the imported person is invalid!\",\n        ErrorChekingPerson: \"Error when checking if this person exists...\",\n        InvalidActivitiesLength: \"The activities length on the file array is too big\",\n        InvalidQuizData: \"The quiz datas are invalid...\",\n        InvalidLogData: \"The journal logs datas are invalid...\",\n        InvalidDoubleData: \"The double memory game datas are invalid...\",\n        InvalidSimonData: \"The Simon datas are invalid...\",\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        height: 100 + '%',\n        backgroundColor: '#355c7d',\n        alignItems: 'center'\n    },\n    header: {\n        marginTop: 10 + '%',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    logo: {\n        width: 130,\n        height: 130\n    },\n    menu: {\n        marginTop: 2 + '%',\n        flex: 1,\n        marginBottom: 20\n    },\n    button: {\n        width: 250,\n        height: 50,\n        backgroundColor: 'white',\n        color: '#355c7d',\n        justifyContent: 'flex-start',\n        borderRadius: 25\n    },\n    buttonContainer: {\n        borderRadius: 25,\n        alignItems: 'center',\n        marginBottom: 20\n    },\n    copyleft: {\n        marginTop: 10 + '%',\n        fontSize: 11,\n        color: 'white',\n        textAlign: 'center',\n        fontStyle: 'italic'\n    },\n    ErrorMessage: {\n        color: 'red',\n        fontWeight: 'bold',\n        textAlign:'center',\n        marginTop: 20,\n        marginHorizontal: 40\n    }\n});\n","import React from 'react';\nimport {\n    ScrollView,\n    Linking\n} from 'react-native';\n\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\nimport * as DocumentPicker from 'expo-document-picker';\n\nimport { lang as HomeLang } from '../../language/home';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    const navigate = useNavigate();\n\n    return (\n        <ScrollView style={styles.menu} showsVerticalScrollIndicator={false}>\n            <Button\n                title={HomeLang[props.lang].Select}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', textAlign: 'center', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                icon={\n                    <Icon\n                        name={'person-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    if (props.ambiant) await props.ambiant?.unloadAsync()\n                    navigate('/selection', {\n                        state: { username: props.username, lang: props.lang, setLang: props.setLang }\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Import}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'person-add-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => {\n                    DocumentPicker.getDocumentAsync({multiple: false}).then( e => {\n                        props.setImportFile(e.uri);\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Language}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'world-o'}\n                        type={'fontisto'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                onPress={() => props.setLang(prev => prev == 'fr' ? 'en' : 'fr')}\n                raised\n            />\n            <Button\n                title={HomeLang[props.lang].Introduction}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={[styles.buttonContainer, {marginBottom: 20}]}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    await props.ambiant.unloadAsync()\n                    navigate('/tutorial');\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Source}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'logo-github'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => Linking.openURL('https://github.com/dilaouid/AlzheimApp')}\n            />\n            <Text style={styles.copyleft} >{HomeLang[props.lang].License}</Text>\n        </ScrollView>\n    );\n}\n","export const encrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let encryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        encryptedString += String.fromCharCode( string.charCodeAt(i) - key.charCodeAt(j) - key.length );\n    }\n    return (encryptedString);\n};\n\nexport const decrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let decryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        decryptedString += String.fromCharCode( string.charCodeAt(i) + key.charCodeAt(j) + key.length );\n    }\n    return (decryptedString);\n};","/**\n * Model is like:\n * {\n *      personId: 'xxx',\n *      name: 'xxx',\n *      description: 'xxx',\n *      picture: 'b64' || null,\n *      activities: {\n *          quiz: [\n *              // all quizz contents //\n *          ],\n *          log: [\n *              // all logs contents\n *          ],\n *          double: [\n *              // all double contents\n *          ],\n *          simon: [\n *              // all simon score\n *          ]\n *      }\n * }\n */\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as dilacrypt from './dilacrypt';\n\nimport { db as personAPI } from '../data/personApi';\nimport { db as dictaphoneAPI } from '../data/dictaphoneApi';\nimport { db as simonAPI } from '../data/simonApi';\nimport { db as quizAPI } from '../data/quizApi';\nimport { db as doubleAPI } from '../data/doubleApi';\n\nconst isValidDate = (d) => {\n    let n = new Date(d);\n    return n instanceof Date && !isNaN(n);\n};\n\nconst fileToBase64 = async (uri) => {\n    return await FileSystem.readAsStringAsync(uri, {\n        encoding: 'base64',\n    });\n};\n\nconst formatQuiz = async (quiz) => {\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < el.content.length; j++) {\n            const e = el.content[j];\n            if (e.uri)\n                e.uri = await fileToBase64(e.uri);\n        }\n    }\n    return (quiz);\n};\n\nconst formatLog = async (log) => {\n    for (let i = 0; i < log.length; i++) {\n        const el = log[i];\n        el.path = await fileToBase64(el.path);\n    }\n    return (log);\n};\n\nconst scoreVerification = (el, personId) => {\n    if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n    if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    if (!el.hasOwnProperty('score') || typeof el.score !== 'number') return false;\n    if (!el.hasOwnProperty('dailyScoreBeaten') || typeof el.dailyScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('globalScoreBeaten') || typeof el.globalScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n    return true;\n};\n\n\n\nexport const checkPersonInformations = (person) => {\n    const keys = ['_id', 'description', 'fullname', 'picture', 'activities'];\n    for (let i = 0; i < keys.length; i++) {\n        const el = keys[i];\n        if (person.hasOwnProperty(el) === false)\n            return false;\n    }\n    return true;\n};\n\nexport const checkPersonInformationsLength = (person) => {\n    return person.fullname.length <= 25 && person.description.length <= 100;\n};\n\nexport const checkPersonExists = async (personId) => {\n    return await personAPI.findAsync({ _id: personId });\n}\n\nexport const checkQuiz = async (quiz, personId) => {\n    const quizKeys = ['name', 'content', 'personId', '_id'];\n    const contentKeys = ['answers', 'question', 'id', 'score']\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < quizKeys.length; j++) {\n            const k = quizKeys[j];\n            if (el.hasOwnProperty(k) === false) return false;\n        }\n        for (let d = 0; d < el.content.length; d++) {\n            const content = el.content[d];\n            if (content.hasOwnProperty('uri') || content.hasOwnProperty('filename') || content.hasOwnProperty('fileType')) {\n                if (!content.hasOwnProperty('uri')) return false;\n                else if (!content.hasOwnProperty('filename')) return false;\n                else if (!content.hasOwnProperty('fileType')) return false;\n            }\n            for (let j = 0; j < contentKeys.length; j++) {\n                const l = contentKeys[j];\n                if (content.hasOwnProperty(l) === false) return false;\n            }\n            if (typeof content.answers !== 'object' || content.answers?.length === 0) return false;\n            if (typeof content.question !== 'string' || typeof content.question?.length > 23) return false;\n            if (typeof content.score !== 'object' || content.answers?.length === 0) return false;\n            let foundInScore = false\n            for (let n = 0; n < content.score.length; n++) {\n                const score = content.score[n];\n                if (score.personId === personId) foundInScore = true;\n                if (!score.hasOwnProperty('personId')) return false;\n                if (!score.hasOwnProperty('success') || typeof score.success !== 'number') return false;\n                if (!score.hasOwnProperty('failed') || typeof score.success !== 'number') return false;\n            }\n            if (!foundInScore) return false;\n        }\n    }\n    return true;\n};\n\nexport const checkDouble = (double, personId) => {\n    if (typeof double !== 'object') return false;\n    for (let i = 0; i < double.length; i++)\n        if (!scoreVerification(double[i], personId)) return false;\n    return true;\n};\n\nexport const checkSimon = (simon, personId) => {\n    if (typeof simon !== 'object') return false;\n    for (let i = 0; i < simon.length; i++)\n        if (!scoreVerification(simon[i], personId)) return false;\n    return true;\n};\n\nexport const checkDictaphone = (dictaphone, personId) => {\n    if (typeof dictaphone !== 'object') return false;\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n        if (!el.hasOwnProperty('name') || typeof el.name !== 'string' || el.name.length < 2) return false;\n        if (!el.hasOwnProperty('path') || typeof el.path !== 'string' || el.path.length < 100) return false;\n        if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n        if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    }\n    return true;\n};\n\nexport const importPerson = async (person, exists) => {\n\n    if (exists === false) {\n        await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${person._id}`, {intermediates: true});\n    }\n\n    let picture = null;\n    if (person.picture) {\n        picture = uuidv4();\n        const path = `${FileSystem.documentDirectory}persons/${person._id}/pp`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        await FileSystem.writeAsStringAsync(path + `/${picture}.jpg`, person.picture, { encoding: 'base64' }).then(el => {\n            picture = path + `/${picture}.jpg`;\n        }).catch(err => {\n            picture = null;\n        });\n    }\n\n    if (exists === false)\n        return personAPI.insertAsync(\n            {\n                _id: person._id,\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        );\n    else\n        return personAPI.updateAsync({_id: person._id}, {\n            $set: {\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        });\n};\n\nexport const importQuiz = async (quiz) => {\n    let res = true;\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        const path = `${FileSystem.documentDirectory}persons/${el.personId}/quiz`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        for (let j = 0; j < quiz[i].content.length; j++) {\n            const e = quiz[i].content[j];\n            if (e.hasOwnProperty('uri')) {\n                // Import and write file\n                let filename = uuidv4();\n                let filePath;\n                await FileSystem.writeAsStringAsync(path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`, e.uri, { encoding: 'base64' }).then(el => {\n                    filePath = path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`;\n                    filename = filePath;\n                    e.uri = filePath;\n                }).catch(err => {\n                    filename = null;\n                    e.uri = null;\n                });\n            }\n        }\n        const quizFindAsync = await quizAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        const quizExists = quizFindAsync.length > 0;\n        if (quizExists) {\n            await quizAPI.updateAsync( {_id: el._id}, {\n                $set: {\n                    name: el.name,\n                    content: el.content\n                }\n            }).catch(err => {\n                res = false;\n            })\n        } else {\n            await quizAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importDouble = async (double) => {\n    let res = true;\n    for (let i = 0; i < double.length; i++) {\n        const el = double[i];\n        const doubleExists = await doubleAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (doubleExists.length === 0) {\n            await doubleAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importSimon = async (simon) => {\n    let res = true;\n    for (let i = 0; i < simon.length; i++) {\n        const el = simon[i];\n        const simonExists = await simonAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (simonExists.length === 0) {\n            await simonAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importLog = async (dictaphone, personId) => {\n    let res = true;\n    const path = `${FileSystem.documentDirectory}persons/${personId}/recordings`;\n    await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n        console.log('[!] Directory already exists');\n    });\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        const logExists = await dictaphoneAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (logExists.length === 0) {\n            el.date = new Date(el.date);\n            let filename = uuidv4();\n            let filePath;\n            await FileSystem.writeAsStringAsync(path + `/${filename}.m4a`, el.path, { encoding: 'base64' }).then(e => {\n                filePath = path + `/${filename}.m4a`;\n                filename = filePath;\n                el.path = filePath;\n            }).catch(err => {\n                console.log(err);\n                filename = null;\n                el.path = null;\n            });\n            await dictaphoneAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const writeDataFile = async (fullname, content) => {\n    let fileUri = FileSystem.documentDirectory + `${fullname}.alz`;\n    return await FileSystem.writeAsStringAsync(fileUri, content).catch(err => {\n        console.log(err);\n    }).then( (e) => {\n        return (fileUri);\n    });\n};\n\nexport const exportPerson = async (personId, key) => {\n    const personFind = await personAPI.findAsync({ _id: personId });\n    if (!personFind) return ('PERSON_NOT_FOUND');\n    const person = personFind[0];\n    if (!person._id || !person.fullname) return ('INVALID_PERSON');\n    const personData = {\n        _id: person._id,\n        description: person.description,\n        fullname: person.fullname,\n        picture: person.picture ? await fileToBase64(person.picture) : null\n    };\n    const simonData = await simonAPI.findAsync({ personId: personId });\n    const doubleData = await doubleAPI.findAsync({ personId: personId });\n    const quiz = await quizAPI.findAsync({ personId: personId });\n    const quizData = quiz ? await formatQuiz(quiz) : []; // converting files into base64 here\n\n    const dictaphone = await dictaphoneAPI.findAsync({ personId: personId });\n    const dictaphoneData = dictaphone ? await formatLog(dictaphone) : []; // converting files into base64 here\n\n    const result = JSON.stringify({\n        _id: personData._id,\n        description: personData.description,\n        fullname: personData.fullname,\n        picture: personData.picture,\n        activities: {\n            quiz: quizData,\n            double: doubleData,\n            simon: simonData,\n            dictaphone: dictaphoneData\n        }\n    });\n    const uri = await writeDataFile(personData.fullname, key ? dilacrypt.encrypt(result, key) : result);\n    return (uri);\n};","import React, { useEffect, useState } from 'react';\nimport {\n    ActivityIndicator,\n    ScrollView\n} from 'react-native';\n\nimport { Text, Button } from 'react-native-elements';\n\nimport { lang as HomeLang } from '../../language/home';\nimport * as FileSystem from 'expo-file-system';\nimport * as dataImport from '../../utils/share'\n\nimport styles from './styles';\n\nexport default function ImportData(props) {\n    const [step, setStep] = useState(1);\n    const [error, setError] = useState();\n    \n    useEffect( async () => {\n        try {\n\n            // Import and check file data\n            const content = await FileSystem.readAsStringAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidFile;\n            });\n            const parsed = parseJSON(content);\n            if (!parsed) throw HomeLang[props.lang].InvalidPersonFile;\n            if (typeof parsed !== 'object' || !parsed._id)\n                throw HomeLang[props.lang].InvalidPersonFile;\n\n            // Checking the personal infos\n            setStep(2);\n            if (dataImport.checkPersonInformations(parsed) === false)\n                throw HomeLang[props.lang].InvalidPersonFile;\n            if (dataImport.checkPersonInformationsLength(parsed) === false)\n                throw HomeLang[props.lang].IncorrectPersonFile;\n\n            // Checking if this userId is registered in the local db\n            setStep(3);\n            const found = await dataImport.checkPersonExists(parsed._id);\n            \n            // Checking activities length\n            setStep(4);\n            if (parsed.activities.length > 4) throw HomeLang[props.lang].InvalidActivitiesLength;\n\n            // Checking quiz format\n            setStep(5);\n            if (await dataImport.checkQuiz(parsed.activities.quiz, parsed._id) === false) throw HomeLang[props.lang].InvalidQuizData;\n\n            // Checking double format\n            setStep(6);\n            if (await dataImport.checkDouble(parsed.activities.double, parsed._id) === false) throw HomeLang[props.lang].InvalidDoubleData;\n\n            // Checking simon format\n            setStep(7);\n            if (await dataImport.checkSimon(parsed.activities.simon, parsed._id) === false) throw HomeLang[props.lang].InvalidSimonData;\n      \n            // Checking dictaphone format\n            setStep(8);\n            if (await dataImport.checkDictaphone(parsed.activities.dictaphone, parsed._id) === false) throw HomeLang[props.lang].InvalidLogData;\n\n            // <! -------- Creation process starts ---------- !>\n\n            // Person creation\n            setStep(9);\n            dataImport.importPerson(parsed, found.length > 0).catch( (err) => {\n                throw HomeLang[props.lang].CannotCreatePerson;\n            });\n\n            // Quiz creation\n            setStep(10);\n            dataImport.importQuiz(parsed.activities.quiz).catch(err => {\n                throw HomeLang[props.lang].InvalidQuizData;\n            });\n\n            // Double creation\n            setStep(11);\n            dataImport.importDouble(parsed.activities.double).catch(err => {\n                throw HomeLang[props.lang].InvalidDoubleData;\n            });\n\n            // Simon creation\n            setStep(12);\n            dataImport.importSimon(parsed.activities.simon).catch(err => {\n                throw HomeLang[props.lang].InvalidSimonData;\n            });\n\n            // Journal log creation\n            setStep(13);\n            dataImport.importLog(parsed.activities.dictaphone, parsed._id).catch(err => {\n                throw HomeLang[props.lang].InvalidLogData;\n            });\n\n            // SUCCESS !!\n            setStep(14);\n\n            await FileSystem.deleteAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidPersonFile;\n            });\n\n\n        } catch (e) {\n            setError(e);\n            return false;\n            // props.setImportFile(null);\n        }\n    }, [])\n\n    const parseJSON = (inputString) => {\n        if (inputString) {\n          try {\n            return JSON.parse(inputString);\n          } catch (e) {\n            return false;\n          }\n        }\n    };\n\n    const stepStyle = (idx) => {\n        let clr = idx === step ? 'white' : '#89ff91';\n        if (error && idx === step) clr = 'red';\n        if (step === 14) clr = '#89ff91';\n        return {\n            color: clr,\n            fontStyle: idx === step || error ? 'italic' : 'normal',\n            marginBottom: idx === 13 ? 30 : 0,\n            display: step >= idx ? 'flex' : 'none',\n            alignContent: 'center',\n            textAlign: 'center',\n            fontSize: idx === step ? 14 : 9\n        }\n    } \n\n    const printActivity = (idx) => {\n        if (idx === step && !error && step !== 14)\n            return <ActivityIndicator color={'white'} size={'small'} />\n        return <></>\n    };\n\n    return (\n        <ScrollView style={styles.menu}>\n            { [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14].map( (e, i) => {\n                return <Text key={i} style={ stepStyle(e) }> { HomeLang[props.lang]['Step' + e] } { printActivity(e) }</Text>\n            }) }\n            { error ? <Text style={styles.ErrorMessage}>{ error }</Text> :  <></> }\n            <Button disabled={!error && step < 14} containerStyle={{marginTop: 150, borderRadius: 15}} title={HomeLang[props.lang].GoBack} onPress={() => props.setImportFile(null)}/>\n        </ScrollView>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Image\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\n\nimport { useLocation } from 'react-router-native';\n\nimport AlzheimApp from '../../assets/img/alzheimapp_logo.png';\nimport Menu from './Menu'\nimport ImportData from './ImportData';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [importFile, setImportFile] = useState();\n    const [ambiant, setAmbiant] = useState();\n    Audio.setIsEnabledAsync(true);\n\n    useEffect( async () => {\n        if (ambiant) return;\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by MCOCHET - check his soundcloud here: https://soundcloud.com/mcochet\n            require('../../assets/sound/ambiant.mp3'),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n    }, []);\n\n    const state = useLocation()?.state;\n\n    const username = props.username || state?.username;\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Image source={AlzheimApp} style={styles.logo} resizeMode={'cover'} />\n            </View>\n            { importFile ?\n                <ImportData lang={props.lang} importFile={importFile} setImportFile={setImportFile} /> :\n                <Menu lang={props.lang} username={username} setLang={props.setLang} setImportFile={setImportFile} ambiant={ambiant} />\n            }\n        </View>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} setLang={props.setLang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} setLang={props.setLang} />;\n    }\n    return <Home lang={props.lang} username={props.username} setLang={props.setLang} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: 'white' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        Home: 'Accueil',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n        QuizScore: \"Score des quiz\",\n        SimonScore: \"Score du Simon\",\n        DoubleScore: \"Score du jeu des pairs\",\n        NoScore: \"Aucun score enregistré pour cette activité...\",\n        Success: 'réussite',\n        Global: \"Vue d'ensemble\",\n        BestScoreByDay: 'Meilleur score du jour',\n        ExportedProfile: 'Profil exporté',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        Home: 'Home',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n        QuizScore: \"Quiz Score\",\n        SimonScore: \"Simon Score\",\n        DoubleScore: \"Double Memory Score\",\n        NoScore: \"No score registered for this activity...\",\n        Success: 'success',\n        Global: \"Global view\",\n        BestScoreByDay: 'Best score by day',\n        ExportedProfile: 'Profile exported',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\n\nimport { ScrollView, Alert, View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/selection/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\nimport { exportPerson } from '../../../utils/share';\nimport * as Sharing from 'expo-sharing';\n\nimport * as FileSystem from 'expo-file-system';\n\nimport styles from './styles';\nimport Form from '../../../components/selection/PersonCreation/Form';\nimport { ActivityIndicator } from 'react-native';\n\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n    const [load, setLoad] = useState(false);\n    const [id, setId] = useState(0);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        Person.getById(props.personId).then((result) => {\n            props.setPerson(result[0])\n        });\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n\n        id: id,\n        setId: setId\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/selection', {\n                state: { username: props.username, lang: props.lang }\n            });\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.fullname),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: load ? '' : 'share-alt',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={load ? <ActivityIndicator color={'white'} size={'small'} /> : ActivitiesLang[props.lang]?.ShareProfile}\n                        onPress={async () => {\n                            setLoad(true)\n                            console.log('[~] Pressing export button');\n                            console.log('[+] Exporting person...');\n                            const uri = await exportPerson(props.personId, null);\n                            console.log('[+] Exported person! uri is: ' + uri);\n                            Sharing.shareAsync(uri).then( async (e) => {\n                                await FileSystem.deleteAsync(uri);\n                                setLoad(false);\n                            });\n                        }}\n                        disabled={load}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/selection', {\n                                state: { username: props.username, lang: props.lang }\n                            });\n                        }}\n                    />\n                </ScrollView>\n            ) : (\n                <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => {\n                            setFullname(props.person.fullname);\n                            setUriPreview(props.person.picture);\n                            setImage('');\n                            setDescription(props.person.description);\n                            setEdit(false)\n                        }}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </ScrollView>\n            )}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync().then( () => {\n                console.log('[+] Permission granted!');\n            })\n            .catch(e => {\n                console.error(e);\n            });            \n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const goBack = async () => {\n        if (recording) await recording?.stopAndUnloadAsync();\n        stopPlayingSounds();\n        props.setPage(0);\n    }\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            if (el) el?.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                    <Button\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'caret-back-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        buttonStyle={styles.recordButton}\n                        title={{}}\n                        titleStyle={styles.titleButton}\n                        onPress={() => goBack()}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <View style={styles.actionButtonsView}>\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n                <Button\n                    containerStyle={styles.actionButtons}\n                    icon={{\n                        name: 'caret-back-outline',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={{}}\n                    titleStyle={styles.titleButton}\n                    onPress={() => goBack()}\n                />\n                </View>\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n\n\n\n\n        // Help section\n        Head: \"Le Simon, comment ça marche ?\",\n        RulesHead: \"Les règles\",\n        TriesHead: \"Les essais\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu Simon est un {0} de forme circulaire comportant quatre gros boutons de couleurs différentes: rouge, vert, jaune et bleu.\\n\\nLe jeu {1} une des quatres couleurs et {2} toujours associé à cette couleur. Le joueur doit alors {3}.\\n\\nLe jeu {4}, puis {5} une nouvelle couleur. Le jour doit reproduire cette nouvelle séquence. Chaque fois que le joueur reproduit correctement la séquence, le jeu ajoute une nouvelle couleur.`,\n                boldText: ['jeu de mémoire', 'éclaire', 'produit un son', \"appuyer sur la touche de la couleur qui vient de s'allumer\", 'répète la même couleur et le même son', 'ajoute'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois que vous ratez une séquence, vous {0}. Au cours d'une partie, vous avez le droit à seulement {1}.\\n\\nUne fois les quatre erreurs faites, ou alors lorsque vous {2}, votre score est compatibilisé en fonction du nombre de touches dans la séquence actuelle.\\n\\nChaque jour, {3}.`,\n                boldText: ['perdez un essai', 'quatre erreurs', 'abandonnez la partie en cours', 'votre score journalier est remit à zéro'],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n\n\n\n\n        // Help section\n        Head: `The Simon, how does it works?`,\n        RulesHead: \"The rules\",\n        TriesHead: \"The tries\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The Simon is a circular shaped {0} with four different colored buttons: red, green, yellow and blue.\\n\\nThe game {1} one of the four colors and {2} always associated to this color. The player shall {3}.\\n\\nThe game {4}, then {5} another color. The player will have to reproduces this sequence. Each time the player successfully reproduces the sequence, the game adds another color in this sequence.`,\n                boldText: ['memory game', 'lighten', 'produces a sound', \"press the colored button which has just turned on\", 'repeat the same color with the same sound', 'add'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `Each time you fail a sequence, you {0}. In a game, you are allowed up to {1}.\\n\\nOnce the four fails made, or when you {2}, you will have the number of elements in the current sequence saved as your score.\\n\\nEach day, {3}.`,\n                boldText: ['lose a try', 'four maximum fails', 'give up the current game', 'your daily score is reset to zero'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        paddingTop: 20,\n        flex: 1,\n        alignItems: 'center'\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        // flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        //flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    // Help section\n    viewHelpPage: {\n        marginTop: -20,\n        backgroundColor: 'white',\n        width: 100 + '%',\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .4,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate, dailyScore < order.length - 1, bestScore < order.length - 1);\n        setCanPlay(false);\n        setSuccess(true);\n        const path = dailyScore < order.length - 1 ? require(`../../../assets/sound/global/applause.mp3`) : require(`../../../assets/sound/global/you_lose.mp3`);\n        const { sound } = await Audio.Sound.createAsync(path);\n        props.setSound(sound);\n        sound.playAsync();\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            <Overlay\n                visible={success}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => setSuccess(false)}\n                ModalComponent={Modal}\n            >\n                {scoreBeaten ? successOverlay() : failOverlay()}\n                <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            retryGame();\n                        }}\n                        title={SimonLang[props.lang].Retry}\n                        containerStyle={{\n                            borderRadius: 13,\n                            marginRight: 10,\n                        }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setTab(0);\n                        }}\n                        title={SimonLang[props.lang].Exit}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React from 'react';\nimport { View, ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView>\n                <Button\n                    title={SimonLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{SimonLang[props.lang].Head}</Text>\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].Rules()}</Text>\n\n                \n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].TriesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].TriesExplain()}</Text>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\nimport Help from './Help';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr, pos) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: i == pos ? color : '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        Cancel: 'Annuler',\n        GoBack: \"Oui, j'annule l'édition du quiz\",\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Abandonner le quiz\",\n        GiveUpQuiz: \"Êtes-vous sûr de vouloir abandonner ce quiz? Le score restera enregistré.\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        EditedQuiz: \"Quiz modifié avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Bien joué !! 😄\",\n        Success: \"Bien joué ! C'est la bonne réponse !! Vous pouvez maintenant passer à la suite !\",\n        FailedTitle: \"Dommage... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Dommage, mais ce n'était pas la bonne réponse ! Les réponses possibles étaient: ${answersText}.`\n        },\n        SuccessQuizTitle: \"Haut la main !\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Fantastique !! Vous avez réussi ce quiz ! Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Dommage... Vous avez raté ce quiz ! ... Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Sauvegarder le quiz',\n        SaveContent: \"Sauvegarder la question\",\n        AddContent: \"Ajouter la question\",\n        SureCancelEdition: \"Êtes-vous sûr de bien vouloir abandonner l'édition de ce quiz? Vous ne pourrez pas récupérer vos modifications.\",\n\n        // Help page related\n        Head: 'Le quiz, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        CustomHead: \"Personnalisation\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Les règles du quiz sont basiques: il y a des questions {0}, et le joueur doit y répondre. Il peut y avoir {1} réponses possibles, une bonne réponse et c'est un point ajouté au score.\\n\\nIl n'y a pas de perte de points suite à une mauvaise réponse.`,\n                boldText: [\"facultativement accompagnées d'une image ou d'un son\", \"plusieurs\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `Il n'y a pas de quiz par défaut. C'est à vous d'en {0} et de les {1} à votre guise !\\nPour cela, vous devez vous rendre dans la partie \"{2}\".\\n\\nVous aurez là la liste des quiz que vous avez préalablement crée. Si vous n'en avez encore créé aucun, façonnez votre premier quiz avec le bouton \"{3}\".\\n\\nIci vous pourrez ajouter des question avec le bouton \"{4}\". Il vous est demandé {5} (facultatif), qui correspond à un son ou une image pour illustrer votre question.\\n\\nEnsuite, vous devez {6}. Ce sera cette question qui sera ensuite demandée au joueur.\\n\\nEt enfin, {7}. Une fois une réponse valide renseignée, cliquez sur le symbole {8} à côté, et votre réponse est ajoutée à la liste des réponses valides à la question. Vous pouvez en avoir 10 maximum.\\n\\nSi vous avez fait une erreur sur une des réponses, {9} pour la retirer de la liste.\\n\\nUne fois tous les éléments de la question renseignées, cliquez sur \"{10}\" au dessus pour enregistrer la question et retourner à la liste des questions précédemment crées. Ajoutez-en autant que vous voulez pour un quiz.\\n\\nVous pouvez également {11}.\\n\\nUne fois le quiz complet, cliquez sur \"{12}\", et voilà ! Renseignez le nom de ce quiz et c'est terminé, le quiz est désormais jouable !`,\n                boldText: [\"créer\",\n                    \"personnaliser\",\n                    \"Voir les quiz\",\n                    \"Créer un quiz\",\n                    \"Ajouter une question\",\n                    \"d'importer un fichier de référence\",\n                    \"renseigner la question\",\n                    \"ajouter les réponses éventuelles\",\n                    \"( + )\",\n                    \"cliquez simplement dessus\",\n                    \"Valider\",\n                    \"cliquer sur une question pour la modifier\",\n                    \"Terminer la création\"\n                ],\n            });\n        }\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizzes',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        Cancel: 'Cancel',\n        GoBack: 'Yes, I want to go back',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'of success',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Submit\",\n        GiveUpQuizTitle: \"Give up\",\n        GiveUpQuiz: \"Are you sure to give up this quiz? The score will be saved.\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        EditedQuiz: \"Quiz successfuly edited!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Well played!! 😄\",\n        Success: \"Well played! That's the good answer!! You can now go to the next question!\",\n        FailedTitle: \"Oops... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Oops, that's not a valid answer... the valid answer${answers.length > 0 ? 's were' : ' was'} : ${answersText}.`\n        },\n        SuccessQuizTitle: \"Easy peasy!\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Congratulations!! You won this quiz! Your score is for {0} good answer(s) for {1} mistake!',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Better next time! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: \"It's alright... You failed this quiz!... Your score is for {0} good answer(s) for {1} mistake!\",\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Save the quiz',\n        SaveContent: \"Save the question\",\n        AddContent: \"Add the question\",\n        SureCancelEdition: \"Are you sure to cancel this quiz edition? Your modification would not be saved\",\n\n        // Help page related\n        Head: 'The quiz, how does it works?',\n        RulesHead: \"The rules\",\n        CustomHead: \"Customization\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `This is a basic quiz game: there are questions {1}, and the player must answer them. There can be {1} answers, one correct answer and it's a point added to the score.\\n\\nThere is no loss of points for a wrong answer.`,\n                boldText: [\"optionally accompanied by an image or a sound\", \"several possible\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `There are no default quizzes. It is up to you to {0} and {1} them as you wish!\\nTo do this, you must go to the \"{2}\" section.\\nThere you will see the list of quizzes that you have already created. If you haven't created any yet, create your first quiz with the \"{3}\" button.\\n\\nHere you can add questions with the \"{4}\" button. You are asked to {5} (optional), which is a sound or image file to illustrate your question.\\n\\nThen you have to {6}. This question will be asked to the player.\\n\\nAnd finally, {7}. Once you have entered a valid answer, click on the {8} symbol next to it, and your answer would be added to the list of the valid answers to the question. You can have a maximum of 10 possible answers.\\n\\nIf you made a mistake on one of the answers, {9} to remove it from the list.\\n\\nOnce you have filled in all the elements of the question, click \"{10}\" above to save the question and return to the list of questions. Add as many as you want to this quiz.\\n\\nYou can also {11}.\\n\\nOnce the quiz is completed, click \"{12}\" and that's it! Fill in the name of this quiz and it's done, the quiz is now playable!`,\n                boldText: [\"create\",\n                    \"customize\",\n                    \"View quizzes\",\n                    \"Create a quiz\",\n                    \"Add a question\",\n                    \"import a reference file\",\n                    \"fill in the question\",\n                    \"add the possible answers\",\n                    \"( + )\",\n                    \"simply click on it\",\n                    \"Submit\",\n                    \"click on a question to edit it\",\n                    \"Complete the quiz creation\"\n                ],\n            });\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginTop: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: 235,\n        marginTop: 20,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: 235,\n        marginTop: 10,\n        backgroundColor: 'blue',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: 30,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    modalDescription: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: 290,\n        marginTop: 10\n    },\n    quizTitleInput: {\n        fontSize: 15\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 50\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        width: 250\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: 250,\n        height: 250\n    },\n    gameQuestion: {\n        fontSize: 25,\n        marginTop: 10,\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey'\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15\n    },\n\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n        textAlign: 'center'\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image, ActivityIndicator } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            <Button\n                title={props.isLoading ? <ActivityIndicator color={'blue'} size={'small'} /> : QuizLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n                disabled={props.quiz.length === 0}\n            />\n\n            <Button\n                title={QuizLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import {\n    View,\n    Image\n} from 'react-native';\nimport { Icon, FAB, Avatar } from 'react-native-elements';\nimport { Audio } from 'expo-av';\n\nexport const printFile = (fileType, uri, clearFile, isPlaying, pauseSound, setIsPlaying, sound, setSound) => {\n    if (fileType === 'image') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Image source={{uri: uri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n            </View>\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 100, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Icon onPress={() => isPlaying ? pauseSound() : playSound(setIsPlaying, sound, setSound, uri) } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30, zIndex: 2}} />\n            </View>\n        );\n    }\n};\n\nexport const playSound = async (setIsPlaying, sound, setSound, uri) => {\n    setIsPlaying(true);\n    await Audio.setAudioModeAsync({\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n    });\n    const getSoundStatus = await sound?.getStatusAsync();\n    if (getSoundStatus?.isLoaded === false) {\n        await sound.loadAsync({ uri: uri });\n        setSound(sound);\n    }\n    await sound.playAsync();\n    sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n        if (playbackStatus.didJustFinish) {\n            await sound.unloadAsync();\n            setIsPlaying(false);\n        }\n    });\n};\n\nexport const pickCorrectIcon = (fileType, uri) => {\n    if (fileType === 'image') {\n        return (\n            <Avatar\n                source={{ uri: uri }}\n                rounded\n                size={'medium'}\n                containerStyle={{marginHorizontal: 8}}\n            />\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <Icon\n                raised\n                name={'musical-notes-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    } else {\n        return (\n            <Icon\n                raised\n                name={'text-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    }\n};","import React, { useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nimport { pickCorrectIcon } from '../utils/quizFunc';\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n\n    const length = props.quizEdit?.content?.length + props.newContent?.length;\n\n    const pickOutQuestion = () => {\n        if (length <= 2 && props.quizEdition) return;\n        if (props.quizEdition === true) {\n            if (Number.isInteger(props.questionId)) {\n                // if the questionId is an integer, it means it has not\n                // been added to the api yet, so it's an index of the\n                // newContent array passed in the props from the ViewQuiz Component\n\n                const index = props.questionId - props.quizEdit?.content?.length;\n                const tmp = props.newContent;\n                tmp.splice(index, 1);\n                // take out the new content from the newContent state in the\n                // parent component\n                props.setNewContent([...tmp]);\n            } else {\n                // todo not get by api but update quizedit state\n                // update api only when saving quiz\n                const index = props.quizEdit.content.findIndex(el => el.id == props.questionId );\n                const tmp = props.quizEdit;\n                tmp.content.splice(index, 1);\n                props.setQuizEdit(tmp);\n                props.setReload(!props.reload)\n                props.setEditedQuiz(true);\n            }\n        } else {\n            const tmp = props.quizEdition ? props.content : props.contentList;\n            tmp.splice(props.index, 1)\n            props.setContent([...tmp]);\n        }\n        setModal(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{ marginRight: 10 }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={{ fontWeight: 'bold' }}\n                    onPress={() => pickOutQuestion() }\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { props.setEditContent(props.questionId) }} >\n                { pickCorrectIcon(props.content.fileType, props.content.uri) }\n                <ListItem.Content>\n                    <ListItem.Title>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon disabled={props.quizEdition == true && length <= 2} reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","export function ScoreRatio (content, personId) {\n    var success = 0;\n    var fail = 0;\n    content.map( (el, i) => {\n        const score = el.score.filter( (el) => el.personId == personId );\n        score.map( (el, i) => {\n            success += parseInt(el.success);\n            fail += parseInt(el.failed);\n        });\n    });\n    const total = success + fail;\n    if (total == 0)\n        return 0;\n    const score = ((success / total) * 100).toFixed(2);\n    return score;\n};","import React from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport { ScoreRatio } from './utils/scoreFunc';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n\n    return (\n        <ListItem {...componentProps} onPress={() => {\n                props.setEdit(true);\n                props.setQuizEdit(props.quiz);\n            }}>\n            <ListItem.Content>\n                <ListItem.Title>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    { ScoreRatio(props.quiz.content, props.personId) }{'% '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Text,\n    ScrollView,\n} from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport QuizList from './QuizList';\nimport styles from './styles';\n\nimport * as API from '../../../data/quizApi';\n\nexport default function ViewQuizList(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <ScrollView>\n            {props.loading ? (\n                <ActivityIndicator\n                    color={'blue'}\n                    size={'small'}\n                    style={styles.loading}\n                />\n            ) : props.quiz?.length > 0 ? (\n                props.quiz?.map((el, i) => {\n                    return (\n                        <QuizList\n                            index={i}\n                            key={el._id}\n                            quiz={el}\n                            lang={props.lang}\n                            deleteId={deleteId}\n                            personId={props.personId}\n                            setEdit={props.setEdit}\n                            setQuizEdit={props.setQuizEdit}\n                        />\n                    );\n                })\n            ) : (\n                <Text style={styles.nothingYet}>\n                    {QuizLang[props.lang].NothingYet}\n                </Text>\n            )}\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/activities/quiz/success.gif';\n\nimport styles from './styles';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge, FAB } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContent(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <ScrollView contentContainerStyle={styles.ScrollView}>\n                { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                <Button\n                    title={QuizLang[props.lang].ImportFile}\n                    buttonStyle={{ borderRadius: 15 }}\n                    onPress={pickFile}\n                />\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].ReferenceFile}\n                </Text>\n                <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                    <Input\n                        value={props.question}\n                        inputStyle={{fontSize: 14}}\n                        containerStyle={{marginBottom: 50}}\n                        placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                        onChangeText={(e) => props.setQuestion(e)}\n                    />\n                    <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                    <Input\n                        placeholder={QuizLang[props.lang].AddAnswer}\n                        inputStyle={{fontSize: 14}}\n                        value={answer}\n                        onChangeText={(e) => setAnswer(e)}\n                    />\n                    <Button\n                        icon={\n                            <Icon\n                                name={'add-circle'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={18}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => addAnswer()}\n                        disabled={props.answers.length >= 10}\n                    />\n                    </View>\n                </View>\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].WhatIsAnswer}\n                </Text>\n                <View style={styles.badgesView}>\n                    {props.answers.map( (el, i) => {\n                        return(\n                            <Badge\n                                key={i}\n                                value={el}\n                                badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                onPress={() => pickOutAnswer(i)}\n                            />\n                        )\n                    })}\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    SafeAreaView,\n    ScrollView,\n    Alert,\n    Modal,\n    Text\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay } from 'react-native-elements';\n\nimport QuestionList from './Creation/QuestionList';\nimport ViewQuizList from './ViewQuizList';\n\nimport * as API from '../../../data/quizApi';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport FormQuizContent from './Creation/FormQuizContent';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n    // if the user is editing or not an existing quiz\n    const [edit, setEdit] = useState(false);\n\n    // if the user want to add a question to an existing quiz\n    const [newQuestion, setNewQuestion] = useState(false);\n\n    // if the user want to edit an existing question to an existing quiz\n    const [editContent, setEditContent] = useState();\n\n    // the existing quiz to edit\n    const [quizEdit, setQuizEdit] = useState();\n\n    // the new content to add in an existing quiz\n    const [newContent, setNewContent] = useState([]);\n\n    // check if something has been edited\n    const [editedQuiz, setEditedQuiz] = useState(false);\n\n    // open the modal of going back without saving confirmation\n    const [modal, setModal] = useState(false);\n\n    // the states for the quiz edition (add / edit question)\n    const [question, setQuestion] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const push = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setNewContent([...newContent, push]);\n        setEditedQuiz(true);\n        setSuccess(true);\n    };\n\n    const saveContent = () => {\n        let content;\n        let index;\n        if (Number.isInteger(editContent)) {\n            // edit newContent array\n            content = newContent[editContent - quizEdit?.content?.length];\n        } else {\n            // edit quizEdit array\n\n            // for already in api content -- think of reuploading the file\n            // if there's a new one, or to delete it\n            index = quizEdit.content.findIndex(el => el.id == editContent);\n            content = quizEdit.content[index];\n            if (fileType != content.fileType || uri != content.uri)\n                content.editedFile = true;\n        }\n        content.filename= filename;\n        content.fileType = fileType;\n        content.uri = uri;\n        content.answers = answers;\n        content.question = question;\n        setEditedQuiz(true);\n        setSuccess(true);\n        if (Number.isInteger(editContent)) {\n            if (newContent.length == 1)\n                setNewContent([content]);\n            else\n                setNewContent([...content]);\n        } else {\n            quizEdit.content[index] = content;\n            setQuizEdit(quizEdit);\n        }\n    };\n\n    // clear the states before edition or creation of a content\n    const clearState = () => {\n        setAnswers([]);\n        setQuestion();\n        setFileType();\n        setFilename();\n        setUri();\n        setSound(new Audio.Sound());\n    };\n\n    // Save the edited quiz\n    const saveQuiz = () => {\n        if (!editedQuiz) return;\n        const content = quizEdit.content.concat(newContent);\n        API.saveQuiz(props.personId, quizEdit._id, content).then((data) => {\n            return Alert.alert(\n                QuizLang[props.lang].EditedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            props.setReload(!props.reload);\n                            setNewContent([]);\n                            goBack();\n                        },\n                    }\n                ]\n            );\n        });\n    }\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const viewPage = () => {\n        if (editContent && !newQuestion) {\n            if (success) setSuccess(false);\n            let content;\n            if (Number.isInteger(editContent)) {\n                content = newContent[editContent - quizEdit?.content?.length];\n            } else {\n                const index = quizEdit.content.findIndex(el => el.id == editContent);\n                content = quizEdit.content[index];\n            }\n            if (!content) return;\n            setFilename(content.filename);\n            setFileType(content.fileType);\n            setUri(content.uri);\n            setQuestion(content.question);\n            setAnswers([...content.answers]);\n            setNewQuestion(true);\n        } else if (newQuestion) { // if the user wants to set a new question for quiz edition\n            return (<FormQuizContent\n                        lang={props.lang}\n                        setAnswers={setAnswers}\n                        setFileType={setFileType}\n                        setQuestion={setQuestion}\n                        setUri={setUri}\n                        setFilename={setFilename}\n                        setSuccess={setSuccess}\n                        setSound={setSound}\n                        setIsPlaying={setIsPlaying}\n                        pauseSound={pauseSound}\n                        uri={uri}\n                        filename={filename}\n                        answers={answers}\n                        fileType={fileType}\n                        question={question}\n                        success={success}\n                        sound={sound}\n                        isPlaying={isPlaying}\n                />);\n        } else if (edit && !newQuestion) {\n             // if the user want to see all the question for the quiz edition\n            return (quizEdit.content)?.concat(newContent)?.map((el, i) => {\n                return (<QuestionList\n                    index={i}\n                    key={i}\n                    id={quizEdit._id || 0}\n                    quizEdit={quizEdit}\n                    newContent={newContent}\n                    content={el}\n                    lang={props.lang}\n                    questionId={el.id || i}\n                    quizEdition={true}\n                    reload={props.reload}\n                    setReload={props.setReload}\n                    setEditedQuiz={setEditedQuiz}\n                    setEditContent={setEditContent}\n                    setQuizEdit={setQuizEdit}\n                    setNewContent={setNewContent}\n                />);\n            })\n        } else {\n             // if the user want to see all the existing quiz for the quiz edition\n            return (<ViewQuizList\n                quiz={props.quiz}\n                loading={props.loading}\n                lang={props.lang}\n                personId={props.personId}\n                setEdit={setEdit}\n                setQuizEdit={setQuizEdit}\n                setReload={props.setReload}\n            />);\n        }\n    };\n\n    const goBack = () => {\n\n        if (!success) setSuccess(false);\n\n        if ( (editedQuiz && !newQuestion) || newContent.length > 0) {\n            setModal(true);\n            return;\n        }\n\n        if (editContent) {\n            clearState();\n            setEditContent();\n            setNewQuestion(false);\n        } else if (newQuestion)\n            setNewQuestion(false);\n        else if (edit) {\n            setEditedQuiz(false);\n            setEdit(false);\n        } else\n            props.setTab(0);\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return saveContent();\n        } else if (newQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].AddContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return pushContent();\n        } else if (edit) {\n            // save the quiz button\n            if (mode == 'title') return QuizLang[props.lang].Save;\n            else if (mode == 'disabled') return !(editedQuiz);\n            else if (mode == 'onpress') return saveQuiz();\n        } else {\n            // create a quiz button\n            if (mode == 'title') return QuizLang[props.lang].Create;\n            else if (mode == 'disabled') false;\n            else if (mode == 'onpress') return props.setTab(4);\n        }\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => setModal(false)}\n                    ModalComponent={Modal}\n                >\n                    <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                    <View style={{ flexDirection: 'row' }}>\n                        <Button\n                            title={QuizLang[props.lang].Cancel}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{ marginRight: 10 }}\n                            onPress={() => setModal(false)}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].GoBack}\n                            buttonStyle={{ fontWeight: 'bold' }}\n                            onPress={() => {\n                                setEditedQuiz(false);\n                                setEditContent();\n                                setEdit(false);\n                                setNewContent([]);\n                                setModal(false);\n                            } }\n                        />\n                    </View>\n                </Overlay>\n\n\n                <Button\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={edit ? 'save-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        buttonTop('onpress')\n                    }}\n                    disabled={ buttonTop('disabled') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => goBack() }\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                {\n                    edit && !newQuestion && !editContent ?\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setNewQuestion(true) }\n                    /> : <></>\n                }\n                <ScrollView style={{marginBottom: 40}}>\n                { viewPage() }\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContent from './FormQuizContent';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\nimport { Audio } from 'expo-av';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n    const [modalConfirmation, setModalConfirmation] = useState(false);\n\n    const [editContent, setEditContent] = useState();\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name.substring(0, 23),\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    // Save an existing question\n    const saveContent = () => {\n        content[editContent].fileType = fileType;\n        content[editContent].filename = filename;\n        content[editContent].uri = uri;\n        content[editContent].question = question;\n        content[editContent].answers = answers;\n        setContent([...content]);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        if (isPlaying) setIsPlaying(false);\n    };\n\n    const clearState = () => {\n        setAnswers([]);\n        setFileType();\n        setFilename();\n        setUri();\n        setQuestion();\n        setSuccess(false);\n    };\n\n    const printQuestionList = () => {\n        if (content.length === 0) {\n            return (<Text style={styles.nothingYet}>\n                {QuizLang[props.lang].NoQuestionYet}\n            </Text>);\n        } else {\n            return content?.map((el, i) => {\n                return (\n                    <QuestionList\n                        index={i}\n                        key={i}\n                        id={i}\n                        content={el}\n                        lang={props.lang}\n                        setContent={setContent}\n                        setEditContent={setEditContent}\n                        questionId={i}\n                        contentList={content}\n                    />\n                );\n            });\n        }\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent !== undefined) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); return saveContent(); }\n        } else if (createQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].OK;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); setModal(false); return pushContent(); }\n        } else {\n            if (mode == 'title') return QuizLang[props.lang].Complete;\n            else if (mode == 'disabled') return !(content.length > 0);\n            else if (mode == 'onpress') { return setModal(true);  }\n        }\n    };\n\n    const printPage = () => {\n        if (editContent !== undefined && !createQuestion) {\n            if (success) setSuccess(false);\n            setAnswers(content[editContent].answers);\n            setFileType(content[editContent].fileType);\n            setFilename(content[editContent].filename);\n            setUri(content[editContent].uri);\n            setQuestion(content[editContent].question);\n            setCreateQuestion(true);\n        }\n        if (createQuestion) { // if the user is creating a new question\n            return <FormQuizContent\n                /* Form to create a quiz */\n                lang={props.lang}\n                setAnswers={setAnswers}\n                setFileType={setFileType}\n                setQuestion={setQuestion}\n                setUri={setUri}\n                setFilename={setFilename}\n                setSuccess={setSuccess}\n                setSound={setSound}\n                setIsPlaying={setIsPlaying}\n                pauseSound={pauseSound}\n                uri={uri}\n                filename={filename}\n                answers={answers}\n                fileType={fileType}\n                question={question}\n                success={success}\n                sound={sound}\n                isPlaying={isPlaying}\n            />\n        } else {\n            return <SafeAreaView style={styles.safeArea}>\n                <Button\n                    title={QuizLang[props.lang].AddQuestion}\n                    icon={\n                        <Icon\n                            name={'add-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => setCreateQuestion(true)}\n                />\n                <ScrollView style={{marginBottom: 40}}>\n                    { props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : printQuestionList() }\n                </ScrollView>    \n            </SafeAreaView>\n        }\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button containerStyle={{ marginTop: 10, width: 40 }} title={{}} icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    } disabled={name?.length < 3 || name.length > 23 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            {/* Confirmation give up quiz creation */}\n            <Overlay\n                visible={modalConfirmation}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => setModalConfirmation(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={QuizLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={() => setModalConfirmation(false)}\n                    />\n                    <Button\n                        title={QuizLang[props.lang].GoBack}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={() => {\n                            setModalConfirmation(false);\n                            props.setTab(2);\n                        } }\n                    />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ buttonTop('disabled') }\n                    onPress={ () => buttonTop('onpress') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearState();\n                        pauseSound();\n                        if (createQuestion)\n                            setCreateQuestion(!createQuestion);\n                        else if (content.length == 0) props.setTab(2);\n                        else setModalConfirmation(true)\n                    }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            { printPage() }\n        </>\n    );\n}\n","import React from 'react';\nimport { Text, Button, Icon, FAB } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif');\n    return (\n    <>\n        { props.quizLength > 1 ? <FAB\n            style={{marginTop: 140, position: 'absolute', zIndex: 10}}\n            containerStyle={{marginLeft: 120}}\n            size=\"small\"\n            icon={{name: 'repeat-sharp', type: 'ionicon', color:'white' }}\n            onPress={() => props.pickRandomQuizz()}\n        /> : <></> }\n        <Lottie LottieSource={ThinkingLottie} ImageSource={ThinkingImage} LottieStyle={{marginTop: -25, height: 250, marginBottom: -30}} />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButton}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            buttonStyle={{ backgroundColor: 'red' }}\n            containerStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, Alert, View, Modal } from 'react-native';\nimport { Text, Image, Input, Button, Icon, Overlay } from 'react-native-elements';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../../assets/img/activities/sad.gif';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport Lottie from '../../../utils/Lottie';\nimport { Audio } from 'expo-av';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n    const [modal, setModal] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const [success, setSuccess] = useState(0);\n    const [fail, setFail] = useState(0);\n    const [confetti, setConfetti] = useState(false);\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const TrophyLottie = require('../../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../../assets/lottie/sad.json');\n\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const stopSound = async () => {\n        await pauseSound();\n        setSound(new Audio.Sound());\n        await sound?.unloadAsync();\n    }\n\n    const playSound = async () => {\n        setIsPlaying(true);\n        await Audio.setAudioModeAsync({\n            staysActiveInBackground: true,\n            shouldDuckAndroid: true,\n        });\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus?.isLoaded === false) {\n            await sound.loadAsync({ uri: game[current].uri });\n            setSound(sound);\n        }\n        await sound.playAsync();\n        sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n            if (playbackStatus.didJustFinish) {\n                await sound.unloadAsync();\n                setIsPlaying(false);\n            }\n        });\n    };\n\n    const setMediaType = () => {\n        if (!game[current]) return;\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <Icon onPress={() => isPlaying ? pauseSound() : playSound() } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30}} />\n            default:\n                return <></>;\n        }\n    };\n\n    const openAlertResultQuestion = (result) => {\n        return (\n            Alert.alert(\n                result ? QuizLang[props.lang].SuccessTitle : QuizLang[props.lang].FailedTitle,\n                result ? QuizLang[props.lang].Success : QuizLang[props.lang].Failed(game[current].answers),\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: async () => {\n                            if (current + 1 <= game.length - 1)\n                                setCurrent(current + 1);\n                            else {\n                                const path = success >= fail ? require(`../../../../assets/sound/global/applause.mp3`) : require(`../../../../assets/sound/global/you_lose.mp3`);\n                                if (success >= fail) setConfetti(true);\n                                const { sound } = await Audio.Sound.createAsync(path);\n                                setSound(sound);\n                                sound.playAsync();\n                                setModal(true);\n                            }\n                        },\n                    }\n                ]\n            )\n        )\n    };\n\n    const answerQuestion = async () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        stopSound();\n        setAnswer('');\n        const result = game[current].answers.includes(answerTrimedLowercase);\n        if (result === false) {\n            // increment the fail and update the API\n            setFail(fail + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, false);\n        } else {\n            // increment the success and update the API\n            setSuccess(success + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, true)\n        }\n        openAlertResultQuestion(result);\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                {confetti && success >= fail ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n                )}\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => props.setTab(0)}\n                    ModalComponent={Modal}\n                >\n                    {success >= fail ? \n                        <>\n                            <Lottie LottieSource={TrophyLottie} ImageSource={TrophyImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} loop={false} />\n                            <Text style={{color:'blue', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].SuccessQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].SuccessQuiz(fail, success)}</Text>\n                        </>\n                    :\n                        <>\n                            <Lottie LottieSource={SadLottie} ImageSource={SadImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} />\n                            <Text style={{color:'red', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].FailQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].FailQuiz(fail, success)}</Text>\n                        </>\n                    }\n                    <Button title={QuizLang[props.lang].Leave} onPress={() => props.setTab(0)} containerStyle={styles.leaveButton} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </Overlay>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button buttonStyle={styles.buttonQuizGameOK} title={QuizLang[props.lang].OK} onPress={() => { answerQuestion() }} />\n                </View>\n            </>\n        }\n    </>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\n// This component is mounted when the user clicks on 'Play' in the main quiz menu\nexport default function Play(props) {\n    const [play, setPlay] = useState(false);\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quizId={props.quiz._id}\n                personId={props.personId}\n                quiz={props.quiz.content}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n                quizLength={props.quizLength}\n            />\n        }\n    </View>);\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{QuizLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Rules()}</Text>\n\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].CustomHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Custom()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler, Alert } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber, randomArrayElement } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Creation/CreateQuiz';\nimport Play from './Play';\nimport Help from './Help';\n\nimport * as API from '../../../data/quizApi';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1) {\n                    Alert.alert(\n                        QuizLang[props.lang].GiveUpQuizTitle,\n                        QuizLang[props.lang].GiveUpQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    setTab(0);\n                                }\n                            },\n                        ]\n                    )\n                }\n                else setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            let rand = randomArrayElement(random, 0, quiz.length - 1);\n            setRandom(rand);\n        }\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    isLoading={isLoading}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                quizLength={quiz.length}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    setReload={setReload}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return <View style={styles.view}>{printPage()}</View>;\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'green')\n        color = '#459449';\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Essai${tries > 1 ? 's' : ''} restant${tries > 1 ? 's' : ''}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Score actuel: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Commencer \",\n        GiveUp: \"Abandonner\",\n        Reinit: \"Nouveau modèle\",\n        TitleGiveUp: \"Abandonner la partie\",\n        SureToGiveUp: \"Êtes-vous sûr(e) de vouloir abandonner la partie? Votre score sera enregistré.\",\n        Congratulations: 'Félicitations !!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: \"Recommencer\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'Le jeu des pairs, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu des pairs est assez connu et classique. Lorsque vous commencerez la partie, vous aurez un {0}. Cliquez alors sur le bouton \"{1}\" sur le bas de l’écran pour retourner les cartes face verso.\\n\\nVous devrez alors {2}. Par exemple, si vous cliquez sur une carte rouge, vous devrez cliquer sur l’autre carte rouge ensuite.\\n\\nPlus vous grimpez dans le score, plus le nombre de paires s’ajoutent au schéma. Il peut y avoir jusqu’à {3} au total.`,\n                boldText: [\"schéma de plusieurs paires de cartes face recto\", \"Commencer\", \"retourner les paires l'une après l’autre\", \"6 paires\"],\n            });\n        },\n        ScoreHead: \"Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois qu’un schéma est complété (c'est-à-dire que toutes les cartes ont été retournées), {0} et passez à un schéma suivant, {1}.\\n\\nLes points peuvent vous servir à avoir un joli score, mais aussi à recréer un nouveau schéma si vous l’avez complètement oublié. A chaque re-création d’un schéma, {2}. Et vous ne pouvez pas recréer un schéma s’il ne vous reste {3}.`,\n                boldText: [\"vous gagnez un point\", \"potentiellement plus difficile\", \"vous perdez un point\", \"qu’un essai pour le schéma actuel\"],\n            });\n        },\n        Remember: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Mémorisez bien ce schéma!'],\n            }, 'green');\n        }\n    },\n    en: {\n        Play: 'Play',\n        Help: 'How does it work',\n        Leave: 'Back',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Remaning tr${tries > 1 ? 'ies' : 'y'}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Actual score: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Start \",\n        GiveUp: \"Give up\",\n        Reinit: \"New model\",\n        TitleGiveUp: \"Give up the game\",\n        SureToGiveUp: \"Are you sure to give up this party? Your score will be saved.\",\n        Congratulations: 'Congratulations!!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        SoBad: 'So sad...',\n        ScoreNotBeated: 'Your daily score has not been beaten... But you can retry!',\n        Retry: \"Retry\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Best score made today: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'The double memory, how does it works?',\n        RulesHead: \"The rules\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The game of peers (or double memory) is quite familiar and classic. When you start the game, you will have a {0}. Then click on the \"{1}\" button at the bottom of the screen to turn the cards face up.\\n\\nFor example, if you click on a red card, you will have to click on the other red card next.\\n\\nThere can be up to {3} in total.`,\n                boldText: [\"pattern of several pairs of cards face up\", \"Start\", \"turn over the pairs one after the other\", \"6 pairs\"],\n            });\n        },\n        ScoreHead: \"The score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `Each time a pattern is completed (i.e., all the cards have been turned over), {0} and move on to the next pattern, {1}.\\n\\nThe points can be used to get a nice score, but they can also be used to recreate a new pattern if you've completely forgotten about it. Each time you re-create a pattern, {2}. And you can't recreate a pattern if you don't have {3} left.`,\n                boldText: [\"you earn a point\", \"potentially more challenging\", \"you lose a point\", \"than a try for the current pattern\"],\n            });\n        },\n        Remember: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Remember this schema carefully!'],\n            }, 'green');\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { Dimensions } from 'react-native'\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nconst mode = SCREEN_WIDTH >= SCREEN_HEIGHT ? 'landscape' : 'portrait';\nconst factor = mode == 'landscape' ? hp : wp;\n\nexport default StyleSheet.create({\n    view: {\n        height: hp('100%'),\n        paddingBottom: 40,\n        flex: 1\n    },\n    logo: {\n        width: 120,\n        height: undefined,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n        resizeMode: \"center\",\n        aspectRatio: 1\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n        marginBottom: 20\n    },\n    RectoCard: {\n        width: factor('21%'),\n        height: 0,\n        backgroundColor: '#C3C3CF',\n        borderRadius: 20,\n        borderColor: '#858593',\n        borderWidth: 1,\n        aspectRatio: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    PlayingCard: {\n        width: factor('21%'),\n        height: 0,\n        borderRadius: 20,\n        aspectRatio: 1,\n        borderColor: '#68FF5C',\n        borderWidth: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    VersoCard: {\n        width: factor('21%'),\n        height: 0,\n        borderRadius: 20,\n        opacity: .8,\n        marginHorizontal: 5,\n        aspectRatio: 1,\n        marginVertical: 5\n    },\n    IconCard: {\n        marginTop: 28 + '%'\n    },\n    viewGame: {\n        marginTop: 10,\n        width: wp('95%'),\n        height: hp('55%'),\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    buttonViewPlay: {\n        flexDirection: 'row',\n        width: mode == 'portrait' ? wp('100%') : hp('100%'),\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: 10\n    },\n    playButtons: {\n        alignContent: 'center',\n        textAlign: 'center',\n        paddingHorizontal: 30,\n        borderRadius: 10,\n        marginHorizontal: 5\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        paddingTop: 20,\n        width: wp('100%'),\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={DoubleLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{DoubleLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].Rules()}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].ScoreHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].ScoreHelp()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React from 'react';\nimport { Image, View } from 'react-native';\nimport { Button, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport DoubleLogo from '../../../assets/img/activities/double/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={DoubleLogo} style={styles.logo} resizeMode={'cover'} />\n\n            <Button\n                title={DoubleLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={DoubleLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <View>\n\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: -50,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                        type: 'ionicon',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.ambiantSoundPlay() }\n            />\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 20,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.soundEnabled ? 'sound' : 'sound-mute',\n                        type: 'entypo',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.setSoundEnabled(prev => !prev) }\n            />\n            </View>\n\n            <Button\n                title={DoubleLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => {\n                    props.ambiant.unloadAsync();\n                    props.setPage(null);\n                }}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}","const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};\n\nexport const generateRandomPair = (length) => {\n    const colors = [\n        '#791414',\n        '#143479',\n        '#791462',\n        '#147920',\n        '#797714',\n        '#14AB9D'\n    ];\n    const icons = [\n        'airplane',\n        'boat',\n        'bulb',\n        'color-palette',\n        'earth',\n        'gift',\n        'happy',\n        'heart-circle',\n        'restaurant',\n        'ribbon'\n    ]\n    var arr = [];\n    for (let i = 0; i < length / 2; i++) {\n        var indexColor = Math.floor(Math.random() * colors.length);\n        var indexIcon = Math.floor(Math.random() * icons.length);\n        arr.push({ color: colors[indexColor], icon: icons[indexIcon] }, { color: colors[indexColor], icon: icons[indexIcon] });\n        colors.splice(indexColor, 1);\n        icons.splice(indexIcon, 1);\n    }\n    arr = shuffle(arr);\n    for (let i = 0; i < arr.length; i++) {\n        const el = arr[i];\n        el.idx = i\n    }\n\n    return (arr);\n};","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements';\n\nimport { Dimensions } from 'react-native'\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nimport styles from '../styles';\n\nexport default function Card(props) {\n    var cardStyles;\n    const factor = SCREEN_WIDTH >= SCREEN_HEIGHT ? SCREEN_HEIGHT : SCREEN_WIDTH;\n    if (props.inPlay) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.PlayingCard]];\n    else if (props.inFound || props.show) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.VersoCard]];\n    else cardStyles = styles.RectoCard\n\n    const icon = !props.inFound && !props.inPlay && !props.show ? 'help-circle-outline' : props.icon;\n\n    return (\n        <>\n            <TouchableOpacity style={ cardStyles } onPress={() => {\n                if (!props.inPlay && !props.inFound) props.ReturnCard(props.index);\n            }}>\n                <Icon\n                    name={icon}\n                    size={props.inFound || props.show || props.inPlay ? factor * .08 : factor * .08}\n                    color={props.inFound || props.show || props.inPlay ? 'white' : 'grey'}\n                    type=\"ionicon\"\n                    style={styles.IconCard}\n                />\n            </TouchableOpacity>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { View, Text, Modal } from 'react-native';\n\nimport { Button, Overlay, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../assets/img/activities/sad.gif';\n\nimport Lottie from '../../utils/Lottie';\n\nimport styles from './styles';\n\nimport { generateRandomPair } from './subs/helpers';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport Card from './subs/Card';\n\nexport default function Play(props) {\n    const [game, setGame] = useState([...generateRandomPair(4)]); // the current map game\n    const [found, setFound] = useState([]);\n    const [tries, setTries] = useState(3);\n    const [play, setPlay] = useState([]); // the current play of the player, an array with two values max, corresponding to the cards the player played\n    const [show, setShow] = useState(true);\n    const [confetti, setConfetti] = useState(false);\n    const [pause, setPause] = useState(false);\n\n    const TrophyLottie = require('../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../assets/lottie/sad.json');\n\n    const setLengthGame = () => {\n        if (props.score <= 8)\n            return 4;\n        else if (props.score <= 15)\n            return 6;\n        else if (props.score <= 30)\n            return 8;\n        else if (props.score <= 45)\n            return 10;\n        else\n            return 12;\n    }\n\n    // Exemple game element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null },\n            { idx: 2, color: '#ffffff', icon: null },\n            { idx: 3, color: '#ferdnc', icon: null }\n        ]\n    */\n\n        // each play, we push the current card to the play state, and check if the first element exists in the\n        // game state, and if the second element is the same as the first one, if so => success for a round, and push\n        // this pair in the found state. If fail => clear the play && found states\n\n    // Exemple play element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 2, color: '#ffffff', icon: null }\n        ] // this is a successful array\n\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null }\n        ] // this is a fail array\n    */\n\n    const failOverlay = () => {\n        if (props.modal == false) return;\n        return (\n            <>\n                <Lottie\n                    LottieSource={SadLottie}\n                    ImageSource={SadImage}\n                    autoplay={true}\n                    loop={true}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const successOverlay = () => {\n        if (!confetti) setConfetti(true);\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].BestScoreToday(props.bestScoreDay)}\n                </Text>\n                <Lottie\n                    LottieSource={TrophyLottie}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n    \n    const newModel = () => {\n        if (props.score == 0) return;\n        const currentGameLength = game.length;\n        props.setScore(prevScore => prevScore - 1);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(currentGameLength)]);\n    };\n\n    const printButton = () => {\n        return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={show ? DoubleLang[props.lang].Start : DoubleLang[props.lang].Reinit} onPress={() => { if (show) setShow(false); else newModel(); }} buttonStyle={[styles.playButtons, {backgroundColor: show ? '#208bdc' : 'green'}]} icon={\n                    <Icon\n                    name={show ? \"play\" : ''}\n                    size={18}\n                    color=\"white\"\n                    type=\"ionicon\"\n                />\n                } iconRight={true} disabled={!show && props.score === 0 || tries <= 1} />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.ambiantSoundPlay() }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.soundEnabled ? 'sound' : 'sound-mute',\n                            type: 'entypo',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.setSoundEnabled(prev => !prev) }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='red'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: 'caret-back',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.giveUp() }\n                    style={{marginHorizontal: 5}}\n                />\n            </View>);\n    };\n    \n    const ReturnCard = (key) => {\n        if (pause || show) return;\n        const currentPlay = play;\n        const indexGame = game[key];\n        const playing = [...currentPlay, indexGame];\n        if (playing.length == 2) {\n            // check if same card or return all and lose a try\n            if (playing[0].color === playing[1].color && playing[0].icon === playing[1].icon) {\n                const currentGameLength = game.length;\n                const nFound = [...found, playing[0], playing[1]];\n                if (nFound.length == currentGameLength) {\n                    props.playSound('next');\n                    props.setScore(prevScore => prevScore + 1);\n                    setShow(true);\n                    setTries(3);\n                    setGame([...generateRandomPair(setLengthGame())]);\n                    setFound([]);\n                } else {\n                    props.playSound('success');\n                    setFound(nFound);\n                }\n                setPlay([]);\n            } else {\n                setPlay(playing);\n                props.playSound('fail');\n                setPause(true);\n                setTimeout(() => {\n                    if (tries != 0) setTries(prevTries => prevTries - 1);\n                    if (tries === 0)\n                        props.endGame();\n                    else {\n                        setPlay([]);\n                        setFound([]);\n                    }\n                    setPause(false);\n                }, 1000);\n            }\n        } else {\n            setPlay(playing);\n            props.playSound('play');\n        }\n    };\n\n    const printCards = () => {\n        return game.map( (el, i) => {\n            var inFound = false;\n            var inPlay = false;\n            if (found.find(element => element.idx === i )) inFound = true;\n            else if (play.find(element => element.idx === i )) inPlay = true;\n            return (<Card show={show} key={i} index={i} inFound={inFound} inPlay={inPlay} backgroundColor={el.color} icon={el.icon} ReturnCard={ReturnCard} />);\n        });\n    };\n\n    const newGame = () => {\n        if (confetti) setConfetti(false);\n        props.setModal(false);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(4)]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n            )}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                { props.success && props.modal ? successOverlay() : failOverlay() }\n                <View style={{flexDirection: 'row', marginTop: 20}}>\n                    <Button title={DoubleLang[props.lang].Retry} onPress={() => newGame()} buttonStyle={{marginRight: 10}} icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n\n                    <Button title={DoubleLang[props.lang].Leave} onPress={() => { \n                        if (confetti) setConfetti(false);\n                        props.setModal(false);\n                        props.setTab(0);\n                    }} buttonStyle={{backgroundColor: 'red'}} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </View>\n            </Overlay>\n            <View style={styles.viewGame}>\n                { printCards() }\n            </View>\n            <View style={{alignItems: 'center', width: wp('100%'), marginTop: -10}}>\n                { show === true ? <Text>{DoubleLang[props.lang].Remember()}</Text> : <></> }\n                <Text>{DoubleLang[props.lang].Score(props.score)}</Text>\n                <Text>{DoubleLang[props.lang].BestDayScore(props.bestScoreDay)}</Text>\n                <Text>{DoubleLang[props.lang].RemaningTries(tries)}</Text>\n                { printButton() }\n            </View>\n        </>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport {\n    Text,\n    BackHandler,\n    ScrollView,\n    Alert\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport styles from './styles';\n\nimport * as API from '../../../data/doubleApi';\n\nimport Help from './Help';\nimport Menu from './Menu';\nimport Play from './Play';\n\nconst currentDate = new Date().toLocaleDateString('fr-FR');\n\nexport default function Double(props) {\n    const [tab, setTab] = useState(0);\n    const [score, setScore] = useState(0);\n    const [bestScoreDay, setBestScoreDay] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [ambiant, setAmbiant] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n    const [soundEnabled, setSoundEnabled] = useState(true);\n    const [ambiantEnabled, setAmbiantEnabled] = useState(true);\n\n    useEffect( async () => {\n        // API.clear();\n\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by kilo\n            require(`../../../assets/sound/double/ambiant.mp3`),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n\n        API.getScoreDay(props.personId, currentDate).then((data) => {\n            if (data.length > 0) setBestScoreDay(data[0].score);\n        });\n\n        API.getBestScore(props.personId).then((data) => {\n            if (data.length > 0) setBestScore(data[0].score);\n        });\n\n    }, []);\n\n    useEffect(() => {\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1 && score > 0) {  \n                    giveUp()\n                    return ;\n                }\n                setTab(0);\n            } else {\n                ambiant.unloadAsync();\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, ambiant]);\n\n    const endGame = async () => {\n        setModal(true);\n        let bestDayScore = false;\n        let bestScore = false;\n        if (score > bestScoreDay) { \n            playSound('applause');\n            setSuccess(true);\n            setBestScoreDay(score);\n            bestDayScore = true;\n            if (score > bestScore) {\n                bestScore = true;\n                setBestScore(score);\n            }\n        } else {\n            playSound('lose');\n            setSuccess(false);\n        }\n        await API.insertScore(props.personId, score, currentDate, bestDayScore, bestScore);\n        setScore(0);\n    };\n\n    const ambiantSoundPlay = () => {\n        if (ambiantEnabled) ambiant.pauseAsync();\n        else ambiant.playAsync();\n        setAmbiantEnabled(prevEnable => !prevEnable);\n    };\n    \n    const giveUp = () => {\n        if (score === 0) setTab(0);\n        else return Alert.alert(\n            DoubleLang[props.lang].TitleGiveUp,\n            DoubleLang[props.lang].SureToGiveUp,\n            [\n                {\n                    text: DoubleLang[props.lang].Leave,\n                    onPress: () => { null },\n                    style: 'cancel'\n                },\n                {\n                    text: DoubleLang[props.lang].GiveUp,\n                    onPress: () => {\n                        endGame();\n                    }\n                },\n            ]\n        )\n    };\n\n    const playSound = async (type) => {\n        if (!soundEnabled && !['applause', 'lose'].includes(type)) return;\n        if (sound) sound?.unloadAsync();\n        let choosenSound;\n        switch (type) {\n            case \"success\":\n                choosenSound = require(`../../../assets/sound/double/success.mp3`);\n                break;\n            case \"fail\":\n                choosenSound = require(`../../../assets/sound/double/fail.mp3`);\n                break;\n            case \"play\":\n                choosenSound = require(`../../../assets/sound/double/play.mp3`);\n                break;\n            case \"next\":\n                choosenSound = require(`../../../assets/sound/double/next.mp3`);\n                break;\n            case \"applause\":\n                choosenSound = require(`../../../assets/sound/global/applause.mp3`);\n                break;\n            case \"lose\":\n                choosenSound = require(`../../../assets/sound/global/you_lose.mp3`);\n                break;\n            default:\n                break;\n        }\n        const { sound } = await Audio.Sound.createAsync(choosenSound);\n        setSound(sound);\n        sound.playAsync();\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    ambiant={ambiant}\n                    setSoundEnabled={setSoundEnabled}\n                    soundEnabled={soundEnabled}\n                    ambiantEnabled={ambiantEnabled}\n                    ambiantSoundPlay={ambiantSoundPlay}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                        lang={props.lang}\n                        setTab={setTab}\n                        score={score}\n                        setScore={setScore}\n                        giveUp={giveUp}\n                        modal={modal}\n                        setModal={setModal}\n                        bestScoreDay={bestScoreDay}\n                        success={success}\n                        endGame={endGame}\n                        playSound={playSound}\n                        ambiantSoundPlay={ambiantSoundPlay}\n                        ambiantEnabled={ambiantEnabled}\n                        soundEnabled={soundEnabled}\n                        setSoundEnabled={setSoundEnabled}\n                    />;\n        } else if (tab === 2) {\n            return (<Help lang={props.lang} setTab={setTab} />);\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <ScrollView style={styles.view} contentContainerStyle={{alignItems: 'center'}}>\n            { printPage() }\n        </ScrollView>\n    );\n};","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\nimport Double from '../components/activities/Double';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return <Double lang={lang} setPage={setPage} personId={personId} />;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n        /* {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        }, */\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nimport { Audio } from 'expo-av';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n\n    useEffect( () => {\n        Audio.setIsEnabledAsync(true);\n    }, [])\n\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    scoreRow: {\n        flex: 1,\n        height: 180,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreRowSimon: {\n        flex: 1,\n        height: 250,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreHeading: {\n        fontSize: 18,\n        color: '#2089dc',\n        fontWeight: 'bold',\n        margin: 5\n    },\n    NoScore: {\n        color: 'grey',\n        fontStyle: 'italic',\n        marginTop: 45,\n        marginLeft: 45\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\nimport { Badge } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport { ScoreRatio } from '../../../../components/activities/Quiz/utils/scoreFunc';\nimport * as API from '../../../../data/quizApi';\n\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nexport default function QuizScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [quizScore, setQuizScore] = useState([]);\n\n    useEffect( () => {\n        API.get(props.personId).then((data) => {\n            const arr = [];\n            for (let i = 0; i < data.length; i++) {\n                const el = data[i];\n                arr.push({score: ScoreRatio(el.content, props.personId), name: el.name});\n            }\n            setQuizScore(arr);\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (quizScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            return quizScore.map( (el,i) => {\n                return (\n                    <View style={{marginHorizontal: 15}} key={i}>\n                        <Badge\n                            value={el.name}\n                            textStyle={{textAlign: 'center'}}\n                            badgeStyle={{position:'absolute', paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 100, zIndex: 3}}\n                        />\n                        <CircularProgress\n                            value={el.score}\n                            textStyle={{marginBottom: -10}}\n                            title={ActivitiesLang[props.lang].Success}\n                            valueSuffix={'%'}\n                            titleStyle={{marginBottom: 10}}\n                            initialValue={0}\n                            \n                            delay={500}\n                            activeStrokeColor={'#2089dc'}\n                            radius={65}\n                            inActiveStrokeColor={'#9b59b6'}\n                            inActiveStrokeOpacity={0.5}\n                            inActiveStrokeWidth={6}\n                            activeStrokeWidth={12}\n                        />\n                    </View>\n                );\n            });\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRow} horizontal={true}>\n            <View>\n                <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].QuizScore}</Text>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} /> :\n                    <ScrollView horizontal={true}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/simonApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function SimonScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [simonScore, setSimonScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setSimonScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (simonScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = simonScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].SimonScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/doubleApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function DoubleScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [doubleScore, setDoubleScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setDoubleScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (doubleScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = doubleScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].DoubleScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React from 'react';\nimport { ScrollView } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\n\nimport QuizScore from './QuizScore';\nimport SimonScore from './SimonScore';\nimport DoubleScore from './DoubleScore';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <QuizScore lang={props.lang} personId={props.personId} />\n            <DoubleScore lang={props.lang} personId={props.personId} />\n            <SimonScore lang={props.lang} personId={props.personId} />\n        </ScrollView>\n    );\n}\n","import React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    \n    const navigate = useNavigate();\n\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: 60, color: '#3B8EFF', backgroundColor: '#355c7d' }],\n                tabBarLabelStyle: [{ color: 'white', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} personId={props.personId} /> }\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        fullname={props?.fullname}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                        setPerson={props.setPerson}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        paddingBottom: 10,\n        width: wp('100%'),\n        backgroundColor: '#355c7d'\n    },\n    topLottie: {\n        marginTop: 10,\n        width: 60,\n        height: undefined,\n        marginBottom: 15,\n        backgroundColor: '#355c7d'\n    },\n    bgLottie: {\n        width: wp('100%'),\n        opacity: 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: wp('100%'),\n        height: hp('100%'),\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: '#355c7d'\n    },\n    heading: {\n        fontSize: 20,\n        color: 'white',\n        marginTop: 0,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%'\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport TopImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/selection');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/selection', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/selection', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TopImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={state?.username}\n                        fullname={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setPerson={setPerson}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\nimport React from 'react';\n\nimport { Text } from 'react-native'\nimport App from './App';\n\nText.defaultProps = Text.defaultProps || {};\nText.defaultProps.allowFontScaling = false\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig, reset } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport SelectionMenu from './pages/SelectionMenu';\nimport Activities from './pages/Activities';\nimport Home from './pages/Home';\nimport Tutorial from './pages/Tutorial';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [lang, setLang] = useState('fr');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        // reset();\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    useEffect( () => {\n        let local = Localization.locale?.split('-')[0] || 'fr';\n        setLang(['en', 'fr'].includes(local) ? local : 'fr');\n        console.log('- Imported config file -');\n    }, [config]);\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                    setLang={setLang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/tutorial\"\n                            element={\n                                <Tutorial\n                                    lang={lang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={<Home lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/selection\"\n                            element={\n                                <SelectionMenu\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}