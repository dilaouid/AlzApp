{"version":3,"sources":["assets/img/activities/trophy.gif","assets/img/activities/help/question_mark.gif","assets/img/activities/brain.gif","assets/img/interface/profile.jpg","assets/img/activities/sad.gif","assets/sound/global/applause.mp3","assets/sound/global/you_lose.mp3","assets/sound/simon/green.mp3","assets/img/alzheimapp_logo.png","assets/img/username/chooseusername.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/selection/addedUser.gif","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/quiz/logo.png","assets/img/activities/quiz/success.gif","assets/img/activities/double/logo.png","assets/sound/ambiant.mp3","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","assets/img/activities/quiz/thinking.gif","assets/sound/double/ambiant.mp3","assets/sound/double/success.mp3","assets/sound/double/fail.mp3","assets/sound/double/play.mp3","assets/sound/double/next.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","language/home/index.js","pages/Home/styles.js","pages/Home/Menu.js","utils/dilacrypt.js","data/dictaphoneApi.js","data/simonApi.js","data/quizApi.js","data/doubleApi.js","utils/helpers.js","data/personApi.js","utils/share.js","pages/Home/ImportData.js","pages/Home/index.js","pages/ChooseUsername/styles.js","pages/ChooseUsername/index.js","components/utils/Lottie.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","components/utils/HomeOrTutorial.js","language/selection/index.js","components/selection/Rows.js","components/selection/styles.js","components/selection/PersonCreation/Success.js","components/selection/PersonCreation/Form.js","components/selection/PersonCreation/CreatePerson.js","pages/SelectionMenu/styles.js","pages/SelectionMenu/index.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/Help.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/utils/quizFunc.js","components/activities/Quiz/Creation/QuestionList.js","components/activities/Quiz/utils/scoreFunc.js","components/activities/Quiz/QuizList.js","components/activities/Quiz/ViewQuizList.js","components/activities/Quiz/SuccessContent.js","components/activities/Quiz/Creation/FormQuizContent.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Creation/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/Help.js","components/activities/Quiz/index.js","language/activities/double/index.js","components/activities/Double/styles.js","components/activities/Double/Help.js","components/activities/Double/Menu.js","components/activities/Double/subs/helpers.js","components/activities/Double/subs/Card.js","components/activities/Double/Play.js","components/activities/Double/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/QuizScore/index.js","pages/Activities/Score/SimonScore/index.js","pages/Activities/Score/DoubleScore/index.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","Select","Import","Introduction","Source","License","Language","Step1","Step2","Step3","Step4","Step5","Step6","Step7","Step8","Step9","Step10","Step11","Step12","Step13","Step14","GoBack","InvalidFile","InvalidPersonFile","IncorrectPersonFile","ErrorChekingPerson","InvalidActivitiesLength","InvalidQuizData","InvalidLogData","InvalidDoubleData","InvalidSimonData","StyleSheet","create","container","height","backgroundColor","alignItems","header","marginTop","textAlign","logo","width","menu","flex","marginBottom","button","color","justifyContent","buttonContainer","borderRadius","copyleft","fontSize","fontStyle","ErrorMessage","marginHorizontal","Menu","props","navigate","useNavigate","ScrollView","styles","title","HomeLang","buttonStyle","titleStyle","containerStyle","icon","name","type","size","marginRight","marginLeft","raised","onPress","ambiant","unloadAsync","state","setLang","iconContainerStyle","DocumentPicker","multiple","e","setImportFile","uri","prev","Linking","openURL","encrypt","string","key","encryptedString","j","String","fromCharCode","charCodeAt","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","createQuizContent","el","id","uuidv4","success","failed","includes","fileType","uploadQuizFile","path","FileSystem","from","to","updateScore","quizId","contentId","_id","quiz","contentIndex","content","findIndex","scoreIndex","getBestScore","insertScore","dailyScoreBeaten","globalScoreBeaten","pushErrors","errors","field","msg","hasOwnProperty","randomNumber","min","max","Math","floor","random","person","fullname","trim","description","Object","keys","picture","edit","upd","$set","catch","log","isValidDate","d","n","Date","isNaN","fileToBase64","encoding","formatQuiz","formatLog","scoreVerification","checkPersonInformations","checkPersonExists","personAPI","checkQuiz","quizKeys","contentKeys","k","l","answers","question","foundInScore","checkDouble","double","checkSimon","simon","checkDictaphone","dictaphone","importPerson","exists","intermediates","importQuiz","res","filePath","quizAPI","quizFindAsync","importDouble","doubleAPI","importSimon","simonAPI","importLog","dictaphoneAPI","writeDataFile","fileUri","exportPerson","personFind","personData","simonData","doubleData","quizData","dictaphoneData","JSON","stringify","activities","dilacrypt","ImportData","useState","step","setStep","setError","useEffect","importFile","parsed","parseJSON","dataImport","found","CannotCreatePerson","inputString","parse","stepStyle","idx","clr","display","alignContent","map","ActivityIndicator","disabled","Home","setAmbiant","Audio","setIsEnabledAsync","Sound","createAsync","isLooping","sound","playAsync","useLocation","View","Image","source","AlzheimApp","resizeMode","wrapper","heading","textInput","borderColor","shadowOpacity","shadowRadius","shadowOffset","elevation","image","buttonText","slide","padding","viewrow","flexDirection","flexWrap","input","setInput","isLoading","setIsLoading","loadPage","setLoadPage","confirmed","setConfirmed","redirect","setRedirect","setUsername","backHandler","BackHandler","addEventListener","remove","parseUsername","insertUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","value","placeholder","InterfaceLang","maxLength","onChangeText","animating","Lottie","Platform","OS","LottieStyle","LottieSource","loop","autoPlay","ImageSource","ImageStyle","Loading","LoadingImage","slideOdd","titleOdd","textOdd","aspectRatio","borderWidth","Tutorial","showsButtons","showsPagination","StepOne","StepTwo","StepThree","StepFour","StepFive","StepSixth","Config","HomeOrTutorial","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","TouchableScale","default","mod","index","componentProps","Component","bottomDivider","DefaultProfilePicture","rounded","Content","Title","Subtitle","Chevron","rightButton","minHeight","imageSuccess","leftButton","view","alignSelf","marginVertical","btnImport","btnSave","profilePicture","successPageTitle","Success","SuccessImage","close","Form","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","fsRead","setImage","leftIcon","label","errorStyle","renderErrorMessage","errorMessage","inputStyle","setFullname","setDescription","cb","Person","imgName","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","zIndex","topBanner","topImage","boldtext","subtitle","overflow","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","searchBar","searchInputStyle","SelectionMenu","search","setSearch","setIndex","SelectionMenuLang","btnText","setBtnTxt","active","setActive","swiper","useRef","regex","RegExp","$regex","list","position","LoadingBrain","TouchableOpacity","activeOpacity","current","scrollBy","SafeAreaView","ref","scrollEnabled","pagingEnabled","onIndexChanged","setTimeout","inputContainerStyle","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","QuizScore","SimonScore","DoubleScore","NoScore","Global","BestScoreByDay","ExportedProfile","ReturnList","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","load","setLoad","deletePerson","SimonDB","removeAsync","DictaphoneDB","DoubleDB","QuizDB","deleted","ActivitiesLang","Sharing","Alert","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","isPlaying","setIsPlaying","progress","setProgress","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","positionMillis","playableDurationMillis","variant","animation","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingHorizontal","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","getURI","folder","record","DictaphoneLang","created","deleteRecord","goBack","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","Head","RulesHead","TriesHead","Rules","TriesExplain","paddingTop","opacity","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","viewHelpPage","leaveButtonHelpPage","helpHead","helpStepHead","textTransform","helpStep","helpQuestionMark","SimonLogo","SimonLang","setTab","Game","start","setStart","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","QuestionMark","tab","pos","Create","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","GiveUpQuizTitle","GiveUpQuiz","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","EditedQuiz","QuizListRedirection","selectedQuizz","quizName","Questions","SuccessTitle","FailedTitle","join","SuccessQuizTitle","SuccessQuiz","fail","FailQuizTitle","FailQuiz","SaveContent","AddContent","SureCancelEdition","CustomHead","Custom","answersText","leaveButtonPlay","createButton","overlayDescriptionReference","paddingBottom","ScrollViewSuccess","modalTitle","modalDescription","quizTitleInputContainer","quizTitleInput","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","QuizLogo","QuizLang","printFile","clearFile","pauseSound","playSound","QuestionList","quizEdit","newContent","quizEdition","Number","isInteger","questionId","tmp","setNewContent","setQuizEdit","setReload","reload","setEditedQuiz","contentList","setContent","pickOutQuestion","setEditContent","ScoreRatio","filter","parseInt","total","toFixed","QuizList","ViewQuizList","SuccessContent","FormQuizContent","answer","setAnswer","contentContainerStyle","setFileType","setFilename","setUri","mimeType","flexShrink","setQuestion","toLowerCase","setAnswers","addAnswer","badgeStyle","pickOutAnswer","ViewQuiz","newQuestion","setNewQuestion","editContent","editedQuiz","saveQuiz","concat","editedFile","buttonTop","mode","saveContent","pushContent","viewPage","CreateQuiz","createQuestion","setCreateQuestion","setName","modalConfirmation","setModalConfirmation","undefined","substring","ThinkingImage","quizLength","pickRandomQuizz","ThinkingLottie","setPlay","setCurrent","setFail","arr","shuffle","TrophyLottie","SadLottie","openAlertResultQuestion","SadImage","setMediaType","answerTrimedLowercase","answerQuestion","play","setQuiz","setRandom","rand","randomArrayElement","exclude","randNumber","RemaningTries","Reinit","TitleGiveUp","SureToGiveUp","BestDayScore","ScoreHead","ScoreHelp","hp","RectoCard","wp","PlayingCard","VersoCard","IconCard","viewGame","buttonViewPlay","playButtons","DoubleLang","DoubleLogo","ambiantEnabled","ambiantSoundPlay","soundEnabled","setSoundEnabled","generateRandomPair","colors","icons","indexColor","indexIcon","SCREEN_WIDTH","Dimensions","Card","cardStyles","inPlay","inFound","show","ReturnCard","setFound","setShow","currentPlay","indexGame","playing","currentGameLength","nFound","setScore","prevScore","prevTries","endGame","bestScoreDay","failOverlay","element","newModel","giveUp","Double","setBestScoreDay","setAmbiantEnabled","bestDayScore","prevEnable","choosenSound","returnComponent","page","ActivitiesList","iconPosition","scoreRow","scoreRowSimon","scoreHeading","margin","quizScore","setQuizScore","horizontal","textStyle","valueSuffix","initialValue","delay","activeStrokeColor","radius","inActiveStrokeColor","inActiveStrokeOpacity","inActiveStrokeWidth","activeStrokeWidth","simonScore","setSimonScore","btnIndex","setBtnIndex","buttons","TotalScore","selectedIndex","global","days","item","highestToLowest","b","labels","datasets","fromZero","showValuesOnTopOfBars","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","printScore","doubleScore","setDoubleScore","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","unmountOnBlur","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","setPerson","BgSource","navTheme","DefaultTheme","background","TopImage","BackgroundImage","NavigationContainer","theme","defaultProps","allowFontScaling","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact"],"mappings":"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","file":"static/js/app.0be32b95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/question_mark.c1494184.gif\";","module.exports = __webpack_public_path__ + \"static/media/brain.abdab59b.gif\";","module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sad.bfdab12f.gif\";","module.exports = __webpack_public_path__ + \"static/media/applause.3560ad8b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/you_lose.e1f971d7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/alzheimapp_logo.01f37bd0.png\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.c4ec63da.png\";","module.exports = __webpack_public_path__ + \"static/media/2.c9afe178.png\";","module.exports = __webpack_public_path__ + \"static/media/3.95e52180.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e18a9e44.png\";","module.exports = __webpack_public_path__ + \"static/media/5.1a0c5df5.png\";","module.exports = __webpack_public_path__ + \"static/media/6.64d544d0.png\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.42d4e3d2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.d22dea5d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.5d28b463.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.baee48bf.png\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.e46e92e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e82f415e.gif\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.af08ce07.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.d73909c9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fail.4f8cf1ae.mp3\";","module.exports = __webpack_public_path__ + \"static/media/play.25c902a7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.44546c82.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n}\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n}\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n}\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n}\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n}\n\nexport function reset() {\n    return AsyncStorage.clear();\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retourner sur le formulaire',\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet\\nrequise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? Il est possible {0} la donnée d'une personne et de {1} dans un autre appareil !\",\n                boldText: [\"d'exporter\", \"l'importer\"],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can {0} a person's data and {1} it in another device!\",\n                boldText: ['export', 'import'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer {0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Select: \"Sélection des personnes\",\n        Import: \"Importer un profil\",\n        Introduction: \"Introduction\",\n        Source: \"Accès au code source\",\n        License: \"Code sous licence GPL v3.\\nCréation originale par Diyaeddine LAOUID.\",\n        Language: \"Changer la langue\",\n        Step1: \"Vérification du format ... \",\n        Step2: \"Vérification du format de l'identité ... \",\n        Step3: \"Vérification d'une personne similaire ...\",\n        Step4: \"Vérification des activités ...\",\n        Step5: \"Vérification des quiz ...\",\n        Step6: \"Vérification des jeux des pairs ...\",\n        Step7: \"Vérification du Simon ...\",\n        Step8: \"Vérification du Journal vocal ...\",\n        Step9: \"Création de la personne ...\",\n        Step10: \"Création des quiz ...\",\n        Step11: \"Création des jeux des pairs ...\",\n        Step12: \"Création du Simon ...\",\n        Step13: \"Création du Dictaphone ...\",\n        Step14: \"L'importation s'est déroulée sans encombre ! :-)\",\n        GoBack: \"Retour\",\n        InvalidFile: \"Le fichier a été supprimé du cache\",\n        InvalidPersonFile: \"Le fichier importé est invalide !\",\n        IncorrectPersonFile: \"L'identité de la personne est mal saisie !\",\n        ErrorChekingPerson: \"Une erreur est survenue au moment de la vérification de la personne dans le système ...\",\n        InvalidActivitiesLength: \"Le nombre d'activités dans le tableau du fichier est beaucoup trop grand.\",\n        InvalidQuizData: \"Les données du quiz sont incorrectes ...\",\n        InvalidLogData: \"Les données du dictaphone sont incorrectes ...\",\n        InvalidDoubleData: \"Les données du jeu des pairs sont incorrectes ...\",\n        InvalidSimonData: \"Les données du Simon sont incorrectes ...\",\n        \n    },\n    en: {\n        Select: \"Select a person\",\n        Import: \"Import a profil\",\n        Introduction: \"Introduction\",\n        Source: \"Source code on GitHub\",\n        License: \"Licensed GPL v3 source code.\\nOriginally created by Diyaeddine LAOUID.\",\n        Language: \"Change language\",\n        Step1: \"Format checking ... \",\n        Step2: \"Identity format checking ... \",\n        Step3: \"Checking if person already registered ...\",\n        Step4: \"Activities length checking ...\",\n        Step5: \"Quiz checking ...\",\n        Step6: \"Double Memory checking ...\",\n        Step7: \"Simon checking ...\",\n        Step8: \"Journal log checking ...\",\n        Step9: \"Person creation ...\",\n        Step10: \"Quiz creation ...\",\n        Step11: \"Double Memory creation ...\",\n        Step12: \"Simon Memory creation ...\",\n        Step13: \"Journal log creation ...\",\n        Step14: \"The person has been successfully imported! :-)\",\n        GoBack: \"Back\",\n        InvalidFile: \"The file has been deleted from the cache\",\n        InvalidPersonFile: \"The imported file is invalid!\",\n        IncorrectPersonFile: \"The format of the imported person is invalid!\",\n        ErrorChekingPerson: \"Error when checking if this person exists...\",\n        InvalidActivitiesLength: \"The activities length on the file array is too big\",\n        InvalidQuizData: \"The quiz datas are invalid...\",\n        InvalidLogData: \"The journal logs datas are invalid...\",\n        InvalidDoubleData: \"The double memory game datas are invalid...\",\n        InvalidSimonData: \"The Simon datas are invalid...\",\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        height: 100 + '%',\n        backgroundColor: '#355c7d',\n        alignItems: 'center'\n    },\n    header: {\n        marginTop: 10 + '%',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    logo: {\n        width: 130,\n        height: 130\n    },\n    menu: {\n        marginTop: 10 + '%',\n        flex: 1,\n        marginBottom: 20\n    },\n    button: {\n        width: 250,\n        height: 50,\n        backgroundColor: 'white',\n        color: '#355c7d',\n        justifyContent: 'flex-start'\n    },\n    buttonContainer: {\n        borderRadius: 25,\n        alignItems: 'center',\n        marginBottom: 20\n    },\n    copyleft: {\n        marginTop: 10 + '%',\n        fontSize: 11,\n        color: 'white',\n        textAlign: 'center',\n        fontStyle: 'italic'\n    },\n    ErrorMessage: {\n        color: 'red',\n        fontWeight: 'bold',\n        textAlign:'center',\n        marginTop: 20,\n        marginHorizontal: 40\n    }\n});\n","import React from 'react';\nimport {\n    ScrollView,\n    Linking\n} from 'react-native';\n\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\nimport * as DocumentPicker from 'expo-document-picker';\n\nimport { lang as HomeLang } from '../../language/home';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    const navigate = useNavigate();\n\n    return (\n        <ScrollView style={styles.menu}>\n            <Button\n                title={HomeLang[props.lang].Select}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', textAlign: 'center' }}\n                containerStyle={styles.buttonContainer}\n                icon={\n                    <Icon\n                        name={'person-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    if (props.ambiant) await props.ambiant?.unloadAsync()\n                    navigate('/selection', {\n                        state: { username: props.username, lang: props.lang, setLang: props.setLang }\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Import}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'person-add-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => {\n                    DocumentPicker.getDocumentAsync({multiple: false}).then( e => {\n                        props.setImportFile(e.uri);\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Language}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'world-o'}\n                        type={'fontisto'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                onPress={() => props.setLang(prev => prev == 'fr' ? 'en' : 'fr')}\n                raised\n            />\n            <Button\n                title={HomeLang[props.lang].Introduction}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={[styles.buttonContainer, {marginBottom: 20}]}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    await props.ambiant.unloadAsync()\n                    navigate('/tutorial');\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Source}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'logo-github'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => Linking.openURL('https://github.com/dilaouid/AlzheimApp')}\n            />\n            <Text style={styles.copyleft} >{HomeLang[props.lang].License}</Text>\n        </ScrollView>\n    );\n}\n","export const encrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let encryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        encryptedString += String.fromCharCode( string.charCodeAt(i) - key.charCodeAt(j) - key.length );\n    }\n    return (encryptedString);\n};\n\nexport const decrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let decryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        decryptedString += String.fromCharCode( string.charCodeAt(i) + key.charCodeAt(j) + key.length );\n    }\n    return (decryptedString);\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nconst createQuizContent = async (personId, el) => {\n    el.id = uuidv4();\n    el.score = [{personId: personId, success: 0, failed: 0}];\n    if (['audio', 'image'].includes(el.fileType)) {\n        await uploadQuizFile(el);\n    }\n};\n\nconst uploadQuizFile = async (el) => {\n    const filename = `${uuidv4()}${el.fileType == 'audio' ? '.m4a' : '.png'}`;\n    const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n    await FileSystem.copyAsync({\n        from: el.uri,\n        to: `${path}${filename}`\n    });\n    await FileSystem.deleteAsync(el.uri);\n    el.uri = `${path}${filename}`;\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        await createQuizContent(personId, el);\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport async function updateScore(personId, quizId, contentId, success) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    const contentIndex = quiz[0].content.findIndex(el => el.id == contentId );\n    const scoreIndex = quiz[0].content[contentIndex].score.findIndex(el => el.personId = personId);\n    if (success) quiz[0].content[contentIndex].score[scoreIndex].success++\n    else quiz[0].content[contentIndex].score[scoreIndex].failed++\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function deleteId(personId, quizId) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n};\n\nexport async function deleteQuestion(quizId, questionId) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    const content = quiz[0].content;\n    const contentIndex = content.findIndex(el => el.id == questionId );\n    if (['audio', 'image'].includes(content[contentIndex]))\n        await FileSystem.deleteAsync(content.uri);\n    quiz[0].content = content.splice(0, contentIndex);\n    return db.updateAsync({_id: quizId}, {...quiz[0]})\n};\n\nexport async function getById(quizId) {\n    return db.findAsync({ _id: quizId }, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n};\n\nexport async function saveQuiz(personId, quizId, content) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    if (!quiz) return;\n    for (let i = 0; i < content.length; i++) {\n        const el = content[i];\n        if (!el.id)\n            await createQuizContent(personId, el);\n        else if (el.id && el.editedFile) {\n            await uploadQuizFile(el);\n            delete el.editedFile;\n        }\n    }\n    quiz[0].content = content;\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function reset() {\n    return db.removeAsync({}, { multi: true });\n};\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DoubleSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nexport const randomArrayElement = (exclude, min, max) => {\n    randNumber = randomNumber(min, max);\n    if (randNumber == exclude)\n        return randomArrayElement(exclude, min, max);\n    return randNumber;\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\nimport { db as QuizDB } from './quizApi'\nimport { db as DoubleDB } from './doubleApi';\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await DoubleDB.removeAsync({ personId: id });\n    await QuizDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return db.removeAsync({ _id: id });\n};\n\nexport async function reset() {\n    return FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(async res => {\n        await SimonDB.removeAsync({}, { multi: true });\n        await QuizDB.removeAsync({}, { multi: true });\n        await DictaphoneDB.removeAsync({}, { multi: true });\n        return db.removeAsync({}, { multi: true });\n    });\n};","/**\n * Model is like:\n * {\n *      personId: 'xxx',\n *      name: 'xxx',\n *      description: 'xxx',\n *      picture: 'b64' || null,\n *      activities: {\n *          quiz: [\n *              // all quizz contents //\n *          ],\n *          log: [\n *              // all logs contents\n *          ],\n *          double: [\n *              // all double contents\n *          ],\n *          simon: [\n *              // all simon score\n *          ]\n *      }\n * }\n */\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as dilacrypt from './dilacrypt';\n\nimport { db as personAPI } from '../data/personApi';\nimport { db as dictaphoneAPI } from '../data/dictaphoneApi';\nimport { db as simonAPI } from '../data/simonApi';\nimport { db as quizAPI } from '../data/quizApi';\nimport { db as doubleAPI } from '../data/doubleApi';\n\nconst isValidDate = (d) => {\n    let n = new Date(d);\n    return n instanceof Date && !isNaN(n);\n};\n\nconst fileToBase64 = async (uri) => {\n    return await FileSystem.readAsStringAsync(uri, {\n        encoding: 'base64',\n    });\n};\n\nconst formatQuiz = async (quiz) => {\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < el.content.length; j++) {\n            const e = el.content[j];\n            if (e.uri)\n                e.uri = await fileToBase64(e.uri);\n        }\n    }\n    return (quiz);\n};\n\nconst formatLog = async (log) => {\n    for (let i = 0; i < log.length; i++) {\n        const el = log[i];\n        el.path = await fileToBase64(el.path);\n    }\n    return (log);\n};\n\nconst scoreVerification = (el, personId) => {\n    if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n    if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    if (!el.hasOwnProperty('score') || typeof el.score !== 'number') return false;\n    if (!el.hasOwnProperty('dailyScoreBeaten') || typeof el.dailyScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('globalScoreBeaten') || typeof el.globalScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n    return true;\n};\n\n\n\nexport const checkPersonInformations = (person) => {\n    const keys = ['_id', 'description', 'fullname', 'picture', 'activities'];\n    for (let i = 0; i < keys.length; i++) {\n        const el = keys[i];\n        if (person.hasOwnProperty(el) === false)\n            return false;\n    }\n    return true;\n};\n\nexport const checkPersonInformationsLength = (person) => {\n    return person.fullname.length <= 25 && person.description.length <= 100;\n};\n\nexport const checkPersonExists = async (personId) => {\n    return await personAPI.findAsync({ _id: personId });\n}\n\nexport const checkQuiz = async (quiz, personId) => {\n    const quizKeys = ['name', 'content', 'personId', '_id'];\n    const contentKeys = ['answers', 'question', 'id', 'score']\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < quizKeys.length; j++) {\n            const k = quizKeys[j];\n            if (el.hasOwnProperty(k) === false) return false;\n        }\n        for (let d = 0; d < el.content.length; d++) {\n            const content = el.content[d];\n            if (content.hasOwnProperty('uri') || content.hasOwnProperty('filename') || content.hasOwnProperty('fileType')) {\n                if (!content.hasOwnProperty('uri')) return false;\n                else if (!content.hasOwnProperty('filename')) return false;\n                else if (!content.hasOwnProperty('fileType')) return false;\n            }\n            for (let j = 0; j < contentKeys.length; j++) {\n                const l = contentKeys[j];\n                if (content.hasOwnProperty(l) === false) return false;\n            }\n            if (typeof content.answers !== 'object' || content.answers?.length === 0) return false;\n            if (typeof content.question !== 'string' || typeof content.question?.length > 23) return false;\n            if (typeof content.score !== 'object' || content.answers?.length === 0) return false;\n            let foundInScore = false\n            for (let n = 0; n < content.score.length; n++) {\n                const score = content.score[n];\n                if (score.personId === personId) foundInScore = true;\n                if (!score.hasOwnProperty('personId')) return false;\n                if (!score.hasOwnProperty('success') || typeof score.success !== 'number') return false;\n                if (!score.hasOwnProperty('failed') || typeof score.success !== 'number') return false;\n            }\n            if (!foundInScore) return false;\n        }\n    }\n    return true;\n};\n\nexport const checkDouble = (double, personId) => {\n    if (typeof double !== 'object') return false;\n    for (let i = 0; i < double.length; i++)\n        if (!scoreVerification(double[i], personId)) return false;\n    return true;\n};\n\nexport const checkSimon = (simon, personId) => {\n    if (typeof simon !== 'object') return false;\n    for (let i = 0; i < simon.length; i++)\n        if (!scoreVerification(simon[i], personId)) return false;\n    return true;\n};\n\nexport const checkDictaphone = (dictaphone, personId) => {\n    if (typeof dictaphone !== 'object') return false;\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n        if (!el.hasOwnProperty('name') || typeof el.name !== 'string' || el.name.length < 2) return false;\n        if (!el.hasOwnProperty('path') || typeof el.path !== 'string' || el.path.length < 100) return false;\n        if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n        if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    }\n    return true;\n};\n\nexport const importPerson = async (person, exists) => {\n\n    if (exists === false) {\n        await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${person._id}`, {intermediates: true});\n    }\n\n    let picture = null;\n    if (person.picture) {\n        picture = uuidv4();\n        const path = `${FileSystem.documentDirectory}persons/${person._id}/pp`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        await FileSystem.writeAsStringAsync(path + `/${picture}.jpg`, person.picture, { encoding: 'base64' }).then(el => {\n            picture = path + `/${picture}.jpg`;\n        }).catch(err => {\n            picture = null;\n        });\n    }\n\n    if (exists === false)\n        return personAPI.insertAsync(\n            {\n                _id: person._id,\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        );\n    else\n        return personAPI.updateAsync({_id: person._id}, {\n            $set: {\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        });\n};\n\nexport const importQuiz = async (quiz) => {\n    let res = true;\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        const path = `${FileSystem.documentDirectory}persons/${el.personId}/quiz`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        for (let j = 0; j < quiz[i].content.length; j++) {\n            const e = quiz[i].content[j];\n            if (e.hasOwnProperty('uri')) {\n                // Import and write file\n                let filename = uuidv4();\n                let filePath;\n                await FileSystem.writeAsStringAsync(path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`, e.uri, { encoding: 'base64' }).then(el => {\n                    filePath = path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`;\n                    filename = filePath;\n                    e.uri = filePath;\n                }).catch(err => {\n                    filename = null;\n                    e.uri = null;\n                });\n            }\n        }\n        const quizFindAsync = await quizAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        const quizExists = quizFindAsync.length > 0;\n        if (quizExists) {\n            await quizAPI.updateAsync( {_id: el._id}, {\n                $set: {\n                    name: el.name,\n                    content: el.content\n                }\n            }).catch(err => {\n                res = false;\n            })\n        } else {\n            await quizAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importDouble = async (double) => {\n    let res = true;\n    for (let i = 0; i < double.length; i++) {\n        const el = double[i];\n        const doubleExists = await doubleAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (doubleExists.length === 0) {\n            await doubleAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importSimon = async (simon) => {\n    let res = true;\n    for (let i = 0; i < simon.length; i++) {\n        const el = simon[i];\n        const simonExists = await simonAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (simonExists.length === 0) {\n            await simonAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importLog = async (dictaphone, personId) => {\n    let res = true;\n    const path = `${FileSystem.documentDirectory}persons/${personId}/recordings`;\n    await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n        console.log('[!] Directory already exists');\n    });\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        const logExists = await dictaphoneAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (logExists.length === 0) {\n            el.date = new Date(el.date);\n            let filename = uuidv4();\n            let filePath;\n            await FileSystem.writeAsStringAsync(path + `/${filename}.m4a`, el.path, { encoding: 'base64' }).then(e => {\n                filePath = path + `/${filename}.m4a`;\n                filename = filePath;\n                el.path = filePath;\n            }).catch(err => {\n                console.log(err);\n                filename = null;\n                el.path = null;\n            });\n            await dictaphoneAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const writeDataFile = async (fullname, content) => {\n    let fileUri = FileSystem.documentDirectory + `${fullname}.alz`;\n    return await FileSystem.writeAsStringAsync(fileUri, content).catch(err => {\n        console.log(err);\n    }).then( (e) => {\n        return (fileUri);\n    });\n};\n\nexport const exportPerson = async (personId, key) => {\n    const personFind = await personAPI.findAsync({ _id: personId });\n    if (!personFind) return ('PERSON_NOT_FOUND');\n    const person = personFind[0];\n    if (!person._id || !person.fullname) return ('INVALID_PERSON');\n    const personData = {\n        _id: person._id,\n        description: person.description,\n        fullname: person.fullname,\n        picture: person.picture ? await fileToBase64(person.picture) : null\n    };\n    const simonData = await simonAPI.findAsync({ personId: personId });\n    const doubleData = await doubleAPI.findAsync({ personId: personId });\n    const quiz = await quizAPI.findAsync({ personId: personId });\n    const quizData = quiz ? await formatQuiz(quiz) : []; // converting files into base64 here\n\n    const dictaphone = await dictaphoneAPI.findAsync({ personId: personId });\n    const dictaphoneData = dictaphone ? await formatLog(dictaphone) : []; // converting files into base64 here\n\n    const result = JSON.stringify({\n        _id: personData._id,\n        description: personData.description,\n        fullname: personData.fullname,\n        picture: personData.picture,\n        activities: {\n            quiz: quizData,\n            double: doubleData,\n            simon: simonData,\n            dictaphone: dictaphoneData\n        }\n    });\n    const uri = await writeDataFile(personData.fullname, key ? dilacrypt.encrypt(result, key) : result);\n    return (uri);\n};","import React, { useEffect, useState } from 'react';\nimport {\n    ActivityIndicator,\n    ScrollView\n} from 'react-native';\n\nimport { Text, Button } from 'react-native-elements';\n\nimport { lang as HomeLang } from '../../language/home';\nimport * as FileSystem from 'expo-file-system';\nimport * as dataImport from '../../utils/share'\n\nimport styles from './styles';\n\nexport default function ImportData(props) {\n    const [step, setStep] = useState(1);\n    const [error, setError] = useState();\n    \n    useEffect( async () => {\n        try {\n\n            // Import and check file data\n            const content = await FileSystem.readAsStringAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidFile;\n            });\n            const parsed = parseJSON(content);\n            if (!parsed) throw HomeLang[props.lang].InvalidPersonFile;\n            if (typeof parsed !== 'object' || !parsed._id)\n                throw HomeLang[props.lang].InvalidPersonFile;\n\n            // Checking the personal infos\n            setStep(2);\n            if (dataImport.checkPersonInformations(parsed) === false)\n                throw HomeLang[props.lang].InvalidPersonFile;\n            if (dataImport.checkPersonInformationsLength(parsed) === false)\n                throw HomeLang[props.lang].IncorrectPersonFile;\n\n            // Checking if this userId is registered in the local db\n            setStep(3);\n            const found = await dataImport.checkPersonExists(parsed._id);\n            \n            // Checking activities length\n            setStep(4);\n            if (parsed.activities.length > 4) throw HomeLang[props.lang].InvalidActivitiesLength;\n\n            // Checking quiz format\n            setStep(5);\n            if (await dataImport.checkQuiz(parsed.activities.quiz, parsed._id) === false) throw HomeLang[props.lang].InvalidQuizData;\n\n            // Checking double format\n            setStep(6);\n            if (await dataImport.checkDouble(parsed.activities.double, parsed._id) === false) throw HomeLang[props.lang].InvalidDoubleData;\n\n            // Checking simon format\n            setStep(7);\n            if (await dataImport.checkSimon(parsed.activities.simon, parsed._id) === false) throw HomeLang[props.lang].InvalidSimonData;\n      \n            // Checking dictaphone format\n            setStep(8);\n            if (await dataImport.checkDictaphone(parsed.activities.dictaphone, parsed._id) === false) throw HomeLang[props.lang].InvalidLogData;\n\n            // <! -------- Creation process starts ---------- !>\n\n            // Person creation\n            setStep(9);\n            dataImport.importPerson(parsed, found.length > 0).catch( (err) => {\n                throw HomeLang[props.lang].CannotCreatePerson;\n            });\n\n            // Quiz creation\n            setStep(10);\n            dataImport.importQuiz(parsed.activities.quiz).catch(err => {\n                throw HomeLang[props.lang].InvalidQuizData;\n            });\n\n            // Double creation\n            setStep(11);\n            dataImport.importDouble(parsed.activities.double).catch(err => {\n                throw HomeLang[props.lang].InvalidDoubleData;\n            });\n\n            // Simon creation\n            setStep(12);\n            dataImport.importSimon(parsed.activities.simon).catch(err => {\n                throw HomeLang[props.lang].InvalidSimonData;\n            });\n\n            // Journal log creation\n            setStep(13);\n            dataImport.importLog(parsed.activities.dictaphone, parsed._id).catch(err => {\n                throw HomeLang[props.lang].InvalidLogData;\n            });\n\n            // SUCCESS !!\n            setStep(14);\n\n            await FileSystem.deleteAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidPersonFile;\n            });\n\n\n        } catch (e) {\n            setError(e);\n            return false;\n            // props.setImportFile(null);\n        }\n    }, [])\n\n    const parseJSON = (inputString) => {\n        if (inputString) {\n          try {\n            return JSON.parse(inputString);\n          } catch (e) {\n            return false;\n          }\n        }\n    };\n\n    const stepStyle = (idx) => {\n        let clr = idx === step ? 'white' : '#89ff91';\n        if (error && idx === step) clr = 'red';\n        if (step === 14) clr = '#89ff91';\n        return {\n            color: clr,\n            fontStyle: idx === step || error ? 'italic' : 'normal',\n            marginBottom: idx === 13 ? 30 : 0,\n            display: step >= idx ? 'flex' : 'none',\n            alignContent: 'center',\n            textAlign: 'center',\n            fontSize: idx === step ? 14 : 9\n        }\n    } \n\n    const printActivity = (idx) => {\n        if (idx === step && !error && step !== 14)\n            return <ActivityIndicator color={'white'} size={'small'} />\n        return <></>\n    };\n\n    return (\n        <ScrollView style={styles.menu}>\n            { [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14].map( (e, i) => {\n                return <Text key={i} style={ stepStyle(e) }> { HomeLang[props.lang]['Step' + e] } { printActivity(e) }</Text>\n            }) }\n            { error ? <Text style={styles.ErrorMessage}>{ error }</Text> :  <></> }\n            <Button disabled={!error && step < 14} containerStyle={{marginTop: 150, borderRadius: 15}} title={HomeLang[props.lang].GoBack} onPress={() => props.setImportFile(null)}/>\n        </ScrollView>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Image\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\n\nimport { useLocation } from 'react-router-native';\n\nimport AlzheimApp from '../../assets/img/alzheimapp_logo.png';\nimport Menu from './Menu'\nimport ImportData from './ImportData';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [importFile, setImportFile] = useState();\n    const [ambiant, setAmbiant] = useState();\n    Audio.setIsEnabledAsync(true);\n\n    useEffect( async () => {\n        if (ambiant) return;\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by MCOCHET - check his soundcloud here: https://soundcloud.com/mcochet\n            require('../../assets/sound/ambiant.mp3'),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n    }, []);\n\n    const state = useLocation()?.state;\n\n    const username = props.username || state?.username;\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Image source={AlzheimApp} style={styles.logo} resizeMode={'cover'} />\n            </View>\n            { importFile ?\n                <ImportData lang={props.lang} importFile={importFile} setImportFile={setImportFile} /> :\n                <Menu lang={props.lang} username={username} setLang={props.setLang} setImportFile={setImportFile} ambiant={ambiant} />\n            }\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 40,\n        marginTop: -40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 50,\n        borderColor: 'gray',\n        borderRadius: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        width: 180,\n        textAlign: 'center',\n        elevation: 10\n    },\n    image: {\n        flex: 1,\n        width: 100\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n        height: 50\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    TouchableOpacity,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername as insertUsername, SawTutorial, getUsername } from '../../data/configApi';\n\nimport Home from '../Home';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\nimport { Button } from 'react-native-elements';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [loadPage, setLoadPage] = useState(true);\n    const [confirmed, setConfirmed] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const [username, setUsername] = useState('');\n\n    useEffect(() => {\n        getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    setUsername(res[0].username);\n                    setRedirect(true);\n                }\n                setLoadPage(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoadPage(false);\n            });\n    }, []);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            insertUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setUsername(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (redirect)\n        return <Home lang={props.lang} username={username} setLang={props.setLang} />\n\n    if (loadPage)\n        return <View style={styles.container}></View>\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <Button\n                        title={isLoading ? (\n                            <ActivityIndicator\n                                color=\"white\"\n                                size=\"small\"\n                                animating={true}\n                            />\n                        ) : (\n                            'OK'\n                        )}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                        buttonStyle={styles.button}\n                        titleStyle={styles.buttonText}\n                    />\n                </View>\n            </View>\n        );\n    } else {\n        return <Home lang={props.lang} username={username} setLang={props.setLang} />;\n    }\n}\n","import React from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        height: 100 + '%',\n        padding: 20,\n        alignItems: 'center'\n    },\n    slideOdd: {\n        height: 100 + '%',\n        alignItems: 'center',\n        backgroundColor: '#355c7d',\n    },\n    title: {\n        color: 'black',\n        fontSize: 22,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    titleOdd: {\n        color: 'white',\n        fontSize: 22,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    textOdd: {\n        color: 'white',\n        fontSize: 15,\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    image: {\n        height: 30 + '%',\n        marginBottom: 40,\n        marginTop: 20,\n        aspectRatio: 1\n    },\n    button: {\n        marginTop: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        borderWidth: 1,\n        height: 60\n    },\n    buttonText: {\n        color: '#355c7d'\n    },\n    buttonContainer: {\n        width: 250,\n    }\n});\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { Button } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\n\nexport default function Tutorial(props) {\n    const navigate = useNavigate();\n\n    return (\n        <>\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Button \n                            title={TutorialLang[props.lang].LastStepButton}\n                            buttonStyle={styles.button}\n                            containerStyle={styles.buttonContainer}\n                            onPress={() => {\n                                Config.SawTutorial(true);\n                                navigate('/username', {\n                                    state: { setLang: props.setLang }\n                                });\n                            }}\n                            titleStyle={styles.buttonText}\n                        />\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} setLang={props.setLang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} setLang={props.setLang} />;\n    }\n    return <Home lang={props.lang} username={props.username} setLang={props.setLang} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to produce today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport { View, Text, Platform } from 'react-native';\nimport { Button, Image } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/selection/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/selection/addedUser.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <Button\n                title={InterfaceLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0)\n                personId = result._id;\n            await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${personId}`, {intermediates: true});\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n        zIndex: 1,\n    },\n    wrapper: {\n        marginTop: 20,\n        textAlign: 'center',\n        alignItems: 'center',\n        zIndex: 1,\n    },\n    topBanner: {\n        backgroundColor:'#355c7d'\n    },\n    topImage: {\n        // flex: 1,\n        height: 70,\n        //marginTop: -10,\n    },\n    heading: {\n        marginTop: 10,\n        fontSize: 20,\n        zIndex: 2,\n        color: 'white'\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    subtitle: {\n        textAlign: 'center',\n        color: 'white'\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: 10,\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1,\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Text,\n    View,\n    Image,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    BackHandler,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB } from 'react-native-elements';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport LoadingBrain from '../../assets/img/activities/brain.gif';\nimport { lang as SelectionMenuLang } from '../../language/selection';\nimport Rows from '../../components/selection/Rows';\nimport CreatePerson from '../../components/selection/PersonCreation/CreatePerson';\n\nimport Lottie from '../../components/utils/Lottie';\n\nimport * as Person from '../../data/personApi';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function SelectionMenu(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        SelectionMenuLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const swiper = useRef(null);\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n    const setLang = state?.setLang || props.setLang;\n\n    useEffect(() => {\n        Audio.setIsEnabledAsync(false);\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - index, true);\n    };\n\n    const changeIndex = (idx) => {\n        setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                setBtnTxt(SelectionMenuLang[lang].AddAPerson);\n            } else if (idx === 1) {\n                setBtnTxt(SelectionMenuLang[lang].ReturnToList);\n            }\n            setActive(true);\n        }, 400);\n    };\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 85 + '%',\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home', {\n                    state: { username: username, setLang: setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n            <View style={styles.wrapper}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={LoadingBrain}\n                    LottieStyle={styles.topImage}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[lang].Hello(username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (active === false) {\n                            return;\n                        }\n                        setActive(false);\n                        setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={SelectionMenuLang[lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    setSearch(e);\n                                }}\n                                value={search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {persons && persons.length > 0 ? (\n                                printRows(persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={persons}\n                                setPersons={setPersons}\n                                lang={lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: 'white' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        Home: 'Accueil',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n        QuizScore: \"Score des quiz\",\n        SimonScore: \"Score du Simon\",\n        DoubleScore: \"Score du jeu des pairs\",\n        NoScore: \"Aucun score enregistré pour cette activité...\",\n        Success: 'réussite',\n        Global: \"Vue d'ensemble\",\n        BestScoreByDay: 'Meilleur score du jour',\n        ExportedProfile: 'Profil exporté',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        Home: 'Home',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n        QuizScore: \"Quiz Score\",\n        SimonScore: \"Simon Score\",\n        DoubleScore: \"Double Memory Score\",\n        NoScore: \"No score registered for this activity...\",\n        Success: 'success',\n        Global: \"Global view\",\n        BestScoreByDay: 'Best score by day',\n        ExportedProfile: 'Profile exported',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\n\nimport { ScrollView, Alert, View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/selection/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\nimport { exportPerson } from '../../../utils/share';\nimport * as Sharing from 'expo-sharing';\n\nimport * as FileSystem from 'expo-file-system';\n\nimport styles from './styles';\nimport Form from '../../../components/selection/PersonCreation/Form';\nimport { ActivityIndicator } from 'react-native';\n\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n    const [load, setLoad] = useState(false);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname(props.person.fullname);\n        setUriPreview(props.person.picture);\n        setImage('');\n        setDescription(props.person.description);\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/selection');\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.username),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: load ? '' : 'share-alt',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={load ? <ActivityIndicator color={'white'} size={'small'} /> : ActivitiesLang[props.lang]?.ShareProfile}\n                        onPress={async () => {\n                            setLoad(true)\n                            console.log('[~] Pressing export button');\n                            console.log('[+] Exporting person...');\n                            const uri = await exportPerson(props.personId, null);\n                            console.log('[+] Exported person! uri is: ' + uri);\n                            Sharing.shareAsync(uri).then( async (e) => {\n                                await FileSystem.deleteAsync(uri);\n                                setLoad(false);\n                            });\n                        }}\n                        disabled={load}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/selection', {\n                                state: { username: props.username, lang: props.lang }\n                            });\n                        }}\n                    />\n                </ScrollView>\n            ) : (\n                <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => setEdit(false)}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </ScrollView>\n            )}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync().then( () => {\n                console.log('[+] Permission granted!');\n            })\n            .catch(e => {\n                console.error(e);\n            });            \n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const goBack = async () => {\n        if (recording) await recording?.stopAndUnloadAsync();\n        stopPlayingSounds();\n        props.setPage(0);\n    }\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            if (el) el?.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                    <Button\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'caret-back-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        buttonStyle={styles.recordButton}\n                        title={{}}\n                        titleStyle={styles.titleButton}\n                        onPress={() => goBack()}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <View style={styles.actionButtonsView}>\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n                <Button\n                    containerStyle={styles.actionButtons}\n                    icon={{\n                        name: 'caret-back-outline',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={{}}\n                    titleStyle={styles.titleButton}\n                    onPress={() => goBack()}\n                />\n                </View>\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n\n\n\n\n        // Help section\n        Head: \"Le Simon, comment ça marche ?\",\n        RulesHead: \"Les règles\",\n        TriesHead: \"Les essais\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu Simon est un {0} de forme circulaire comportant quatre gros boutons de couleurs différentes: rouge, vert, jaune et bleu.\\n\\nLe jeu {1} une des quatres couleurs et {2} toujours associé à cette couleur. Le joueur doit alors {3}.\\n\\nLe jeu {4}, puis {5} une nouvelle couleur. Le jour doit reproduire cette nouvelle séquence. Chaque fois que le joueur reproduit correctement la séquence, le jeu ajoute une nouvelle couleur.`,\n                boldText: ['jeu de mémoire', 'éclaire', 'produit un son', \"appuyer sur la touche de la couleur qui vient de s'allumer\", 'répète la même couleur et le même son', 'ajoute'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois que vous ratez une séquence, vous {0}. Au cours d'une partie, vous avez le droit à seulement {1}.\\n\\nUne fois les quatre erreurs faites, ou alors lorsque vous {2}, votre score est compatibilisé en fonction du nombre de touches dans la séquence actuelle.\\n\\nChaque jour, {3}.`,\n                boldText: ['perdez un essai', 'quatre erreurs', 'abandonnez la partie en cours', 'votre score journalier est remit à zéro'],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n\n\n\n\n        // Help section\n        Head: `The Simon, how does it works?`,\n        RulesHead: \"The rules\",\n        TriesHead: \"The tries\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The Simon is a circular shaped {0} with four different colored buttons: red, green, yellow and blue.\\n\\nThe game {1} one of the four colors and {2} always associated to this color. The player shall {3}.\\n\\nThe game {4}, then {5} another color. The player will have to reproduces this sequence. Each time the player successfully reproduces the sequence, the game adds another color in this sequence.`,\n                boldText: ['memory game', 'lighten', 'produces a sound', \"press the colored button which has just turned on\", 'repeat the same color with the same sound', 'add'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `Each time you fail a sequence, you {0}. In a game, you are allowed up to {1}.\\n\\nOnce the four fails made, or when you {2}, you will have the number of elements in the current sequence saved as your score.\\n\\nEach day, {3}.`,\n                boldText: ['lose a try', 'four maximum fails', 'give up the current game', 'your daily score is reset to zero'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        paddingTop: 20,\n        flex: 1,\n        alignItems: 'center'\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        // flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        //flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    // Help section\n    viewHelpPage: {\n        marginTop: -20,\n        backgroundColor: 'white',\n        width: 100 + '%',\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .4,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate, dailyScore < order.length - 1, bestScore < order.length - 1);\n        setCanPlay(false);\n        setSuccess(true);\n        const path = dailyScore < order.length - 1 ? require(`../../../assets/sound/global/applause.mp3`) : require(`../../../assets/sound/global/you_lose.mp3`);\n        const { sound } = await Audio.Sound.createAsync(path);\n        props.setSound(sound);\n        sound.playAsync();\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            <Overlay\n                visible={success}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => setSuccess(false)}\n                ModalComponent={Modal}\n            >\n                {scoreBeaten ? successOverlay() : failOverlay()}\n                <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            retryGame();\n                        }}\n                        title={SimonLang[props.lang].Retry}\n                        containerStyle={{\n                            borderRadius: 13,\n                            marginRight: 10,\n                        }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setTab(0);\n                        }}\n                        title={SimonLang[props.lang].Exit}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React from 'react';\nimport { View, ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView>\n                <Button\n                    title={SimonLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{SimonLang[props.lang].Head}</Text>\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].Rules()}</Text>\n\n                \n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].TriesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].TriesExplain()}</Text>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\nimport Help from './Help';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr, pos) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: i == pos ? color : '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        Cancel: 'Annuler',\n        GoBack: \"Oui, j'annule l'édition du quiz\",\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Abandonner le quiz\",\n        GiveUpQuiz: \"Êtes-vous sûr de vouloir abandonner ce quiz? Le score restera enregistré.\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        EditedQuiz: \"Quiz modifié avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Bien joué !! 😄\",\n        Success: \"Bien joué ! C'est la bonne réponse !! Vous pouvez maintenant passer à la suite !\",\n        FailedTitle: \"Dommage... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Dommage, mais ce n'était pas la bonne réponse ! Les réponses possibles étaient: ${answersText}.`\n        },\n        SuccessQuizTitle: \"Haut la main !\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Fantastique !! Vous avez réussi ce quiz ! Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Dommage... Vous avez raté ce quiz ! ... Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Sauvegarder le quiz',\n        SaveContent: \"Sauvegarder la question\",\n        AddContent: \"Ajouter la question\",\n        SureCancelEdition: \"Êtes-vous sûr de bien vouloir abandonner l'édition de ce quiz? Vous ne pourrez pas récupérer vos modifications.\",\n\n        // Help page related\n        Head: 'Le quiz, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        CustomHead: \"Personnalisation\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Les règles du quiz sont basiques: il y a des questions {0}, et le joueur doit y répondre. Il peut y avoir {1} réponses possibles, une bonne réponse et c'est un point ajouté au score.\\n\\nIl n'y a pas de perte de points suite à une mauvaise réponse.`,\n                boldText: [\"facultativement accompagnées d'une image ou d'un son\", \"plusieurs\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `Il n'y a pas de quiz par défaut. C'est à vous d'en {0} et de les {1} à votre guise !\\nPour cela, vous devez vous rendre dans la partie \"{2}\".\\n\\nVous aurez là la liste des quiz que vous avez préalablement crée. Si vous n'en avez encore créé aucun, façonnez votre premier quiz avec le bouton \"{3}\".\\n\\nIci vous pourrez ajouter des question avec le bouton \"{4}\". Il vous est demandé {5} (facultatif), qui correspond à un son ou une image pour illustrer votre question.\\n\\nEnsuite, vous devez {6}. Ce sera cette question qui sera ensuite demandée au joueur.\\n\\nEt enfin, {7}. Une fois une réponse valide renseignée, cliquez sur le symbole {8} à côté, et votre réponse est ajoutée à la liste des réponses valides à la question. Vous pouvez en avoir 10 maximum.\\n\\nSi vous avez fait une erreur sur une des réponses, {9} pour la retirer de la liste.\\n\\nUne fois tous les éléments de la question renseignées, cliquez sur \"{10}\" au dessus pour enregistrer la question et retourner à la liste des questions précédemment crées. Ajoutez-en autant que vous voulez pour un quiz.\\n\\nVous pouvez également {11}.\\n\\nUne fois le quiz complet, cliquez sur \"{12}\", et voilà ! Renseignez le nom de ce quiz et c'est terminé, le quiz est désormais jouable !`,\n                boldText: [\"créer\",\n                    \"personnaliser\",\n                    \"Voir les quiz\",\n                    \"Créer un quiz\",\n                    \"Ajouter une question\",\n                    \"d'importer un fichier de référence\",\n                    \"renseigner la question\",\n                    \"ajouter les réponses éventuelles\",\n                    \"( + )\",\n                    \"cliquez simplement dessus\",\n                    \"Valider\",\n                    \"cliquer sur une question pour la modifier\",\n                    \"Terminer la création\"\n                ],\n            });\n        }\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizzes',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        Cancel: 'Cancel',\n        GoBack: 'Yes, I want to go back',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'of success',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Submit\",\n        GiveUpQuizTitle: \"Give up\",\n        GiveUpQuiz: \"Are you sure to give up this quiz? The score will be saved.\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        EditedQuiz: \"Quiz successfuly edited!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Well played!! 😄\",\n        Success: \"Well played! That's the good answer!! You can now go to the next question!\",\n        FailedTitle: \"Oops... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Oops, that's not a valid answer... the valid answer${answers.length > 0 ? 's were' : ' was'} : ${answersText}.`\n        },\n        SuccessQuizTitle: \"Easy peasy!\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Congratulations!! You won this quiz! Your score is for {0} good answer(s) for {1} mistake!',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Better next time! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: \"It's alright... You failed this quiz!... Your score is for {0} good answer(s) for {1} mistake!\",\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Save the quiz',\n        SaveContent: \"Save the question\",\n        AddContent: \"Add the question\",\n        SureCancelEdition: \"Are you sure to cancel this quiz edition? Your modification would not be saved\",\n\n        // Help page related\n        Head: 'The quiz, how does it works?',\n        RulesHead: \"The rules\",\n        CustomHead: \"Customization\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `This is a basic quiz game: there are questions {1}, and the player must answer them. There can be {1} answers, one correct answer and it's a point added to the score.\\n\\nThere is no loss of points for a wrong answer.`,\n                boldText: [\"optionally accompanied by an image or a sound\", \"several possible\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `There are no default quizzes. It is up to you to {0} and {1} them as you wish!\\nTo do this, you must go to the \"{2}\" section.\\nThere you will see the list of quizzes that you have already created. If you haven't created any yet, create your first quiz with the \"{3}\" button.\\n\\nHere you can add questions with the \"{4}\" button. You are asked to {5} (optional), which is a sound or image file to illustrate your question.\\n\\nThen you have to {6}. This question will be asked to the player.\\n\\nAnd finally, {7}. Once you have entered a valid answer, click on the {8} symbol next to it, and your answer would be added to the list of the valid answers to the question. You can have a maximum of 10 possible answers.\\n\\nIf you made a mistake on one of the answers, {9} to remove it from the list.\\n\\nOnce you have filled in all the elements of the question, click \"{10}\" above to save the question and return to the list of questions. Add as many as you want to this quiz.\\n\\nYou can also {11}.\\n\\nOnce the quiz is completed, click \"{12}\" and that's it! Fill in the name of this quiz and it's done, the quiz is now playable!`,\n                boldText: [\"create\",\n                    \"customize\",\n                    \"View quizzes\",\n                    \"Create a quiz\",\n                    \"Add a question\",\n                    \"import a reference file\",\n                    \"fill in the question\",\n                    \"add the possible answers\",\n                    \"( + )\",\n                    \"simply click on it\",\n                    \"Submit\",\n                    \"click on a question to edit it\",\n                    \"Complete the quiz creation\"\n                ],\n            });\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginTop: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: 235,\n        marginTop: 20,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: 235,\n        marginTop: 10,\n        backgroundColor: 'blue',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: 30,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    modalDescription: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: 290,\n        marginTop: 10\n    },\n    quizTitleInput: {\n        fontSize: 15\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 50\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        width: 250\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: 250,\n        height: 250\n    },\n    gameQuestion: {\n        fontSize: 25,\n        marginTop: 10,\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey'\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15\n    },\n\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n        textAlign: 'center'\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image, ActivityIndicator } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            <Button\n                title={props.isLoading ? <ActivityIndicator color={'blue'} size={'small'} /> : QuizLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n                disabled={props.quiz.length === 0}\n            />\n\n            <Button\n                title={QuizLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import {\n    View,\n    Image\n} from 'react-native';\nimport { Icon, FAB, Avatar } from 'react-native-elements';\nimport { Audio } from 'expo-av';\n\nexport const printFile = (fileType, uri, clearFile, isPlaying, pauseSound, setIsPlaying, sound, setSound) => {\n    if (fileType === 'image') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Image source={{uri: uri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n            </View>\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 100, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Icon onPress={() => isPlaying ? pauseSound() : playSound(setIsPlaying, sound, setSound, uri) } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30, zIndex: 2}} />\n            </View>\n        );\n    }\n};\n\nexport const playSound = async (setIsPlaying, sound, setSound, uri) => {\n    setIsPlaying(true);\n    await Audio.setAudioModeAsync({\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n    });\n    const getSoundStatus = await sound?.getStatusAsync();\n    if (getSoundStatus?.isLoaded === false) {\n        await sound.loadAsync({ uri: uri });\n        setSound(sound);\n    }\n    await sound.playAsync();\n    sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n        if (playbackStatus.didJustFinish) {\n            await sound.unloadAsync();\n            setIsPlaying(false);\n        }\n    });\n};\n\nexport const pickCorrectIcon = (fileType, uri) => {\n    if (fileType === 'image') {\n        return (\n            <Avatar\n                source={{ uri: uri }}\n                rounded\n                size={'medium'}\n                containerStyle={{marginHorizontal: 8}}\n            />\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <Icon\n                raised\n                name={'musical-notes-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    } else {\n        return (\n            <Icon\n                raised\n                name={'text-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    }\n};","import React, { useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nimport { pickCorrectIcon } from '../utils/quizFunc';\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n\n    const length = props.quizEdit?.content?.length + props.newContent?.length;\n\n    const pickOutQuestion = () => {\n        if (length <= 2 && props.quizEdition) return;\n        if (props.quizEdition === true) {\n            if (Number.isInteger(props.questionId)) {\n                // if the questionId is an integer, it means it has not\n                // been added to the api yet, so it's an index of the\n                // newContent array passed in the props from the ViewQuiz Component\n\n                const index = props.questionId - props.quizEdit?.content?.length;\n                const tmp = props.newContent;\n                tmp.splice(index, 1);\n                // take out the new content from the newContent state in the\n                // parent component\n                props.setNewContent([...tmp]);\n            } else {\n                // todo not get by api but update quizedit state\n                // update api only when saving quiz\n                const index = props.quizEdit.content.findIndex(el => el.id == props.questionId );\n                const tmp = props.quizEdit;\n                tmp.content.splice(index, 1);\n                props.setQuizEdit(tmp);\n                props.setReload(!props.reload)\n                props.setEditedQuiz(true);\n            }\n        } else {\n            const tmp = props.quizEdition ? props.content : props.contentList;\n            tmp.splice(props.index, 1)\n            props.setContent([...tmp]);\n        }\n        setModal(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{ marginRight: 10 }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={{ fontWeight: 'bold' }}\n                    onPress={() => pickOutQuestion() }\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { props.setEditContent(props.questionId) }} >\n                { pickCorrectIcon(props.content.fileType, props.content.uri) }\n                <ListItem.Content>\n                    <ListItem.Title>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon disabled={props.quizEdition == true && length <= 2} reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","export function ScoreRatio (content, personId) {\n    var success = 0;\n    var fail = 0;\n    content.map( (el, i) => {\n        const score = el.score.filter( (el) => el.personId == personId );\n        score.map( (el, i) => {\n            success += parseInt(el.success);\n            fail += parseInt(el.failed);\n        });\n    });\n    const total = success + fail;\n    if (total == 0)\n        return 0;\n    const score = ((success / total) * 100).toFixed(2);\n    return score;\n};","import React from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport { ScoreRatio } from './utils/scoreFunc';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n\n    return (\n        <ListItem {...componentProps} onPress={() => {\n                props.setEdit(true);\n                props.setQuizEdit(props.quiz);\n            }}>\n            <ListItem.Content>\n                <ListItem.Title>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    { ScoreRatio(props.quiz.content, props.personId) }{'% '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Text,\n    ScrollView,\n} from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport QuizList from './QuizList';\nimport styles from './styles';\n\nimport * as API from '../../../data/quizApi';\n\nexport default function ViewQuizList(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <ScrollView>\n            {props.loading ? (\n                <ActivityIndicator\n                    color={'blue'}\n                    size={'small'}\n                    style={styles.loading}\n                />\n            ) : props.quiz?.length > 0 ? (\n                props.quiz?.map((el, i) => {\n                    return (\n                        <QuizList\n                            index={i}\n                            key={el._id}\n                            quiz={el}\n                            lang={props.lang}\n                            deleteId={deleteId}\n                            personId={props.personId}\n                            setEdit={props.setEdit}\n                            setQuizEdit={props.setQuizEdit}\n                        />\n                    );\n                })\n            ) : (\n                <Text style={styles.nothingYet}>\n                    {QuizLang[props.lang].NothingYet}\n                </Text>\n            )}\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/activities/quiz/success.gif';\n\nimport styles from './styles';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge, FAB } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContent(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <ScrollView contentContainerStyle={styles.ScrollView}>\n                { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                <Button\n                    title={QuizLang[props.lang].ImportFile}\n                    buttonStyle={{ borderRadius: 15 }}\n                    onPress={pickFile}\n                />\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].ReferenceFile}\n                </Text>\n                <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                    <Input\n                        value={props.question}\n                        inputStyle={{fontSize: 14}}\n                        containerStyle={{marginBottom: 50}}\n                        placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                        onChangeText={(e) => props.setQuestion(e)}\n                    />\n                    <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                    <Input\n                        placeholder={QuizLang[props.lang].AddAnswer}\n                        inputStyle={{fontSize: 14}}\n                        value={answer}\n                        onChangeText={(e) => setAnswer(e)}\n                    />\n                    <Button\n                        icon={\n                            <Icon\n                                name={'add-circle'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={18}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => addAnswer()}\n                        disabled={props.answers.length >= 10}\n                    />\n                    </View>\n                </View>\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].WhatIsAnswer}\n                </Text>\n                <View style={styles.badgesView}>\n                    {props.answers.map( (el, i) => {\n                        return(\n                            <Badge\n                                key={i}\n                                value={el}\n                                badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                onPress={() => pickOutAnswer(i)}\n                            />\n                        )\n                    })}\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    SafeAreaView,\n    ScrollView,\n    Alert,\n    Modal,\n    Text\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay } from 'react-native-elements';\n\nimport QuestionList from './Creation/QuestionList';\nimport ViewQuizList from './ViewQuizList';\n\nimport * as API from '../../../data/quizApi';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport FormQuizContent from './Creation/FormQuizContent';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n    // if the user is editing or not an existing quiz\n    const [edit, setEdit] = useState(false);\n\n    // if the user want to add a question to an existing quiz\n    const [newQuestion, setNewQuestion] = useState(false);\n\n    // if the user want to edit an existing question to an existing quiz\n    const [editContent, setEditContent] = useState();\n\n    // the existing quiz to edit\n    const [quizEdit, setQuizEdit] = useState();\n\n    // the new content to add in an existing quiz\n    const [newContent, setNewContent] = useState([]);\n\n    // check if something has been edited\n    const [editedQuiz, setEditedQuiz] = useState(false);\n\n    // open the modal of going back without saving confirmation\n    const [modal, setModal] = useState(false);\n\n    // the states for the quiz edition (add / edit question)\n    const [question, setQuestion] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const push = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setNewContent([...newContent, push]);\n        setEditedQuiz(true);\n        setSuccess(true);\n    };\n\n    const saveContent = () => {\n        let content;\n        let index;\n        if (Number.isInteger(editContent)) {\n            // edit newContent array\n            content = newContent[editContent - quizEdit?.content?.length];\n        } else {\n            // edit quizEdit array\n\n            // for already in api content -- think of reuploading the file\n            // if there's a new one, or to delete it\n            index = quizEdit.content.findIndex(el => el.id == editContent);\n            content = quizEdit.content[index];\n            if (fileType != content.fileType || uri != content.uri)\n                content.editedFile = true;\n        }\n        content.filename= filename;\n        content.fileType = fileType;\n        content.uri = uri;\n        content.answers = answers;\n        content.question = question;\n        setEditedQuiz(true);\n        setSuccess(true);\n        if (Number.isInteger(editContent)) {\n            if (newContent.length == 1)\n                setNewContent([content]);\n            else\n                setNewContent([...content]);\n        } else {\n            quizEdit.content[index] = content;\n            setQuizEdit(quizEdit);\n        }\n    };\n\n    // clear the states before edition or creation of a content\n    const clearState = () => {\n        setAnswers([]);\n        setQuestion();\n        setFileType();\n        setFilename();\n        setUri();\n        setSound(new Audio.Sound());\n    };\n\n    // Save the edited quiz\n    const saveQuiz = () => {\n        if (!editedQuiz) return;\n        const content = quizEdit.content.concat(newContent);\n        API.saveQuiz(props.personId, quizEdit._id, content).then((data) => {\n            return Alert.alert(\n                QuizLang[props.lang].EditedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            props.setReload(!props.reload);\n                            setNewContent([]);\n                            goBack();\n                        },\n                    }\n                ]\n            );\n        });\n    }\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const viewPage = () => {\n        if (editContent && !newQuestion) {\n            if (success) setSuccess(false);\n            let content;\n            if (Number.isInteger(editContent)) {\n                content = newContent[editContent - quizEdit?.content?.length];\n            } else {\n                const index = quizEdit.content.findIndex(el => el.id == editContent);\n                content = quizEdit.content[index];\n            }\n            if (!content) return;\n            setFilename(content.filename);\n            setFileType(content.fileType);\n            setUri(content.uri);\n            setQuestion(content.question);\n            setAnswers([...content.answers]);\n            setNewQuestion(true);\n        } else if (newQuestion) { // if the user wants to set a new question for quiz edition\n            return (<FormQuizContent\n                        lang={props.lang}\n                        setAnswers={setAnswers}\n                        setFileType={setFileType}\n                        setQuestion={setQuestion}\n                        setUri={setUri}\n                        setFilename={setFilename}\n                        setSuccess={setSuccess}\n                        setSound={setSound}\n                        setIsPlaying={setIsPlaying}\n                        pauseSound={pauseSound}\n                        uri={uri}\n                        filename={filename}\n                        answers={answers}\n                        fileType={fileType}\n                        question={question}\n                        success={success}\n                        sound={sound}\n                        isPlaying={isPlaying}\n                />);\n        } else if (edit && !newQuestion) {\n             // if the user want to see all the question for the quiz edition\n            return (quizEdit.content)?.concat(newContent)?.map((el, i) => {\n                return (<QuestionList\n                    index={i}\n                    key={i}\n                    id={quizEdit._id || 0}\n                    quizEdit={quizEdit}\n                    newContent={newContent}\n                    content={el}\n                    lang={props.lang}\n                    questionId={el.id || i}\n                    quizEdition={true}\n                    reload={props.reload}\n                    setReload={props.setReload}\n                    setEditedQuiz={setEditedQuiz}\n                    setEditContent={setEditContent}\n                    setQuizEdit={setQuizEdit}\n                    setNewContent={setNewContent}\n                />);\n            })\n        } else {\n             // if the user want to see all the existing quiz for the quiz edition\n            return (<ViewQuizList\n                quiz={props.quiz}\n                loading={props.loading}\n                lang={props.lang}\n                personId={props.personId}\n                setEdit={setEdit}\n                setQuizEdit={setQuizEdit}\n                setReload={props.setReload}\n            />);\n        }\n    };\n\n    const goBack = () => {\n\n        if (!success) setSuccess(false);\n\n        if ( (editedQuiz && !newQuestion) || newContent.length > 0) {\n            setModal(true);\n            return;\n        }\n\n        if (editContent) {\n            clearState();\n            setEditContent();\n            setNewQuestion(false);\n        } else if (newQuestion)\n            setNewQuestion(false);\n        else if (edit) {\n            setEditedQuiz(false);\n            setEdit(false);\n        } else\n            props.setTab(0);\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return saveContent();\n        } else if (newQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].AddContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return pushContent();\n        } else if (edit) {\n            // save the quiz button\n            if (mode == 'title') return QuizLang[props.lang].Save;\n            else if (mode == 'disabled') return !(editedQuiz);\n            else if (mode == 'onpress') return saveQuiz();\n        } else {\n            // create a quiz button\n            if (mode == 'title') return QuizLang[props.lang].Create;\n            else if (mode == 'disabled') false;\n            else if (mode == 'onpress') return props.setTab(4);\n        }\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => setModal(false)}\n                    ModalComponent={Modal}\n                >\n                    <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                    <View style={{ flexDirection: 'row' }}>\n                        <Button\n                            title={QuizLang[props.lang].Cancel}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{ marginRight: 10 }}\n                            onPress={() => setModal(false)}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].GoBack}\n                            buttonStyle={{ fontWeight: 'bold' }}\n                            onPress={() => {\n                                setEditedQuiz(false);\n                                setEditContent();\n                                setEdit(false);\n                                setNewContent([]);\n                                setModal(false);\n                            } }\n                        />\n                    </View>\n                </Overlay>\n\n\n                <Button\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={edit ? 'save-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        buttonTop('onpress')\n                    }}\n                    disabled={ buttonTop('disabled') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => goBack() }\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                {\n                    edit && !newQuestion && !editContent ?\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setNewQuestion(true) }\n                    /> : <></>\n                }\n                <ScrollView style={{marginBottom: 40}}>\n                { viewPage() }\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContent from './FormQuizContent';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\nimport { Audio } from 'expo-av';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n    const [modalConfirmation, setModalConfirmation] = useState(false);\n\n    const [editContent, setEditContent] = useState();\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name.substring(0, 23),\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    // Save an existing question\n    const saveContent = () => {\n        content[editContent].fileType = fileType;\n        content[editContent].filename = filename;\n        content[editContent].uri = uri;\n        content[editContent].question = question;\n        content[editContent].answers = answers;\n        setContent([...content]);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        if (isPlaying) setIsPlaying(false);\n    };\n\n    const clearState = () => {\n        setAnswers([]);\n        setFileType();\n        setFilename();\n        setUri();\n        setQuestion();\n        setSuccess(false);\n    };\n\n    const printQuestionList = () => {\n        if (content.length === 0) {\n            return (<Text style={styles.nothingYet}>\n                {QuizLang[props.lang].NoQuestionYet}\n            </Text>);\n        } else {\n            return content?.map((el, i) => {\n                return (\n                    <QuestionList\n                        index={i}\n                        key={i}\n                        id={i}\n                        content={el}\n                        lang={props.lang}\n                        setContent={setContent}\n                        setEditContent={setEditContent}\n                        questionId={i}\n                        contentList={content}\n                    />\n                );\n            });\n        }\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent !== undefined) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); return saveContent(); }\n        } else if (createQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].OK;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); setModal(false); return pushContent(); }\n        } else {\n            if (mode == 'title') return QuizLang[props.lang].Complete;\n            else if (mode == 'disabled') return !(content.length > 0);\n            else if (mode == 'onpress') { return setModal(true);  }\n        }\n    };\n\n    const printPage = () => {\n        if (editContent !== undefined && !createQuestion) {\n            if (success) setSuccess(false);\n            setAnswers(content[editContent].answers);\n            setFileType(content[editContent].fileType);\n            setFilename(content[editContent].filename);\n            setUri(content[editContent].uri);\n            setQuestion(content[editContent].question);\n            setCreateQuestion(true);\n        }\n        if (createQuestion) { // if the user is creating a new question\n            return <FormQuizContent\n                /* Form to create a quiz */\n                lang={props.lang}\n                setAnswers={setAnswers}\n                setFileType={setFileType}\n                setQuestion={setQuestion}\n                setUri={setUri}\n                setFilename={setFilename}\n                setSuccess={setSuccess}\n                setSound={setSound}\n                setIsPlaying={setIsPlaying}\n                pauseSound={pauseSound}\n                uri={uri}\n                filename={filename}\n                answers={answers}\n                fileType={fileType}\n                question={question}\n                success={success}\n                sound={sound}\n                isPlaying={isPlaying}\n            />\n        } else {\n            return <SafeAreaView style={styles.safeArea}>\n                <Button\n                    title={QuizLang[props.lang].AddQuestion}\n                    icon={\n                        <Icon\n                            name={'add-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => setCreateQuestion(true)}\n                />\n                <ScrollView style={{marginBottom: 40}}>\n                    { props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : printQuestionList() }\n                </ScrollView>    \n            </SafeAreaView>\n        }\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button containerStyle={{ marginTop: 10, width: 40 }} title={{}} icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    } disabled={name?.length < 3 || name.length > 23 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            {/* Confirmation give up quiz creation */}\n            <Overlay\n                visible={modalConfirmation}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => setModalConfirmation(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={QuizLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={() => setModalConfirmation(false)}\n                    />\n                    <Button\n                        title={QuizLang[props.lang].GoBack}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={() => {\n                            setModalConfirmation(false);\n                            props.setTab(2);\n                        } }\n                    />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ buttonTop('disabled') }\n                    onPress={ () => buttonTop('onpress') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearState();\n                        pauseSound();\n                        if (createQuestion)\n                            setCreateQuestion(!createQuestion);\n                        else if (content.length == 0) props.setTab(2);\n                        else setModalConfirmation(true)\n                    }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            { printPage() }\n        </>\n    );\n}\n","import React from 'react';\nimport { Text, Button, Icon, FAB } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif');\n    return (\n    <>\n        { props.quizLength > 1 ? <FAB\n            style={{marginTop: 140, position: 'absolute', zIndex: 10}}\n            containerStyle={{marginLeft: 120}}\n            size=\"small\"\n            icon={{name: 'repeat-sharp', type: 'ionicon', color:'white' }}\n            onPress={() => props.pickRandomQuizz()}\n        /> : <></> }\n        <Lottie LottieSource={ThinkingLottie} ImageSource={ThinkingImage} LottieStyle={{marginTop: -25, height: 250, marginBottom: -30}} />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButton}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            buttonStyle={{ backgroundColor: 'red' }}\n            containerStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, Alert, View, Modal } from 'react-native';\nimport { Text, Image, Input, Button, Icon, Overlay } from 'react-native-elements';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../../assets/img/activities/sad.gif';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport Lottie from '../../../utils/Lottie';\nimport { Audio } from 'expo-av';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n    const [modal, setModal] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const [success, setSuccess] = useState(0);\n    const [fail, setFail] = useState(0);\n    const [confetti, setConfetti] = useState(false);\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const TrophyLottie = require('../../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../../assets/lottie/sad.json');\n\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const stopSound = async () => {\n        await pauseSound();\n        setSound(new Audio.Sound());\n        await sound?.unloadAsync();\n    }\n\n    const playSound = async () => {\n        setIsPlaying(true);\n        await Audio.setAudioModeAsync({\n            staysActiveInBackground: true,\n            shouldDuckAndroid: true,\n        });\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus?.isLoaded === false) {\n            await sound.loadAsync({ uri: game[current].uri });\n            setSound(sound);\n        }\n        await sound.playAsync();\n        sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n            if (playbackStatus.didJustFinish) {\n                await sound.unloadAsync();\n                setIsPlaying(false);\n            }\n        });\n    };\n\n    const setMediaType = () => {\n        if (!game[current]) return;\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <Icon onPress={() => isPlaying ? pauseSound() : playSound() } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30}} />\n            default:\n                return <></>;\n        }\n    };\n\n    const openAlertResultQuestion = (result) => {\n        return (\n            Alert.alert(\n                result ? QuizLang[props.lang].SuccessTitle : QuizLang[props.lang].FailedTitle,\n                result ? QuizLang[props.lang].Success : QuizLang[props.lang].Failed(game[current].answers),\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: async () => {\n                            if (current + 1 <= game.length - 1)\n                                setCurrent(current + 1);\n                            else {\n                                const path = success >= fail ? require(`../../../../assets/sound/global/applause.mp3`) : require(`../../../../assets/sound/global/you_lose.mp3`);\n                                if (success >= fail) setConfetti(true);\n                                const { sound } = await Audio.Sound.createAsync(path);\n                                setSound(sound);\n                                sound.playAsync();\n                                setModal(true);\n                            }\n                        },\n                    }\n                ]\n            )\n        )\n    };\n\n    const answerQuestion = async () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        stopSound();\n        setAnswer('');\n        const result = game[current].answers.includes(answerTrimedLowercase);\n        if (result === false) {\n            // increment the fail and update the API\n            setFail(fail + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, false);\n        } else {\n            // increment the success and update the API\n            setSuccess(success + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, true)\n        }\n        openAlertResultQuestion(result);\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                {confetti && success >= fail ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n                )}\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => props.setTab(0)}\n                    ModalComponent={Modal}\n                >\n                    {success >= fail ? \n                        <>\n                            <Lottie LottieSource={TrophyLottie} ImageSource={TrophyImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} loop={false} />\n                            <Text style={{color:'blue', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].SuccessQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].SuccessQuiz(fail, success)}</Text>\n                        </>\n                    :\n                        <>\n                            <Lottie LottieSource={SadLottie} ImageSource={SadImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} />\n                            <Text style={{color:'red', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].FailQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].FailQuiz(fail, success)}</Text>\n                        </>\n                    }\n                    <Button title={QuizLang[props.lang].Leave} onPress={() => props.setTab(0)} containerStyle={styles.leaveButton} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </Overlay>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button buttonStyle={styles.buttonQuizGameOK} title={QuizLang[props.lang].OK} onPress={() => { answerQuestion() }} />\n                </View>\n            </>\n        }\n    </>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\n// This component is mounted when the user clicks on 'Play' in the main quiz menu\nexport default function Play(props) {\n    const [play, setPlay] = useState(false);\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quizId={props.quiz._id}\n                personId={props.personId}\n                quiz={props.quiz.content}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n                quizLength={props.quizLength}\n            />\n        }\n    </View>);\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{QuizLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Rules()}</Text>\n\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].CustomHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Custom()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler, Alert } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber, randomArrayElement } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Creation/CreateQuiz';\nimport Play from './Play';\nimport Help from './Help';\n\nimport * as API from '../../../data/quizApi';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1) {\n                    Alert.alert(\n                        QuizLang[props.lang].GiveUpQuizTitle,\n                        QuizLang[props.lang].GiveUpQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    setTab(0);\n                                }\n                            },\n                        ]\n                    )\n                }\n                else setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            let rand = randomArrayElement(random, 0, quiz.length - 1);\n            setRandom(rand);\n        }\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    isLoading={isLoading}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                quizLength={quiz.length}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    setReload={setReload}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return <View style={styles.view}>{printPage()}</View>;\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Essai${tries > 1 ? 's' : ''} restant${tries > 1 ? 's' : ''}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Score actuel: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Commencer \",\n        GiveUp: \"Abandonner\",\n        Reinit: \"Nouveau modèle\",\n        TitleGiveUp: \"Abandonner la partie\",\n        SureToGiveUp: \"Êtes-vous sûr(e) de vouloir abandonner la partie? Votre score sera enregistré.\",\n        Congratulations: 'Félicitations !!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: \"Recommencer\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'Le jeu des pairs, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu des pairs est assez connu et classique. Lorsque vous commencerez la partie, vous aurez un {0}. Cliquez alors sur le bouton \"{1}\" sur le bas de l’écran pour retourner les cartes face verso.\\n\\nVous devrez alors {2}. Par exemple, si vous cliquez sur une carte rouge, vous devrez cliquer sur l’autre carte rouge ensuite.\\n\\nPlus vous grimpez dans le score, plus le nombre de paires s’ajoutent au schéma. Il peut y avoir jusqu’à {3} au total.`,\n                boldText: [\"schéma de plusieurs paires de cartes face recto\", \"Commencer\", \"retourner les paires l'une après l’autre\", \"6 paires\"],\n            });\n        },\n        ScoreHead: \"Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois qu’un schéma est complété (c'est-à-dire que toutes les cartes ont été retournées), {0} et passez à un schéma suivant, {1}.\\n\\nLes points peuvent vous servir à avoir un joli score, mais aussi à recréer un nouveau schéma si vous l’avez complètement oublié. A chaque re-création d’un schéma, {2}. Et vous ne pouvez pas recréer un schéma s’il ne vous reste {3}.`,\n                boldText: [\"vous gagnez un point\", \"potentiellement plus difficile\", \"vous perdez un point\", \"qu’un essai pour le schéma actuel\"],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'How does it work',\n        Leave: 'Back',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Remaning tr${tries > 1 ? 'ies' : 'y'}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Actual score: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Start \",\n        GiveUp: \"Give up\",\n        Reinit: \"New model\",\n        TitleGiveUp: \"Give up the game\",\n        SureToGiveUp: \"Are you sure to give up this party? Your score will be saved.\",\n        Congratulations: 'Congratulations!!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        SoBad: 'So sad...',\n        ScoreNotBeated: 'Your daily score has not been beaten... But you can retry!',\n        Retry: \"Retry\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Best score made today: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'The double memory, how does it works?',\n        RulesHead: \"The rules\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The game of peers (or double memory) is quite familiar and classic. When you start the game, you will have a {0}. Then click on the \"{1}\" button at the bottom of the screen to turn the cards face up.\\n\\nFor example, if you click on a red card, you will have to click on the other red card next.\\n\\nThere can be up to {3} in total.`,\n                boldText: [\"pattern of several pairs of cards face up\", \"Start\", \"turn over the pairs one after the other\", \"6 pairs\"],\n            });\n        },\n        ScoreHead: \"The score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `Each time a pattern is completed (i.e., all the cards have been turned over), {0} and move on to the next pattern, {1}.\\n\\nThe points can be used to get a nice score, but they can also be used to recreate a new pattern if you've completely forgotten about it. Each time you re-create a pattern, {2}. And you can't recreate a pattern if you don't have {3} left.`,\n                boldText: [\"you earn a point\", \"potentially more challenging\", \"you lose a point\", \"than a try for the current pattern\"],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    view: {\n        height: hp('100%'),\n        paddingBottom: 40,\n        flex: 1\n    },\n    logo: {\n        width: 120,\n        height: undefined,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n        resizeMode: \"center\",\n        aspectRatio: 1\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n        marginBottom: 20\n    },\n    RectoCard: {\n        width: wp('21%'),\n        height: 0,\n        backgroundColor: '#C3C3CF',\n        borderRadius: 20,\n        borderColor: '#858593',\n        borderWidth: 1,\n        aspectRatio: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    PlayingCard: {\n        width: wp('21%'),\n        height: 0,\n        borderRadius: 20,\n        aspectRatio: 1,\n        borderColor: '#68FF5C',\n        borderWidth: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    VersoCard: {\n        width: wp('21%'),\n        height: 0,\n        borderRadius: 20,\n        opacity: .8,\n        marginHorizontal: 5,\n        aspectRatio: 1,\n        marginVertical: 5\n    },\n    IconCard: {\n        marginTop: 28 + '%'\n    },\n    viewGame: {\n        marginTop: 10,\n        width: wp('95%'),\n        height: hp('55%'),\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    buttonViewPlay: {\n        flexDirection: 'row',\n        width: wp('100%'),\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: 10\n    },\n    playButtons: {\n        alignContent: 'center',\n        textAlign: 'center',\n        paddingHorizontal: 30,\n        borderRadius: 10,\n        marginHorizontal: 5\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        paddingTop: 20,\n        width: wp('100%'),\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={DoubleLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{DoubleLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].Rules()}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].ScoreHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].ScoreHelp()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React from 'react';\nimport { Image, View } from 'react-native';\nimport { Button, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport DoubleLogo from '../../../assets/img/activities/double/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={DoubleLogo} style={styles.logo} resizeMode={'cover'} />\n\n            <Button\n                title={DoubleLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={DoubleLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <View>\n\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: -50,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                        type: 'ionicon',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.ambiantSoundPlay() }\n            />\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 20,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.soundEnabled ? 'sound' : 'sound-mute',\n                        type: 'entypo',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.setSoundEnabled(prev => !prev) }\n            />\n            </View>\n\n            <Button\n                title={DoubleLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => {\n                    props.ambiant.unloadAsync();\n                    props.setPage(null);\n                }}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}","const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};\n\nexport const generateRandomPair = (length) => {\n    const colors = [\n        '#791414',\n        '#143479',\n        '#791462',\n        '#147920',\n        '#797714',\n        '#14AB9D'\n    ];\n    const icons = [\n        'airplane',\n        'boat',\n        'bulb',\n        'color-palette',\n        'earth',\n        'gift',\n        'happy',\n        'heart-circle',\n        'restaurant',\n        'ribbon'\n    ]\n    var arr = [];\n    for (let i = 0; i < length / 2; i++) {\n        var indexColor = Math.floor(Math.random() * colors.length);\n        var indexIcon = Math.floor(Math.random() * icons.length);\n        arr.push({ color: colors[indexColor], icon: icons[indexIcon] }, { color: colors[indexColor], icon: icons[indexIcon] });\n        colors.splice(indexColor, 1);\n        icons.splice(indexIcon, 1);\n    }\n    arr = shuffle(arr);\n    for (let i = 0; i < arr.length; i++) {\n        const el = arr[i];\n        el.idx = i\n    }\n\n    return (arr);\n};","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements';\n\nimport { Dimensions } from 'react-native'\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nimport styles from '../styles';\n\nexport default function Card(props) {\n    var cardStyles;\n    if (props.inPlay) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.PlayingCard]];\n    else if (props.inFound || props.show) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.VersoCard]];\n    else cardStyles = styles.RectoCard\n\n    const icon = !props.inFound && !props.inPlay && !props.show ? 'help-circle-outline' : props.icon;\n\n    return (\n        <>\n            <TouchableOpacity style={ cardStyles } onPress={() => {\n                if (!props.inPlay && !props.inFound) props.ReturnCard(props.index);\n            }}>\n                <Icon\n                    name={icon}\n                    size={props.inFound || props.show || props.inPlay ? SCREEN_WIDTH * .08 : SCREEN_WIDTH * .08}\n                    color={props.inFound || props.show || props.inPlay ? 'white' : 'grey'}\n                    type=\"ionicon\"\n                    style={styles.IconCard}\n                />\n            </TouchableOpacity>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { View, Text, Modal } from 'react-native';\n\nimport { Button, Overlay, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../assets/img/activities/sad.gif';\n\nimport Lottie from '../../utils/Lottie';\n\nimport styles from './styles';\n\nimport { generateRandomPair } from './subs/helpers';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport Card from './subs/Card';\n\nexport default function Play(props) {\n    const [game, setGame] = useState([...generateRandomPair(4)]); // the current map game\n    const [found, setFound] = useState([]);\n    const [tries, setTries] = useState(3);\n    const [play, setPlay] = useState([]); // the current play of the player, an array with two values max, corresponding to the cards the player played\n    const [show, setShow] = useState(true);\n    const [confetti, setConfetti] = useState(false);\n    const [pause, setPause] = useState(false);\n\n    const TrophyLottie = require('../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../assets/lottie/sad.json');\n\n    const setLengthGame = () => {\n        if (props.score <= 8)\n            return 4;\n        else if (props.score <= 15)\n            return 6;\n        else if (props.score <= 30)\n            return 8;\n        else if (props.score <= 45)\n            return 10;\n        else\n            return 12;\n    }\n\n    // Exemple game element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null },\n            { idx: 2, color: '#ffffff', icon: null },\n            { idx: 3, color: '#ferdnc', icon: null }\n        ]\n    */\n\n        // each play, we push the current card to the play state, and check if the first element exists in the\n        // game state, and if the second element is the same as the first one, if so => success for a round, and push\n        // this pair in the found state. If fail => clear the play && found states\n\n    // Exemple play element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 2, color: '#ffffff', icon: null }\n        ] // this is a successful array\n\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null }\n        ] // this is a fail array\n    */\n\n    const failOverlay = () => {\n        if (props.modal == false) return;\n        return (\n            <>\n                <Lottie\n                    LottieSource={SadLottie}\n                    ImageSource={SadImage}\n                    autoplay={true}\n                    loop={true}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const successOverlay = () => {\n        if (!confetti) setConfetti(true);\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].BestScoreToday(props.bestScoreDay)}\n                </Text>\n                <Lottie\n                    LottieSource={TrophyLottie}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n    \n    const newModel = () => {\n        if (props.score == 0) return;\n        const currentGameLength = game.length;\n        props.setScore(prevScore => prevScore - 1);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(currentGameLength)]);\n    };\n\n    const printButton = () => {\n        return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={show ? DoubleLang[props.lang].Start : DoubleLang[props.lang].Reinit} onPress={() => { if (show) setShow(false); else newModel(); }} buttonStyle={[styles.playButtons, {backgroundColor: show ? '#208bdc' : 'green'}]} icon={\n                    <Icon\n                    name={show ? \"play\" : ''}\n                    size={18}\n                    color=\"white\"\n                    type=\"ionicon\"\n                />\n                } iconRight={true} disabled={!show && props.score === 0 || tries <= 1} />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.ambiantSoundPlay() }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.soundEnabled ? 'sound' : 'sound-mute',\n                            type: 'entypo',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.setSoundEnabled(prev => !prev) }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='red'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: 'caret-back',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.giveUp() }\n                    style={{marginHorizontal: 5}}\n                />\n            </View>);\n    };\n    \n    const ReturnCard = (key) => {\n        if (pause || show) return;\n        const currentPlay = play;\n        const indexGame = game[key];\n        const playing = [...currentPlay, indexGame];\n        if (playing.length == 2) {\n            // check if same card or return all and lose a try\n            if (playing[0].color === playing[1].color && playing[0].icon === playing[1].icon) {\n                const currentGameLength = game.length;\n                const nFound = [...found, playing[0], playing[1]];\n                if (nFound.length == currentGameLength) {\n                    props.playSound('next');\n                    props.setScore(prevScore => prevScore + 1);\n                    setShow(true);\n                    setTries(3);\n                    setGame([...generateRandomPair(setLengthGame())]);\n                    setFound([]);\n                } else {\n                    props.playSound('success');\n                    setFound(nFound);\n                }\n                setPlay([]);\n            } else {\n                setPlay(playing);\n                props.playSound('fail');\n                setPause(true);\n                setTimeout(() => {\n                    if (tries != 0) setTries(prevTries => prevTries - 1);\n                    if (tries === 0)\n                        props.endGame();\n                    else {\n                        setPlay([]);\n                        setFound([]);\n                    }\n                    setPause(false);\n                }, 1000);\n            }\n        } else {\n            setPlay(playing);\n            props.playSound('play');\n        }\n    };\n\n    const printCards = () => {\n        return game.map( (el, i) => {\n            var inFound = false;\n            var inPlay = false;\n            if (found.find(element => element.idx === i )) inFound = true;\n            else if (play.find(element => element.idx === i )) inPlay = true;\n            return (<Card show={show} key={i} index={i} inFound={inFound} inPlay={inPlay} backgroundColor={el.color} icon={el.icon} ReturnCard={ReturnCard} />);\n        });\n    };\n\n    const newGame = () => {\n        if (confetti) setConfetti(false);\n        props.setModal(false);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(4)]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n            )}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                { props.success && props.modal ? successOverlay() : failOverlay() }\n                <View style={{flexDirection: 'row', marginTop: 20}}>\n                    <Button title={DoubleLang[props.lang].Retry} onPress={() => newGame()} buttonStyle={{marginRight: 10}} icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n\n                    <Button title={DoubleLang[props.lang].Leave} onPress={() => { \n                        if (confetti) setConfetti(false);\n                        props.setModal(false);\n                        props.setTab(0);\n                    }} buttonStyle={{backgroundColor: 'red'}} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </View>\n            </Overlay>\n            <View style={styles.viewGame}>\n                { printCards() }\n            </View>\n            <View style={{alignItems: 'center', width: wp('100%'), marginTop: -10}}>\n                <Text>{DoubleLang[props.lang].Score(props.score)}</Text>\n                <Text>{DoubleLang[props.lang].BestDayScore(props.bestScoreDay)}</Text>\n                <Text>{DoubleLang[props.lang].RemaningTries(tries)}</Text>\n                { printButton() }\n            </View>\n        </>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport {\n    Text,\n    BackHandler,\n    ScrollView,\n    Alert\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport styles from './styles';\n\nimport * as API from '../../../data/doubleApi';\n\nimport Help from './Help';\nimport Menu from './Menu';\nimport Play from './Play';\n\nconst currentDate = new Date().toLocaleDateString('fr-FR');\n\nexport default function Double(props) {\n    const [tab, setTab] = useState(0);\n    const [score, setScore] = useState(0);\n    const [bestScoreDay, setBestScoreDay] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [ambiant, setAmbiant] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n    const [soundEnabled, setSoundEnabled] = useState(true);\n    const [ambiantEnabled, setAmbiantEnabled] = useState(true);\n\n    useEffect( async () => {\n        // API.clear();\n\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by kilo\n            require(`../../../assets/sound/double/ambiant.mp3`),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n\n        API.getScoreDay(props.personId, currentDate).then((data) => {\n            if (data.length > 0) setBestScoreDay(data[0].score);\n        });\n\n        API.getBestScore(props.personId).then((data) => {\n            if (data.length > 0) setBestScore(data[0].score);\n        });\n\n    }, []);\n\n    useEffect(() => {\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1 && score > 0) {  \n                    giveUp()\n                    return ;\n                }\n                setTab(0);\n            } else {\n                ambiant.unloadAsync();\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, ambiant]);\n\n    const endGame = async () => {\n        setModal(true);\n        let bestDayScore = false;\n        let bestScore = false;\n        if (score > bestScoreDay) { \n            playSound('applause');\n            setSuccess(true);\n            setBestScoreDay(score);\n            bestDayScore = true;\n            if (score > bestScore) {\n                bestScore = true;\n                setBestScore(score);\n            }\n        } else {\n            playSound('lose');\n            setSuccess(false);\n        }\n        await API.insertScore(props.personId, score, currentDate, bestDayScore, bestScore);\n        setScore(0);\n    };\n\n    const ambiantSoundPlay = () => {\n        if (ambiantEnabled) ambiant.pauseAsync();\n        else ambiant.playAsync();\n        setAmbiantEnabled(prevEnable => !prevEnable);\n    };\n    \n    const giveUp = () => {\n        if (score === 0) setTab(0);\n        else return Alert.alert(\n            DoubleLang[props.lang].TitleGiveUp,\n            DoubleLang[props.lang].SureToGiveUp,\n            [\n                {\n                    text: DoubleLang[props.lang].Leave,\n                    onPress: () => { null },\n                    style: 'cancel'\n                },\n                {\n                    text: DoubleLang[props.lang].GiveUp,\n                    onPress: () => {\n                        endGame();\n                    }\n                },\n            ]\n        )\n    };\n\n    const playSound = async (type) => {\n        if (!soundEnabled && !['applause', 'lose'].includes(type)) return;\n        if (sound) sound?.unloadAsync();\n        let choosenSound;\n        switch (type) {\n            case \"success\":\n                choosenSound = require(`../../../assets/sound/double/success.mp3`);\n                break;\n            case \"fail\":\n                choosenSound = require(`../../../assets/sound/double/fail.mp3`);\n                break;\n            case \"play\":\n                choosenSound = require(`../../../assets/sound/double/play.mp3`);\n                break;\n            case \"next\":\n                choosenSound = require(`../../../assets/sound/double/next.mp3`);\n                break;\n            case \"applause\":\n                choosenSound = require(`../../../assets/sound/global/applause.mp3`);\n                break;\n            case \"lose\":\n                choosenSound = require(`../../../assets/sound/global/you_lose.mp3`);\n                break;\n            default:\n                break;\n        }\n        const { sound } = await Audio.Sound.createAsync(choosenSound);\n        setSound(sound);\n        sound.playAsync();\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    ambiant={ambiant}\n                    setSoundEnabled={setSoundEnabled}\n                    soundEnabled={soundEnabled}\n                    ambiantEnabled={ambiantEnabled}\n                    ambiantSoundPlay={ambiantSoundPlay}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                        lang={props.lang}\n                        setTab={setTab}\n                        score={score}\n                        setScore={setScore}\n                        giveUp={giveUp}\n                        modal={modal}\n                        setModal={setModal}\n                        bestScoreDay={bestScoreDay}\n                        success={success}\n                        endGame={endGame}\n                        playSound={playSound}\n                        ambiantSoundPlay={ambiantSoundPlay}\n                        ambiantEnabled={ambiantEnabled}\n                        soundEnabled={soundEnabled}\n                        setSoundEnabled={setSoundEnabled}\n                    />;\n        } else if (tab === 2) {\n            return (<Help lang={props.lang} setTab={setTab} />);\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <ScrollView style={styles.view} contentContainerStyle={{alignItems: 'center'}}>\n            { printPage() }\n        </ScrollView>\n    );\n};","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\nimport Double from '../components/activities/Double';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return <Double lang={lang} setPage={setPage} personId={personId} />;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n        /* {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        }, */\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nimport { Audio } from 'expo-av';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n\n    useEffect( () => {\n        Audio.setIsEnabledAsync(true);\n    }, [])\n\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    scoreRow: {\n        flex: 1,\n        height: 180,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreRowSimon: {\n        flex: 1,\n        height: 250,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreHeading: {\n        fontSize: 18,\n        color: '#2089dc',\n        fontWeight: 'bold',\n        margin: 5\n    },\n    NoScore: {\n        color: 'grey',\n        fontStyle: 'italic',\n        marginTop: 45,\n        marginLeft: 45\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\nimport { Badge } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport { ScoreRatio } from '../../../../components/activities/Quiz/utils/scoreFunc';\nimport * as API from '../../../../data/quizApi';\n\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nexport default function QuizScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [quizScore, setQuizScore] = useState([]);\n\n    useEffect( () => {\n        API.get(props.personId).then((data) => {\n            const arr = [];\n            for (let i = 0; i < data.length; i++) {\n                const el = data[i];\n                arr.push({score: ScoreRatio(el.content, props.personId), name: el.name});\n            }\n            setQuizScore(arr);\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (quizScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            return quizScore.map( (el,i) => {\n                return (\n                    <View style={{marginHorizontal: 15}} key={i}>\n                        <Badge\n                            value={el.name}\n                            textStyle={{textAlign: 'center'}}\n                            badgeStyle={{position:'absolute', paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 100, zIndex: 3}}\n                        />\n                        <CircularProgress\n                            value={el.score}\n                            textStyle={{marginBottom: -10}}\n                            title={ActivitiesLang[props.lang].Success}\n                            valueSuffix={'%'}\n                            titleStyle={{marginBottom: 10}}\n                            initialValue={0}\n                            \n                            delay={500}\n                            activeStrokeColor={'#2089dc'}\n                            radius={65}\n                            inActiveStrokeColor={'#9b59b6'}\n                            inActiveStrokeOpacity={0.5}\n                            inActiveStrokeWidth={6}\n                            activeStrokeWidth={12}\n                        />\n                    </View>\n                );\n            });\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRow} horizontal={true}>\n            <View>\n                <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].QuizScore}</Text>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} /> :\n                    <ScrollView horizontal={true}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/simonApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function SimonScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [simonScore, setSimonScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setSimonScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (simonScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = simonScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].SimonScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/doubleApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function DoubleScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [doubleScore, setDoubleScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setDoubleScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (doubleScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = doubleScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].DoubleScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React from 'react';\nimport { ScrollView } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\n\nimport QuizScore from './QuizScore';\nimport SimonScore from './SimonScore';\nimport DoubleScore from './DoubleScore';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <QuizScore lang={props.lang} personId={props.personId} />\n            <DoubleScore lang={props.lang} personId={props.personId} />\n            <SimonScore lang={props.lang} personId={props.personId} />\n        </ScrollView>\n    );\n}\n","import React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    \n    const navigate = useNavigate();\n\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: 60, color: '#3B8EFF', backgroundColor: '#355c7d' }],\n                tabBarLabelStyle: [{ color: 'white', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} personId={props.personId} /> }\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        paddingBottom: 10,\n        width: wp('100%'),\n        backgroundColor: '#355c7d'\n    },\n    topLottie: {\n        marginTop: 10,\n        width: 60,\n        height: undefined,\n        marginBottom: 15,\n        backgroundColor: '#355c7d'\n    },\n    bgLottie: {\n        width: wp('100%'),\n        opacity: 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: wp('100%'),\n        height: hp('100%'),\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: '#355c7d'\n    },\n    heading: {\n        fontSize: 20,\n        color: 'white',\n        marginTop: 0,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%'\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport TopImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/selection');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/selection', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/selection', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TopImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\nimport React from 'react';\n\nimport { Text } from 'react-native'\nimport App from './App';\n\nText.defaultProps = Text.defaultProps || {};\nText.defaultProps.allowFontScaling = false\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig, reset } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport SelectionMenu from './pages/SelectionMenu';\nimport Activities from './pages/Activities';\nimport Home from './pages/Home';\nimport Tutorial from './pages/Tutorial';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [lang, setLang] = useState('fr');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        // reset();\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    useEffect( () => {\n        let local = Localization.locale?.split('-')[0] || 'fr';\n        setLang(['en', 'fr'].includes(local) ? local : 'fr');\n        console.log('- Imported config file -');\n    }, [config]);\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                    setLang={setLang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/tutorial\"\n                            element={\n                                <Tutorial\n                                    lang={lang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={<Home lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/selection\"\n                            element={\n                                <SelectionMenu\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}