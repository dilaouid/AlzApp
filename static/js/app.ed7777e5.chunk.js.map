{"version":3,"sources":["assets/img/activities/trophy.gif","assets/img/activities/help/question_mark.gif","assets/img/interface/profile.jpg","assets/img/activities/brain.gif","assets/img/activities/sad.gif","assets/sound/global/applause.mp3","assets/sound/global/you_lose.mp3","assets/sound/simon/green.mp3","assets/img/selection/addedUser.gif","assets/img/username/chooseusername.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/alzheimapp_logo.png","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/quiz/logo.png","assets/img/activities/quiz/success.gif","assets/img/activities/double/logo.png","assets/sound/ambiant.mp3","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","assets/img/activities/quiz/thinking.gif","assets/sound/double/ambiant.mp3","assets/sound/double/success.mp3","assets/sound/double/fail.mp3","assets/sound/double/play.mp3","assets/sound/double/next.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","language/selection/index.js","components/selection/Rows.js","components/selection/styles.js","components/utils/Lottie.js","components/selection/PersonCreation/Success.js","data/dictaphoneApi.js","data/simonApi.js","data/quizApi.js","data/doubleApi.js","utils/helpers.js","data/personApi.js","components/selection/PersonCreation/Form.js","components/selection/PersonCreation/CreatePerson.js","pages/SelectionMenu/styles.js","pages/SelectionMenu/os/android.js","pages/SelectionMenu/os/ios.js","pages/SelectionMenu/index.js","pages/ChooseUsername/styles.js","pages/ChooseUsername/index.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","language/home/index.js","pages/Home/styles.js","pages/Home/Menu.js","utils/dilacrypt.js","utils/share.js","pages/Home/ImportData.js","pages/Home/index.js","components/utils/HomeOrTutorial.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/Help.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/utils/quizFunc.js","components/activities/Quiz/Creation/QuestionList.js","components/activities/Quiz/utils/scoreFunc.js","components/activities/Quiz/QuizList.js","components/activities/Quiz/ViewQuizList.js","components/activities/Quiz/SuccessContent.js","components/activities/Quiz/Creation/FormQuizContentAndroid.js","components/activities/Quiz/Creation/FormQuizContentIOS.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Creation/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/Help.js","components/activities/Quiz/index.js","language/activities/double/index.js","components/activities/Double/styles.js","components/activities/Double/Help.js","components/activities/Double/Menu.js","components/activities/Double/subs/helpers.js","components/activities/Double/subs/Card.js","components/activities/Double/Play.js","components/activities/Double/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/QuizScore/index.js","pages/Activities/Score/SimonScore/index.js","pages/Activities/Score/DoubleScore/index.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","OpenActivity","ReturnList","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","color","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","props","navigate","useNavigate","TouchableScale","Platform","OS","default","mod","index","backgroundColor","componentProps","Component","key","id","bottomDivider","containerStyle","onPress","state","source","picture","uri","DefaultProfilePicture","rounded","Content","Title","fullname","Subtitle","description","Chevron","StyleSheet","create","rightButton","minHeight","imageSuccess","width","height","leftButton","view","alignItems","alignSelf","marginVertical","btnImport","borderRadius","btnSave","profilePicture","marginBottom","successPageTitle","textAlign","fontSize","Lottie","animationRef","useRef","LottieView","useEffect","current","play","ref","animation","LottieStyle","LottieSource","loop","hasOwnProperty","autoPlay","resizeMode","Image","ImageSource","ImageStyle","Success","View","SuccessImage","styles","edit","InterfaceLang","flexDirection","alignContent","title","e","close","buttonStyle","marginHorizontal","marginRight","paddingHorizontal","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","createQuizContent","el","uuidv4","success","failed","includes","fileType","uploadQuizFile","path","FileSystem","log","from","to","catch","updateScore","quizId","contentId","_id","quiz","contentIndex","content","findIndex","scoreIndex","getBestScore","insertScore","dailyScoreBeaten","globalScoreBeaten","pushErrors","errors","field","msg","randomNumber","min","max","Math","floor","random","person","trim","Object","keys","upd","$set","getById","Form","useState","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","encoding","fsRead","setImage","titleStyle","icon","name","size","placeholder","leftIcon","label","errorStyle","renderErrorMessage","maxLength","errorMessage","inputStyle","value","marginTop","onChangeText","setFullname","setDescription","raised","cb","Person","setId","intermediates","image","imgName","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","container","flex","zIndex","wrapper","topBanner","topImage","heading","boldtext","subtitle","button","overflow","buttonText","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","fontStyle","searchBar","searchInputStyle","SelectionMenuAndroid","swiper","position","marginLeft","type","setLang","LoadingBrain","SelectionMenuLang","TouchableOpacity","activeOpacity","idx","active","setActive","setBtnTxt","ActivityIndicator","scrollBy","btnText","SafeAreaView","isLoading","showsButtons","scrollEnabled","pagingEnabled","slidePropsState","showsPagination","onIndexChanged","setIndex","setTimeout","ScrollView","inputContainerStyle","setSearch","search","printRows","SelectionMenuIOS","parseInt","setIdx","redirected","KeyboardAvoidingView","behavior","loadMinimal","SelectionMenu","setIsLoading","useLocation","slide","Audio","setIsEnabledAsync","regex","RegExp","$regex","backHandler","BackHandler","addEventListener","remove","list","map","propsSelectionMenuComponent","printAccordingToOS","textInput","borderColor","shadowOpacity","shadowRadius","shadowOffset","elevation","buttonContainer","padding","viewrow","flexWrap","justifyContent","input","setInput","loadPage","setLoadPage","confirmed","setConfirmed","redirect","setRedirect","setUsername","res","parseUsername","insertUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","animating","Loading","LoadingImage","slideOdd","titleOdd","textOdd","aspectRatio","borderWidth","Tutorial","StepOne","StepTwo","StepThree","StepFour","StepFive","StepSixth","Config","Select","Import","Introduction","Source","License","Language","Step1","Step2","Step3","Step4","Step5","Step6","Step7","Step8","Step9","Step10","Step11","Step12","Step13","Step14","GoBack","InvalidFile","InvalidPersonFile","IncorrectPersonFile","ErrorChekingPerson","InvalidActivitiesLength","InvalidQuizData","InvalidLogData","InvalidDoubleData","InvalidSimonData","header","logo","menu","copyleft","ErrorMessage","Menu","showsVerticalScrollIndicator","HomeLang","ambiant","unloadAsync","iconContainerStyle","DocumentPicker","multiple","copyToCacheDirectory","setImportFile","prev","Linking","openURL","encrypt","string","encryptedString","j","String","fromCharCode","charCodeAt","isValidDate","d","currentDate","Date","getFullYear","tmp","join","n","isNaN","fileToBase64","formatQuiz","formatLog","scoreVerification","checkPersonInformations","checkPersonExists","personAPI","checkQuiz","quizKeys","contentKeys","k","l","answers","question","foundInScore","checkDouble","double","checkSimon","simon","checkDictaphone","dictaphone","importPerson","exists","importQuiz","filePath","quizAPI","quizFindAsync","importDouble","doubleAPI","importSimon","simonAPI","importLog","dictaphoneAPI","writeDataFile","fileUri","replace","exportPerson","personFind","personData","simonData","doubleData","quizData","dictaphoneData","JSON","stringify","activities","dilacrypt","ImportData","step","setStep","setError","importFile","parsed","parseJSON","dataImport","found","CannotCreatePerson","inputString","parse","stepStyle","clr","display","disabled","Home","setAmbiant","Sound","createAsync","isLooping","sound","playAsync","AlzheimApp","HomeOrTutorial","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","QuizScore","SimonScore","DoubleScore","NoScore","Global","BestScoreByDay","ExportedProfile","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","load","setLoad","deletePerson","SimonDB","removeAsync","DictaphoneDB","DoubleDB","QuizDB","deleted","ActivitiesLang","Sharing","isAvailable","Alert","setPerson","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","isPlaying","setIsPlaying","progress","setProgress","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","positionMillis","playableDurationMillis","variant","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","getURI","folder","record","DictaphoneLang","created","deleteRecord","goBack","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","Head","RulesHead","TriesHead","Rules","TriesExplain","paddingTop","opacity","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","viewHelpPage","leaveButtonHelpPage","helpHead","helpStepHead","textTransform","helpStep","helpQuestionMark","SimonLogo","SimonLang","setTab","Game","start","setStart","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","QuestionMark","tab","pos","Create","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","GiveUpQuizTitle","GiveUpQuiz","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","EditedQuiz","QuizListRedirection","selectedQuizz","quizName","Questions","SuccessTitle","FailedTitle","SuccessQuizTitle","SuccessQuiz","fail","FailQuizTitle","FailQuiz","SaveContent","AddContent","SureCancelEdition","ImportSound","CustomHead","Custom","answersText","leaveButtonPlay","createButton","overlayDescriptionReference","overlayDescriptionAnswers","paddingBottom","ScrollViewSuccess","modalTitle","modalDescription","quizTitleInputContainer","quizTitleInput","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","QuizLogo","QuizLang","printFile","clearFile","pauseSound","playSound","QuestionList","quizEdit","newContent","quizEdition","Number","isInteger","questionId","setNewContent","setQuizEdit","setReload","reload","setEditedQuiz","contentList","setContent","pickOutQuestion","setEditContent","ScoreRatio","filter","total","toFixed","QuizList","ViewQuizList","SuccessContent","FormQuizContentAndroid","answer","setAnswer","contentContainerStyle","setFileType","setFilename","setUri","mimeType","flexShrink","setQuestion","toLowerCase","setAnswers","addAnswer","badgeStyle","pickOutAnswer","FormQuizContentIOS","ViewQuiz","newQuestion","setNewQuestion","editContent","editedQuiz","saveQuiz","concat","editedFile","buttonTop","mode","saveContent","pushContent","propsFormQuizContent","viewPage","CreateQuiz","createQuestion","setCreateQuestion","setName","modalConfirmation","setModalConfirmation","undefined","substring","printPage","ThinkingImage","quizLength","pickRandomQuizz","ThinkingLottie","setPlay","setCurrent","setFail","arr","shuffle","TrophyLottie","SadLottie","openAlertResultQuestion","SadImage","setMediaType","answerTrimedLowercase","answerQuestion","setQuiz","setRandom","rand","randomArrayElement","exclude","randNumber","RemaningTries","Reinit","TitleGiveUp","SureToGiveUp","BestDayScore","ScoreHead","ScoreHelp","Remember","Dimensions","factor","hp","wp","RectoCard","PlayingCard","VersoCard","IconCard","viewGame","buttonViewPlay","playButtons","DoubleLang","DoubleLogo","ambiantEnabled","ambiantSoundPlay","soundEnabled","setSoundEnabled","generateRandomPair","colors","icons","indexColor","indexIcon","SCREEN_WIDTH","SCREEN_HEIGHT","Card","cardStyles","inPlay","inFound","show","ReturnCard","setFound","setShow","currentPlay","indexGame","playing","currentGameLength","nFound","setScore","prevScore","prevTries","endGame","bestScoreDay","failOverlay","element","newModel","giveUp","Double","setBestScoreDay","setAmbiantEnabled","bestDayScore","prevEnable","choosenSound","returnComponent","page","ActivitiesList","iconPosition","scoreRow","scoreRowSimon","scoreHeading","margin","quizScore","setQuizScore","horizontal","textStyle","valueSuffix","initialValue","delay","activeStrokeColor","radius","inActiveStrokeColor","inActiveStrokeOpacity","inActiveStrokeWidth","activeStrokeWidth","simonScore","setSimonScore","btnIndex","setBtnIndex","buttons","TotalScore","selectedIndex","global","days","item","highestToLowest","b","labels","datasets","fromZero","showValuesOnTopOfBars","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","printScore","doubleScore","setDoubleScore","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","unmountOnBlur","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","BgSource","navTheme","DefaultTheme","background","TopImage","BackgroundImage","NavigationContainer","theme","defaultProps","allowFontScaling","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact"],"mappings":"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","file":"static/js/app.ed7777e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/question_mark.c1494184.gif\";","module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/brain.abdab59b.gif\";","module.exports = __webpack_public_path__ + \"static/media/sad.bfdab12f.gif\";","module.exports = __webpack_public_path__ + \"static/media/applause.3560ad8b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/you_lose.e1f971d7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.c4ec63da.png\";","module.exports = __webpack_public_path__ + \"static/media/2.c9afe178.png\";","module.exports = __webpack_public_path__ + \"static/media/3.95e52180.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e18a9e44.png\";","module.exports = __webpack_public_path__ + \"static/media/5.1a0c5df5.png\";","module.exports = __webpack_public_path__ + \"static/media/6.64d544d0.png\";","module.exports = __webpack_public_path__ + \"static/media/alzheimapp_logo.efbaee1c.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.42d4e3d2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.d22dea5d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.5d28b463.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.baee48bf.png\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.e46e92e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e82f415e.gif\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.af08ce07.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.d73909c9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fail.4f8cf1ae.mp3\";","module.exports = __webpack_public_path__ + \"static/media/play.25c902a7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.44546c82.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n};\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n};\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n};\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n};\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n};\n\nexport async function reset() {\n    const path = `${FileSystem.documentDirectory}persons`;\n    const folder = await FileSystem.getInfoAsync(path);\n    if (folder.exists) {\n        FileSystem.deleteAsync(path).catch(err => {\n            console.error('folder delete err:',err);\n        });\n    }\n    return AsyncStorage.clear();\n};","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retour au formulaire',\n        OpenActivity: 'Ouvrir le profil',\n        ReturnList: \"Retour aux paramètres\",\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n        OpenActivity: 'Open this profile',\n        ReturnList: \"Return to the settings\",\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet\\nrequise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? Il est possible {0} la donnée d'une personne et de {1} dans un autre appareil !\",\n                boldText: [\"d'exporter\", \"l'importer\"],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can {0} a person's data and {1} it in another device!\",\n                boldText: ['export', 'import'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer {0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to achieve today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 30,\n    },\n});\n","import React, { useEffect, useRef } from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    const animationRef = useRef(LottieView);\n\n    useEffect( () => {\n        animationRef?.current?.play();\n    }, []);\n    \n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                ref={animation => {\n                    animationRef.current = animation\n                }}\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport { useNavigate } from 'react-router-native';\nimport SuccessImage from '../../../assets/img/selection/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/selection/addedUser.json');\n    const navigate = useNavigate();\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <View style={{flexDirection: 'row', alignItems: 'center', alignContent: 'center', alignSelf: 'center'}}>\n                <Button\n                    title={InterfaceLang[props.lang].ReturnToForm}\n                    onPress={(e) => {\n                        props.close();\n                    }}\n                    buttonStyle={ props.edit ? {marginHorizontal: 20, borderRadius: 15, backgroundColor: 'red', height: 40} : {marginRight: 20, borderRadius: 15, backgroundColor: 'red', height: 40}}\n                />\n                { props.edit == false ? <Button\n                    title={InterfaceLang[props.lang].OpenActivity}\n                    onPress={(e) => {\n                        navigate(`/activities/${props.id}`, {\n                        state: {\n                            lang: props.lang ?? 'fr',\n                            username: props.username,\n                        }\n                    });\n                    }}\n                    buttonStyle={{borderRadius: 15, paddingHorizontal: 15}}\n                /> : <></> }\n            </View>\n        </View>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nconst createQuizContent = async (personId, el) => {\n    el.id = uuidv4();\n    el.score = [{personId: personId, success: 0, failed: 0}];\n    if (['audio', 'image'].includes(el.fileType)) {\n        await uploadQuizFile(el);\n    }\n};\n\nconst uploadQuizFile = async (el) => {\n    const filename = `${uuidv4()}${el.fileType == 'audio' ? '.m4a' : '.jpg'}`;\n    const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n    await FileSystem.getInfoAsync(el.uri).then(e => {\n        console.log(e);\n    })\n    await FileSystem.copyAsync({\n        from: el.uri,\n        to: `${path}${filename}`\n    }).then(async e => {\n        await FileSystem.deleteAsync(el.uri);\n        el.uri = `${path}${filename}`;\n    }).catch(err => {\n        console.log(err);\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        await createQuizContent(personId, el);\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport async function updateScore(personId, quizId, contentId, success) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    const contentIndex = quiz[0].content.findIndex(el => el.id == contentId );\n    const scoreIndex = quiz[0].content[contentIndex].score.findIndex(el => el.personId = personId);\n    if (success) quiz[0].content[contentIndex].score[scoreIndex].success++\n    else quiz[0].content[contentIndex].score[scoreIndex].failed++\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function deleteId(personId, quizId) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n};\n\nexport async function deleteQuestion(quizId, questionId) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    const content = quiz[0].content;\n    const contentIndex = content.findIndex(el => el.id == questionId );\n    if (['audio', 'image'].includes(content[contentIndex]))\n        await FileSystem.deleteAsync(content.uri);\n    quiz[0].content = content.splice(0, contentIndex);\n    return db.updateAsync({_id: quizId}, {...quiz[0]})\n};\n\nexport async function getById(quizId) {\n    return db.findAsync({ _id: quizId }, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n};\n\nexport async function saveQuiz(personId, quizId, content) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    if (!quiz) return;\n    for (let i = 0; i < content.length; i++) {\n        const el = content[i];\n        if (!el.id)\n            await createQuizContent(personId, el);\n        else if (el.id && el.editedFile) {\n            await uploadQuizFile(el);\n            delete el.editedFile;\n        }\n    }\n    quiz[0].content = content;\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function reset() {\n    return db.removeAsync({}, { multi: true });\n};\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DoubleSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nexport const randomArrayElement = (exclude, min, max) => {\n    randNumber = randomNumber(min, max);\n    if (randNumber == exclude)\n        return randomArrayElement(exclude, min, max);\n    return randNumber;\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\nimport { db as QuizDB } from './quizApi'\nimport { db as DoubleDB } from './doubleApi';\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await DoubleDB.removeAsync({ personId: id });\n    await QuizDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return db.removeAsync({ _id: id });\n};\n\nexport async function reset() {\n    const path = `${FileSystem.documentDirectory}persons`;\n    const file = await FileSystem.getInfoAsync(path);\n    if (file.exists) {\n        FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(async res => {\n            await SimonDB.removeAsync({}, { multi: true });\n            await QuizDB.removeAsync({}, { multi: true });\n            await DictaphoneDB.removeAsync({}, { multi: true });\n        }).catch(err => {\n            console.log('[!] Directory does not exists');\n        });\n    }\n    return db.removeAsync({}, { multi: true });\n};","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0)\n                personId = result._id;\n            props.setId(personId);\n            await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${personId}`, {intermediates: true});\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n    const [id, setId] = useState(0);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n\n        id: id,\n        setId: setId\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { Platform } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n        zIndex: 1,\n    },\n    wrapper: {\n        marginTop: 20,\n        textAlign: 'center',\n        alignItems: 'center',\n        zIndex: 1,\n    },\n    topBanner: {\n        backgroundColor:'#355c7d'\n    },\n    topImage: {\n        // flex: 1,\n        height: Platform.OS === 'ios' ? 50 : 70,\n        marginTop: Platform.OS === 'ios' ? 5 : 0,\n    },\n    heading: {\n        marginTop: 10,\n        fontSize: 20,\n        zIndex: 2,\n        color: 'white'\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    subtitle: {\n        textAlign: 'center',\n        color: 'white'\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: Platform.OS === 'ios' ? 0 : 10\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef } from 'react';\nimport {\n    Text,\n    View,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB } from 'react-native-elements';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as SelectionMenuLang } from '../../../language/selection';\nimport Rows from '../../../components/selection/Rows';\nimport CreatePerson from '../../../components/selection/PersonCreation/CreatePerson';\n\nimport Lottie from '../../../components/utils/Lottie';\nimport styles from '../styles';\n\nexport default function SelectionMenuAndroid(props) {\n\n    const swiper = useRef(null);\n    const navigate = useNavigate();\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - props.index, true);\n    };\n\n    const changeIndex = (idx) => {\n        props.setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                props.setBtnTxt(SelectionMenuLang[props.lang].AddAPerson);\n            } else if (idx === 1) {\n                props.setBtnTxt(SelectionMenuLang[props.lang].ReturnToList);\n            }\n            props.setActive(true);\n        }, 400);\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 85 + '%',\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home', {\n                    state: { username: props.username, setLang: props.setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n            <View style={styles.wrapper}>\n                <Lottie\n                    LottieSource={props.LottieSource}\n                    ImageSource={props.LoadingBrain}\n                    LottieStyle={styles.topImage}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[props.lang].Hello(props.username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[props.lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (props.active === false) {\n                            return;\n                        }\n                        props.setActive(false);\n                        props.setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(props.index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{props.btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {props.isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={props.slidePropsState || 0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={SelectionMenuLang[props.lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    props.setSearch(e);\n                                }}\n                                value={props.search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {props.persons && props.persons.length > 0 ? (\n                                props.printRows(props.persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[props.lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={props.persons}\n                                setPersons={props.setPersons}\n                                lang={props.lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import React, { useRef, useState } from 'react';\nimport {\n    Text,\n    View,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    KeyboardAvoidingView\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB, Button } from 'react-native-elements';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as SelectionMenuLang } from '../../../language/selection';\nimport CreatePerson from '../../../components/selection/PersonCreation/CreatePerson';\n\nimport Lottie from '../../../components/utils/Lottie';\n\nimport styles from '../styles';\n\nexport default function SelectionMenuIOS(props) {\n\n    const [idx, setIdx] = useState(parseInt(props.index));\n\n    const swiper = useRef(null);\n    const navigate = useNavigate();\n\n    const swipePage = () => {\n        setTimeout(() => {\n            if (idx === 1) {\n                props.setBtnTxt(props.redirected ? SelectionMenuLang[props.lang].ReturnToList : SelectionMenuLang[props.lang].AddAPerson); \n            } else {\n                props.setBtnTxt(props.redirected ? SelectionMenuLang[props.lang].AddAPerson : SelectionMenuLang[props.lang].ReturnToList);\n            }\n            swiper.current.scrollBy(1, true);\n            props.setActive(true);\n            if (idx == 1) setIdx(parseInt(0));\n            else setIdx(1);\n        }, 250);\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 85 + '%',\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home', {\n                    state: { username: props.username, setLang: props.setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n            <View style={styles.wrapper}>\n                <Lottie\n                    LottieSource={props.LottieSource}\n                    ImageSource={props.LoadingBrain}\n                    LottieStyle={styles.topImage}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[props.lang].Hello(props.username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[props.lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <Button\n                    containerStyle={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (props.active === false)\n                            return;\n                        props.setActive(false);\n                        props.setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(idx + 1);\n                    }}\n                    title={props.btnText}\n                    titleStyle={styles.buttonText}\n                />\n            </View>\n            </View>\n            <KeyboardAvoidingView behavior={\"height\"} style={{ flex: 1 }}>\n            <SafeAreaView style={styles.safeContainer}>\n                {props.isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        pagingEnabled={true}\n                        loadMinimal={true}\n                        loop={true}\n                        showsPagination={false}\n                        index={props.index}\n                    >\n                        <ScrollView >\n                            <Input\n                                placeholder={SelectionMenuLang[props.lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    props.setSearch(e);\n                                }}\n                                value={props.search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {props.persons && props.persons.length > 0 ? (\n                                props.printRows(props.persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[props.lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={props.persons}\n                                setPersons={props.setPersons}\n                                lang={props.lang}\n                            />\n                        </ScrollView>\n                    </Swiper>\n                )}\n            </SafeAreaView>\n            \n            </KeyboardAvoidingView>\n        </View>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n} from 'react-native';\nimport { Platform } from 'react-native';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport SelectionMenuAndroid from './os/android';\nimport SelectionMenuIOS from './os/ios';\n\nimport LoadingBrain from '../../assets/img/activities/brain.gif';\nimport { lang as SelectionMenuLang } from '../../language/selection';\nimport Rows from '../../components/selection/Rows';\n\nimport * as Person from '../../data/personApi';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function SelectionMenu(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        props.redirected == 1 ? SelectionMenuLang[props.lang || lang].ReturnToList : SelectionMenuLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n    const setLang = state?.setLang || props.setLang;\n    const slidePropsState = state?.slide || props?.slide;\n\n    useEffect( () => {\n        setIndex(slidePropsState || 0);\n        setBtnTxt(index === 0 && props?.redirected != 1 ? SelectionMenuLang[lang].AddAPerson : SelectionMenuLang[lang].ReturnToList);\n    }, []);\n\n    useEffect(() => {\n        Audio.setIsEnabledAsync(false);\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    const printAccordingToOS = () => {\n        const propsSelectionMenuComponent = {\n            lang: lang,\n            username: username,\n            search: search,\n            setLang: setLang,\n            LottieSource: LottieSource,\n            LoadingBrain: LoadingBrain,\n            isLoading: isLoading,\n            index: index,\n            persons: persons,\n            btnText: btnText,\n            active: active,\n            redirected: props.redirected,\n\n            setIndex: setIndex,\n            setIsLoading: setIsLoading,\n            setActive: setActive,\n            setPersons: setPersons,\n            setBtnTxt: setBtnTxt,\n            setSearch: setSearch,\n            printRows: printRows,\n\n        }\n        if (Platform.OS === 'ios')\n            return <SelectionMenuIOS {...propsSelectionMenuComponent} />\n        else\n            return <SelectionMenuAndroid {...propsSelectionMenuComponent} />\n    }\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            { printAccordingToOS() }\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 40,\n        marginTop: -40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 50,\n        borderColor: 'gray',\n        borderRadius: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        width: 180,\n        textAlign: 'center',\n        elevation: 10\n    },\n    image: {\n        flex: 1,\n        width: 100\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n        height: 50\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername as insertUsername, SawTutorial, getUsername } from '../../data/configApi';\n\nimport SelectionMenu from '../SelectionMenu';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\nimport { Button } from 'react-native-elements';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [loadPage, setLoadPage] = useState(true);\n    const [confirmed, setConfirmed] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const [username, setUsername] = useState('');\n\n    useEffect(() => {\n        getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    setUsername(res[0].username);\n                    setRedirect(true);\n                }\n                setLoadPage(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoadPage(false);\n            });\n    }, []);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            insertUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setUsername(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (redirect)\n        return <SelectionMenu username={username} lang={props.lang} setLang={props.setLang} slide={1} />\n\n    if (loadPage)\n        return <View style={styles.container}></View>\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <Button\n                        title={isLoading ? (\n                            <ActivityIndicator\n                                color=\"white\"\n                                size=\"small\"\n                                animating={true}\n                            />\n                        ) : (\n                            'OK'\n                        )}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                        buttonStyle={styles.button}\n                        titleStyle={styles.buttonText}\n                    />\n                </View>\n            </View>\n        );\n    } else {\n        return <SelectionMenu username={username} lang={props.lang} setLang={props.setLang} slide={1} redirected={1} />\n    }\n}\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet, Platform } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        height: 100 + '%',\n        padding: 20,\n        alignItems: 'center'\n    },\n    slideOdd: {\n        height: 100 + '%',\n        alignItems: 'center',\n        backgroundColor: '#355c7d',\n    },\n    title: {\n        color: 'black',\n        fontSize: 22,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    titleOdd: {\n        color: 'white',\n        fontSize: 22,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    textOdd: {\n        color: 'white',\n        fontSize: 15,\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    image: {\n        height: Platform.OS === 'ios' ? 20 + '%' : 30 + '%',\n        marginBottom: 40,\n        marginTop: Platform.OS === 'ios' ? 60 : 20,\n        aspectRatio: 1\n    },\n    button: {\n        marginTop: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        borderWidth: 1,\n        height: 60\n    },\n    buttonText: {\n        color: '#355c7d'\n    },\n    buttonContainer: {\n        width: 250,\n    }\n});\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { Button } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\n\nexport default function Tutorial(props) {\n    const navigate = useNavigate();\n\n    return (\n        <>\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Button \n                            title={TutorialLang[props.lang].LastStepButton}\n                            buttonStyle={styles.button}\n                            containerStyle={styles.buttonContainer}\n                            onPress={() => {\n                                Config.SawTutorial(true);\n                                navigate('/username', {\n                                    state: { setLang: props.setLang }\n                                });\n                            }}\n                            titleStyle={styles.buttonText}\n                        />\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Select: \"Sélection des personnes\",\n        Import: \"Importer un profil\",\n        Introduction: \"Introduction\",\n        Source: \"Accès au code source\",\n        License: \"Code sous licence GPL v3.\\nCréation originale par Diyaeddine LAOUID.\",\n        Language: \"Changer la langue\",\n        Step1: \"Vérification du format ... \",\n        Step2: \"Vérification du format de l'identité ... \",\n        Step3: \"Vérification d'une personne similaire ...\",\n        Step4: \"Vérification des activités ...\",\n        Step5: \"Vérification des quiz ...\",\n        Step6: \"Vérification des jeux des pairs ...\",\n        Step7: \"Vérification du Simon ...\",\n        Step8: \"Vérification du Journal vocal ...\",\n        Step9: \"Création de la personne ...\",\n        Step10: \"Création des quiz ...\",\n        Step11: \"Création des jeux des pairs ...\",\n        Step12: \"Création du Simon ...\",\n        Step13: \"Création du Dictaphone ...\",\n        Step14: \"L'importation s'est déroulée sans encombre ! :-)\",\n        GoBack: \"Retour\",\n        InvalidFile: \"Le fichier a été supprimé du cache\",\n        InvalidPersonFile: \"Le fichier importé est invalide !\",\n        IncorrectPersonFile: \"L'identité de la personne est mal saisie !\",\n        ErrorChekingPerson: \"Une erreur est survenue au moment de la vérification de la personne dans le système ...\",\n        InvalidActivitiesLength: \"Le nombre d'activités dans le tableau du fichier est beaucoup trop grand.\",\n        InvalidQuizData: \"Les données du quiz sont incorrectes ...\",\n        InvalidLogData: \"Les données du dictaphone sont incorrectes ...\",\n        InvalidDoubleData: \"Les données du jeu des pairs sont incorrectes ...\",\n        InvalidSimonData: \"Les données du Simon sont incorrectes ...\",\n        \n    },\n    en: {\n        Select: \"Select a person\",\n        Import: \"Import a profil\",\n        Introduction: \"Introduction\",\n        Source: \"Source code on GitHub\",\n        License: \"Licensed GPL v3 source code.\\nOriginally created by Diyaeddine LAOUID.\",\n        Language: \"Change language\",\n        Step1: \"Format checking ... \",\n        Step2: \"Identity format checking ... \",\n        Step3: \"Checking if person already registered ...\",\n        Step4: \"Activities length checking ...\",\n        Step5: \"Quiz checking ...\",\n        Step6: \"Double Memory checking ...\",\n        Step7: \"Simon checking ...\",\n        Step8: \"Journal log checking ...\",\n        Step9: \"Person creation ...\",\n        Step10: \"Quiz creation ...\",\n        Step11: \"Double Memory creation ...\",\n        Step12: \"Simon Memory creation ...\",\n        Step13: \"Journal log creation ...\",\n        Step14: \"The person has been successfully imported! :-)\",\n        GoBack: \"Back\",\n        InvalidFile: \"The file has been deleted from the cache\",\n        InvalidPersonFile: \"The imported file is invalid!\",\n        IncorrectPersonFile: \"The format of the imported person is invalid!\",\n        ErrorChekingPerson: \"Error when checking if this person exists...\",\n        InvalidActivitiesLength: \"The activities length on the file array is too big\",\n        InvalidQuizData: \"The quiz datas are invalid...\",\n        InvalidLogData: \"The journal logs datas are invalid...\",\n        InvalidDoubleData: \"The double memory game datas are invalid...\",\n        InvalidSimonData: \"The Simon datas are invalid...\",\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        height: 100 + '%',\n        backgroundColor: '#355c7d',\n        alignItems: 'center'\n    },\n    header: {\n        marginTop: 10 + '%',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    logo: {\n        width: 130,\n        height: 130\n    },\n    menu: {\n        marginTop: 2 + '%',\n        flex: 1,\n        marginBottom: 20\n    },\n    button: {\n        width: 250,\n        height: 50,\n        backgroundColor: 'white',\n        color: '#355c7d',\n        justifyContent: 'flex-start',\n        borderRadius: 25\n    },\n    buttonContainer: {\n        borderRadius: 25,\n        alignItems: 'center',\n        marginBottom: 20\n    },\n    copyleft: {\n        marginTop: 10 + '%',\n        fontSize: 11,\n        color: 'white',\n        textAlign: 'center',\n        fontStyle: 'italic'\n    },\n    ErrorMessage: {\n        color: 'red',\n        fontWeight: 'bold',\n        textAlign:'center',\n        marginTop: 20,\n        marginHorizontal: 40\n    }\n});\n","import React from 'react';\nimport {\n    ScrollView,\n    Linking\n} from 'react-native';\n\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\nimport * as DocumentPicker from 'expo-document-picker';\n\nimport { lang as HomeLang } from '../../language/home';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    const navigate = useNavigate();\n\n    return (\n        <ScrollView style={styles.menu} showsVerticalScrollIndicator={false}>\n            <Button\n                title={HomeLang[props.lang].Select}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', textAlign: 'center', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                icon={\n                    <Icon\n                        name={'person-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    if (props.ambiant) await props.ambiant?.unloadAsync()\n                    navigate('/selection', {\n                        state: { username: props.username, lang: props.lang, setLang: props.setLang }\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Import}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'person-add-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => {\n                    DocumentPicker.getDocumentAsync({multiple: false, type: '*/*', copyToCacheDirectory: true}).then( e => {\n                        props.setImportFile(e.uri);\n                    }).catch(e => {\n                        console.log(e);\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Language}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'world-o'}\n                        type={'fontisto'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                onPress={() => props.setLang(prev => prev == 'fr' ? 'en' : 'fr')}\n                raised\n            />\n            <Button\n                title={HomeLang[props.lang].Introduction}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={[styles.buttonContainer, {marginBottom: 20}]}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    await props.ambiant.unloadAsync()\n                    navigate('/tutorial');\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Source}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'logo-github'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => Linking.openURL('https://github.com/dilaouid/AlzheimApp')}\n            />\n            <Text style={styles.copyleft} >{HomeLang[props.lang].License}</Text>\n        </ScrollView>\n    );\n}\n","export const encrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let encryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        encryptedString += String.fromCharCode( string.charCodeAt(i) - key.charCodeAt(j) - key.length );\n    }\n    return (encryptedString);\n};\n\nexport const decrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let decryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        decryptedString += String.fromCharCode( string.charCodeAt(i) + key.charCodeAt(j) + key.length );\n    }\n    return (decryptedString);\n};","/**\n * Model is like:\n * {\n *      personId: 'xxx',\n *      name: 'xxx',\n *      description: 'xxx',\n *      picture: 'b64' || null,\n *      activities: {\n *          quiz: [\n *              // all quizz contents //\n *          ],\n *          log: [\n *              // all logs contents\n *          ],\n *          double: [\n *              // all double contents\n *          ],\n *          simon: [\n *              // all simon score\n *          ]\n *      }\n * }\n */\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as dilacrypt from './dilacrypt';\n\nimport { db as personAPI } from '../data/personApi';\nimport { db as dictaphoneAPI } from '../data/dictaphoneApi';\nimport { db as simonAPI } from '../data/simonApi';\nimport { db as quizAPI } from '../data/quizApi';\nimport { db as doubleAPI } from '../data/doubleApi';\n\nconst isValidDate = (d) => {\n    let split = d.split('/');\n    const currentDate = new Date();\n    if (split.length != 3) return false;\n    if (split[2] > currentDate.getFullYear()) return false;\n    if (split[0] > 12) {\n        let tmp = split[1];\n        split[1] = split[0];\n        split[0] = tmp;\n    }\n    d = split.join('/');\n    let n = new Date(d);\n    return n instanceof Date && !isNaN(n);\n};\n\nconst fileToBase64 = async (uri) => {\n    return await FileSystem.readAsStringAsync(uri, {\n        encoding: 'base64',\n    });\n};\n\nconst formatQuiz = async (quiz) => {\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < el.content.length; j++) {\n            const e = el.content[j];\n            if (e.uri)\n                e.uri = await fileToBase64(e.uri);\n        }\n    }\n    return (quiz);\n};\n\nconst formatLog = async (log) => {\n    for (let i = 0; i < log.length; i++) {\n        const el = log[i];\n        el.path = await fileToBase64(el.path);\n    }\n    return (log);\n};\n\nconst scoreVerification = (el, personId) => {\n    if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n    if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    if (!el.hasOwnProperty('score') || typeof el.score !== 'number') return false;\n    if (!el.hasOwnProperty('dailyScoreBeaten') || typeof el.dailyScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('globalScoreBeaten') || typeof el.globalScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n    return true;\n};\n\n\n\nexport const checkPersonInformations = (person) => {\n    const keys = ['_id', 'description', 'fullname', 'picture', 'activities'];\n    for (let i = 0; i < keys.length; i++) {\n        const el = keys[i];\n        if (person.hasOwnProperty(el) === false)\n            return false;\n    }\n    return true;\n};\n\nexport const checkPersonInformationsLength = (person) => {\n    return person.fullname.length <= 25 && person.description.length <= 100;\n};\n\nexport const checkPersonExists = async (personId) => {\n    return await personAPI.findAsync({ _id: personId });\n}\n\nexport const checkQuiz = async (quiz, personId) => {\n    const quizKeys = ['name', 'content', 'personId', '_id'];\n    const contentKeys = ['answers', 'question', 'id', 'score']\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < quizKeys.length; j++) {\n            const k = quizKeys[j];\n            if (el.hasOwnProperty(k) === false) return false;\n        }\n        for (let d = 0; d < el.content.length; d++) {\n            const content = el.content[d];\n            if (content.hasOwnProperty('uri') || content.hasOwnProperty('filename') || content.hasOwnProperty('fileType')) {\n                if (!content.hasOwnProperty('uri')) return false;\n                else if (!content.hasOwnProperty('filename')) return false;\n                else if (!content.hasOwnProperty('fileType')) return false;\n            }\n            for (let j = 0; j < contentKeys.length; j++) {\n                const l = contentKeys[j];\n                if (content.hasOwnProperty(l) === false) return false;\n            }\n            if (typeof content.answers !== 'object' || content.answers?.length === 0) return false;\n            if (typeof content.question !== 'string' || typeof content.question?.length > 23) return false;\n            if (typeof content.score !== 'object' || content.answers?.length === 0) return false;\n            let foundInScore = false\n            for (let n = 0; n < content.score.length; n++) {\n                const score = content.score[n];\n                if (score.personId === personId) foundInScore = true;\n                if (!score.hasOwnProperty('personId')) return false;\n                if (!score.hasOwnProperty('success') || typeof score.success !== 'number') return false;\n                if (!score.hasOwnProperty('failed') || typeof score.success !== 'number') return false;\n            }\n            if (!foundInScore) return false;\n        }\n    }\n    return true;\n};\n\nexport const checkDouble = (double, personId) => {\n    if (typeof double !== 'object') return false;\n    for (let i = 0; i < double.length; i++)\n        if (!scoreVerification(double[i], personId)) return false;\n    return true;\n};\n\nexport const checkSimon = (simon, personId) => {\n    if (typeof simon !== 'object') return false;\n    for (let i = 0; i < simon.length; i++)\n        if (!scoreVerification(simon[i], personId)) return false;\n    return true;\n};\n\nexport const checkDictaphone = (dictaphone, personId) => {\n    if (typeof dictaphone !== 'object') return false;\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n        if (!el.hasOwnProperty('name') || typeof el.name !== 'string' || el.name.length < 2) return false;\n        if (!el.hasOwnProperty('path') || typeof el.path !== 'string' || el.path.length < 100) return false;\n        if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n        if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    }\n    return true;\n};\n\nexport const importPerson = async (person, exists) => {\n\n    if (exists === false) {\n        await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${person._id}`, {intermediates: true});\n    }\n\n    let picture = null;\n    if (person.picture) {\n        picture = uuidv4();\n        const path = `${FileSystem.documentDirectory}persons/${person._id}/pp`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        await FileSystem.writeAsStringAsync(path + `/${picture}.jpg`, person.picture, { encoding: 'base64' }).then(el => {\n            picture = path + `/${picture}.jpg`;\n        }).catch(err => {\n            picture = null;\n        });\n    }\n\n    if (exists === false)\n        return personAPI.insertAsync(\n            {\n                _id: person._id,\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        );\n    else\n        return personAPI.updateAsync({_id: person._id}, {\n            $set: {\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        });\n};\n\nexport const importQuiz = async (quiz) => {\n    let res = true;\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        const path = `${FileSystem.documentDirectory}persons/${el.personId}/quiz`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        for (let j = 0; j < quiz[i].content.length; j++) {\n            const e = quiz[i].content[j];\n            if (e.hasOwnProperty('uri')) {\n                // Import and write file\n                let filename = uuidv4();\n                let filePath;\n                await FileSystem.writeAsStringAsync(path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`, e.uri, { encoding: 'base64' }).then(el => {\n                    filePath = path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`;\n                    filename = filePath;\n                    e.uri = filePath;\n                }).catch(err => {\n                    filename = null;\n                    e.uri = null;\n                });\n            }\n        }\n        const quizFindAsync = await quizAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        const quizExists = quizFindAsync.length > 0;\n        if (quizExists) {\n            await quizAPI.updateAsync( {_id: el._id}, {\n                $set: {\n                    name: el.name,\n                    content: el.content\n                }\n            }).catch(err => {\n                res = false;\n            })\n        } else {\n            await quizAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importDouble = async (double) => {\n    let res = true;\n    for (let i = 0; i < double.length; i++) {\n        const el = double[i];\n        const doubleExists = await doubleAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (doubleExists.length === 0) {\n            await doubleAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importSimon = async (simon) => {\n    let res = true;\n    for (let i = 0; i < simon.length; i++) {\n        const el = simon[i];\n        const simonExists = await simonAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (simonExists.length === 0) {\n            await simonAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importLog = async (dictaphone, personId) => {\n    let res = true;\n    const path = `${FileSystem.documentDirectory}persons/${personId}/recordings`;\n    await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n        console.log('[!] Directory already exists');\n    });\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        const logExists = await dictaphoneAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (logExists.length === 0) {\n            el.date = new Date(el.date);\n            let filename = uuidv4();\n            let filePath;\n            await FileSystem.writeAsStringAsync(path + `/${filename}.m4a`, el.path, { encoding: 'base64' }).then(e => {\n                filePath = path + `/${filename}.m4a`;\n                filename = filePath;\n                el.path = filePath;\n            }).catch(err => {\n                console.log(err);\n                filename = null;\n                el.path = null;\n            });\n            await dictaphoneAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const writeDataFile = async (fullname, content) => {\n    let fileUri = FileSystem.documentDirectory + `${fullname.replace(/\\s/g, '_')}.json`;\n    return await FileSystem.writeAsStringAsync(fileUri, content).catch(err => {\n        console.log(err);\n    }).then( (e) => {\n        return (fileUri);\n    });\n};\n\nexport const exportPerson = async (personId, key) => {\n    const personFind = await personAPI.findAsync({ _id: personId });\n    if (!personFind) return ('PERSON_NOT_FOUND');\n    const person = personFind[0];\n    if (!person._id || !person.fullname) return ('INVALID_PERSON');\n    const personData = {\n        _id: person._id,\n        description: person.description,\n        fullname: person.fullname,\n        picture: person.picture ? await fileToBase64(person.picture) : null\n    };\n    const simonData = await simonAPI.findAsync({ personId: personId });\n    const doubleData = await doubleAPI.findAsync({ personId: personId });\n    const quiz = await quizAPI.findAsync({ personId: personId });\n    const quizData = quiz ? await formatQuiz(quiz) : []; // converting files into base64 here\n\n    const dictaphone = await dictaphoneAPI.findAsync({ personId: personId });\n    const dictaphoneData = dictaphone ? await formatLog(dictaphone) : []; // converting files into base64 here\n\n    const result = JSON.stringify({\n        _id: personData._id,\n        description: personData.description,\n        fullname: personData.fullname,\n        picture: personData.picture,\n        activities: {\n            quiz: quizData,\n            double: doubleData,\n            simon: simonData,\n            dictaphone: dictaphoneData\n        }\n    });\n    const uri = await writeDataFile(personData.fullname, key ? dilacrypt.encrypt(result, key) : result);\n    return (uri);\n};","import React, { useEffect, useState } from 'react';\nimport {\n    ActivityIndicator,\n    ScrollView\n} from 'react-native';\n\nimport { Text, Button } from 'react-native-elements';\n\nimport { lang as HomeLang } from '../../language/home';\nimport * as FileSystem from 'expo-file-system';\nimport * as dataImport from '../../utils/share'\n\nimport styles from './styles';\n\nexport default function ImportData(props) {\n    const [step, setStep] = useState(1);\n    const [error, setError] = useState();\n    \n    useEffect( async () => {\n        try {\n\n            // Import and check file data\n            const content = await FileSystem.readAsStringAsync(props.importFile).catch(e => {\n                console.log(e);\n                throw HomeLang[props.lang].InvalidFile;\n            });\n            const parsed = parseJSON(content);\n            if (!parsed) throw HomeLang[props.lang].InvalidPersonFile;\n            if (typeof parsed !== 'object' || !parsed._id)\n                throw HomeLang[props.lang].InvalidPersonFile;\n\n            // Checking the personal infos\n            setStep(2);\n            if (dataImport.checkPersonInformations(parsed) === false)\n                throw HomeLang[props.lang].InvalidPersonFile;\n            if (dataImport.checkPersonInformationsLength(parsed) === false)\n                throw HomeLang[props.lang].IncorrectPersonFile;\n\n            // Checking if this userId is registered in the local db\n            setStep(3);\n            const found = await dataImport.checkPersonExists(parsed._id);\n            \n            // Checking activities length\n            setStep(4);\n            if (parsed.activities.length > 4) throw HomeLang[props.lang].InvalidActivitiesLength;\n\n            // Checking quiz format\n            setStep(5);\n            if (await dataImport.checkQuiz(parsed.activities.quiz, parsed._id) === false) throw HomeLang[props.lang].InvalidQuizData;\n\n            // Checking double format\n            setStep(6);\n            if (await dataImport.checkDouble(parsed.activities.double, parsed._id) === false) throw HomeLang[props.lang].InvalidDoubleData;\n\n            // Checking simon format\n            setStep(7);\n            if (await dataImport.checkSimon(parsed.activities.simon, parsed._id) === false) throw HomeLang[props.lang].InvalidSimonData;\n      \n            // Checking dictaphone format\n            setStep(8);\n            if (await dataImport.checkDictaphone(parsed.activities.dictaphone, parsed._id) === false) throw HomeLang[props.lang].InvalidLogData;\n\n            // <! -------- Creation process starts ---------- !>\n\n            // Person creation\n            setStep(9);\n            dataImport.importPerson(parsed, found.length > 0).catch( (err) => {\n                throw HomeLang[props.lang].CannotCreatePerson;\n            });\n\n            // Quiz creation\n            setStep(10);\n            dataImport.importQuiz(parsed.activities.quiz).catch(err => {\n                throw HomeLang[props.lang].InvalidQuizData;\n            });\n\n            // Double creation\n            setStep(11);\n            dataImport.importDouble(parsed.activities.double).catch(err => {\n                throw HomeLang[props.lang].InvalidDoubleData;\n            });\n\n            // Simon creation\n            setStep(12);\n            dataImport.importSimon(parsed.activities.simon).catch(err => {\n                throw HomeLang[props.lang].InvalidSimonData;\n            });\n\n            // Journal log creation\n            setStep(13);\n            dataImport.importLog(parsed.activities.dictaphone, parsed._id).catch(err => {\n                throw HomeLang[props.lang].InvalidLogData;\n            });\n\n            // SUCCESS !!\n            setStep(14);\n\n            await FileSystem.deleteAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidPersonFile;\n            });\n\n\n        } catch (e) {\n            setError(e);\n            return false;\n            // props.setImportFile(null);\n        }\n    }, [])\n\n    const parseJSON = (inputString) => {\n        if (inputString) {\n          try {\n            return JSON.parse(inputString);\n          } catch (e) {\n            return false;\n          }\n        }\n    };\n\n    const stepStyle = (idx) => {\n        let clr = idx === step ? 'white' : '#89ff91';\n        if (error && idx === step) clr = 'red';\n        if (step === 14) clr = '#89ff91';\n        return {\n            color: clr,\n            fontStyle: idx === step || error ? 'italic' : 'normal',\n            marginBottom: idx === 13 ? 30 : 0,\n            display: step >= idx ? 'flex' : 'none',\n            alignContent: 'center',\n            textAlign: 'center',\n            fontSize: idx === step ? 14 : 9\n        }\n    } \n\n    const printActivity = (idx) => {\n        if (idx === step && !error && step !== 14)\n            return <ActivityIndicator color={'white'} size={'small'} />\n        return <></>\n    };\n\n    return (\n        <ScrollView style={styles.menu}>\n            { [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14].map( (e, i) => {\n                return <Text key={i} style={ stepStyle(e) }> { HomeLang[props.lang]['Step' + e] } { printActivity(e) }</Text>\n            }) }\n            { error ? <Text style={styles.ErrorMessage}>{ error }</Text> :  <></> }\n            <Button disabled={!error && step < 14} containerStyle={{marginTop: 150, borderRadius: 15}} title={HomeLang[props.lang].GoBack} onPress={() => props.setImportFile(null)}/>\n        </ScrollView>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Image\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\n\nimport { useLocation } from 'react-router-native';\n\nimport AlzheimApp from '../../assets/img/alzheimapp_logo.png';\nimport Menu from './Menu'\nimport ImportData from './ImportData';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [importFile, setImportFile] = useState();\n    const [ambiant, setAmbiant] = useState();\n    Audio.setIsEnabledAsync(true);\n\n    useEffect( async () => {\n        if (ambiant) return;\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by MCOCHET - check his soundcloud here: https://soundcloud.com/mcochet\n            require('../../assets/sound/ambiant.mp3'),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n    }, []);\n\n    const state = useLocation()?.state;\n\n    const username = props.username || state?.username;\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Image source={AlzheimApp} style={styles.logo} resizeMode={'cover'} />\n            </View>\n            { importFile ?\n                <ImportData lang={props.lang} importFile={importFile} setImportFile={setImportFile} /> :\n                <Menu lang={props.lang} username={username} setLang={props.setLang} setImportFile={setImportFile} ambiant={ambiant} />\n            }\n        </View>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} setLang={props.setLang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} setLang={props.setLang} />;\n    }\n    return <Home lang={props.lang} username={props.username} setLang={props.setLang} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: 'white' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        Home: 'Accueil',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n        QuizScore: \"Score des quiz\",\n        SimonScore: \"Score du Simon\",\n        DoubleScore: \"Score du jeu des pairs\",\n        NoScore: \"Aucun score enregistré pour cette activité...\",\n        Success: 'réussite',\n        Global: \"Vue d'ensemble\",\n        BestScoreByDay: 'Meilleur score du jour',\n        ExportedProfile: 'Profil exporté',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        Home: 'Home',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n        QuizScore: \"Quiz Score\",\n        SimonScore: \"Simon Score\",\n        DoubleScore: \"Double Memory Score\",\n        NoScore: \"No score registered for this activity...\",\n        Success: 'success',\n        Global: \"Global view\",\n        BestScoreByDay: 'Best score by day',\n        ExportedProfile: 'Profile exported',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\n\nimport { ScrollView, Alert, View, KeyboardAvoidingView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/selection/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\nimport { exportPerson } from '../../../utils/share';\nimport * as Sharing from 'expo-sharing';\n\nimport * as FileSystem from 'expo-file-system';\n\nimport styles from './styles';\nimport Form from '../../../components/selection/PersonCreation/Form';\nimport { ActivityIndicator } from 'react-native';\n\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n    const [load, setLoad] = useState(false);\n    const [id, setId] = useState(0);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        Person.getById(props.personId).then((result) => {\n            props.setPerson(result[0])\n        });\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n\n        id: id,\n        setId: setId\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/selection', {\n                state: { username: props.username, lang: props.lang }\n            });\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.fullname),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: load ? '' : 'share-alt',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={load ? <ActivityIndicator color={'white'} size={'small'} /> : ActivitiesLang[props.lang]?.ShareProfile}\n                        onPress={async () => {\n                            setLoad(true);\n                            Sharing.isAvailableAsync().then(async isAvailable => {\n                                if (!isAvailable) {\n                                    alert('Sharing is not available');\n                                    return;\n                                }\n                                console.log('[~] Pressing export button');\n                                console.log('[+] Exporting person...');\n                                const uri = await exportPerson(props.personId, null);\n                                console.log('[+] Exported person! uri is: ' + uri);\n                                Sharing.shareAsync(uri).then( async (e) => {\n                                    await FileSystem.deleteAsync(uri);\n                                }).catch(err => {\n                                    console.log(err);\n                                });\n                                setLoad(false);\n                            });\n                        }}\n                        disabled={load}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/selection', {\n                                state: { username: props.username, lang: props.lang }\n                            });\n                        }}\n                    />\n                </ScrollView>\n            ) : (\n                <KeyboardAvoidingView behavior='height' style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => {\n                            setFullname(props.person.fullname);\n                            setUriPreview(props.person.picture);\n                            setImage('');\n                            setDescription(props.person.description);\n                            setEdit(false);\n                            setSuccess(false);\n                        }}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </KeyboardAvoidingView>\n            )}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync().then( () => {\n                console.log('[+] Permission granted!');\n            })\n            .catch(e => {\n                console.error(e);\n            });            \n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const goBack = async () => {\n        if (recording) await recording?.stopAndUnloadAsync();\n        stopPlayingSounds();\n        props.setPage(0);\n    }\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            if (el) el?.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                    <Button\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'caret-back-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        buttonStyle={styles.recordButton}\n                        title={{}}\n                        titleStyle={styles.titleButton}\n                        onPress={() => goBack()}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <View style={styles.actionButtonsView}>\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n                <Button\n                    containerStyle={styles.actionButtons}\n                    icon={{\n                        name: 'caret-back-outline',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={{}}\n                    titleStyle={styles.titleButton}\n                    onPress={() => goBack()}\n                />\n                </View>\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n\n\n\n\n        // Help section\n        Head: \"Le Simon, comment ça\\nmarche ?\",\n        RulesHead: \"Les règles\",\n        TriesHead: \"Les essais\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu Simon est un {0} de forme circulaire comportant quatre gros boutons de couleurs différentes: rouge, vert, jaune et bleu.\\n\\nLe jeu {1} une des quatres couleurs et {2} toujours associé à cette couleur. Le joueur doit alors {3}.\\n\\nLe jeu {4}, puis {5} une nouvelle couleur. Le jour doit reproduire cette nouvelle séquence. Chaque fois que le joueur reproduit correctement la séquence, le jeu ajoute une nouvelle couleur.`,\n                boldText: ['jeu de mémoire', 'éclaire', 'produit un son', \"appuyer sur la touche de la couleur qui vient de s'allumer\", 'répète la même couleur et le même son', 'ajoute'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois que vous ratez une séquence, vous {0}. Au cours d'une partie, vous avez le droit à seulement {1}.\\n\\nUne fois les quatre erreurs faites, ou alors lorsque vous {2}, votre score est compatibilisé en fonction du nombre de touches dans la séquence actuelle.\\n\\nChaque jour, {3}.`,\n                boldText: ['perdez un essai', 'quatre erreurs', 'abandonnez la partie en cours', 'votre score journalier est remit à zéro'],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n\n\n\n\n        // Help section\n        Head: `The Simon, how does it works?`,\n        RulesHead: \"The rules\",\n        TriesHead: \"The tries\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The Simon is a circular shaped {0} with four different colored buttons: red, green, yellow and blue.\\n\\nThe game {1} one of the four colors and {2} always associated to this color. The player shall {3}.\\n\\nThe game {4}, then {5} another color. The player will have to reproduces this sequence. Each time the player successfully reproduces the sequence, the game adds another color in this sequence.`,\n                boldText: ['memory game', 'lighten', 'produces a sound', \"press the colored button which has just turned on\", 'repeat the same color with the same sound', 'add'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `Each time you fail a sequence, you {0}. In a game, you are allowed up to {1}.\\n\\nOnce the four fails made, or when you {2}, you will have the number of elements in the current sequence saved as your score.\\n\\nEach day, {3}.`,\n                boldText: ['lose a try', 'four maximum fails', 'give up the current game', 'your daily score is reset to zero'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        paddingTop: 20,\n        flex: 1,\n        alignItems: 'center'\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        // flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        //flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    // Help section\n    viewHelpPage: {\n        marginTop: -20,\n        backgroundColor: 'white',\n        width: 100 + '%',\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .4,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate, dailyScore < order.length - 1, bestScore < order.length - 1);\n        setCanPlay(false);\n        setSuccess(true);\n        const path = dailyScore < order.length - 1 ? require(`../../../assets/sound/global/applause.mp3`) : require(`../../../assets/sound/global/you_lose.mp3`);\n        const { sound } = await Audio.Sound.createAsync(path);\n        props.setSound(sound);\n        sound.playAsync();\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            <Overlay\n                visible={success}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => setSuccess(false)}\n                ModalComponent={Modal}\n            >\n                {scoreBeaten ? successOverlay() : failOverlay()}\n                <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            retryGame();\n                        }}\n                        title={SimonLang[props.lang].Retry}\n                        containerStyle={{\n                            borderRadius: 13,\n                            marginRight: 10,\n                        }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setTab(0);\n                        }}\n                        title={SimonLang[props.lang].Exit}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React from 'react';\nimport { View, ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView>\n                <Button\n                    title={SimonLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{SimonLang[props.lang].Head}</Text>\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].Rules()}</Text>\n\n                \n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].TriesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].TriesExplain()}</Text>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\nimport Help from './Help';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr, pos) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: i == pos ? color : '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        Cancel: 'Annuler',\n        GoBack: \"Oui, j'annule l'édition du quiz\",\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Abandonner le quiz\",\n        GiveUpQuiz: \"Êtes-vous sûr de vouloir abandonner ce quiz? Le score restera enregistré.\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        EditedQuiz: \"Quiz modifié avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Bien joué !! 😄\",\n        Success: \"Bien joué ! C'est la bonne réponse !! Vous pouvez maintenant passer à la suite !\",\n        FailedTitle: \"Dommage... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Dommage, mais ce n'était pas la bonne réponse ! Les réponses possibles étaient: ${answersText}.`\n        },\n        SuccessQuizTitle: \"Haut la main !\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Fantastique !! Vous avez réussi ce quiz ! Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Dommage... Vous avez raté ce quiz ! ... Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Sauvegarder le quiz',\n        SaveContent: \"Sauvegarder la question\",\n        AddContent: \"Ajouter la question\",\n        SureCancelEdition: \"Êtes-vous sûr de bien vouloir abandonner l'édition de ce quiz? Vous ne pourrez pas récupérer vos modifications.\",\n        ImportImage: \"Importer une image\",\n        ImportSound: \"Importer un son\",\n\n        // Help page related\n        Head: 'Le quiz, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        CustomHead: \"Personnalisation\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Les règles du quiz sont basiques: il y a des questions {0}, et le joueur doit y répondre. Il peut y avoir {1} réponses possibles, une bonne réponse et c'est un point ajouté au score.\\n\\nIl n'y a pas de perte de points suite à une mauvaise réponse.`,\n                boldText: [\"facultativement accompagnées d'une image ou d'un son\", \"plusieurs\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `Il n'y a pas de quiz par défaut. C'est à vous d'en {0} et de les {1} à votre guise !\\nPour cela, vous devez vous rendre dans la partie \"{2}\".\\n\\nVous aurez là la liste des quiz que vous avez préalablement crée. Si vous n'en avez encore créé aucun, façonnez votre premier quiz avec le bouton \"{3}\".\\n\\nIci vous pourrez ajouter des question avec le bouton \"{4}\". Il vous est demandé {5} (facultatif), qui correspond à un son ou une image pour illustrer votre question.\\n\\nEnsuite, vous devez {6}. Ce sera cette question qui sera ensuite demandée au joueur.\\n\\nEt enfin, {7}. Une fois une réponse valide renseignée, cliquez sur le symbole {8} à côté, et votre réponse est ajoutée à la liste des réponses valides à la question. Vous pouvez en avoir 10 maximum.\\n\\nSi vous avez fait une erreur sur une des réponses, {9} pour la retirer de la liste.\\n\\nUne fois tous les éléments de la question renseignées, cliquez sur \"{10}\" au dessus pour enregistrer la question et retourner à la liste des questions précédemment crées. Ajoutez-en autant que vous voulez pour un quiz.\\n\\nVous pouvez également {11}.\\n\\nUne fois le quiz complet, cliquez sur \"{12}\", et voilà ! Renseignez le nom de ce quiz et c'est terminé, le quiz est désormais jouable !`,\n                boldText: [\"créer\",\n                    \"personnaliser\",\n                    \"Voir les quiz\",\n                    \"Créer un quiz\",\n                    \"Ajouter une question\",\n                    \"d'importer un fichier de référence\",\n                    \"renseigner la question\",\n                    \"ajouter les réponses éventuelles\",\n                    \"( + )\",\n                    \"cliquez simplement dessus\",\n                    \"Valider\",\n                    \"cliquer sur une question pour la modifier\",\n                    \"Terminer la création\"\n                ],\n            });\n        }\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizzes',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        Cancel: 'Cancel',\n        GoBack: 'Yes, I want to go back',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'of success',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Submit\",\n        GiveUpQuizTitle: \"Give up\",\n        GiveUpQuiz: \"Are you sure to give up this quiz? The score will be saved.\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        EditedQuiz: \"Quiz successfuly edited!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Well played!! 😄\",\n        Success: \"Well played! That's the good answer!! You can now go to the next question!\",\n        FailedTitle: \"Oops... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Oops, that's not a valid answer... the valid answer${answers.length > 0 ? 's were' : ' was'} : ${answersText}.`\n        },\n        SuccessQuizTitle: \"Easy peasy!\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Congratulations!! You won this quiz! Your score is for {0} good answer(s) for {1} mistake!',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Better next time! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: \"It's alright... You failed this quiz!... Your score is for {0} good answer(s) for {1} mistake!\",\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Save the quiz',\n        SaveContent: \"Save the question\",\n        AddContent: \"Add the question\",\n        SureCancelEdition: \"Are you sure to cancel this quiz edition? Your modification would not be saved\",\n        ImportImage: \"Import a picture\",\n        ImportSound: \"Import a sound\",\n        \n        // Help page related\n        Head: 'The quiz, how does it works?',\n        RulesHead: \"The rules\",\n        CustomHead: \"Customization\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `This is a basic quiz game: there are questions {1}, and the player must answer them. There can be {1} answers, one correct answer and it's a point added to the score.\\n\\nThere is no loss of points for a wrong answer.`,\n                boldText: [\"optionally accompanied by an image or a sound\", \"several possible\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `There are no default quizzes. It is up to you to {0} and {1} them as you wish!\\nTo do this, you must go to the \"{2}\" section.\\nThere you will see the list of quizzes that you have already created. If you haven't created any yet, create your first quiz with the \"{3}\" button.\\n\\nHere you can add questions with the \"{4}\" button. You are asked to {5} (optional), which is a sound or image file to illustrate your question.\\n\\nThen you have to {6}. This question will be asked to the player.\\n\\nAnd finally, {7}. Once you have entered a valid answer, click on the {8} symbol next to it, and your answer would be added to the list of the valid answers to the question. You can have a maximum of 10 possible answers.\\n\\nIf you made a mistake on one of the answers, {9} to remove it from the list.\\n\\nOnce you have filled in all the elements of the question, click \"{10}\" above to save the question and return to the list of questions. Add as many as you want to this quiz.\\n\\nYou can also {11}.\\n\\nOnce the quiz is completed, click \"{12}\" and that's it! Fill in the name of this quiz and it's done, the quiz is now playable!`,\n                boldText: [\"create\",\n                    \"customize\",\n                    \"View quizzes\",\n                    \"Create a quiz\",\n                    \"Add a question\",\n                    \"import a reference file\",\n                    \"fill in the question\",\n                    \"add the possible answers\",\n                    \"( + )\",\n                    \"simply click on it\",\n                    \"Submit\",\n                    \"click on a question to edit it\",\n                    \"Complete the quiz creation\"\n                ],\n            });\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginTop: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: 235,\n        marginTop: 20,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: 235,\n        marginTop: 10,\n        backgroundColor: 'blue',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    overlayDescriptionAnswers: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15,\n        marginBottom: 150\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: 30,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    modalDescription: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: 290,\n        marginTop: 10\n    },\n    quizTitleInput: {\n        fontSize: 15\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 10\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        width: 250\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: 250,\n        height: 250\n    },\n    gameQuestion: {\n        fontSize: 25,\n        marginTop: 10,\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey'\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15\n    },\n\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n        textAlign: 'center'\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image, ActivityIndicator } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            <Button\n                title={props.isLoading ? <ActivityIndicator color={'blue'} size={'small'} /> : QuizLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n                disabled={props.quiz.length === 0}\n            />\n\n            <Button\n                title={QuizLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import {\n    View,\n    Image\n} from 'react-native';\nimport { Icon, FAB, Avatar } from 'react-native-elements';\nimport { Audio } from 'expo-av';\n\nexport const printFile = (fileType, uri, clearFile, isPlaying, pauseSound, setIsPlaying, sound, setSound) => {\n    if (fileType === 'image') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Image source={{uri: uri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n            </View>\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 100, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Icon onPress={() => isPlaying ? pauseSound() : playSound(setIsPlaying, sound, setSound, uri) } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30, zIndex: 2}} />\n            </View>\n        );\n    }\n};\n\nexport const playSound = async (setIsPlaying, sound, setSound, uri) => {\n    setIsPlaying(true);\n    await Audio.setAudioModeAsync({\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n    });\n    const getSoundStatus = await sound?.getStatusAsync();\n    if (getSoundStatus?.isLoaded === false) {\n        await sound.loadAsync({ uri: uri });\n        setSound(sound);\n    }\n    await sound.playAsync();\n    sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n        if (playbackStatus.didJustFinish) {\n            await sound.unloadAsync();\n            setIsPlaying(false);\n        }\n    });\n};\n\nexport const pickCorrectIcon = (fileType, uri) => {\n    if (fileType === 'image') {\n        return (\n            <Avatar\n                source={{ uri: uri }}\n                rounded\n                size={'medium'}\n                containerStyle={{marginHorizontal: 8}}\n            />\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <Icon\n                raised\n                name={'musical-notes-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    } else {\n        return (\n            <Icon\n                raised\n                name={'text-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    }\n};","import React, { useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nimport { pickCorrectIcon } from '../utils/quizFunc';\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n\n    const length = props.quizEdit?.content?.length + props.newContent?.length;\n\n    const pickOutQuestion = () => {\n        if (length <= 2 && props.quizEdition) return;\n        if (props.quizEdition === true) {\n            if (Number.isInteger(props.questionId)) {\n                // if the questionId is an integer, it means it has not\n                // been added to the api yet, so it's an index of the\n                // newContent array passed in the props from the ViewQuiz Component\n\n                const index = props.questionId - props.quizEdit?.content?.length;\n                const tmp = props.newContent;\n                tmp.splice(index, 1);\n                // take out the new content from the newContent state in the\n                // parent component\n                props.setNewContent([...tmp]);\n            } else {\n                // todo not get by api but update quizedit state\n                // update api only when saving quiz\n                const index = props.quizEdit.content.findIndex(el => el.id == props.questionId );\n                const tmp = props.quizEdit;\n                tmp.content.splice(index, 1);\n                props.setQuizEdit(tmp);\n                props.setReload(!props.reload)\n                props.setEditedQuiz(true);\n            }\n        } else {\n            const tmp = props.quizEdition ? props.content : props.contentList;\n            tmp.splice(props.index, 1)\n            props.setContent([...tmp]);\n        }\n        setModal(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{ marginRight: 10 }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={{ fontWeight: 'bold' }}\n                    onPress={() => pickOutQuestion() }\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { props.setEditContent(props.questionId) }} >\n                { pickCorrectIcon(props.content.fileType, props.content.uri) }\n                <ListItem.Content>\n                    <ListItem.Title>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon disabled={props.quizEdition == true && length <= 2} reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","export function ScoreRatio (content, personId) {\n    var success = 0;\n    var fail = 0;\n    content.map( (el, i) => {\n        const score = el.score.filter( (el) => el.personId == personId );\n        score.map( (el, i) => {\n            success += parseInt(el.success);\n            fail += parseInt(el.failed);\n        });\n    });\n    const total = success + fail;\n    if (total == 0)\n        return 0;\n    const score = ((success / total) * 100).toFixed(2);\n    return score;\n};","import React from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport { ScoreRatio } from './utils/scoreFunc';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n\n    return (\n        <ListItem {...componentProps} onPress={() => {\n                props.setEdit(true);\n                props.setQuizEdit(props.quiz);\n            }}>\n            <ListItem.Content>\n                <ListItem.Title>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    { ScoreRatio(props.quiz.content, props.personId) }{'% '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Text,\n    ScrollView,\n} from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport QuizList from './QuizList';\nimport styles from './styles';\n\nimport * as API from '../../../data/quizApi';\n\nexport default function ViewQuizList(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <ScrollView>\n            {props.loading ? (\n                <ActivityIndicator\n                    color={'blue'}\n                    size={'small'}\n                    style={styles.loading}\n                />\n            ) : props.quiz?.length > 0 ? (\n                props.quiz?.map((el, i) => {\n                    return (\n                        <QuizList\n                            index={i}\n                            key={el._id}\n                            quiz={el}\n                            lang={props.lang}\n                            deleteId={deleteId}\n                            personId={props.personId}\n                            setEdit={props.setEdit}\n                            setQuizEdit={props.setQuizEdit}\n                        />\n                    );\n                })\n            ) : (\n                <Text style={styles.nothingYet}>\n                    {QuizLang[props.lang].NothingYet}\n                </Text>\n            )}\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/activities/quiz/success.gif';\n\nimport styles from './styles';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    KeyboardAvoidingView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContentAndroid(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <KeyboardAvoidingView behavior='padding' style={{flex:1}}>\n                <ScrollView contentContainerStyle={styles.ScrollView}>\n                    { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                    <Button\n                        title={QuizLang[props.lang].ImportFile}\n                        buttonStyle={{ borderRadius: 15 }}\n                        onPress={pickFile}\n                    />\n                    <Text style={styles.overlayDescriptionReference}>\n                        {QuizLang[props.lang].ReferenceFile}\n                    </Text>\n                    <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                        <Input\n                            value={props.question}\n                            inputStyle={{fontSize: 14}}\n                            containerStyle={{marginBottom: 50}}\n                            placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                            onChangeText={(e) => props.setQuestion(e)}\n                        />\n                        <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                        <Input\n                            placeholder={QuizLang[props.lang].AddAnswer}\n                            inputStyle={{fontSize: 14}}\n                            value={answer}\n                            onChangeText={(e) => setAnswer(e)}\n                        />\n                        <Button\n                            icon={\n                                <Icon\n                                    name={'add-circle'}\n                                    type={'ionicon'}\n                                    color={'white'}\n                                    size={18}\n                                    style={{ marginHorizontal: 5 }}\n                                />\n                            }\n                            onPress={() => addAnswer()}\n                            disabled={props.answers.length >= 10}\n                        />\n                        </View>\n                    </View>\n                    <View style={styles.badgesView}>\n                        {props.answers.map( (el, i) => {\n                            return(\n                                <Badge\n                                    key={i}\n                                    value={el}\n                                    badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                    onPress={() => pickOutAnswer(i)}\n                                />\n                            )\n                        })}\n                    </View>\n                    <Text style={styles.overlayDescriptionAnswers}>\n                        {QuizLang[props.lang].WhatIsAnswer}\n                    </Text>\n                </ScrollView>\n            </KeyboardAvoidingView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    KeyboardAvoidingView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge } from 'react-native-elements';\n\nimport * as DocumentPicker from 'expo-document-picker';\nimport * as ImagePicker from 'expo-image-picker';\n\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContentIOS(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickAudioFile = async () => {\n        let result = await DocumentPicker.getDocumentAsync({type: 'audio/*', copyToCacheDirectory: true, multiple:false});\n        if (result.type === 'cancel') {\n            return;\n        }\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const pickImageFile = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n        if (result.type === 'cancel') {\n            return;\n        }\n        props.setUri(result.uri);\n        props.setFileType(result.type);\n        props.setFilename(result.name);\n    }\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <KeyboardAvoidingView behavior='padding' style={{flex:1}}>\n                <ScrollView contentContainerStyle={styles.ScrollView}>\n                    { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                    <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'wrap'}}>\n                        <Button\n                            title={QuizLang[props.lang].ImportImage}\n                            buttonStyle={{ borderRadius: 15, marginRight: 15 }}\n                            onPress={pickImageFile}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].ImportSound}\n                            buttonStyle={{ borderRadius: 15 }}\n                            onPress={pickAudioFile}\n                        />\n                    </View>\n                    <Text style={styles.overlayDescriptionReference}>\n                        {QuizLang[props.lang].ReferenceFile}\n                    </Text>\n                    <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                        <Input\n                            value={props.question}\n                            inputStyle={{fontSize: 14}}\n                            containerStyle={{marginBottom: 50}}\n                            placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                            onChangeText={(e) => props.setQuestion(e)}\n                        />\n                        <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                        <Input\n                            placeholder={QuizLang[props.lang].AddAnswer}\n                            inputStyle={{fontSize: 14}}\n                            value={answer}\n                            onChangeText={(e) => setAnswer(e)}\n                        />\n                        <Button\n                            icon={\n                                <Icon\n                                    name={'add-circle'}\n                                    type={'ionicon'}\n                                    color={'white'}\n                                    size={18}\n                                    style={{ marginHorizontal: 5 }}\n                                />\n                            }\n                            onPress={() => addAnswer()}\n                            disabled={props.answers.length >= 10}\n                        />\n                        </View>\n                    </View>\n                    <View style={styles.badgesView}>\n                        {props.answers.map( (el, i) => {\n                            return(\n                                <Badge\n                                    key={i}\n                                    value={el}\n                                    badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                    onPress={() => pickOutAnswer(i)}\n                                />\n                            )\n                        })}\n                    </View>\n                    <Text style={styles.overlayDescriptionAnswers}>\n                        {QuizLang[props.lang].WhatIsAnswer}\n                    </Text>\n                </ScrollView>\n            </KeyboardAvoidingView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    SafeAreaView,\n    ScrollView,\n    Alert,\n    Modal,\n    Text,\n    Platform\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay } from 'react-native-elements';\n\nimport QuestionList from './Creation/QuestionList';\nimport ViewQuizList from './ViewQuizList';\n\nimport * as API from '../../../data/quizApi';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport FormQuizContentAndroid from './Creation/FormQuizContentAndroid';\nimport FormQuizContentIOS from './Creation/FormQuizContentIOS';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n    // if the user is editing or not an existing quiz\n    const [edit, setEdit] = useState(false);\n\n    // if the user want to add a question to an existing quiz\n    const [newQuestion, setNewQuestion] = useState(false);\n\n    // if the user want to edit an existing question to an existing quiz\n    const [editContent, setEditContent] = useState();\n\n    // the existing quiz to edit\n    const [quizEdit, setQuizEdit] = useState();\n\n    // the new content to add in an existing quiz\n    const [newContent, setNewContent] = useState([]);\n\n    // check if something has been edited\n    const [editedQuiz, setEditedQuiz] = useState(false);\n\n    // open the modal of going back without saving confirmation\n    const [modal, setModal] = useState(false);\n\n    // the states for the quiz edition (add / edit question)\n    const [question, setQuestion] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const push = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setNewContent([...newContent, push]);\n        setEditedQuiz(true);\n        setSuccess(true);\n    };\n\n    const saveContent = () => {\n        let content;\n        let index;\n        if (Number.isInteger(editContent)) {\n            // edit newContent array\n            content = newContent[editContent - quizEdit?.content?.length];\n        } else {\n            // edit quizEdit array\n\n            // for already in api content -- think of reuploading the file\n            // if there's a new one, or to delete it\n            index = quizEdit.content.findIndex(el => el.id == editContent);\n            content = quizEdit.content[index];\n            if (fileType != content.fileType || uri != content.uri)\n                content.editedFile = true;\n        }\n        content.filename= filename;\n        content.fileType = fileType;\n        content.uri = uri;\n        content.answers = answers;\n        content.question = question;\n        setEditedQuiz(true);\n        setSuccess(true);\n        if (Number.isInteger(editContent)) {\n            if (newContent.length == 1)\n                setNewContent([content]);\n            else\n                setNewContent([...content]);\n        } else {\n            quizEdit.content[index] = content;\n            setQuizEdit(quizEdit);\n        }\n    };\n\n    // clear the states before edition or creation of a content\n    const clearState = () => {\n        setAnswers([]);\n        setQuestion();\n        setFileType();\n        setFilename();\n        setUri();\n        setSound(new Audio.Sound());\n    };\n\n    // Save the edited quiz\n    const saveQuiz = () => {\n        if (!editedQuiz) return;\n        const content = quizEdit.content.concat(newContent);\n        API.saveQuiz(props.personId, quizEdit._id, content).then((data) => {\n            return Alert.alert(\n                QuizLang[props.lang].EditedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            props.setReload(!props.reload);\n                            setNewContent([]);\n                            goBack();\n                        },\n                    }\n                ]\n            );\n        });\n    }\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const viewPage = () => {\n        if (editContent && !newQuestion) {\n            if (success) setSuccess(false);\n            let content;\n            if (Number.isInteger(editContent)) {\n                content = newContent[editContent - quizEdit?.content?.length];\n            } else {\n                const index = quizEdit.content.findIndex(el => el.id == editContent);\n                content = quizEdit.content[index];\n            }\n            if (!content) return;\n            setFilename(content.filename);\n            setFileType(content.fileType);\n            setUri(content.uri);\n            setQuestion(content.question);\n            setAnswers([...content.answers]);\n            setNewQuestion(true);\n        } else if (newQuestion) {\n            // if the user wants to set a new question for quiz edition\n            const propsFormQuizContent = {\n                lang: props.lang,\n                uri: uri,\n                filename: filename,\n                answers: answers,\n                fileType: fileType,\n                question: question,\n                success: success,\n                sound: sound,\n                isPlaying: isPlaying,\n\n                setAnswers: setAnswers,\n                setFileType: setFileType,\n                setQuestion: setQuestion,\n                setUri: setUri,\n                setFilename: setFilename,\n                setSuccess: setSuccess,\n                setSound: setSound,\n                setIsPlaying: setIsPlaying,\n                pauseSound: pauseSound\n            };\n            if (Platform.OS === 'ios') {\n                return <FormQuizContentIOS {...propsFormQuizContent} />\n            } else {\n                return <FormQuizContentAndroid {...propsFormQuizContent} />\n            }\n        } else if (edit && !newQuestion) {\n             // if the user want to see all the question for the quiz edition\n            return (quizEdit.content)?.concat(newContent)?.map((el, i) => {\n                return (<QuestionList\n                    index={i}\n                    key={i}\n                    id={quizEdit._id || 0}\n                    quizEdit={quizEdit}\n                    newContent={newContent}\n                    content={el}\n                    lang={props.lang}\n                    questionId={el.id || i}\n                    quizEdition={true}\n                    reload={props.reload}\n                    setReload={props.setReload}\n                    setEditedQuiz={setEditedQuiz}\n                    setEditContent={setEditContent}\n                    setQuizEdit={setQuizEdit}\n                    setNewContent={setNewContent}\n                />);\n            })\n        } else {\n             // if the user want to see all the existing quiz for the quiz edition\n            return (<ViewQuizList\n                quiz={props.quiz}\n                loading={props.loading}\n                lang={props.lang}\n                personId={props.personId}\n                setEdit={setEdit}\n                setQuizEdit={setQuizEdit}\n                setReload={props.setReload}\n            />);\n        }\n    };\n\n    const goBack = () => {\n\n        if (!success) setSuccess(false);\n\n        if ( (editedQuiz && !newQuestion) || newContent.length > 0) {\n            setModal(true);\n            return;\n        }\n\n        if (editContent) {\n            clearState();\n            setEditContent();\n            setNewQuestion(false);\n        } else if (newQuestion)\n            setNewQuestion(false);\n        else if (edit) {\n            setEditedQuiz(false);\n            setEdit(false);\n        } else\n            props.setTab(0);\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return saveContent();\n        } else if (newQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].AddContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return pushContent();\n        } else if (edit) {\n            // save the quiz button\n            if (mode == 'title') return QuizLang[props.lang].Save;\n            else if (mode == 'disabled') return !(editedQuiz);\n            else if (mode == 'onpress') return saveQuiz();\n        } else {\n            // create a quiz button\n            if (mode == 'title') return QuizLang[props.lang].Create;\n            else if (mode == 'disabled') false;\n            else if (mode == 'onpress') return props.setTab(4);\n        }\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => setModal(false)}\n                    ModalComponent={Modal}\n                >\n                    <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                    <View style={{ flexDirection: 'row' }}>\n                        <Button\n                            title={QuizLang[props.lang].Cancel}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{ marginRight: 10 }}\n                            onPress={() => setModal(false)}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].GoBack}\n                            buttonStyle={{ fontWeight: 'bold' }}\n                            onPress={() => {\n                                setEditedQuiz(false);\n                                setEditContent();\n                                setEdit(false);\n                                setNewContent([]);\n                                setModal(false);\n                            } }\n                        />\n                    </View>\n                </Overlay>\n\n\n                <Button\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={edit ? 'save-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        buttonTop('onpress')\n                    }}\n                    disabled={ buttonTop('disabled') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => goBack() }\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                {\n                    edit && !newQuestion && !editContent ?\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setNewQuestion(true) }\n                    /> : <></>\n                }\n                <ScrollView style={{marginBottom: 40}}>\n                { viewPage() }\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert,\n    Platform\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContentAndroid from './FormQuizContentAndroid';\nimport FormQuizContentIOS from './FormQuizContentIOS';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\nimport { Audio } from 'expo-av';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n    const [modalConfirmation, setModalConfirmation] = useState(false);\n\n    const [editContent, setEditContent] = useState();\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name.substring(0, 23),\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    // Save an existing question\n    const saveContent = () => {\n        content[editContent].fileType = fileType;\n        content[editContent].filename = filename;\n        content[editContent].uri = uri;\n        content[editContent].question = question;\n        content[editContent].answers = answers;\n        setContent([...content]);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        if (isPlaying) setIsPlaying(false);\n    };\n\n    const clearState = () => {\n        setAnswers([]);\n        setFileType();\n        setFilename();\n        setUri();\n        setQuestion();\n        setSuccess(false);\n    };\n\n    const printQuestionList = () => {\n        if (content.length === 0) {\n            return (<Text style={styles.nothingYet}>\n                {QuizLang[props.lang].NoQuestionYet}\n            </Text>);\n        } else {\n            return content?.map((el, i) => {\n                return (\n                    <QuestionList\n                        index={i}\n                        key={i}\n                        id={i}\n                        content={el}\n                        lang={props.lang}\n                        setContent={setContent}\n                        setEditContent={setEditContent}\n                        questionId={i}\n                        contentList={content}\n                    />\n                );\n            });\n        }\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent !== undefined) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); return saveContent(); }\n        } else if (createQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].OK;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); setModal(false); return pushContent(); }\n        } else {\n            if (mode == 'title') return QuizLang[props.lang].Complete;\n            else if (mode == 'disabled') return !(content.length > 0);\n            else if (mode == 'onpress') { return setModal(true);  }\n        }\n    };\n\n    const printPage = () => {\n        if (editContent !== undefined && !createQuestion) {\n            if (success) setSuccess(false);\n            setAnswers(content[editContent].answers);\n            setFileType(content[editContent].fileType);\n            setFilename(content[editContent].filename);\n            setUri(content[editContent].uri);\n            setQuestion(content[editContent].question);\n            setCreateQuestion(true);\n        }\n        if (createQuestion) { // if the user is creating a new question\n            const propsFormQuizContent = {\n                lang: props.lang,\n                uri: uri,\n                filename: filename,\n                answers: answers,\n                fileType: fileType,\n                question: question,\n                success: success,\n                sound: sound,\n                isPlaying: isPlaying,\n\n                setAnswers: setAnswers,\n                setFileType: setFileType,\n                setQuestion: setQuestion,\n                setUri: setUri,\n                setFilename: setFilename,\n                setSuccess: setSuccess,\n                setSound: setSound,\n                setIsPlaying: setIsPlaying,\n                pauseSound: pauseSound\n            };\n\n            /* Form to create a quiz */\n            if (Platform.OS === 'ios') {\n                return <FormQuizContentIOS {...propsFormQuizContent} />\n            } else\n                return <FormQuizContentAndroid {...propsFormQuizContent} />\n        } else {\n            return <SafeAreaView style={styles.safeArea}>\n                <Button\n                    title={QuizLang[props.lang].AddQuestion}\n                    icon={\n                        <Icon\n                            name={'add-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => setCreateQuestion(true)}\n                />\n                <ScrollView style={{marginBottom: 40}}>\n                    { props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : printQuestionList() }\n                </ScrollView>    \n            </SafeAreaView>\n        }\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button containerStyle={{ marginTop: 10, width: 40 }} title={{}} icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    } disabled={name?.length < 3 || name.length > 23 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            {/* Confirmation give up quiz creation */}\n            <Overlay\n                visible={modalConfirmation}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => setModalConfirmation(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={QuizLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={() => setModalConfirmation(false)}\n                    />\n                    <Button\n                        title={QuizLang[props.lang].GoBack}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={() => {\n                            setModalConfirmation(false);\n                            props.setTab(2);\n                        } }\n                    />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ buttonTop('disabled') }\n                    onPress={ () => buttonTop('onpress') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearState();\n                        pauseSound();\n                        if (createQuestion)\n                            setCreateQuestion(!createQuestion);\n                        else if (content.length == 0) props.setTab(2);\n                        else setModalConfirmation(true)\n                    }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            { printPage() }\n        </>\n    );\n}\n","import React from 'react';\nimport { Text, Button, Icon, FAB } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif');\n    return (\n    <>\n        { props.quizLength > 1 ? <FAB\n            style={{marginTop: 140, position: 'absolute', zIndex: 10}}\n            containerStyle={{marginLeft: 120}}\n            size=\"small\"\n            icon={{name: 'repeat-sharp', type: 'ionicon', color:'white' }}\n            onPress={() => props.pickRandomQuizz()}\n        /> : <></> }\n        <Lottie LottieSource={ThinkingLottie} ImageSource={ThinkingImage} LottieStyle={{marginTop: -25, height: 250, marginBottom: -30}} />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButton}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            buttonStyle={{ backgroundColor: 'red' }}\n            containerStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, Alert, View, Modal } from 'react-native';\nimport { Text, Image, Input, Button, Icon, Overlay } from 'react-native-elements';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../../assets/img/activities/sad.gif';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport Lottie from '../../../utils/Lottie';\nimport { Audio } from 'expo-av';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n    const [modal, setModal] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const [success, setSuccess] = useState(0);\n    const [fail, setFail] = useState(0);\n    const [confetti, setConfetti] = useState(false);\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const TrophyLottie = require('../../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../../assets/lottie/sad.json');\n\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const stopSound = async () => {\n        await pauseSound();\n        setSound(new Audio.Sound());\n        await sound?.unloadAsync();\n    }\n\n    const playSound = async () => {\n        setIsPlaying(true);\n        await Audio.setAudioModeAsync({\n            staysActiveInBackground: true,\n            shouldDuckAndroid: true,\n        });\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus?.isLoaded === false) {\n            await sound.loadAsync({ uri: game[current].uri });\n            setSound(sound);\n        }\n        await sound.playAsync();\n        sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n            if (playbackStatus.didJustFinish) {\n                await sound.unloadAsync();\n                setIsPlaying(false);\n            }\n        });\n    };\n\n    const setMediaType = () => {\n        if (!game[current]) return;\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <Icon onPress={() => isPlaying ? pauseSound() : playSound() } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30}} />\n            default:\n                return <></>;\n        }\n    };\n\n    const openAlertResultQuestion = (result) => {\n        return (\n            Alert.alert(\n                result ? QuizLang[props.lang].SuccessTitle : QuizLang[props.lang].FailedTitle,\n                result ? QuizLang[props.lang].Success : QuizLang[props.lang].Failed(game[current].answers),\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: async () => {\n                            if (current + 1 <= game.length - 1)\n                                setCurrent(current + 1);\n                            else {\n                                const path = success >= fail ? require(`../../../../assets/sound/global/applause.mp3`) : require(`../../../../assets/sound/global/you_lose.mp3`);\n                                if (success >= fail) setConfetti(true);\n                                const { sound } = await Audio.Sound.createAsync(path);\n                                setSound(sound);\n                                sound.playAsync();\n                                setModal(true);\n                            }\n                        },\n                    }\n                ]\n            )\n        )\n    };\n\n    const answerQuestion = async () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        stopSound();\n        setAnswer('');\n        const result = game[current].answers.includes(answerTrimedLowercase);\n        if (result === false) {\n            // increment the fail and update the API\n            setFail(fail + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, false);\n        } else {\n            // increment the success and update the API\n            setSuccess(success + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, true)\n        }\n        openAlertResultQuestion(result);\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                {confetti && success >= fail ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n                )}\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => props.setTab(0)}\n                    ModalComponent={Modal}\n                >\n                    {success >= fail ? \n                        <>\n                            <Lottie LottieSource={TrophyLottie} ImageSource={TrophyImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} loop={false} />\n                            <Text style={{color:'blue', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].SuccessQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].SuccessQuiz(fail, success)}</Text>\n                        </>\n                    :\n                        <>\n                            <Lottie LottieSource={SadLottie} ImageSource={SadImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} />\n                            <Text style={{color:'red', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].FailQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].FailQuiz(fail, success)}</Text>\n                        </>\n                    }\n                    <Button title={QuizLang[props.lang].Leave} onPress={() => props.setTab(0)} containerStyle={styles.leaveButton} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </Overlay>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button buttonStyle={styles.buttonQuizGameOK} title={QuizLang[props.lang].OK} onPress={() => { answerQuestion() }} />\n                </View>\n            </>\n        }\n    </>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\n// This component is mounted when the user clicks on 'Play' in the main quiz menu\nexport default function Play(props) {\n    const [play, setPlay] = useState(false);\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quizId={props.quiz._id}\n                personId={props.personId}\n                quiz={props.quiz.content}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n                quizLength={props.quizLength}\n            />\n        }\n    </View>);\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{QuizLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Rules()}</Text>\n\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].CustomHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Custom()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler, Alert } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber, randomArrayElement } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Creation/CreateQuiz';\nimport Play from './Play';\nimport Help from './Help';\n\nimport * as API from '../../../data/quizApi';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1) {\n                    Alert.alert(\n                        QuizLang[props.lang].GiveUpQuizTitle,\n                        QuizLang[props.lang].GiveUpQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    setTab(0);\n                                }\n                            },\n                        ]\n                    )\n                }\n                else setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            let rand = randomArrayElement(random, 0, quiz.length - 1);\n            setRandom(rand);\n        }\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    isLoading={isLoading}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                quizLength={quiz.length}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    setReload={setReload}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {printPage()}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'green')\n        color = '#459449';\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Essai${tries > 1 ? 's' : ''} restant${tries > 1 ? 's' : ''}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Score actuel: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Commencer \",\n        GiveUp: \"Abandonner\",\n        Reinit: \"Nouveau modèle\",\n        TitleGiveUp: \"Abandonner la partie\",\n        SureToGiveUp: \"Êtes-vous sûr(e) de vouloir abandonner la partie? Votre score sera enregistré.\",\n        Congratulations: 'Félicitations !!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: \"Recommencer\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'Le jeu des pairs, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu des pairs est assez connu et classique. Lorsque vous commencerez la partie, vous aurez un {0}. Cliquez alors sur le bouton \"{1}\" sur le bas de l’écran pour retourner les cartes face verso.\\n\\nVous devrez alors {2}. Par exemple, si vous cliquez sur une carte rouge, vous devrez cliquer sur l’autre carte rouge ensuite.\\n\\nPlus vous grimpez dans le score, plus le nombre de paires s’ajoutent au schéma. Il peut y avoir jusqu’à {3} au total.`,\n                boldText: [\"schéma de plusieurs paires de cartes face recto\", \"Commencer\", \"retourner les paires l'une après l’autre\", \"6 paires\"],\n            });\n        },\n        ScoreHead: \"Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois qu’un schéma est complété (c'est-à-dire que toutes les cartes ont été retournées), {0} et passez à un schéma suivant, {1}.\\n\\nLes points peuvent vous servir à avoir un joli score, mais aussi à recréer un nouveau schéma si vous l’avez complètement oublié. A chaque re-création d’un schéma, {2}. Et vous ne pouvez pas recréer un schéma s’il ne vous reste {3}.`,\n                boldText: [\"vous gagnez un point\", \"potentiellement plus difficile\", \"vous perdez un point\", \"qu’un essai pour le schéma actuel\"],\n            });\n        },\n        Remember: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Mémorisez bien ce schéma!'],\n            }, 'green');\n        }\n    },\n    en: {\n        Play: 'Play',\n        Help: 'How does it work',\n        Leave: 'Back',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Remaning tr${tries > 1 ? 'ies' : 'y'}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Actual score: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Start \",\n        GiveUp: \"Give up\",\n        Reinit: \"New model\",\n        TitleGiveUp: \"Give up the game\",\n        SureToGiveUp: \"Are you sure to give up this party? Your score will be saved.\",\n        Congratulations: 'Congratulations!!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        SoBad: 'So sad...',\n        ScoreNotBeated: 'Your daily score has not been beaten... But you can retry!',\n        Retry: \"Retry\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Best score made today: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'The double memory, how does it works?',\n        RulesHead: \"The rules\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The game of peers (or double memory) is quite familiar and classic. When you start the game, you will have a {0}. Then click on the \"{1}\" button at the bottom of the screen to turn the cards face up.\\n\\nFor example, if you click on a red card, you will have to click on the other red card next.\\n\\nThere can be up to {3} in total.`,\n                boldText: [\"pattern of several pairs of cards face up\", \"Start\", \"turn over the pairs one after the other\", \"6 pairs\"],\n            });\n        },\n        ScoreHead: \"The score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `Each time a pattern is completed (i.e., all the cards have been turned over), {0} and move on to the next pattern, {1}.\\n\\nThe points can be used to get a nice score, but they can also be used to recreate a new pattern if you've completely forgotten about it. Each time you re-create a pattern, {2}. And you can't recreate a pattern if you don't have {3} left.`,\n                boldText: [\"you earn a point\", \"potentially more challenging\", \"you lose a point\", \"than a try for the current pattern\"],\n            });\n        },\n        Remember: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Remember this schema carefully!'],\n            }, 'green');\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { Dimensions } from 'react-native'\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nconst mode = SCREEN_WIDTH >= SCREEN_HEIGHT ? 'landscape' : 'portrait';\nconst factor = mode == 'landscape' ? hp : wp;\n\nexport default StyleSheet.create({\n    view: {\n        height: hp('100%'),\n        paddingBottom: 40,\n        flex: 1,\n    },\n    logo: {\n        width: 90,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n        marginBottom: 20\n    },\n    RectoCard: {\n        width: factor('21%'),\n        height: 0,\n        backgroundColor: '#C3C3CF',\n        borderRadius: 20,\n        borderColor: '#858593',\n        borderWidth: 1,\n        aspectRatio: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    PlayingCard: {\n        width: factor('21%'),\n        height: 0,\n        borderRadius: 20,\n        aspectRatio: 1,\n        borderColor: '#68FF5C',\n        borderWidth: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    VersoCard: {\n        width: factor('21%'),\n        height: 0,\n        borderRadius: 20,\n        opacity: .8,\n        marginHorizontal: 5,\n        aspectRatio: 1,\n        marginVertical: 5\n    },\n    IconCard: {\n        marginTop: 28 + '%'\n    },\n    viewGame: {\n        marginTop: 10,\n        width: 95+'%',\n        height: hp('55%'),\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    buttonViewPlay: {\n        flexDirection: 'row',\n        width: mode == 'portrait' ? wp('100%') : hp('100%'),\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: 10\n    },\n    playButtons: {\n        alignContent: 'center',\n        textAlign: 'center',\n        paddingHorizontal: 30,\n        borderRadius: 10,\n        marginHorizontal: 5\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        paddingTop: 20,\n        width: wp('100%'),\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={DoubleLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{DoubleLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].Rules()}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].ScoreHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].ScoreHelp()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React from 'react';\nimport { Image, View } from 'react-native';\nimport { Button, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport DoubleLogo from '../../../assets/img/activities/double/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={DoubleLogo} style={styles.logo} />\n\n            <Button\n                title={DoubleLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={DoubleLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <View>\n\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: -50,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                        type: 'ionicon',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.ambiantSoundPlay() }\n            />\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 20,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.soundEnabled ? 'sound' : 'sound-mute',\n                        type: 'entypo',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.setSoundEnabled(prev => !prev) }\n            />\n            </View>\n\n            <Button\n                title={DoubleLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => {\n                    props.ambiant.unloadAsync();\n                    props.setPage(null);\n                }}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}","const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};\n\nexport const generateRandomPair = (length) => {\n    const colors = [\n        '#791414',\n        '#143479',\n        '#791462',\n        '#147920',\n        '#797714',\n        '#14AB9D'\n    ];\n    const icons = [\n        'airplane',\n        'boat',\n        'bulb',\n        'color-palette',\n        'earth',\n        'gift',\n        'happy',\n        'heart-circle',\n        'restaurant',\n        'ribbon'\n    ]\n    var arr = [];\n    for (let i = 0; i < length / 2; i++) {\n        var indexColor = Math.floor(Math.random() * colors.length);\n        var indexIcon = Math.floor(Math.random() * icons.length);\n        arr.push({ color: colors[indexColor], icon: icons[indexIcon] }, { color: colors[indexColor], icon: icons[indexIcon] });\n        colors.splice(indexColor, 1);\n        icons.splice(indexIcon, 1);\n    }\n    arr = shuffle(arr);\n    for (let i = 0; i < arr.length; i++) {\n        const el = arr[i];\n        el.idx = i\n    }\n\n    return (arr);\n};","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements';\n\nimport { Dimensions } from 'react-native'\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nimport styles from '../styles';\n\nexport default function Card(props) {\n    var cardStyles;\n    const factor = SCREEN_WIDTH >= SCREEN_HEIGHT ? SCREEN_HEIGHT : SCREEN_WIDTH;\n    if (props.inPlay) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.PlayingCard]];\n    else if (props.inFound || props.show) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.VersoCard]];\n    else cardStyles = styles.RectoCard\n\n    const icon = !props.inFound && !props.inPlay && !props.show ? 'help-circle-outline' : props.icon;\n\n    return (\n        <>\n            <TouchableOpacity style={ cardStyles } onPress={() => {\n                if (!props.inPlay && !props.inFound) props.ReturnCard(props.index);\n            }}>\n                <Icon\n                    name={icon}\n                    size={props.inFound || props.show || props.inPlay ? factor * .08 : factor * .08}\n                    color={props.inFound || props.show || props.inPlay ? 'white' : 'grey'}\n                    type=\"ionicon\"\n                    style={styles.IconCard}\n                />\n            </TouchableOpacity>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { View, Text, Modal } from 'react-native';\n\nimport { Button, Overlay, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../assets/img/activities/sad.gif';\n\nimport Lottie from '../../utils/Lottie';\n\nimport styles from './styles';\n\nimport { generateRandomPair } from './subs/helpers';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport Card from './subs/Card';\n\nexport default function Play(props) {\n    const [game, setGame] = useState([...generateRandomPair(4)]); // the current map game\n    const [found, setFound] = useState([]);\n    const [tries, setTries] = useState(3);\n    const [play, setPlay] = useState([]); // the current play of the player, an array with two values max, corresponding to the cards the player played\n    const [show, setShow] = useState(true);\n    const [confetti, setConfetti] = useState(false);\n    const [pause, setPause] = useState(false);\n\n    const TrophyLottie = require('../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../assets/lottie/sad.json');\n\n    const setLengthGame = () => {\n        if (props.score <= 8)\n            return 4;\n        else if (props.score <= 15)\n            return 6;\n        else if (props.score <= 30)\n            return 8;\n        else if (props.score <= 45)\n            return 10;\n        else\n            return 12;\n    }\n\n    // Exemple game element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null },\n            { idx: 2, color: '#ffffff', icon: null },\n            { idx: 3, color: '#ferdnc', icon: null }\n        ]\n    */\n\n        // each play, we push the current card to the play state, and check if the first element exists in the\n        // game state, and if the second element is the same as the first one, if so => success for a round, and push\n        // this pair in the found state. If fail => clear the play && found states\n\n    // Exemple play element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 2, color: '#ffffff', icon: null }\n        ] // this is a successful array\n\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null }\n        ] // this is a fail array\n    */\n\n    const failOverlay = () => {\n        if (props.modal == false) return;\n        return (\n            <>\n                <Lottie\n                    LottieSource={SadLottie}\n                    ImageSource={SadImage}\n                    autoplay={true}\n                    loop={true}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const successOverlay = () => {\n        if (!confetti) setConfetti(true);\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].BestScoreToday(props.bestScoreDay)}\n                </Text>\n                <Lottie\n                    LottieSource={TrophyLottie}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n    \n    const newModel = () => {\n        if (props.score == 0) return;\n        const currentGameLength = game.length;\n        props.setScore(prevScore => prevScore - 1);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(currentGameLength)]);\n    };\n\n    const printButton = () => {\n        return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={show ? DoubleLang[props.lang].Start : DoubleLang[props.lang].Reinit} onPress={() => { if (show) setShow(false); else newModel(); }} buttonStyle={[styles.playButtons, {backgroundColor: show ? '#208bdc' : 'green'}]} icon={\n                    <Icon\n                    name={show ? \"play\" : ''}\n                    size={18}\n                    color=\"white\"\n                    type=\"ionicon\"\n                />\n                } iconRight={true} disabled={!show && props.score === 0 || tries <= 1} />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.ambiantSoundPlay() }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.soundEnabled ? 'sound' : 'sound-mute',\n                            type: 'entypo',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.setSoundEnabled(prev => !prev) }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='red'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: 'caret-back',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.giveUp() }\n                    style={{marginHorizontal: 5}}\n                />\n            </View>);\n    };\n    \n    const ReturnCard = (key) => {\n        if (pause || show) return;\n        const currentPlay = play;\n        const indexGame = game[key];\n        const playing = [...currentPlay, indexGame];\n        if (playing.length == 2) {\n            // check if same card or return all and lose a try\n            if (playing[0].color === playing[1].color && playing[0].icon === playing[1].icon) {\n                const currentGameLength = game.length;\n                const nFound = [...found, playing[0], playing[1]];\n                if (nFound.length == currentGameLength) {\n                    props.playSound('next');\n                    props.setScore(prevScore => prevScore + 1);\n                    setShow(true);\n                    setTries(3);\n                    setGame([...generateRandomPair(setLengthGame())]);\n                    setFound([]);\n                } else {\n                    props.playSound('success');\n                    setFound(nFound);\n                }\n                setPlay([]);\n            } else {\n                setPlay(playing);\n                props.playSound('fail');\n                setPause(true);\n                setTimeout(() => {\n                    if (tries != 0) setTries(prevTries => prevTries - 1);\n                    if (tries === 0)\n                        props.endGame();\n                    else {\n                        setPlay([]);\n                        setFound([]);\n                    }\n                    setPause(false);\n                }, 1000);\n            }\n        } else {\n            setPlay(playing);\n            props.playSound('play');\n        }\n    };\n\n    const printCards = () => {\n        return game.map( (el, i) => {\n            var inFound = false;\n            var inPlay = false;\n            if (found.find(element => element.idx === i )) inFound = true;\n            else if (play.find(element => element.idx === i )) inPlay = true;\n            return (<Card show={show} key={i} index={i} inFound={inFound} inPlay={inPlay} backgroundColor={el.color} icon={el.icon} ReturnCard={ReturnCard} />);\n        });\n    };\n\n    const newGame = () => {\n        if (confetti) setConfetti(false);\n        props.setModal(false);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(4)]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n            )}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                { props.success && props.modal ? successOverlay() : failOverlay() }\n                <View style={{flexDirection: 'row', marginTop: 20}}>\n                    <Button title={DoubleLang[props.lang].Retry} onPress={() => newGame()} buttonStyle={{marginRight: 10}} icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n\n                    <Button title={DoubleLang[props.lang].Leave} onPress={() => { \n                        if (confetti) setConfetti(false);\n                        props.setModal(false);\n                        props.setTab(0);\n                    }} buttonStyle={{backgroundColor: 'red'}} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </View>\n            </Overlay>\n            <View style={styles.viewGame}>\n                { printCards() }\n            </View>\n            <View style={{alignItems: 'center', width: wp('100%'), marginTop: -10}}>\n                { show === true ? <Text>{DoubleLang[props.lang].Remember()}</Text> : <></> }\n                <Text>{DoubleLang[props.lang].Score(props.score)}</Text>\n                <Text>{DoubleLang[props.lang].BestDayScore(props.bestScoreDay)}</Text>\n                <Text>{DoubleLang[props.lang].RemaningTries(tries)}</Text>\n                { printButton() }\n            </View>\n        </>\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n    Text,\n    BackHandler,\n    ScrollView,\n    Alert\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport styles from './styles';\n\nimport * as API from '../../../data/doubleApi';\n\nimport Help from './Help';\nimport Menu from './Menu';\nimport Play from './Play';\n\nconst currentDate = new Date().toLocaleDateString('fr-FR');\n\nexport default function Double(props) {\n    const [tab, setTab] = useState(0);\n    const [score, setScore] = useState(0);\n    const [bestScoreDay, setBestScoreDay] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [ambiant, setAmbiant] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n    const [soundEnabled, setSoundEnabled] = useState(true);\n    const [ambiantEnabled, setAmbiantEnabled] = useState(true);\n\n    useEffect( async () => {\n        // API.clear();\n\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by kilo\n            require(`../../../assets/sound/double/ambiant.mp3`),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n\n        API.getScoreDay(props.personId, currentDate).then((data) => {\n            if (data.length > 0) setBestScoreDay(data[0].score);\n        });\n\n        API.getBestScore(props.personId).then((data) => {\n            if (data.length > 0) setBestScore(data[0].score);\n        });\n\n    }, []);\n\n    useEffect(() => {\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1 && score > 0) {  \n                    giveUp()\n                    return ;\n                }\n                setTab(0);\n            } else {\n                ambiant.unloadAsync();\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, ambiant]);\n\n    const endGame = async () => {\n        setModal(true);\n        let bestDayScore = false;\n        let bestScore = false;\n        if (score > bestScoreDay) { \n            playSound('applause');\n            setSuccess(true);\n            setBestScoreDay(score);\n            bestDayScore = true;\n            if (score > bestScore) {\n                bestScore = true;\n                setBestScore(score);\n            }\n        } else {\n            playSound('lose');\n            setSuccess(false);\n        }\n        await API.insertScore(props.personId, score, currentDate, bestDayScore, bestScore);\n        setScore(0);\n    };\n\n    const ambiantSoundPlay = () => {\n        if (ambiantEnabled) ambiant.pauseAsync();\n        else ambiant.playAsync();\n        setAmbiantEnabled(prevEnable => !prevEnable);\n    };\n    \n    const giveUp = () => {\n        if (score === 0) setTab(0);\n        else return Alert.alert(\n            DoubleLang[props.lang].TitleGiveUp,\n            DoubleLang[props.lang].SureToGiveUp,\n            [\n                {\n                    text: DoubleLang[props.lang].Leave,\n                    onPress: () => { null },\n                    style: 'cancel'\n                },\n                {\n                    text: DoubleLang[props.lang].GiveUp,\n                    onPress: () => {\n                        endGame();\n                    }\n                },\n            ]\n        )\n    };\n\n    const playSound = async (type) => {\n        if (!soundEnabled && !['applause', 'lose'].includes(type)) return;\n        if (sound) sound?.unloadAsync();\n        let choosenSound;\n        switch (type) {\n            case \"success\":\n                choosenSound = require(`../../../assets/sound/double/success.mp3`);\n                break;\n            case \"fail\":\n                choosenSound = require(`../../../assets/sound/double/fail.mp3`);\n                break;\n            case \"play\":\n                choosenSound = require(`../../../assets/sound/double/play.mp3`);\n                break;\n            case \"next\":\n                choosenSound = require(`../../../assets/sound/double/next.mp3`);\n                break;\n            case \"applause\":\n                choosenSound = require(`../../../assets/sound/global/applause.mp3`);\n                break;\n            case \"lose\":\n                choosenSound = require(`../../../assets/sound/global/you_lose.mp3`);\n                break;\n            default:\n                break;\n        }\n        const { sound } = await Audio.Sound.createAsync(choosenSound);\n        setSound(sound);\n        sound.playAsync();\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    ambiant={ambiant}\n                    setSoundEnabled={setSoundEnabled}\n                    soundEnabled={soundEnabled}\n                    ambiantEnabled={ambiantEnabled}\n                    ambiantSoundPlay={ambiantSoundPlay}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                        lang={props.lang}\n                        setTab={setTab}\n                        score={score}\n                        setScore={setScore}\n                        giveUp={giveUp}\n                        modal={modal}\n                        setModal={setModal}\n                        bestScoreDay={bestScoreDay}\n                        success={success}\n                        endGame={endGame}\n                        playSound={playSound}\n                        ambiantSoundPlay={ambiantSoundPlay}\n                        ambiantEnabled={ambiantEnabled}\n                        soundEnabled={soundEnabled}\n                        setSoundEnabled={setSoundEnabled}\n                    />;\n        } else if (tab === 2) {\n            return (<Help lang={props.lang} setTab={setTab} />);\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <ScrollView style={styles.view} contentContainerStyle={{alignItems: 'center'}}>\n            { printPage() }\n        </ScrollView>\n    );\n};","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\nimport Double from '../components/activities/Double';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return <Double lang={lang} setPage={setPage} personId={personId} />;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n        /* {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        }, */\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nimport { Audio } from 'expo-av';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n\n    useEffect( () => {\n        Audio.setIsEnabledAsync(true);\n    }, [])\n\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    scoreRow: {\n        flex: 1,\n        height: 180,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreRowSimon: {\n        flex: 1,\n        height: 250,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreHeading: {\n        fontSize: 18,\n        color: '#2089dc',\n        fontWeight: 'bold',\n        margin: 5\n    },\n    NoScore: {\n        color: 'grey',\n        fontStyle: 'italic',\n        marginTop: 45,\n        marginLeft: 45\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\nimport { Badge } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport { ScoreRatio } from '../../../../components/activities/Quiz/utils/scoreFunc';\nimport * as API from '../../../../data/quizApi';\n\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nexport default function QuizScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [quizScore, setQuizScore] = useState([]);\n\n    useEffect( () => {\n        API.get(props.personId).then((data) => {\n            const arr = [];\n            for (let i = 0; i < data.length; i++) {\n                const el = data[i];\n                arr.push({score: ScoreRatio(el.content, props.personId), name: el.name});\n            }\n            setQuizScore(arr);\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (quizScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            return quizScore.map( (el,i) => {\n                return (\n                    <View style={{marginHorizontal: 15}} key={i}>\n                        <View style={{zIndex: 20}}>\n                            <Badge\n                                value={el.name}\n                                textStyle={{textAlign: 'center', zIndex: 20}}\n                                badgeStyle={{position:'absolute', paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 100, zIndex: 100}}\n                                titleStyle={{zIndex: 20}}\n                            />\n                        </View>\n                        <View style={{zIndex: 1}}>\n                            <CircularProgress\n                                value={el.score}\n                                textStyle={{marginBottom: -10}}\n                                title={ActivitiesLang[props.lang].Success}\n                                valueSuffix={'%'}\n                                titleStyle={{marginBottom: 10}}\n                                initialValue={0}\n                                delay={500}\n                                activeStrokeColor={'#2089dc'}\n                                radius={65}\n                                inActiveStrokeColor={'#9b59b6'}\n                                inActiveStrokeOpacity={0.5}\n                                inActiveStrokeWidth={6}\n                                activeStrokeWidth={12}\n                            />\n                        </View>\n                    </View>\n                );\n            });\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRow} horizontal={true}>\n            <View>\n                <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].QuizScore}</Text>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} /> :\n                    <ScrollView horizontal={true}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/simonApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function SimonScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [simonScore, setSimonScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setSimonScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (simonScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = simonScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].SimonScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/doubleApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function DoubleScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [doubleScore, setDoubleScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setDoubleScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (doubleScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = doubleScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].DoubleScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React from 'react';\nimport { ScrollView } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\n\nimport QuizScore from './QuizScore';\nimport SimonScore from './SimonScore';\nimport DoubleScore from './DoubleScore';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <QuizScore lang={props.lang} personId={props.personId} />\n            <DoubleScore lang={props.lang} personId={props.personId} />\n            <SimonScore lang={props.lang} personId={props.personId} />\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { Platform } from 'react-native';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    \n    const navigate = useNavigate();\n\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: Platform.OS == 'ios' ? hp('10%') : hp('10%'), color: '#3B8EFF', backgroundColor: '#355c7d' }],\n                tabBarLabelStyle: [{ color: 'white', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} personId={props.personId} /> }\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        fullname={props?.fullname}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                        setPerson={props.setPerson}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { Platform } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        paddingBottom: 10,\n        width: 100+'%',\n        height: hp('17%'),\n        backgroundColor: '#355c7d'\n    },\n    topLottie: {\n        marginTop: 6,\n        width: 60,\n        height: undefined,\n        marginBottom: Platform.OS === 'ios' ? 25 : 15,\n        backgroundColor: '#355c7d'\n    },\n    bgLottie: {\n        width: wp('100%'),\n        opacity: Platform.OS === 'ios' ? 0.8 : 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: wp('100%'),\n        height: hp('100%'),\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: '#355c7d'\n    },\n    heading: {\n        fontSize: 20,\n        color: 'white',\n        marginTop: 0,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%'\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport TopImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/selection');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/selection', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/selection', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TopImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={state?.username}\n                        fullname={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setPerson={setPerson}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\nimport React from 'react';\n\nimport { Text } from 'react-native'\nimport App from './App';\n\nText.defaultProps = Text.defaultProps || {};\nText.defaultProps.allowFontScaling = false\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig, reset } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport SelectionMenu from './pages/SelectionMenu';\nimport Activities from './pages/Activities';\nimport Home from './pages/Home';\nimport Tutorial from './pages/Tutorial';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [lang, setLang] = useState('fr');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        // reset();\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    useEffect( () => {\n        let local = Localization.locale?.split('-')[0] || 'fr';\n        setLang(['en', 'fr'].includes(local) ? local : 'fr');\n        console.log('- Imported config file -');\n    }, [config]);\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                    setLang={setLang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/tutorial\"\n                            element={\n                                <Tutorial\n                                    lang={lang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={<Home lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/selection\"\n                            element={\n                                <SelectionMenu\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}