{"version":3,"sources":["assets/img/activities/trophy.gif","assets/img/activities/help/question_mark.gif","assets/img/interface/profile.jpg","assets/img/activities/brain.gif","assets/img/activities/sad.gif","assets/sound/global/applause.mp3","assets/sound/global/you_lose.mp3","assets/sound/simon/green.mp3","assets/img/selection/addedUser.gif","assets/img/username/chooseusername.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/alzheimapp_logo.png","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/quiz/logo.png","assets/img/activities/quiz/success.gif","assets/img/activities/double/logo.png","assets/sound/ambiant.mp3","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","assets/img/activities/quiz/thinking.gif","assets/sound/double/ambiant.mp3","assets/sound/double/success.mp3","assets/sound/double/fail.mp3","assets/sound/double/play.mp3","assets/sound/double/next.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","language/selection/index.js","components/selection/Rows.js","components/selection/styles.js","components/utils/Lottie.js","components/selection/PersonCreation/Success.js","data/dictaphoneApi.js","data/simonApi.js","data/quizApi.js","data/doubleApi.js","utils/helpers.js","data/personApi.js","components/selection/PersonCreation/Form.js","components/selection/PersonCreation/CreatePerson.js","pages/SelectionMenu/styles.js","pages/SelectionMenu/os/android.js","pages/SelectionMenu/os/ios.js","pages/SelectionMenu/index.js","pages/ChooseUsername/styles.js","pages/ChooseUsername/index.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","language/home/index.js","pages/Home/styles.js","pages/Home/Menu.js","utils/dilacrypt.js","utils/share.js","pages/Home/ImportData.js","pages/Home/index.js","components/utils/HomeOrTutorial.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/Help.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/utils/quizFunc.js","components/activities/Quiz/Creation/QuestionList.js","components/activities/Quiz/utils/scoreFunc.js","components/activities/Quiz/QuizList.js","components/activities/Quiz/ViewQuizList.js","components/activities/Quiz/SuccessContent.js","components/activities/Quiz/Creation/FormQuizContent.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Creation/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/Help.js","components/activities/Quiz/index.js","language/activities/double/index.js","components/activities/Double/styles.js","components/activities/Double/Help.js","components/activities/Double/Menu.js","components/activities/Double/subs/helpers.js","components/activities/Double/subs/Card.js","components/activities/Double/Play.js","components/activities/Double/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/QuizScore/index.js","pages/Activities/Score/SimonScore/index.js","pages/Activities/Score/DoubleScore/index.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","OpenActivity","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","color","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","props","navigate","useNavigate","TouchableScale","Platform","OS","default","mod","index","backgroundColor","componentProps","Component","key","id","bottomDivider","containerStyle","onPress","state","source","picture","uri","DefaultProfilePicture","rounded","Content","Title","fullname","Subtitle","description","Chevron","StyleSheet","create","rightButton","minHeight","imageSuccess","width","height","leftButton","view","alignItems","alignSelf","marginVertical","btnImport","borderRadius","btnSave","profilePicture","marginBottom","successPageTitle","textAlign","fontSize","Lottie","animationRef","useRef","LottieView","useEffect","current","play","ref","animation","LottieStyle","LottieSource","loop","hasOwnProperty","autoPlay","resizeMode","Image","ImageSource","ImageStyle","Success","View","SuccessImage","styles","edit","InterfaceLang","flexDirection","flexWrap","flexShrink","alignContent","flex","title","e","close","buttonStyle","marginRight","paddingHorizontal","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","createQuizContent","el","uuidv4","success","failed","includes","fileType","uploadQuizFile","path","FileSystem","from","to","updateScore","quizId","contentId","_id","quiz","contentIndex","content","findIndex","scoreIndex","getBestScore","insertScore","dailyScoreBeaten","globalScoreBeaten","pushErrors","errors","field","msg","randomNumber","min","max","Math","floor","random","person","trim","Object","keys","upd","$set","catch","log","getById","Form","useState","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","encoding","fsRead","setImage","titleStyle","icon","name","size","marginHorizontal","placeholder","leftIcon","label","errorStyle","renderErrorMessage","maxLength","errorMessage","inputStyle","value","marginTop","onChangeText","setFullname","setDescription","raised","cb","Person","setId","intermediates","image","imgName","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","container","zIndex","wrapper","topBanner","topImage","heading","boldtext","subtitle","button","overflow","buttonText","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","fontStyle","searchBar","searchInputStyle","SelectionMenuAndroid","swiper","position","marginLeft","type","setLang","LoadingBrain","SelectionMenuLang","TouchableOpacity","activeOpacity","idx","active","setActive","setBtnTxt","ActivityIndicator","scrollBy","btnText","SafeAreaView","isLoading","showsButtons","scrollEnabled","pagingEnabled","slidePropsState","showsPagination","onIndexChanged","setIndex","setTimeout","ScrollView","inputContainerStyle","setSearch","search","printRows","SelectionMenuIOS","parseInt","setIdx","redirected","KeyboardAvoidingView","behavior","loadMinimal","SelectionMenu","setIsLoading","useLocation","slide","Audio","setIsEnabledAsync","regex","RegExp","$regex","backHandler","BackHandler","addEventListener","remove","list","map","propsSelectionMenuComponent","printAccordingToOS","textInput","borderColor","shadowOpacity","shadowRadius","shadowOffset","elevation","buttonContainer","padding","viewrow","justifyContent","input","setInput","loadPage","setLoadPage","confirmed","setConfirmed","redirect","setRedirect","setUsername","res","parseUsername","insertUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","animating","Loading","LoadingImage","slideOdd","titleOdd","textOdd","aspectRatio","borderWidth","Tutorial","StepOne","StepTwo","StepThree","StepFour","StepFive","StepSixth","Config","Select","Import","Introduction","Source","License","Language","Step1","Step2","Step3","Step4","Step5","Step6","Step7","Step8","Step9","Step10","Step11","Step12","Step13","Step14","GoBack","InvalidFile","InvalidPersonFile","IncorrectPersonFile","ErrorChekingPerson","InvalidActivitiesLength","InvalidQuizData","InvalidLogData","InvalidDoubleData","InvalidSimonData","header","logo","menu","copyleft","ErrorMessage","Menu","showsVerticalScrollIndicator","HomeLang","ambiant","unloadAsync","iconContainerStyle","DocumentPicker","multiple","setImportFile","prev","Linking","openURL","encrypt","string","encryptedString","j","String","fromCharCode","charCodeAt","isValidDate","d","n","Date","isNaN","fileToBase64","formatQuiz","formatLog","scoreVerification","checkPersonInformations","checkPersonExists","personAPI","checkQuiz","quizKeys","contentKeys","k","l","answers","question","foundInScore","checkDouble","double","checkSimon","simon","checkDictaphone","dictaphone","importPerson","exists","importQuiz","filePath","quizAPI","quizFindAsync","importDouble","doubleAPI","importSimon","simonAPI","importLog","dictaphoneAPI","writeDataFile","fileUri","exportPerson","personFind","personData","simonData","doubleData","quizData","dictaphoneData","JSON","stringify","activities","replace","dilacrypt","ImportData","step","setStep","setError","importFile","parsed","parseJSON","dataImport","found","CannotCreatePerson","inputString","parse","stepStyle","clr","display","disabled","Home","setAmbiant","Sound","createAsync","isLooping","sound","playAsync","AlzheimApp","HomeOrTutorial","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","QuizScore","SimonScore","DoubleScore","NoScore","Global","BestScoreByDay","ExportedProfile","ReturnList","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","load","setLoad","deletePerson","SimonDB","removeAsync","DictaphoneDB","DoubleDB","QuizDB","deleted","ActivitiesLang","Sharing","Alert","setPerson","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","isPlaying","setIsPlaying","progress","setProgress","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","positionMillis","playableDurationMillis","variant","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","getURI","folder","record","DictaphoneLang","created","deleteRecord","goBack","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","Head","RulesHead","TriesHead","Rules","TriesExplain","paddingTop","opacity","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","viewHelpPage","leaveButtonHelpPage","helpHead","helpStepHead","textTransform","helpStep","helpQuestionMark","SimonLogo","SimonLang","setTab","Game","start","setStart","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","QuestionMark","tab","pos","Create","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","GiveUpQuizTitle","GiveUpQuiz","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","EditedQuiz","QuizListRedirection","selectedQuizz","quizName","Questions","SuccessTitle","FailedTitle","join","SuccessQuizTitle","SuccessQuiz","fail","FailQuizTitle","FailQuiz","SaveContent","AddContent","SureCancelEdition","CustomHead","Custom","answersText","leaveButtonPlay","createButton","overlayDescriptionReference","overlayDescriptionAnswers","paddingBottom","ScrollViewSuccess","modalTitle","modalDescription","quizTitleInputContainer","quizTitleInput","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","QuizLogo","QuizLang","printFile","clearFile","pauseSound","playSound","QuestionList","quizEdit","newContent","quizEdition","Number","isInteger","questionId","tmp","setNewContent","setQuizEdit","setReload","reload","setEditedQuiz","contentList","setContent","pickOutQuestion","setEditContent","ScoreRatio","filter","total","toFixed","QuizList","ViewQuizList","SuccessContent","FormQuizContent","answer","setAnswer","contentContainerStyle","setFileType","setFilename","setUri","mimeType","setQuestion","toLowerCase","setAnswers","addAnswer","badgeStyle","pickOutAnswer","ViewQuiz","newQuestion","setNewQuestion","editContent","editedQuiz","saveQuiz","concat","editedFile","buttonTop","mode","saveContent","pushContent","viewPage","CreateQuiz","createQuestion","setCreateQuestion","setName","modalConfirmation","setModalConfirmation","undefined","substring","ThinkingImage","quizLength","pickRandomQuizz","ThinkingLottie","setPlay","setCurrent","setFail","arr","shuffle","TrophyLottie","SadLottie","openAlertResultQuestion","SadImage","setMediaType","answerTrimedLowercase","answerQuestion","setQuiz","setRandom","rand","randomArrayElement","exclude","randNumber","RemaningTries","Reinit","TitleGiveUp","SureToGiveUp","BestDayScore","ScoreHead","ScoreHelp","Remember","Dimensions","factor","hp","wp","RectoCard","PlayingCard","VersoCard","IconCard","viewGame","buttonViewPlay","playButtons","DoubleLang","DoubleLogo","ambiantEnabled","ambiantSoundPlay","soundEnabled","setSoundEnabled","generateRandomPair","colors","icons","indexColor","indexIcon","SCREEN_WIDTH","SCREEN_HEIGHT","Card","cardStyles","inPlay","inFound","show","ReturnCard","setFound","setShow","currentPlay","indexGame","playing","currentGameLength","nFound","setScore","prevScore","prevTries","endGame","bestScoreDay","failOverlay","element","newModel","giveUp","Double","setBestScoreDay","setAmbiantEnabled","bestDayScore","prevEnable","choosenSound","returnComponent","page","ActivitiesList","iconPosition","scoreRow","scoreRowSimon","scoreHeading","margin","quizScore","setQuizScore","horizontal","textStyle","valueSuffix","initialValue","delay","activeStrokeColor","radius","inActiveStrokeColor","inActiveStrokeOpacity","inActiveStrokeWidth","activeStrokeWidth","simonScore","setSimonScore","btnIndex","setBtnIndex","buttons","TotalScore","selectedIndex","global","days","item","highestToLowest","b","labels","datasets","fromZero","showValuesOnTopOfBars","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","printScore","doubleScore","setDoubleScore","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","unmountOnBlur","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","BgSource","navTheme","DefaultTheme","background","TopImage","BackgroundImage","NavigationContainer","theme","defaultProps","allowFontScaling","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact"],"mappings":"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","file":"static/js/app.a3042250.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/question_mark.c1494184.gif\";","module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/brain.abdab59b.gif\";","module.exports = __webpack_public_path__ + \"static/media/sad.bfdab12f.gif\";","module.exports = __webpack_public_path__ + \"static/media/applause.3560ad8b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/you_lose.e1f971d7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.c4ec63da.png\";","module.exports = __webpack_public_path__ + \"static/media/2.c9afe178.png\";","module.exports = __webpack_public_path__ + \"static/media/3.95e52180.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e18a9e44.png\";","module.exports = __webpack_public_path__ + \"static/media/5.1a0c5df5.png\";","module.exports = __webpack_public_path__ + \"static/media/6.64d544d0.png\";","module.exports = __webpack_public_path__ + \"static/media/alzheimapp_logo.efbaee1c.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.42d4e3d2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.d22dea5d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.5d28b463.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.baee48bf.png\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.e46e92e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e82f415e.gif\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.af08ce07.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.d73909c9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fail.4f8cf1ae.mp3\";","module.exports = __webpack_public_path__ + \"static/media/play.25c902a7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.44546c82.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n};\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n};\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n};\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n};\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n};\n\nexport async function reset() {\n    const path = `${FileSystem.documentDirectory}persons`;\n    const folder = await FileSystem.getInfoAsync(path);\n    if (folder.exists) {\n        FileSystem.deleteAsync(path).catch(err => {\n            console.error('folder delete err:',err);\n        });\n    }\n    return AsyncStorage.clear();\n};","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retour',\n        OpenActivity: 'Ouvrir le profil',\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n        OpenActivity: 'Open this profile',\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet\\nrequise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? Il est possible {0} la donnée d'une personne et de {1} dans un autre appareil !\",\n                boldText: [\"d'exporter\", \"l'importer\"],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can {0} a person's data and {1} it in another device!\",\n                boldText: ['export', 'import'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer {0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to achieve today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n});\n","import React, { useEffect, useRef } from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    const animationRef = useRef(LottieView);\n\n    useEffect( () => {\n        animationRef?.current?.play();\n    }, []);\n    \n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                ref={animation => {\n                    animationRef.current = animation\n                }}\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport { useNavigate } from 'react-router-native';\nimport SuccessImage from '../../../assets/img/selection/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/selection/addedUser.json');\n    const navigate = useNavigate();\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <View style={{flexDirection: 'row', flexWrap: 'wrap', flexShrink: 1, alignItems: 'center', alignContent: 'center', flex: 1, alignSelf: 'center'}}>\n                <Button\n                    title={InterfaceLang[props.lang].ReturnToForm}\n                    onPress={(e) => {\n                        props.close();\n                    }}\n                    buttonStyle={{marginRight: 20, borderRadius: 15,paddingHorizontal: 15, backgroundColor: 'red'}}\n                />\n                { props.edit == false ? <Button\n                    title={InterfaceLang[props.lang].OpenActivity}\n                    onPress={(e) => {\n                        navigate(`/activities/${props.id}`, {\n                        state: {\n                            lang: props.lang ?? 'fr',\n                            username: props.username,\n                        }\n                    });\n                    }}\n                    buttonStyle={{borderRadius: 15, paddingHorizontal: 15}}\n                /> : <></> }\n            </View>\n        </View>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nconst createQuizContent = async (personId, el) => {\n    el.id = uuidv4();\n    el.score = [{personId: personId, success: 0, failed: 0}];\n    if (['audio', 'image'].includes(el.fileType)) {\n        await uploadQuizFile(el);\n    }\n};\n\nconst uploadQuizFile = async (el) => {\n    const filename = `${uuidv4()}${el.fileType == 'audio' ? '.m4a' : '.png'}`;\n    const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n    await FileSystem.copyAsync({\n        from: el.uri,\n        to: `${path}${filename}`\n    });\n    await FileSystem.deleteAsync(el.uri);\n    el.uri = `${path}${filename}`;\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        await createQuizContent(personId, el);\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport async function updateScore(personId, quizId, contentId, success) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    const contentIndex = quiz[0].content.findIndex(el => el.id == contentId );\n    const scoreIndex = quiz[0].content[contentIndex].score.findIndex(el => el.personId = personId);\n    if (success) quiz[0].content[contentIndex].score[scoreIndex].success++\n    else quiz[0].content[contentIndex].score[scoreIndex].failed++\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function deleteId(personId, quizId) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n};\n\nexport async function deleteQuestion(quizId, questionId) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    const content = quiz[0].content;\n    const contentIndex = content.findIndex(el => el.id == questionId );\n    if (['audio', 'image'].includes(content[contentIndex]))\n        await FileSystem.deleteAsync(content.uri);\n    quiz[0].content = content.splice(0, contentIndex);\n    return db.updateAsync({_id: quizId}, {...quiz[0]})\n};\n\nexport async function getById(quizId) {\n    return db.findAsync({ _id: quizId }, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n};\n\nexport async function saveQuiz(personId, quizId, content) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    if (!quiz) return;\n    for (let i = 0; i < content.length; i++) {\n        const el = content[i];\n        if (!el.id)\n            await createQuizContent(personId, el);\n        else if (el.id && el.editedFile) {\n            await uploadQuizFile(el);\n            delete el.editedFile;\n        }\n    }\n    quiz[0].content = content;\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function reset() {\n    return db.removeAsync({}, { multi: true });\n};\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DoubleSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nexport const randomArrayElement = (exclude, min, max) => {\n    randNumber = randomNumber(min, max);\n    if (randNumber == exclude)\n        return randomArrayElement(exclude, min, max);\n    return randNumber;\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\nimport { db as QuizDB } from './quizApi'\nimport { db as DoubleDB } from './doubleApi';\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await DoubleDB.removeAsync({ personId: id });\n    await QuizDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return db.removeAsync({ _id: id });\n};\n\nexport async function reset() {\n    const path = `${FileSystem.documentDirectory}persons`;\n    const file = await FileSystem.getInfoAsync(path);\n    if (file.exists) {\n        FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(async res => {\n            await SimonDB.removeAsync({}, { multi: true });\n            await QuizDB.removeAsync({}, { multi: true });\n            await DictaphoneDB.removeAsync({}, { multi: true });\n        }).catch(err => {\n            console.log('[!] Directory does not exists');\n        });\n    }\n    return db.removeAsync({}, { multi: true });\n};","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0)\n                personId = result._id;\n            props.setId(personId);\n            await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${personId}`, {intermediates: true});\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n    const [id, setId] = useState(0);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n\n        id: id,\n        setId: setId\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { Platform } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n        zIndex: 1,\n    },\n    wrapper: {\n        marginTop: 20,\n        textAlign: 'center',\n        alignItems: 'center',\n        zIndex: 1,\n    },\n    topBanner: {\n        backgroundColor:'#355c7d'\n    },\n    topImage: {\n        // flex: 1,\n        height: Platform.OS === 'ios' ? 50 : 70,\n        marginTop: Platform.OS === 'ios' ? 5 : 0,\n    },\n    heading: {\n        marginTop: 10,\n        fontSize: 20,\n        zIndex: 2,\n        color: 'white'\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    subtitle: {\n        textAlign: 'center',\n        color: 'white'\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: Platform.OS === 'ios' ? 0 : 10\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef } from 'react';\nimport {\n    Text,\n    View,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB } from 'react-native-elements';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as SelectionMenuLang } from '../../../language/selection';\nimport Rows from '../../../components/selection/Rows';\nimport CreatePerson from '../../../components/selection/PersonCreation/CreatePerson';\n\nimport Lottie from '../../../components/utils/Lottie';\nimport styles from '../styles';\n\nexport default function SelectionMenuAndroid(props) {\n\n    const swiper = useRef(null);\n    const navigate = useNavigate();\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - props.index, true);\n    };\n\n    const changeIndex = (idx) => {\n        props.setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                props.setBtnTxt(SelectionMenuLang[props.lang].AddAPerson);\n            } else if (idx === 1) {\n                props.setBtnTxt(SelectionMenuLang[props.lang].ReturnToList);\n            }\n            props.setActive(true);\n        }, 400);\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 85 + '%',\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home', {\n                    state: { username: props.username, setLang: props.setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n            <View style={styles.wrapper}>\n                <Lottie\n                    LottieSource={props.LottieSource}\n                    ImageSource={props.LoadingBrain}\n                    LottieStyle={styles.topImage}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[props.lang].Hello(props.username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[props.lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (props.active === false) {\n                            return;\n                        }\n                        props.setActive(false);\n                        props.setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(props.index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{props.btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {props.isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={props.slidePropsState || 0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={SelectionMenuLang[props.lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    props.setSearch(e);\n                                }}\n                                value={props.search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {props.persons && props.persons.length > 0 ? (\n                                props.printRows(props.persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[props.lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={props.persons}\n                                setPersons={props.setPersons}\n                                lang={props.lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import React, { useRef, useState } from 'react';\nimport {\n    Text,\n    View,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    KeyboardAvoidingView\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB, Button } from 'react-native-elements';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as SelectionMenuLang } from '../../../language/selection';\nimport CreatePerson from '../../../components/selection/PersonCreation/CreatePerson';\n\nimport Lottie from '../../../components/utils/Lottie';\n\nimport styles from '../styles';\n\nexport default function SelectionMenuIOS(props) {\n\n    const [idx, setIdx] = useState(parseInt(props.index));\n\n    const swiper = useRef(null);\n    const navigate = useNavigate();\n\n    const swipePage = () => {\n        setTimeout(() => {\n            if (idx === 1) {\n                props.setBtnTxt(props.redirected ? SelectionMenuLang[props.lang].ReturnToList : SelectionMenuLang[props.lang].AddAPerson); \n            } else {\n                props.setBtnTxt(props.redirected ? SelectionMenuLang[props.lang].AddAPerson : SelectionMenuLang[props.lang].ReturnToList);\n            }\n            swiper.current.scrollBy(1, true);\n            props.setActive(true);\n            if (idx == 1) setIdx(parseInt(0));\n            else setIdx(1);\n        }, 250);\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 85 + '%',\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home', {\n                    state: { username: props.username, setLang: props.setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n            <View style={styles.wrapper}>\n                <Lottie\n                    LottieSource={props.LottieSource}\n                    ImageSource={props.LoadingBrain}\n                    LottieStyle={styles.topImage}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[props.lang].Hello(props.username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[props.lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <Button\n                    containerStyle={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (props.active === false)\n                            return;\n                        props.setActive(false);\n                        props.setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(idx + 1);\n                    }}\n                    title={props.btnText}\n                    titleStyle={styles.buttonText}\n                />\n            </View>\n            </View>\n            <KeyboardAvoidingView behavior={\"height\"} style={{ flex: 1 }}>\n            <SafeAreaView style={styles.safeContainer}>\n                {props.isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        pagingEnabled={true}\n                        loadMinimal={true}\n                        loop={true}\n                        showsPagination={false}\n                        index={props.index}\n                    >\n                        <ScrollView >\n                            <Input\n                                placeholder={SelectionMenuLang[props.lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    props.setSearch(e);\n                                }}\n                                value={props.search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {props.persons && props.persons.length > 0 ? (\n                                props.printRows(props.persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[props.lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={props.persons}\n                                setPersons={props.setPersons}\n                                lang={props.lang}\n                            />\n                        </ScrollView>\n                    </Swiper>\n                )}\n            </SafeAreaView>\n            \n            </KeyboardAvoidingView>\n        </View>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n} from 'react-native';\nimport { Platform } from 'react-native';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport SelectionMenuAndroid from './os/android';\nimport SelectionMenuIOS from './os/ios';\n\nimport LoadingBrain from '../../assets/img/activities/brain.gif';\nimport { lang as SelectionMenuLang } from '../../language/selection';\nimport Rows from '../../components/selection/Rows';\n\nimport * as Person from '../../data/personApi';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function SelectionMenu(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        props.redirected == 1 ? SelectionMenuLang[props.lang || lang].ReturnToList : SelectionMenuLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n    const setLang = state?.setLang || props.setLang;\n    const slidePropsState = state?.slide || props?.slide;\n\n    useEffect( () => {\n        setIndex(slidePropsState || 0);\n        setBtnTxt(index === 0 && props?.redirected != 1 ? SelectionMenuLang[lang].AddAPerson : SelectionMenuLang[lang].ReturnToList);\n    }, []);\n\n    useEffect(() => {\n        Audio.setIsEnabledAsync(false);\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    const printAccordingToOS = () => {\n        const propsSelectionMenuComponent = {\n            lang: lang,\n            username: username,\n            search: search,\n            setLang: setLang,\n            LottieSource: LottieSource,\n            LoadingBrain: LoadingBrain,\n            isLoading: isLoading,\n            index: index,\n            persons: persons,\n            btnText: btnText,\n            active: active,\n            redirected: props.redirected,\n\n            setIndex: setIndex,\n            setIsLoading: setIsLoading,\n            setActive: setActive,\n            setPersons: setPersons,\n            setBtnTxt: setBtnTxt,\n            setSearch: setSearch,\n            printRows: printRows,\n\n        }\n        if (Platform.OS === 'ios')\n            return <SelectionMenuIOS {...propsSelectionMenuComponent} />\n        else\n            return <SelectionMenuAndroid {...propsSelectionMenuComponent} />\n    }\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            { printAccordingToOS() }\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 40,\n        marginTop: -40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 50,\n        borderColor: 'gray',\n        borderRadius: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        width: 180,\n        textAlign: 'center',\n        elevation: 10\n    },\n    image: {\n        flex: 1,\n        width: 100\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n        height: 50\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername as insertUsername, SawTutorial, getUsername } from '../../data/configApi';\n\nimport SelectionMenu from '../SelectionMenu';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\nimport { Button } from 'react-native-elements';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [loadPage, setLoadPage] = useState(true);\n    const [confirmed, setConfirmed] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const [username, setUsername] = useState('');\n\n    useEffect(() => {\n        getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    setUsername(res[0].username);\n                    setRedirect(true);\n                }\n                setLoadPage(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoadPage(false);\n            });\n    }, []);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            insertUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setUsername(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (redirect)\n        return <SelectionMenu username={username} lang={props.lang} setLang={props.setLang} slide={1} />\n\n    if (loadPage)\n        return <View style={styles.container}></View>\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <Button\n                        title={isLoading ? (\n                            <ActivityIndicator\n                                color=\"white\"\n                                size=\"small\"\n                                animating={true}\n                            />\n                        ) : (\n                            'OK'\n                        )}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                        buttonStyle={styles.button}\n                        titleStyle={styles.buttonText}\n                    />\n                </View>\n            </View>\n        );\n    } else {\n        return <SelectionMenu username={username} lang={props.lang} setLang={props.setLang} slide={1} redirected={1} />\n    }\n}\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet, Platform } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        height: 100 + '%',\n        padding: 20,\n        alignItems: 'center'\n    },\n    slideOdd: {\n        height: 100 + '%',\n        alignItems: 'center',\n        backgroundColor: '#355c7d',\n    },\n    title: {\n        color: 'black',\n        fontSize: 22,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    titleOdd: {\n        color: 'white',\n        fontSize: 22,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    textOdd: {\n        color: 'white',\n        fontSize: 15,\n        width: 70 + '%',\n        textAlign: 'center',\n    },\n    image: {\n        height: Platform.OS === 'ios' ? 20 + '%' : 30 + '%',\n        marginBottom: 40,\n        marginTop: Platform.OS === 'ios' ? 60 : 20,\n        aspectRatio: 1\n    },\n    button: {\n        marginTop: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        borderWidth: 1,\n        height: 60\n    },\n    buttonText: {\n        color: '#355c7d'\n    },\n    buttonContainer: {\n        width: 250,\n    }\n});\n","import React from 'react';\nimport { Text, View, Image } from 'react-native';\nimport { Button } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\n\nexport default function Tutorial(props) {\n    const navigate = useNavigate();\n\n    return (\n        <>\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Button \n                            title={TutorialLang[props.lang].LastStepButton}\n                            buttonStyle={styles.button}\n                            containerStyle={styles.buttonContainer}\n                            onPress={() => {\n                                Config.SawTutorial(true);\n                                navigate('/username', {\n                                    state: { setLang: props.setLang }\n                                });\n                            }}\n                            titleStyle={styles.buttonText}\n                        />\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Select: \"Sélection des personnes\",\n        Import: \"Importer un profil\",\n        Introduction: \"Introduction\",\n        Source: \"Accès au code source\",\n        License: \"Code sous licence GPL v3.\\nCréation originale par Diyaeddine LAOUID.\",\n        Language: \"Changer la langue\",\n        Step1: \"Vérification du format ... \",\n        Step2: \"Vérification du format de l'identité ... \",\n        Step3: \"Vérification d'une personne similaire ...\",\n        Step4: \"Vérification des activités ...\",\n        Step5: \"Vérification des quiz ...\",\n        Step6: \"Vérification des jeux des pairs ...\",\n        Step7: \"Vérification du Simon ...\",\n        Step8: \"Vérification du Journal vocal ...\",\n        Step9: \"Création de la personne ...\",\n        Step10: \"Création des quiz ...\",\n        Step11: \"Création des jeux des pairs ...\",\n        Step12: \"Création du Simon ...\",\n        Step13: \"Création du Dictaphone ...\",\n        Step14: \"L'importation s'est déroulée sans encombre ! :-)\",\n        GoBack: \"Retour\",\n        InvalidFile: \"Le fichier a été supprimé du cache\",\n        InvalidPersonFile: \"Le fichier importé est invalide !\",\n        IncorrectPersonFile: \"L'identité de la personne est mal saisie !\",\n        ErrorChekingPerson: \"Une erreur est survenue au moment de la vérification de la personne dans le système ...\",\n        InvalidActivitiesLength: \"Le nombre d'activités dans le tableau du fichier est beaucoup trop grand.\",\n        InvalidQuizData: \"Les données du quiz sont incorrectes ...\",\n        InvalidLogData: \"Les données du dictaphone sont incorrectes ...\",\n        InvalidDoubleData: \"Les données du jeu des pairs sont incorrectes ...\",\n        InvalidSimonData: \"Les données du Simon sont incorrectes ...\",\n        \n    },\n    en: {\n        Select: \"Select a person\",\n        Import: \"Import a profil\",\n        Introduction: \"Introduction\",\n        Source: \"Source code on GitHub\",\n        License: \"Licensed GPL v3 source code.\\nOriginally created by Diyaeddine LAOUID.\",\n        Language: \"Change language\",\n        Step1: \"Format checking ... \",\n        Step2: \"Identity format checking ... \",\n        Step3: \"Checking if person already registered ...\",\n        Step4: \"Activities length checking ...\",\n        Step5: \"Quiz checking ...\",\n        Step6: \"Double Memory checking ...\",\n        Step7: \"Simon checking ...\",\n        Step8: \"Journal log checking ...\",\n        Step9: \"Person creation ...\",\n        Step10: \"Quiz creation ...\",\n        Step11: \"Double Memory creation ...\",\n        Step12: \"Simon Memory creation ...\",\n        Step13: \"Journal log creation ...\",\n        Step14: \"The person has been successfully imported! :-)\",\n        GoBack: \"Back\",\n        InvalidFile: \"The file has been deleted from the cache\",\n        InvalidPersonFile: \"The imported file is invalid!\",\n        IncorrectPersonFile: \"The format of the imported person is invalid!\",\n        ErrorChekingPerson: \"Error when checking if this person exists...\",\n        InvalidActivitiesLength: \"The activities length on the file array is too big\",\n        InvalidQuizData: \"The quiz datas are invalid...\",\n        InvalidLogData: \"The journal logs datas are invalid...\",\n        InvalidDoubleData: \"The double memory game datas are invalid...\",\n        InvalidSimonData: \"The Simon datas are invalid...\",\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        height: 100 + '%',\n        backgroundColor: '#355c7d',\n        alignItems: 'center'\n    },\n    header: {\n        marginTop: 10 + '%',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    logo: {\n        width: 130,\n        height: 130\n    },\n    menu: {\n        marginTop: 2 + '%',\n        flex: 1,\n        marginBottom: 20\n    },\n    button: {\n        width: 250,\n        height: 50,\n        backgroundColor: 'white',\n        color: '#355c7d',\n        justifyContent: 'flex-start',\n        borderRadius: 25\n    },\n    buttonContainer: {\n        borderRadius: 25,\n        alignItems: 'center',\n        marginBottom: 20\n    },\n    copyleft: {\n        marginTop: 10 + '%',\n        fontSize: 11,\n        color: 'white',\n        textAlign: 'center',\n        fontStyle: 'italic'\n    },\n    ErrorMessage: {\n        color: 'red',\n        fontWeight: 'bold',\n        textAlign:'center',\n        marginTop: 20,\n        marginHorizontal: 40\n    }\n});\n","import React from 'react';\nimport {\n    ScrollView,\n    Linking\n} from 'react-native';\n\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\nimport * as DocumentPicker from 'expo-document-picker';\n\nimport { lang as HomeLang } from '../../language/home';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    const navigate = useNavigate();\n\n    return (\n        <ScrollView style={styles.menu} showsVerticalScrollIndicator={false}>\n            <Button\n                title={HomeLang[props.lang].Select}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', textAlign: 'center', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                icon={\n                    <Icon\n                        name={'person-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    if (props.ambiant) await props.ambiant?.unloadAsync()\n                    navigate('/selection', {\n                        state: { username: props.username, lang: props.lang, setLang: props.setLang }\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Import}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'person-add-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => {\n                    DocumentPicker.getDocumentAsync({multiple: false}).then( e => {\n                        props.setImportFile(e.uri);\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Language}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'world-o'}\n                        type={'fontisto'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                onPress={() => props.setLang(prev => prev == 'fr' ? 'en' : 'fr')}\n                raised\n            />\n            <Button\n                title={HomeLang[props.lang].Introduction}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={[styles.buttonContainer, {marginBottom: 20}]}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={async () => {\n                    await props.ambiant.unloadAsync()\n                    navigate('/tutorial');\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Source}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', fontSize: 16 }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'logo-github'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => Linking.openURL('https://github.com/dilaouid/AlzheimApp')}\n            />\n            <Text style={styles.copyleft} >{HomeLang[props.lang].License}</Text>\n        </ScrollView>\n    );\n}\n","export const encrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let encryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        encryptedString += String.fromCharCode( string.charCodeAt(i) - key.charCodeAt(j) - key.length );\n    }\n    return (encryptedString);\n};\n\nexport const decrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let decryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        decryptedString += String.fromCharCode( string.charCodeAt(i) + key.charCodeAt(j) + key.length );\n    }\n    return (decryptedString);\n};","/**\n * Model is like:\n * {\n *      personId: 'xxx',\n *      name: 'xxx',\n *      description: 'xxx',\n *      picture: 'b64' || null,\n *      activities: {\n *          quiz: [\n *              // all quizz contents //\n *          ],\n *          log: [\n *              // all logs contents\n *          ],\n *          double: [\n *              // all double contents\n *          ],\n *          simon: [\n *              // all simon score\n *          ]\n *      }\n * }\n */\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as dilacrypt from './dilacrypt';\n\nimport { db as personAPI } from '../data/personApi';\nimport { db as dictaphoneAPI } from '../data/dictaphoneApi';\nimport { db as simonAPI } from '../data/simonApi';\nimport { db as quizAPI } from '../data/quizApi';\nimport { db as doubleAPI } from '../data/doubleApi';\n\nconst isValidDate = (d) => {\n    let n = new Date(d);\n    return n instanceof Date && !isNaN(n);\n};\n\nconst fileToBase64 = async (uri) => {\n    return await FileSystem.readAsStringAsync(uri, {\n        encoding: 'base64',\n    });\n};\n\nconst formatQuiz = async (quiz) => {\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < el.content.length; j++) {\n            const e = el.content[j];\n            if (e.uri)\n                e.uri = await fileToBase64(e.uri);\n        }\n    }\n    return (quiz);\n};\n\nconst formatLog = async (log) => {\n    for (let i = 0; i < log.length; i++) {\n        const el = log[i];\n        el.path = await fileToBase64(el.path);\n    }\n    return (log);\n};\n\nconst scoreVerification = (el, personId) => {\n    if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n    if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    if (!el.hasOwnProperty('score') || typeof el.score !== 'number') return false;\n    if (!el.hasOwnProperty('dailyScoreBeaten') || typeof el.dailyScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('globalScoreBeaten') || typeof el.globalScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n    return true;\n};\n\n\n\nexport const checkPersonInformations = (person) => {\n    const keys = ['_id', 'description', 'fullname', 'picture', 'activities'];\n    for (let i = 0; i < keys.length; i++) {\n        const el = keys[i];\n        if (person.hasOwnProperty(el) === false)\n            return false;\n    }\n    return true;\n};\n\nexport const checkPersonInformationsLength = (person) => {\n    return person.fullname.length <= 25 && person.description.length <= 100;\n};\n\nexport const checkPersonExists = async (personId) => {\n    return await personAPI.findAsync({ _id: personId });\n}\n\nexport const checkQuiz = async (quiz, personId) => {\n    const quizKeys = ['name', 'content', 'personId', '_id'];\n    const contentKeys = ['answers', 'question', 'id', 'score']\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < quizKeys.length; j++) {\n            const k = quizKeys[j];\n            if (el.hasOwnProperty(k) === false) return false;\n        }\n        for (let d = 0; d < el.content.length; d++) {\n            const content = el.content[d];\n            if (content.hasOwnProperty('uri') || content.hasOwnProperty('filename') || content.hasOwnProperty('fileType')) {\n                if (!content.hasOwnProperty('uri')) return false;\n                else if (!content.hasOwnProperty('filename')) return false;\n                else if (!content.hasOwnProperty('fileType')) return false;\n            }\n            for (let j = 0; j < contentKeys.length; j++) {\n                const l = contentKeys[j];\n                if (content.hasOwnProperty(l) === false) return false;\n            }\n            if (typeof content.answers !== 'object' || content.answers?.length === 0) return false;\n            if (typeof content.question !== 'string' || typeof content.question?.length > 23) return false;\n            if (typeof content.score !== 'object' || content.answers?.length === 0) return false;\n            let foundInScore = false\n            for (let n = 0; n < content.score.length; n++) {\n                const score = content.score[n];\n                if (score.personId === personId) foundInScore = true;\n                if (!score.hasOwnProperty('personId')) return false;\n                if (!score.hasOwnProperty('success') || typeof score.success !== 'number') return false;\n                if (!score.hasOwnProperty('failed') || typeof score.success !== 'number') return false;\n            }\n            if (!foundInScore) return false;\n        }\n    }\n    return true;\n};\n\nexport const checkDouble = (double, personId) => {\n    if (typeof double !== 'object') return false;\n    for (let i = 0; i < double.length; i++)\n        if (!scoreVerification(double[i], personId)) return false;\n    return true;\n};\n\nexport const checkSimon = (simon, personId) => {\n    if (typeof simon !== 'object') return false;\n    for (let i = 0; i < simon.length; i++)\n        if (!scoreVerification(simon[i], personId)) return false;\n    return true;\n};\n\nexport const checkDictaphone = (dictaphone, personId) => {\n    if (typeof dictaphone !== 'object') return false;\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n        if (!el.hasOwnProperty('name') || typeof el.name !== 'string' || el.name.length < 2) return false;\n        if (!el.hasOwnProperty('path') || typeof el.path !== 'string' || el.path.length < 100) return false;\n        if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n        if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    }\n    return true;\n};\n\nexport const importPerson = async (person, exists) => {\n\n    if (exists === false) {\n        await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${person._id}`, {intermediates: true});\n    }\n\n    let picture = null;\n    if (person.picture) {\n        picture = uuidv4();\n        const path = `${FileSystem.documentDirectory}persons/${person._id}/pp`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        await FileSystem.writeAsStringAsync(path + `/${picture}.jpg`, person.picture, { encoding: 'base64' }).then(el => {\n            picture = path + `/${picture}.jpg`;\n        }).catch(err => {\n            picture = null;\n        });\n    }\n\n    if (exists === false)\n        return personAPI.insertAsync(\n            {\n                _id: person._id,\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        );\n    else\n        return personAPI.updateAsync({_id: person._id}, {\n            $set: {\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        });\n};\n\nexport const importQuiz = async (quiz) => {\n    let res = true;\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        const path = `${FileSystem.documentDirectory}persons/${el.personId}/quiz`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        for (let j = 0; j < quiz[i].content.length; j++) {\n            const e = quiz[i].content[j];\n            if (e.hasOwnProperty('uri')) {\n                // Import and write file\n                let filename = uuidv4();\n                let filePath;\n                await FileSystem.writeAsStringAsync(path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`, e.uri, { encoding: 'base64' }).then(el => {\n                    filePath = path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`;\n                    filename = filePath;\n                    e.uri = filePath;\n                }).catch(err => {\n                    filename = null;\n                    e.uri = null;\n                });\n            }\n        }\n        const quizFindAsync = await quizAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        const quizExists = quizFindAsync.length > 0;\n        if (quizExists) {\n            await quizAPI.updateAsync( {_id: el._id}, {\n                $set: {\n                    name: el.name,\n                    content: el.content\n                }\n            }).catch(err => {\n                res = false;\n            })\n        } else {\n            await quizAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importDouble = async (double) => {\n    let res = true;\n    for (let i = 0; i < double.length; i++) {\n        const el = double[i];\n        const doubleExists = await doubleAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (doubleExists.length === 0) {\n            await doubleAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importSimon = async (simon) => {\n    let res = true;\n    for (let i = 0; i < simon.length; i++) {\n        const el = simon[i];\n        const simonExists = await simonAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (simonExists.length === 0) {\n            await simonAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importLog = async (dictaphone, personId) => {\n    let res = true;\n    const path = `${FileSystem.documentDirectory}persons/${personId}/recordings`;\n    await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n        console.log('[!] Directory already exists');\n    });\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        const logExists = await dictaphoneAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (logExists.length === 0) {\n            el.date = new Date(el.date);\n            let filename = uuidv4();\n            let filePath;\n            await FileSystem.writeAsStringAsync(path + `/${filename}.m4a`, el.path, { encoding: 'base64' }).then(e => {\n                filePath = path + `/${filename}.m4a`;\n                filename = filePath;\n                el.path = filePath;\n            }).catch(err => {\n                console.log(err);\n                filename = null;\n                el.path = null;\n            });\n            await dictaphoneAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const writeDataFile = async (fullname, content) => {\n    let fileUri = FileSystem.documentDirectory + `${fullname}.alz`;\n    return await FileSystem.writeAsStringAsync(fileUri, content).catch(err => {\n        console.log(err);\n    }).then( (e) => {\n        return (fileUri);\n    });\n};\n\nexport const exportPerson = async (personId, key) => {\n    const personFind = await personAPI.findAsync({ _id: personId });\n    if (!personFind) return ('PERSON_NOT_FOUND');\n    const person = personFind[0];\n    if (!person._id || !person.fullname) return ('INVALID_PERSON');\n    const personData = {\n        _id: person._id,\n        description: person.description,\n        fullname: person.fullname,\n        picture: person.picture ? await fileToBase64(person.picture) : null\n    };\n    const simonData = await simonAPI.findAsync({ personId: personId });\n    const doubleData = await doubleAPI.findAsync({ personId: personId });\n    const quiz = await quizAPI.findAsync({ personId: personId });\n    const quizData = quiz ? await formatQuiz(quiz) : []; // converting files into base64 here\n\n    const dictaphone = await dictaphoneAPI.findAsync({ personId: personId });\n    const dictaphoneData = dictaphone ? await formatLog(dictaphone) : []; // converting files into base64 here\n\n    const result = JSON.stringify({\n        _id: personData._id,\n        description: personData.description,\n        fullname: personData.fullname,\n        picture: personData.picture,\n        activities: {\n            quiz: quizData,\n            double: doubleData,\n            simon: simonData,\n            dictaphone: dictaphoneData\n        }\n    });\n    const uri = await writeDataFile(personData.fullname.replace(' ', '_'), key ? dilacrypt.encrypt(result, key) : result);\n    return (uri);\n};","import React, { useEffect, useState } from 'react';\nimport {\n    ActivityIndicator,\n    ScrollView\n} from 'react-native';\n\nimport { Text, Button } from 'react-native-elements';\n\nimport { lang as HomeLang } from '../../language/home';\nimport * as FileSystem from 'expo-file-system';\nimport * as dataImport from '../../utils/share'\n\nimport styles from './styles';\n\nexport default function ImportData(props) {\n    const [step, setStep] = useState(1);\n    const [error, setError] = useState();\n    \n    useEffect( async () => {\n        try {\n\n            // Import and check file data\n            const content = await FileSystem.readAsStringAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidFile;\n            });\n            const parsed = parseJSON(content);\n            if (!parsed) throw HomeLang[props.lang].InvalidPersonFile;\n            if (typeof parsed !== 'object' || !parsed._id)\n                throw HomeLang[props.lang].InvalidPersonFile;\n\n            // Checking the personal infos\n            setStep(2);\n            if (dataImport.checkPersonInformations(parsed) === false)\n                throw HomeLang[props.lang].InvalidPersonFile;\n            if (dataImport.checkPersonInformationsLength(parsed) === false)\n                throw HomeLang[props.lang].IncorrectPersonFile;\n\n            // Checking if this userId is registered in the local db\n            setStep(3);\n            const found = await dataImport.checkPersonExists(parsed._id);\n            \n            // Checking activities length\n            setStep(4);\n            if (parsed.activities.length > 4) throw HomeLang[props.lang].InvalidActivitiesLength;\n\n            // Checking quiz format\n            setStep(5);\n            if (await dataImport.checkQuiz(parsed.activities.quiz, parsed._id) === false) throw HomeLang[props.lang].InvalidQuizData;\n\n            // Checking double format\n            setStep(6);\n            if (await dataImport.checkDouble(parsed.activities.double, parsed._id) === false) throw HomeLang[props.lang].InvalidDoubleData;\n\n            // Checking simon format\n            setStep(7);\n            if (await dataImport.checkSimon(parsed.activities.simon, parsed._id) === false) throw HomeLang[props.lang].InvalidSimonData;\n      \n            // Checking dictaphone format\n            setStep(8);\n            if (await dataImport.checkDictaphone(parsed.activities.dictaphone, parsed._id) === false) throw HomeLang[props.lang].InvalidLogData;\n\n            // <! -------- Creation process starts ---------- !>\n\n            // Person creation\n            setStep(9);\n            dataImport.importPerson(parsed, found.length > 0).catch( (err) => {\n                throw HomeLang[props.lang].CannotCreatePerson;\n            });\n\n            // Quiz creation\n            setStep(10);\n            dataImport.importQuiz(parsed.activities.quiz).catch(err => {\n                throw HomeLang[props.lang].InvalidQuizData;\n            });\n\n            // Double creation\n            setStep(11);\n            dataImport.importDouble(parsed.activities.double).catch(err => {\n                throw HomeLang[props.lang].InvalidDoubleData;\n            });\n\n            // Simon creation\n            setStep(12);\n            dataImport.importSimon(parsed.activities.simon).catch(err => {\n                throw HomeLang[props.lang].InvalidSimonData;\n            });\n\n            // Journal log creation\n            setStep(13);\n            dataImport.importLog(parsed.activities.dictaphone, parsed._id).catch(err => {\n                throw HomeLang[props.lang].InvalidLogData;\n            });\n\n            // SUCCESS !!\n            setStep(14);\n\n            await FileSystem.deleteAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidPersonFile;\n            });\n\n\n        } catch (e) {\n            setError(e);\n            return false;\n            // props.setImportFile(null);\n        }\n    }, [])\n\n    const parseJSON = (inputString) => {\n        if (inputString) {\n          try {\n            return JSON.parse(inputString);\n          } catch (e) {\n            return false;\n          }\n        }\n    };\n\n    const stepStyle = (idx) => {\n        let clr = idx === step ? 'white' : '#89ff91';\n        if (error && idx === step) clr = 'red';\n        if (step === 14) clr = '#89ff91';\n        return {\n            color: clr,\n            fontStyle: idx === step || error ? 'italic' : 'normal',\n            marginBottom: idx === 13 ? 30 : 0,\n            display: step >= idx ? 'flex' : 'none',\n            alignContent: 'center',\n            textAlign: 'center',\n            fontSize: idx === step ? 14 : 9\n        }\n    } \n\n    const printActivity = (idx) => {\n        if (idx === step && !error && step !== 14)\n            return <ActivityIndicator color={'white'} size={'small'} />\n        return <></>\n    };\n\n    return (\n        <ScrollView style={styles.menu}>\n            { [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14].map( (e, i) => {\n                return <Text key={i} style={ stepStyle(e) }> { HomeLang[props.lang]['Step' + e] } { printActivity(e) }</Text>\n            }) }\n            { error ? <Text style={styles.ErrorMessage}>{ error }</Text> :  <></> }\n            <Button disabled={!error && step < 14} containerStyle={{marginTop: 150, borderRadius: 15}} title={HomeLang[props.lang].GoBack} onPress={() => props.setImportFile(null)}/>\n        </ScrollView>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Image\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\n\nimport { useLocation } from 'react-router-native';\n\nimport AlzheimApp from '../../assets/img/alzheimapp_logo.png';\nimport Menu from './Menu'\nimport ImportData from './ImportData';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [importFile, setImportFile] = useState();\n    const [ambiant, setAmbiant] = useState();\n    Audio.setIsEnabledAsync(true);\n\n    useEffect( async () => {\n        if (ambiant) return;\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by MCOCHET - check his soundcloud here: https://soundcloud.com/mcochet\n            require('../../assets/sound/ambiant.mp3'),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n    }, []);\n\n    const state = useLocation()?.state;\n\n    const username = props.username || state?.username;\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Image source={AlzheimApp} style={styles.logo} resizeMode={'cover'} />\n            </View>\n            { importFile ?\n                <ImportData lang={props.lang} importFile={importFile} setImportFile={setImportFile} /> :\n                <Menu lang={props.lang} username={username} setLang={props.setLang} setImportFile={setImportFile} ambiant={ambiant} />\n            }\n        </View>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} setLang={props.setLang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} setLang={props.setLang} />;\n    }\n    return <Home lang={props.lang} username={props.username} setLang={props.setLang} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: 'white' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        Home: 'Accueil',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n        QuizScore: \"Score des quiz\",\n        SimonScore: \"Score du Simon\",\n        DoubleScore: \"Score du jeu des pairs\",\n        NoScore: \"Aucun score enregistré pour cette activité...\",\n        Success: 'réussite',\n        Global: \"Vue d'ensemble\",\n        BestScoreByDay: 'Meilleur score du jour',\n        ExportedProfile: 'Profil exporté',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        Home: 'Home',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n        QuizScore: \"Quiz Score\",\n        SimonScore: \"Simon Score\",\n        DoubleScore: \"Double Memory Score\",\n        NoScore: \"No score registered for this activity...\",\n        Success: 'success',\n        Global: \"Global view\",\n        BestScoreByDay: 'Best score by day',\n        ExportedProfile: 'Profile exported',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\n\nimport { ScrollView, Alert, View, KeyboardAvoidingView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/selection/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\nimport { exportPerson } from '../../../utils/share';\nimport * as Sharing from 'expo-sharing';\n\nimport * as FileSystem from 'expo-file-system';\n\nimport styles from './styles';\nimport Form from '../../../components/selection/PersonCreation/Form';\nimport { ActivityIndicator } from 'react-native';\n\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n    const [load, setLoad] = useState(false);\n    const [id, setId] = useState(0);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        Person.getById(props.personId).then((result) => {\n            props.setPerson(result[0])\n        });\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n\n        id: id,\n        setId: setId\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/selection', {\n                state: { username: props.username, lang: props.lang }\n            });\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.fullname),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: load ? '' : 'share-alt',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={load ? <ActivityIndicator color={'white'} size={'small'} /> : ActivitiesLang[props.lang]?.ShareProfile}\n                        onPress={async () => {\n                            setLoad(true)\n                            console.log('[~] Pressing export button');\n                            console.log('[+] Exporting person...');\n                            const uri = await exportPerson(props.personId, null);\n                            console.log('[+] Exported person! uri is: ' + uri);\n                            Sharing.shareAsync(uri).then( async (e) => {\n                                await FileSystem.deleteAsync(uri);\n                            }).catch(err => {\n                                console.log(err);\n                            });\n                            setLoad(false);\n                        }}\n                        disabled={load}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/selection', {\n                                state: { username: props.username, lang: props.lang }\n                            });\n                        }}\n                    />\n                </ScrollView>\n            ) : (\n                <KeyboardAvoidingView behavior='height' style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => {\n                            setFullname(props.person.fullname);\n                            setUriPreview(props.person.picture);\n                            setImage('');\n                            setDescription(props.person.description);\n                            setEdit(false)\n                        }}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </KeyboardAvoidingView>\n            )}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync().then( () => {\n                console.log('[+] Permission granted!');\n            })\n            .catch(e => {\n                console.error(e);\n            });            \n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const goBack = async () => {\n        if (recording) await recording?.stopAndUnloadAsync();\n        stopPlayingSounds();\n        props.setPage(0);\n    }\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            if (el) el?.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                    <Button\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'caret-back-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        buttonStyle={styles.recordButton}\n                        title={{}}\n                        titleStyle={styles.titleButton}\n                        onPress={() => goBack()}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <View style={styles.actionButtonsView}>\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n                <Button\n                    containerStyle={styles.actionButtons}\n                    icon={{\n                        name: 'caret-back-outline',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={{}}\n                    titleStyle={styles.titleButton}\n                    onPress={() => goBack()}\n                />\n                </View>\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n\n\n\n\n        // Help section\n        Head: \"Le Simon, comment ça\\nmarche ?\",\n        RulesHead: \"Les règles\",\n        TriesHead: \"Les essais\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu Simon est un {0} de forme circulaire comportant quatre gros boutons de couleurs différentes: rouge, vert, jaune et bleu.\\n\\nLe jeu {1} une des quatres couleurs et {2} toujours associé à cette couleur. Le joueur doit alors {3}.\\n\\nLe jeu {4}, puis {5} une nouvelle couleur. Le jour doit reproduire cette nouvelle séquence. Chaque fois que le joueur reproduit correctement la séquence, le jeu ajoute une nouvelle couleur.`,\n                boldText: ['jeu de mémoire', 'éclaire', 'produit un son', \"appuyer sur la touche de la couleur qui vient de s'allumer\", 'répète la même couleur et le même son', 'ajoute'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois que vous ratez une séquence, vous {0}. Au cours d'une partie, vous avez le droit à seulement {1}.\\n\\nUne fois les quatre erreurs faites, ou alors lorsque vous {2}, votre score est compatibilisé en fonction du nombre de touches dans la séquence actuelle.\\n\\nChaque jour, {3}.`,\n                boldText: ['perdez un essai', 'quatre erreurs', 'abandonnez la partie en cours', 'votre score journalier est remit à zéro'],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n\n\n\n\n        // Help section\n        Head: `The Simon, how does it works?`,\n        RulesHead: \"The rules\",\n        TriesHead: \"The tries\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The Simon is a circular shaped {0} with four different colored buttons: red, green, yellow and blue.\\n\\nThe game {1} one of the four colors and {2} always associated to this color. The player shall {3}.\\n\\nThe game {4}, then {5} another color. The player will have to reproduces this sequence. Each time the player successfully reproduces the sequence, the game adds another color in this sequence.`,\n                boldText: ['memory game', 'lighten', 'produces a sound', \"press the colored button which has just turned on\", 'repeat the same color with the same sound', 'add'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `Each time you fail a sequence, you {0}. In a game, you are allowed up to {1}.\\n\\nOnce the four fails made, or when you {2}, you will have the number of elements in the current sequence saved as your score.\\n\\nEach day, {3}.`,\n                boldText: ['lose a try', 'four maximum fails', 'give up the current game', 'your daily score is reset to zero'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        paddingTop: 20,\n        flex: 1,\n        alignItems: 'center'\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        // flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        //flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    // Help section\n    viewHelpPage: {\n        marginTop: -20,\n        backgroundColor: 'white',\n        width: 100 + '%',\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .4,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate, dailyScore < order.length - 1, bestScore < order.length - 1);\n        setCanPlay(false);\n        setSuccess(true);\n        const path = dailyScore < order.length - 1 ? require(`../../../assets/sound/global/applause.mp3`) : require(`../../../assets/sound/global/you_lose.mp3`);\n        const { sound } = await Audio.Sound.createAsync(path);\n        props.setSound(sound);\n        sound.playAsync();\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            <Overlay\n                visible={success}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => setSuccess(false)}\n                ModalComponent={Modal}\n            >\n                {scoreBeaten ? successOverlay() : failOverlay()}\n                <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            retryGame();\n                        }}\n                        title={SimonLang[props.lang].Retry}\n                        containerStyle={{\n                            borderRadius: 13,\n                            marginRight: 10,\n                        }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setTab(0);\n                        }}\n                        title={SimonLang[props.lang].Exit}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React from 'react';\nimport { View, ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView>\n                <Button\n                    title={SimonLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{SimonLang[props.lang].Head}</Text>\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].Rules()}</Text>\n\n                \n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].TriesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].TriesExplain()}</Text>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\nimport Help from './Help';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr, pos) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: i == pos ? color : '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        Cancel: 'Annuler',\n        GoBack: \"Oui, j'annule l'édition du quiz\",\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Abandonner le quiz\",\n        GiveUpQuiz: \"Êtes-vous sûr de vouloir abandonner ce quiz? Le score restera enregistré.\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        EditedQuiz: \"Quiz modifié avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Bien joué !! 😄\",\n        Success: \"Bien joué ! C'est la bonne réponse !! Vous pouvez maintenant passer à la suite !\",\n        FailedTitle: \"Dommage... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Dommage, mais ce n'était pas la bonne réponse ! Les réponses possibles étaient: ${answersText}.`\n        },\n        SuccessQuizTitle: \"Haut la main !\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Fantastique !! Vous avez réussi ce quiz ! Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Dommage... Vous avez raté ce quiz ! ... Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Sauvegarder le quiz',\n        SaveContent: \"Sauvegarder la question\",\n        AddContent: \"Ajouter la question\",\n        SureCancelEdition: \"Êtes-vous sûr de bien vouloir abandonner l'édition de ce quiz? Vous ne pourrez pas récupérer vos modifications.\",\n\n        // Help page related\n        Head: 'Le quiz, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        CustomHead: \"Personnalisation\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Les règles du quiz sont basiques: il y a des questions {0}, et le joueur doit y répondre. Il peut y avoir {1} réponses possibles, une bonne réponse et c'est un point ajouté au score.\\n\\nIl n'y a pas de perte de points suite à une mauvaise réponse.`,\n                boldText: [\"facultativement accompagnées d'une image ou d'un son\", \"plusieurs\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `Il n'y a pas de quiz par défaut. C'est à vous d'en {0} et de les {1} à votre guise !\\nPour cela, vous devez vous rendre dans la partie \"{2}\".\\n\\nVous aurez là la liste des quiz que vous avez préalablement crée. Si vous n'en avez encore créé aucun, façonnez votre premier quiz avec le bouton \"{3}\".\\n\\nIci vous pourrez ajouter des question avec le bouton \"{4}\". Il vous est demandé {5} (facultatif), qui correspond à un son ou une image pour illustrer votre question.\\n\\nEnsuite, vous devez {6}. Ce sera cette question qui sera ensuite demandée au joueur.\\n\\nEt enfin, {7}. Une fois une réponse valide renseignée, cliquez sur le symbole {8} à côté, et votre réponse est ajoutée à la liste des réponses valides à la question. Vous pouvez en avoir 10 maximum.\\n\\nSi vous avez fait une erreur sur une des réponses, {9} pour la retirer de la liste.\\n\\nUne fois tous les éléments de la question renseignées, cliquez sur \"{10}\" au dessus pour enregistrer la question et retourner à la liste des questions précédemment crées. Ajoutez-en autant que vous voulez pour un quiz.\\n\\nVous pouvez également {11}.\\n\\nUne fois le quiz complet, cliquez sur \"{12}\", et voilà ! Renseignez le nom de ce quiz et c'est terminé, le quiz est désormais jouable !`,\n                boldText: [\"créer\",\n                    \"personnaliser\",\n                    \"Voir les quiz\",\n                    \"Créer un quiz\",\n                    \"Ajouter une question\",\n                    \"d'importer un fichier de référence\",\n                    \"renseigner la question\",\n                    \"ajouter les réponses éventuelles\",\n                    \"( + )\",\n                    \"cliquez simplement dessus\",\n                    \"Valider\",\n                    \"cliquer sur une question pour la modifier\",\n                    \"Terminer la création\"\n                ],\n            });\n        }\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizzes',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        Cancel: 'Cancel',\n        GoBack: 'Yes, I want to go back',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'of success',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Submit\",\n        GiveUpQuizTitle: \"Give up\",\n        GiveUpQuiz: \"Are you sure to give up this quiz? The score will be saved.\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        EditedQuiz: \"Quiz successfuly edited!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Well played!! 😄\",\n        Success: \"Well played! That's the good answer!! You can now go to the next question!\",\n        FailedTitle: \"Oops... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Oops, that's not a valid answer... the valid answer${answers.length > 0 ? 's were' : ' was'} : ${answersText}.`\n        },\n        SuccessQuizTitle: \"Easy peasy!\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Congratulations!! You won this quiz! Your score is for {0} good answer(s) for {1} mistake!',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Better next time! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: \"It's alright... You failed this quiz!... Your score is for {0} good answer(s) for {1} mistake!\",\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Save the quiz',\n        SaveContent: \"Save the question\",\n        AddContent: \"Add the question\",\n        SureCancelEdition: \"Are you sure to cancel this quiz edition? Your modification would not be saved\",\n\n        // Help page related\n        Head: 'The quiz, how does it works?',\n        RulesHead: \"The rules\",\n        CustomHead: \"Customization\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `This is a basic quiz game: there are questions {1}, and the player must answer them. There can be {1} answers, one correct answer and it's a point added to the score.\\n\\nThere is no loss of points for a wrong answer.`,\n                boldText: [\"optionally accompanied by an image or a sound\", \"several possible\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `There are no default quizzes. It is up to you to {0} and {1} them as you wish!\\nTo do this, you must go to the \"{2}\" section.\\nThere you will see the list of quizzes that you have already created. If you haven't created any yet, create your first quiz with the \"{3}\" button.\\n\\nHere you can add questions with the \"{4}\" button. You are asked to {5} (optional), which is a sound or image file to illustrate your question.\\n\\nThen you have to {6}. This question will be asked to the player.\\n\\nAnd finally, {7}. Once you have entered a valid answer, click on the {8} symbol next to it, and your answer would be added to the list of the valid answers to the question. You can have a maximum of 10 possible answers.\\n\\nIf you made a mistake on one of the answers, {9} to remove it from the list.\\n\\nOnce you have filled in all the elements of the question, click \"{10}\" above to save the question and return to the list of questions. Add as many as you want to this quiz.\\n\\nYou can also {11}.\\n\\nOnce the quiz is completed, click \"{12}\" and that's it! Fill in the name of this quiz and it's done, the quiz is now playable!`,\n                boldText: [\"create\",\n                    \"customize\",\n                    \"View quizzes\",\n                    \"Create a quiz\",\n                    \"Add a question\",\n                    \"import a reference file\",\n                    \"fill in the question\",\n                    \"add the possible answers\",\n                    \"( + )\",\n                    \"simply click on it\",\n                    \"Submit\",\n                    \"click on a question to edit it\",\n                    \"Complete the quiz creation\"\n                ],\n            });\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginTop: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: 235,\n        marginTop: 20,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: 235,\n        marginTop: 10,\n        backgroundColor: 'blue',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    overlayDescriptionAnswers: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15,\n        marginBottom: 150\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: 30,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    modalDescription: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: 290,\n        marginTop: 10\n    },\n    quizTitleInput: {\n        fontSize: 15\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 10\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        width: 250\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: 250,\n        height: 250\n    },\n    gameQuestion: {\n        fontSize: 25,\n        marginTop: 10,\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey'\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15\n    },\n\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n        textAlign: 'center'\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image, ActivityIndicator } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            <Button\n                title={props.isLoading ? <ActivityIndicator color={'blue'} size={'small'} /> : QuizLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n                disabled={props.quiz.length === 0}\n            />\n\n            <Button\n                title={QuizLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import {\n    View,\n    Image\n} from 'react-native';\nimport { Icon, FAB, Avatar } from 'react-native-elements';\nimport { Audio } from 'expo-av';\n\nexport const printFile = (fileType, uri, clearFile, isPlaying, pauseSound, setIsPlaying, sound, setSound) => {\n    if (fileType === 'image') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Image source={{uri: uri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n            </View>\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 100, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Icon onPress={() => isPlaying ? pauseSound() : playSound(setIsPlaying, sound, setSound, uri) } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30, zIndex: 2}} />\n            </View>\n        );\n    }\n};\n\nexport const playSound = async (setIsPlaying, sound, setSound, uri) => {\n    setIsPlaying(true);\n    await Audio.setAudioModeAsync({\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n    });\n    const getSoundStatus = await sound?.getStatusAsync();\n    if (getSoundStatus?.isLoaded === false) {\n        await sound.loadAsync({ uri: uri });\n        setSound(sound);\n    }\n    await sound.playAsync();\n    sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n        if (playbackStatus.didJustFinish) {\n            await sound.unloadAsync();\n            setIsPlaying(false);\n        }\n    });\n};\n\nexport const pickCorrectIcon = (fileType, uri) => {\n    if (fileType === 'image') {\n        return (\n            <Avatar\n                source={{ uri: uri }}\n                rounded\n                size={'medium'}\n                containerStyle={{marginHorizontal: 8}}\n            />\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <Icon\n                raised\n                name={'musical-notes-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    } else {\n        return (\n            <Icon\n                raised\n                name={'text-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    }\n};","import React, { useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nimport { pickCorrectIcon } from '../utils/quizFunc';\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n\n    const length = props.quizEdit?.content?.length + props.newContent?.length;\n\n    const pickOutQuestion = () => {\n        if (length <= 2 && props.quizEdition) return;\n        if (props.quizEdition === true) {\n            if (Number.isInteger(props.questionId)) {\n                // if the questionId is an integer, it means it has not\n                // been added to the api yet, so it's an index of the\n                // newContent array passed in the props from the ViewQuiz Component\n\n                const index = props.questionId - props.quizEdit?.content?.length;\n                const tmp = props.newContent;\n                tmp.splice(index, 1);\n                // take out the new content from the newContent state in the\n                // parent component\n                props.setNewContent([...tmp]);\n            } else {\n                // todo not get by api but update quizedit state\n                // update api only when saving quiz\n                const index = props.quizEdit.content.findIndex(el => el.id == props.questionId );\n                const tmp = props.quizEdit;\n                tmp.content.splice(index, 1);\n                props.setQuizEdit(tmp);\n                props.setReload(!props.reload)\n                props.setEditedQuiz(true);\n            }\n        } else {\n            const tmp = props.quizEdition ? props.content : props.contentList;\n            tmp.splice(props.index, 1)\n            props.setContent([...tmp]);\n        }\n        setModal(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{ marginRight: 10 }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={{ fontWeight: 'bold' }}\n                    onPress={() => pickOutQuestion() }\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { props.setEditContent(props.questionId) }} >\n                { pickCorrectIcon(props.content.fileType, props.content.uri) }\n                <ListItem.Content>\n                    <ListItem.Title>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon disabled={props.quizEdition == true && length <= 2} reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","export function ScoreRatio (content, personId) {\n    var success = 0;\n    var fail = 0;\n    content.map( (el, i) => {\n        const score = el.score.filter( (el) => el.personId == personId );\n        score.map( (el, i) => {\n            success += parseInt(el.success);\n            fail += parseInt(el.failed);\n        });\n    });\n    const total = success + fail;\n    if (total == 0)\n        return 0;\n    const score = ((success / total) * 100).toFixed(2);\n    return score;\n};","import React from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport { ScoreRatio } from './utils/scoreFunc';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n\n    return (\n        <ListItem {...componentProps} onPress={() => {\n                props.setEdit(true);\n                props.setQuizEdit(props.quiz);\n            }}>\n            <ListItem.Content>\n                <ListItem.Title>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    { ScoreRatio(props.quiz.content, props.personId) }{'% '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Text,\n    ScrollView,\n} from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport QuizList from './QuizList';\nimport styles from './styles';\n\nimport * as API from '../../../data/quizApi';\n\nexport default function ViewQuizList(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <ScrollView>\n            {props.loading ? (\n                <ActivityIndicator\n                    color={'blue'}\n                    size={'small'}\n                    style={styles.loading}\n                />\n            ) : props.quiz?.length > 0 ? (\n                props.quiz?.map((el, i) => {\n                    return (\n                        <QuizList\n                            index={i}\n                            key={el._id}\n                            quiz={el}\n                            lang={props.lang}\n                            deleteId={deleteId}\n                            personId={props.personId}\n                            setEdit={props.setEdit}\n                            setQuizEdit={props.setQuizEdit}\n                        />\n                    );\n                })\n            ) : (\n                <Text style={styles.nothingYet}>\n                    {QuizLang[props.lang].NothingYet}\n                </Text>\n            )}\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/activities/quiz/success.gif';\n\nimport styles from './styles';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    KeyboardAvoidingView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge, FAB } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContent(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <KeyboardAvoidingView behavior='padding' style={{flex:1}}>\n                <ScrollView contentContainerStyle={styles.ScrollView}>\n                    { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                    <Button\n                        title={QuizLang[props.lang].ImportFile}\n                        buttonStyle={{ borderRadius: 15 }}\n                        onPress={pickFile}\n                    />\n                    <Text style={styles.overlayDescriptionReference}>\n                        {QuizLang[props.lang].ReferenceFile}\n                    </Text>\n                    <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                        <Input\n                            value={props.question}\n                            inputStyle={{fontSize: 14}}\n                            containerStyle={{marginBottom: 50}}\n                            placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                            onChangeText={(e) => props.setQuestion(e)}\n                        />\n                        <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                        <Input\n                            placeholder={QuizLang[props.lang].AddAnswer}\n                            inputStyle={{fontSize: 14}}\n                            value={answer}\n                            onChangeText={(e) => setAnswer(e)}\n                        />\n                        <Button\n                            icon={\n                                <Icon\n                                    name={'add-circle'}\n                                    type={'ionicon'}\n                                    color={'white'}\n                                    size={18}\n                                    style={{ marginHorizontal: 5 }}\n                                />\n                            }\n                            onPress={() => addAnswer()}\n                            disabled={props.answers.length >= 10}\n                        />\n                        </View>\n                    </View>\n                    <View style={styles.badgesView}>\n                        {props.answers.map( (el, i) => {\n                            return(\n                                <Badge\n                                    key={i}\n                                    value={el}\n                                    badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                    onPress={() => pickOutAnswer(i)}\n                                />\n                            )\n                        })}\n                    </View>\n                    <Text style={styles.overlayDescriptionAnswers}>\n                        {QuizLang[props.lang].WhatIsAnswer}\n                    </Text>\n                </ScrollView>\n            </KeyboardAvoidingView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    SafeAreaView,\n    ScrollView,\n    Alert,\n    Modal,\n    Text\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay } from 'react-native-elements';\n\nimport QuestionList from './Creation/QuestionList';\nimport ViewQuizList from './ViewQuizList';\n\nimport * as API from '../../../data/quizApi';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport FormQuizContent from './Creation/FormQuizContent';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n    // if the user is editing or not an existing quiz\n    const [edit, setEdit] = useState(false);\n\n    // if the user want to add a question to an existing quiz\n    const [newQuestion, setNewQuestion] = useState(false);\n\n    // if the user want to edit an existing question to an existing quiz\n    const [editContent, setEditContent] = useState();\n\n    // the existing quiz to edit\n    const [quizEdit, setQuizEdit] = useState();\n\n    // the new content to add in an existing quiz\n    const [newContent, setNewContent] = useState([]);\n\n    // check if something has been edited\n    const [editedQuiz, setEditedQuiz] = useState(false);\n\n    // open the modal of going back without saving confirmation\n    const [modal, setModal] = useState(false);\n\n    // the states for the quiz edition (add / edit question)\n    const [question, setQuestion] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const push = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setNewContent([...newContent, push]);\n        setEditedQuiz(true);\n        setSuccess(true);\n    };\n\n    const saveContent = () => {\n        let content;\n        let index;\n        if (Number.isInteger(editContent)) {\n            // edit newContent array\n            content = newContent[editContent - quizEdit?.content?.length];\n        } else {\n            // edit quizEdit array\n\n            // for already in api content -- think of reuploading the file\n            // if there's a new one, or to delete it\n            index = quizEdit.content.findIndex(el => el.id == editContent);\n            content = quizEdit.content[index];\n            if (fileType != content.fileType || uri != content.uri)\n                content.editedFile = true;\n        }\n        content.filename= filename;\n        content.fileType = fileType;\n        content.uri = uri;\n        content.answers = answers;\n        content.question = question;\n        setEditedQuiz(true);\n        setSuccess(true);\n        if (Number.isInteger(editContent)) {\n            if (newContent.length == 1)\n                setNewContent([content]);\n            else\n                setNewContent([...content]);\n        } else {\n            quizEdit.content[index] = content;\n            setQuizEdit(quizEdit);\n        }\n    };\n\n    // clear the states before edition or creation of a content\n    const clearState = () => {\n        setAnswers([]);\n        setQuestion();\n        setFileType();\n        setFilename();\n        setUri();\n        setSound(new Audio.Sound());\n    };\n\n    // Save the edited quiz\n    const saveQuiz = () => {\n        if (!editedQuiz) return;\n        const content = quizEdit.content.concat(newContent);\n        API.saveQuiz(props.personId, quizEdit._id, content).then((data) => {\n            return Alert.alert(\n                QuizLang[props.lang].EditedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            props.setReload(!props.reload);\n                            setNewContent([]);\n                            goBack();\n                        },\n                    }\n                ]\n            );\n        });\n    }\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const viewPage = () => {\n        if (editContent && !newQuestion) {\n            if (success) setSuccess(false);\n            let content;\n            if (Number.isInteger(editContent)) {\n                content = newContent[editContent - quizEdit?.content?.length];\n            } else {\n                const index = quizEdit.content.findIndex(el => el.id == editContent);\n                content = quizEdit.content[index];\n            }\n            if (!content) return;\n            setFilename(content.filename);\n            setFileType(content.fileType);\n            setUri(content.uri);\n            setQuestion(content.question);\n            setAnswers([...content.answers]);\n            setNewQuestion(true);\n        } else if (newQuestion) { // if the user wants to set a new question for quiz edition\n            return (<FormQuizContent\n                        lang={props.lang}\n                        setAnswers={setAnswers}\n                        setFileType={setFileType}\n                        setQuestion={setQuestion}\n                        setUri={setUri}\n                        setFilename={setFilename}\n                        setSuccess={setSuccess}\n                        setSound={setSound}\n                        setIsPlaying={setIsPlaying}\n                        pauseSound={pauseSound}\n                        uri={uri}\n                        filename={filename}\n                        answers={answers}\n                        fileType={fileType}\n                        question={question}\n                        success={success}\n                        sound={sound}\n                        isPlaying={isPlaying}\n                />);\n        } else if (edit && !newQuestion) {\n             // if the user want to see all the question for the quiz edition\n            return (quizEdit.content)?.concat(newContent)?.map((el, i) => {\n                return (<QuestionList\n                    index={i}\n                    key={i}\n                    id={quizEdit._id || 0}\n                    quizEdit={quizEdit}\n                    newContent={newContent}\n                    content={el}\n                    lang={props.lang}\n                    questionId={el.id || i}\n                    quizEdition={true}\n                    reload={props.reload}\n                    setReload={props.setReload}\n                    setEditedQuiz={setEditedQuiz}\n                    setEditContent={setEditContent}\n                    setQuizEdit={setQuizEdit}\n                    setNewContent={setNewContent}\n                />);\n            })\n        } else {\n             // if the user want to see all the existing quiz for the quiz edition\n            return (<ViewQuizList\n                quiz={props.quiz}\n                loading={props.loading}\n                lang={props.lang}\n                personId={props.personId}\n                setEdit={setEdit}\n                setQuizEdit={setQuizEdit}\n                setReload={props.setReload}\n            />);\n        }\n    };\n\n    const goBack = () => {\n\n        if (!success) setSuccess(false);\n\n        if ( (editedQuiz && !newQuestion) || newContent.length > 0) {\n            setModal(true);\n            return;\n        }\n\n        if (editContent) {\n            clearState();\n            setEditContent();\n            setNewQuestion(false);\n        } else if (newQuestion)\n            setNewQuestion(false);\n        else if (edit) {\n            setEditedQuiz(false);\n            setEdit(false);\n        } else\n            props.setTab(0);\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return saveContent();\n        } else if (newQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].AddContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return pushContent();\n        } else if (edit) {\n            // save the quiz button\n            if (mode == 'title') return QuizLang[props.lang].Save;\n            else if (mode == 'disabled') return !(editedQuiz);\n            else if (mode == 'onpress') return saveQuiz();\n        } else {\n            // create a quiz button\n            if (mode == 'title') return QuizLang[props.lang].Create;\n            else if (mode == 'disabled') false;\n            else if (mode == 'onpress') return props.setTab(4);\n        }\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => setModal(false)}\n                    ModalComponent={Modal}\n                >\n                    <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                    <View style={{ flexDirection: 'row' }}>\n                        <Button\n                            title={QuizLang[props.lang].Cancel}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{ marginRight: 10 }}\n                            onPress={() => setModal(false)}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].GoBack}\n                            buttonStyle={{ fontWeight: 'bold' }}\n                            onPress={() => {\n                                setEditedQuiz(false);\n                                setEditContent();\n                                setEdit(false);\n                                setNewContent([]);\n                                setModal(false);\n                            } }\n                        />\n                    </View>\n                </Overlay>\n\n\n                <Button\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={edit ? 'save-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        buttonTop('onpress')\n                    }}\n                    disabled={ buttonTop('disabled') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => goBack() }\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                {\n                    edit && !newQuestion && !editContent ?\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setNewQuestion(true) }\n                    /> : <></>\n                }\n                <ScrollView style={{marginBottom: 40}}>\n                { viewPage() }\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContent from './FormQuizContent';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\nimport { Audio } from 'expo-av';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n    const [modalConfirmation, setModalConfirmation] = useState(false);\n\n    const [editContent, setEditContent] = useState();\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name.substring(0, 23),\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    // Save an existing question\n    const saveContent = () => {\n        content[editContent].fileType = fileType;\n        content[editContent].filename = filename;\n        content[editContent].uri = uri;\n        content[editContent].question = question;\n        content[editContent].answers = answers;\n        setContent([...content]);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        if (isPlaying) setIsPlaying(false);\n    };\n\n    const clearState = () => {\n        setAnswers([]);\n        setFileType();\n        setFilename();\n        setUri();\n        setQuestion();\n        setSuccess(false);\n    };\n\n    const printQuestionList = () => {\n        if (content.length === 0) {\n            return (<Text style={styles.nothingYet}>\n                {QuizLang[props.lang].NoQuestionYet}\n            </Text>);\n        } else {\n            return content?.map((el, i) => {\n                return (\n                    <QuestionList\n                        index={i}\n                        key={i}\n                        id={i}\n                        content={el}\n                        lang={props.lang}\n                        setContent={setContent}\n                        setEditContent={setEditContent}\n                        questionId={i}\n                        contentList={content}\n                    />\n                );\n            });\n        }\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent !== undefined) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); return saveContent(); }\n        } else if (createQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].OK;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); setModal(false); return pushContent(); }\n        } else {\n            if (mode == 'title') return QuizLang[props.lang].Complete;\n            else if (mode == 'disabled') return !(content.length > 0);\n            else if (mode == 'onpress') { return setModal(true);  }\n        }\n    };\n\n    const printPage = () => {\n        if (editContent !== undefined && !createQuestion) {\n            if (success) setSuccess(false);\n            setAnswers(content[editContent].answers);\n            setFileType(content[editContent].fileType);\n            setFilename(content[editContent].filename);\n            setUri(content[editContent].uri);\n            setQuestion(content[editContent].question);\n            setCreateQuestion(true);\n        }\n        if (createQuestion) { // if the user is creating a new question\n            return <FormQuizContent\n                /* Form to create a quiz */\n                lang={props.lang}\n                setAnswers={setAnswers}\n                setFileType={setFileType}\n                setQuestion={setQuestion}\n                setUri={setUri}\n                setFilename={setFilename}\n                setSuccess={setSuccess}\n                setSound={setSound}\n                setIsPlaying={setIsPlaying}\n                pauseSound={pauseSound}\n                uri={uri}\n                filename={filename}\n                answers={answers}\n                fileType={fileType}\n                question={question}\n                success={success}\n                sound={sound}\n                isPlaying={isPlaying}\n            />\n        } else {\n            return <SafeAreaView style={styles.safeArea}>\n                <Button\n                    title={QuizLang[props.lang].AddQuestion}\n                    icon={\n                        <Icon\n                            name={'add-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => setCreateQuestion(true)}\n                />\n                <ScrollView style={{marginBottom: 40}}>\n                    { props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : printQuestionList() }\n                </ScrollView>    \n            </SafeAreaView>\n        }\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button containerStyle={{ marginTop: 10, width: 40 }} title={{}} icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    } disabled={name?.length < 3 || name.length > 23 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            {/* Confirmation give up quiz creation */}\n            <Overlay\n                visible={modalConfirmation}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => setModalConfirmation(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={QuizLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={() => setModalConfirmation(false)}\n                    />\n                    <Button\n                        title={QuizLang[props.lang].GoBack}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={() => {\n                            setModalConfirmation(false);\n                            props.setTab(2);\n                        } }\n                    />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ buttonTop('disabled') }\n                    onPress={ () => buttonTop('onpress') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearState();\n                        pauseSound();\n                        if (createQuestion)\n                            setCreateQuestion(!createQuestion);\n                        else if (content.length == 0) props.setTab(2);\n                        else setModalConfirmation(true)\n                    }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            { printPage() }\n        </>\n    );\n}\n","import React from 'react';\nimport { Text, Button, Icon, FAB } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif');\n    return (\n    <>\n        { props.quizLength > 1 ? <FAB\n            style={{marginTop: 140, position: 'absolute', zIndex: 10}}\n            containerStyle={{marginLeft: 120}}\n            size=\"small\"\n            icon={{name: 'repeat-sharp', type: 'ionicon', color:'white' }}\n            onPress={() => props.pickRandomQuizz()}\n        /> : <></> }\n        <Lottie LottieSource={ThinkingLottie} ImageSource={ThinkingImage} LottieStyle={{marginTop: -25, height: 250, marginBottom: -30}} />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButton}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            buttonStyle={{ backgroundColor: 'red' }}\n            containerStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, Alert, View, Modal } from 'react-native';\nimport { Text, Image, Input, Button, Icon, Overlay } from 'react-native-elements';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../../assets/img/activities/sad.gif';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport Lottie from '../../../utils/Lottie';\nimport { Audio } from 'expo-av';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n    const [modal, setModal] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const [success, setSuccess] = useState(0);\n    const [fail, setFail] = useState(0);\n    const [confetti, setConfetti] = useState(false);\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const TrophyLottie = require('../../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../../assets/lottie/sad.json');\n\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const stopSound = async () => {\n        await pauseSound();\n        setSound(new Audio.Sound());\n        await sound?.unloadAsync();\n    }\n\n    const playSound = async () => {\n        setIsPlaying(true);\n        await Audio.setAudioModeAsync({\n            staysActiveInBackground: true,\n            shouldDuckAndroid: true,\n        });\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus?.isLoaded === false) {\n            await sound.loadAsync({ uri: game[current].uri });\n            setSound(sound);\n        }\n        await sound.playAsync();\n        sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n            if (playbackStatus.didJustFinish) {\n                await sound.unloadAsync();\n                setIsPlaying(false);\n            }\n        });\n    };\n\n    const setMediaType = () => {\n        if (!game[current]) return;\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <Icon onPress={() => isPlaying ? pauseSound() : playSound() } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30}} />\n            default:\n                return <></>;\n        }\n    };\n\n    const openAlertResultQuestion = (result) => {\n        return (\n            Alert.alert(\n                result ? QuizLang[props.lang].SuccessTitle : QuizLang[props.lang].FailedTitle,\n                result ? QuizLang[props.lang].Success : QuizLang[props.lang].Failed(game[current].answers),\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: async () => {\n                            if (current + 1 <= game.length - 1)\n                                setCurrent(current + 1);\n                            else {\n                                const path = success >= fail ? require(`../../../../assets/sound/global/applause.mp3`) : require(`../../../../assets/sound/global/you_lose.mp3`);\n                                if (success >= fail) setConfetti(true);\n                                const { sound } = await Audio.Sound.createAsync(path);\n                                setSound(sound);\n                                sound.playAsync();\n                                setModal(true);\n                            }\n                        },\n                    }\n                ]\n            )\n        )\n    };\n\n    const answerQuestion = async () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        stopSound();\n        setAnswer('');\n        const result = game[current].answers.includes(answerTrimedLowercase);\n        if (result === false) {\n            // increment the fail and update the API\n            setFail(fail + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, false);\n        } else {\n            // increment the success and update the API\n            setSuccess(success + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, true)\n        }\n        openAlertResultQuestion(result);\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                {confetti && success >= fail ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n                )}\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => props.setTab(0)}\n                    ModalComponent={Modal}\n                >\n                    {success >= fail ? \n                        <>\n                            <Lottie LottieSource={TrophyLottie} ImageSource={TrophyImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} loop={false} />\n                            <Text style={{color:'blue', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].SuccessQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].SuccessQuiz(fail, success)}</Text>\n                        </>\n                    :\n                        <>\n                            <Lottie LottieSource={SadLottie} ImageSource={SadImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} />\n                            <Text style={{color:'red', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].FailQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].FailQuiz(fail, success)}</Text>\n                        </>\n                    }\n                    <Button title={QuizLang[props.lang].Leave} onPress={() => props.setTab(0)} containerStyle={styles.leaveButton} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </Overlay>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button buttonStyle={styles.buttonQuizGameOK} title={QuizLang[props.lang].OK} onPress={() => { answerQuestion() }} />\n                </View>\n            </>\n        }\n    </>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\n// This component is mounted when the user clicks on 'Play' in the main quiz menu\nexport default function Play(props) {\n    const [play, setPlay] = useState(false);\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quizId={props.quiz._id}\n                personId={props.personId}\n                quiz={props.quiz.content}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n                quizLength={props.quizLength}\n            />\n        }\n    </View>);\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{QuizLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Rules()}</Text>\n\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].CustomHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Custom()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler, Alert } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber, randomArrayElement } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Creation/CreateQuiz';\nimport Play from './Play';\nimport Help from './Help';\n\nimport * as API from '../../../data/quizApi';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1) {\n                    Alert.alert(\n                        QuizLang[props.lang].GiveUpQuizTitle,\n                        QuizLang[props.lang].GiveUpQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    setTab(0);\n                                }\n                            },\n                        ]\n                    )\n                }\n                else setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            let rand = randomArrayElement(random, 0, quiz.length - 1);\n            setRandom(rand);\n        }\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    isLoading={isLoading}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                quizLength={quiz.length}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    setReload={setReload}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {printPage()}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'green')\n        color = '#459449';\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Essai${tries > 1 ? 's' : ''} restant${tries > 1 ? 's' : ''}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Score actuel: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Commencer \",\n        GiveUp: \"Abandonner\",\n        Reinit: \"Nouveau modèle\",\n        TitleGiveUp: \"Abandonner la partie\",\n        SureToGiveUp: \"Êtes-vous sûr(e) de vouloir abandonner la partie? Votre score sera enregistré.\",\n        Congratulations: 'Félicitations !!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: \"Recommencer\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'Le jeu des pairs, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu des pairs est assez connu et classique. Lorsque vous commencerez la partie, vous aurez un {0}. Cliquez alors sur le bouton \"{1}\" sur le bas de l’écran pour retourner les cartes face verso.\\n\\nVous devrez alors {2}. Par exemple, si vous cliquez sur une carte rouge, vous devrez cliquer sur l’autre carte rouge ensuite.\\n\\nPlus vous grimpez dans le score, plus le nombre de paires s’ajoutent au schéma. Il peut y avoir jusqu’à {3} au total.`,\n                boldText: [\"schéma de plusieurs paires de cartes face recto\", \"Commencer\", \"retourner les paires l'une après l’autre\", \"6 paires\"],\n            });\n        },\n        ScoreHead: \"Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois qu’un schéma est complété (c'est-à-dire que toutes les cartes ont été retournées), {0} et passez à un schéma suivant, {1}.\\n\\nLes points peuvent vous servir à avoir un joli score, mais aussi à recréer un nouveau schéma si vous l’avez complètement oublié. A chaque re-création d’un schéma, {2}. Et vous ne pouvez pas recréer un schéma s’il ne vous reste {3}.`,\n                boldText: [\"vous gagnez un point\", \"potentiellement plus difficile\", \"vous perdez un point\", \"qu’un essai pour le schéma actuel\"],\n            });\n        },\n        Remember: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Mémorisez bien ce schéma!'],\n            }, 'green');\n        }\n    },\n    en: {\n        Play: 'Play',\n        Help: 'How does it work',\n        Leave: 'Back',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Remaning tr${tries > 1 ? 'ies' : 'y'}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Actual score: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Start \",\n        GiveUp: \"Give up\",\n        Reinit: \"New model\",\n        TitleGiveUp: \"Give up the game\",\n        SureToGiveUp: \"Are you sure to give up this party? Your score will be saved.\",\n        Congratulations: 'Congratulations!!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        SoBad: 'So sad...',\n        ScoreNotBeated: 'Your daily score has not been beaten... But you can retry!',\n        Retry: \"Retry\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Best score made today: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'The double memory, how does it works?',\n        RulesHead: \"The rules\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The game of peers (or double memory) is quite familiar and classic. When you start the game, you will have a {0}. Then click on the \"{1}\" button at the bottom of the screen to turn the cards face up.\\n\\nFor example, if you click on a red card, you will have to click on the other red card next.\\n\\nThere can be up to {3} in total.`,\n                boldText: [\"pattern of several pairs of cards face up\", \"Start\", \"turn over the pairs one after the other\", \"6 pairs\"],\n            });\n        },\n        ScoreHead: \"The score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `Each time a pattern is completed (i.e., all the cards have been turned over), {0} and move on to the next pattern, {1}.\\n\\nThe points can be used to get a nice score, but they can also be used to recreate a new pattern if you've completely forgotten about it. Each time you re-create a pattern, {2}. And you can't recreate a pattern if you don't have {3} left.`,\n                boldText: [\"you earn a point\", \"potentially more challenging\", \"you lose a point\", \"than a try for the current pattern\"],\n            });\n        },\n        Remember: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Remember this schema carefully!'],\n            }, 'green');\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { Dimensions } from 'react-native'\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nconst mode = SCREEN_WIDTH >= SCREEN_HEIGHT ? 'landscape' : 'portrait';\nconst factor = mode == 'landscape' ? hp : wp;\n\nexport default StyleSheet.create({\n    view: {\n        height: hp('100%'),\n        paddingBottom: 40,\n        flex: 1,\n    },\n    logo: {\n        width: 90,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n        marginBottom: 20\n    },\n    RectoCard: {\n        width: factor('21%'),\n        height: 0,\n        backgroundColor: '#C3C3CF',\n        borderRadius: 20,\n        borderColor: '#858593',\n        borderWidth: 1,\n        aspectRatio: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    PlayingCard: {\n        width: factor('21%'),\n        height: 0,\n        borderRadius: 20,\n        aspectRatio: 1,\n        borderColor: '#68FF5C',\n        borderWidth: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    VersoCard: {\n        width: factor('21%'),\n        height: 0,\n        borderRadius: 20,\n        opacity: .8,\n        marginHorizontal: 5,\n        aspectRatio: 1,\n        marginVertical: 5\n    },\n    IconCard: {\n        marginTop: 28 + '%'\n    },\n    viewGame: {\n        marginTop: 10,\n        width: 95+'%',\n        height: hp('55%'),\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    buttonViewPlay: {\n        flexDirection: 'row',\n        width: mode == 'portrait' ? wp('100%') : hp('100%'),\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: 10\n    },\n    playButtons: {\n        alignContent: 'center',\n        textAlign: 'center',\n        paddingHorizontal: 30,\n        borderRadius: 10,\n        marginHorizontal: 5\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        paddingTop: 20,\n        width: wp('100%'),\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={DoubleLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{DoubleLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].Rules()}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].ScoreHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].ScoreHelp()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React from 'react';\nimport { Image, View } from 'react-native';\nimport { Button, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport DoubleLogo from '../../../assets/img/activities/double/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={DoubleLogo} style={styles.logo} />\n\n            <Button\n                title={DoubleLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={DoubleLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <View>\n\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: -50,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                        type: 'ionicon',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.ambiantSoundPlay() }\n            />\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 20,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.soundEnabled ? 'sound' : 'sound-mute',\n                        type: 'entypo',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.setSoundEnabled(prev => !prev) }\n            />\n            </View>\n\n            <Button\n                title={DoubleLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => {\n                    props.ambiant.unloadAsync();\n                    props.setPage(null);\n                }}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}","const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};\n\nexport const generateRandomPair = (length) => {\n    const colors = [\n        '#791414',\n        '#143479',\n        '#791462',\n        '#147920',\n        '#797714',\n        '#14AB9D'\n    ];\n    const icons = [\n        'airplane',\n        'boat',\n        'bulb',\n        'color-palette',\n        'earth',\n        'gift',\n        'happy',\n        'heart-circle',\n        'restaurant',\n        'ribbon'\n    ]\n    var arr = [];\n    for (let i = 0; i < length / 2; i++) {\n        var indexColor = Math.floor(Math.random() * colors.length);\n        var indexIcon = Math.floor(Math.random() * icons.length);\n        arr.push({ color: colors[indexColor], icon: icons[indexIcon] }, { color: colors[indexColor], icon: icons[indexIcon] });\n        colors.splice(indexColor, 1);\n        icons.splice(indexIcon, 1);\n    }\n    arr = shuffle(arr);\n    for (let i = 0; i < arr.length; i++) {\n        const el = arr[i];\n        el.idx = i\n    }\n\n    return (arr);\n};","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements';\n\nimport { Dimensions } from 'react-native'\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nimport styles from '../styles';\n\nexport default function Card(props) {\n    var cardStyles;\n    const factor = SCREEN_WIDTH >= SCREEN_HEIGHT ? SCREEN_HEIGHT : SCREEN_WIDTH;\n    if (props.inPlay) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.PlayingCard]];\n    else if (props.inFound || props.show) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.VersoCard]];\n    else cardStyles = styles.RectoCard\n\n    const icon = !props.inFound && !props.inPlay && !props.show ? 'help-circle-outline' : props.icon;\n\n    return (\n        <>\n            <TouchableOpacity style={ cardStyles } onPress={() => {\n                if (!props.inPlay && !props.inFound) props.ReturnCard(props.index);\n            }}>\n                <Icon\n                    name={icon}\n                    size={props.inFound || props.show || props.inPlay ? factor * .08 : factor * .08}\n                    color={props.inFound || props.show || props.inPlay ? 'white' : 'grey'}\n                    type=\"ionicon\"\n                    style={styles.IconCard}\n                />\n            </TouchableOpacity>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { View, Text, Modal } from 'react-native';\n\nimport { Button, Overlay, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../assets/img/activities/sad.gif';\n\nimport Lottie from '../../utils/Lottie';\n\nimport styles from './styles';\n\nimport { generateRandomPair } from './subs/helpers';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport Card from './subs/Card';\n\nexport default function Play(props) {\n    const [game, setGame] = useState([...generateRandomPair(4)]); // the current map game\n    const [found, setFound] = useState([]);\n    const [tries, setTries] = useState(3);\n    const [play, setPlay] = useState([]); // the current play of the player, an array with two values max, corresponding to the cards the player played\n    const [show, setShow] = useState(true);\n    const [confetti, setConfetti] = useState(false);\n    const [pause, setPause] = useState(false);\n\n    const TrophyLottie = require('../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../assets/lottie/sad.json');\n\n    const setLengthGame = () => {\n        if (props.score <= 8)\n            return 4;\n        else if (props.score <= 15)\n            return 6;\n        else if (props.score <= 30)\n            return 8;\n        else if (props.score <= 45)\n            return 10;\n        else\n            return 12;\n    }\n\n    // Exemple game element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null },\n            { idx: 2, color: '#ffffff', icon: null },\n            { idx: 3, color: '#ferdnc', icon: null }\n        ]\n    */\n\n        // each play, we push the current card to the play state, and check if the first element exists in the\n        // game state, and if the second element is the same as the first one, if so => success for a round, and push\n        // this pair in the found state. If fail => clear the play && found states\n\n    // Exemple play element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 2, color: '#ffffff', icon: null }\n        ] // this is a successful array\n\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null }\n        ] // this is a fail array\n    */\n\n    const failOverlay = () => {\n        if (props.modal == false) return;\n        return (\n            <>\n                <Lottie\n                    LottieSource={SadLottie}\n                    ImageSource={SadImage}\n                    autoplay={true}\n                    loop={true}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const successOverlay = () => {\n        if (!confetti) setConfetti(true);\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].BestScoreToday(props.bestScoreDay)}\n                </Text>\n                <Lottie\n                    LottieSource={TrophyLottie}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n    \n    const newModel = () => {\n        if (props.score == 0) return;\n        const currentGameLength = game.length;\n        props.setScore(prevScore => prevScore - 1);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(currentGameLength)]);\n    };\n\n    const printButton = () => {\n        return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={show ? DoubleLang[props.lang].Start : DoubleLang[props.lang].Reinit} onPress={() => { if (show) setShow(false); else newModel(); }} buttonStyle={[styles.playButtons, {backgroundColor: show ? '#208bdc' : 'green'}]} icon={\n                    <Icon\n                    name={show ? \"play\" : ''}\n                    size={18}\n                    color=\"white\"\n                    type=\"ionicon\"\n                />\n                } iconRight={true} disabled={!show && props.score === 0 || tries <= 1} />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.ambiantSoundPlay() }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.soundEnabled ? 'sound' : 'sound-mute',\n                            type: 'entypo',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.setSoundEnabled(prev => !prev) }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='red'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: 'caret-back',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.giveUp() }\n                    style={{marginHorizontal: 5}}\n                />\n            </View>);\n    };\n    \n    const ReturnCard = (key) => {\n        if (pause || show) return;\n        const currentPlay = play;\n        const indexGame = game[key];\n        const playing = [...currentPlay, indexGame];\n        if (playing.length == 2) {\n            // check if same card or return all and lose a try\n            if (playing[0].color === playing[1].color && playing[0].icon === playing[1].icon) {\n                const currentGameLength = game.length;\n                const nFound = [...found, playing[0], playing[1]];\n                if (nFound.length == currentGameLength) {\n                    props.playSound('next');\n                    props.setScore(prevScore => prevScore + 1);\n                    setShow(true);\n                    setTries(3);\n                    setGame([...generateRandomPair(setLengthGame())]);\n                    setFound([]);\n                } else {\n                    props.playSound('success');\n                    setFound(nFound);\n                }\n                setPlay([]);\n            } else {\n                setPlay(playing);\n                props.playSound('fail');\n                setPause(true);\n                setTimeout(() => {\n                    if (tries != 0) setTries(prevTries => prevTries - 1);\n                    if (tries === 0)\n                        props.endGame();\n                    else {\n                        setPlay([]);\n                        setFound([]);\n                    }\n                    setPause(false);\n                }, 1000);\n            }\n        } else {\n            setPlay(playing);\n            props.playSound('play');\n        }\n    };\n\n    const printCards = () => {\n        return game.map( (el, i) => {\n            var inFound = false;\n            var inPlay = false;\n            if (found.find(element => element.idx === i )) inFound = true;\n            else if (play.find(element => element.idx === i )) inPlay = true;\n            return (<Card show={show} key={i} index={i} inFound={inFound} inPlay={inPlay} backgroundColor={el.color} icon={el.icon} ReturnCard={ReturnCard} />);\n        });\n    };\n\n    const newGame = () => {\n        if (confetti) setConfetti(false);\n        props.setModal(false);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(4)]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n            )}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                { props.success && props.modal ? successOverlay() : failOverlay() }\n                <View style={{flexDirection: 'row', marginTop: 20}}>\n                    <Button title={DoubleLang[props.lang].Retry} onPress={() => newGame()} buttonStyle={{marginRight: 10}} icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n\n                    <Button title={DoubleLang[props.lang].Leave} onPress={() => { \n                        if (confetti) setConfetti(false);\n                        props.setModal(false);\n                        props.setTab(0);\n                    }} buttonStyle={{backgroundColor: 'red'}} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </View>\n            </Overlay>\n            <View style={styles.viewGame}>\n                { printCards() }\n            </View>\n            <View style={{alignItems: 'center', width: wp('100%'), marginTop: -10}}>\n                { show === true ? <Text>{DoubleLang[props.lang].Remember()}</Text> : <></> }\n                <Text>{DoubleLang[props.lang].Score(props.score)}</Text>\n                <Text>{DoubleLang[props.lang].BestDayScore(props.bestScoreDay)}</Text>\n                <Text>{DoubleLang[props.lang].RemaningTries(tries)}</Text>\n                { printButton() }\n            </View>\n        </>\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n    Text,\n    BackHandler,\n    ScrollView,\n    Alert\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport styles from './styles';\n\nimport * as API from '../../../data/doubleApi';\n\nimport Help from './Help';\nimport Menu from './Menu';\nimport Play from './Play';\n\nconst currentDate = new Date().toLocaleDateString('fr-FR');\n\nexport default function Double(props) {\n    const [tab, setTab] = useState(0);\n    const [score, setScore] = useState(0);\n    const [bestScoreDay, setBestScoreDay] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [ambiant, setAmbiant] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n    const [soundEnabled, setSoundEnabled] = useState(true);\n    const [ambiantEnabled, setAmbiantEnabled] = useState(true);\n\n    useEffect( async () => {\n        // API.clear();\n\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by kilo\n            require(`../../../assets/sound/double/ambiant.mp3`),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n\n        API.getScoreDay(props.personId, currentDate).then((data) => {\n            if (data.length > 0) setBestScoreDay(data[0].score);\n        });\n\n        API.getBestScore(props.personId).then((data) => {\n            if (data.length > 0) setBestScore(data[0].score);\n        });\n\n    }, []);\n\n    useEffect(() => {\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1 && score > 0) {  \n                    giveUp()\n                    return ;\n                }\n                setTab(0);\n            } else {\n                ambiant.unloadAsync();\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, ambiant]);\n\n    const endGame = async () => {\n        setModal(true);\n        let bestDayScore = false;\n        let bestScore = false;\n        if (score > bestScoreDay) { \n            playSound('applause');\n            setSuccess(true);\n            setBestScoreDay(score);\n            bestDayScore = true;\n            if (score > bestScore) {\n                bestScore = true;\n                setBestScore(score);\n            }\n        } else {\n            playSound('lose');\n            setSuccess(false);\n        }\n        await API.insertScore(props.personId, score, currentDate, bestDayScore, bestScore);\n        setScore(0);\n    };\n\n    const ambiantSoundPlay = () => {\n        if (ambiantEnabled) ambiant.pauseAsync();\n        else ambiant.playAsync();\n        setAmbiantEnabled(prevEnable => !prevEnable);\n    };\n    \n    const giveUp = () => {\n        if (score === 0) setTab(0);\n        else return Alert.alert(\n            DoubleLang[props.lang].TitleGiveUp,\n            DoubleLang[props.lang].SureToGiveUp,\n            [\n                {\n                    text: DoubleLang[props.lang].Leave,\n                    onPress: () => { null },\n                    style: 'cancel'\n                },\n                {\n                    text: DoubleLang[props.lang].GiveUp,\n                    onPress: () => {\n                        endGame();\n                    }\n                },\n            ]\n        )\n    };\n\n    const playSound = async (type) => {\n        if (!soundEnabled && !['applause', 'lose'].includes(type)) return;\n        if (sound) sound?.unloadAsync();\n        let choosenSound;\n        switch (type) {\n            case \"success\":\n                choosenSound = require(`../../../assets/sound/double/success.mp3`);\n                break;\n            case \"fail\":\n                choosenSound = require(`../../../assets/sound/double/fail.mp3`);\n                break;\n            case \"play\":\n                choosenSound = require(`../../../assets/sound/double/play.mp3`);\n                break;\n            case \"next\":\n                choosenSound = require(`../../../assets/sound/double/next.mp3`);\n                break;\n            case \"applause\":\n                choosenSound = require(`../../../assets/sound/global/applause.mp3`);\n                break;\n            case \"lose\":\n                choosenSound = require(`../../../assets/sound/global/you_lose.mp3`);\n                break;\n            default:\n                break;\n        }\n        const { sound } = await Audio.Sound.createAsync(choosenSound);\n        setSound(sound);\n        sound.playAsync();\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    ambiant={ambiant}\n                    setSoundEnabled={setSoundEnabled}\n                    soundEnabled={soundEnabled}\n                    ambiantEnabled={ambiantEnabled}\n                    ambiantSoundPlay={ambiantSoundPlay}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                        lang={props.lang}\n                        setTab={setTab}\n                        score={score}\n                        setScore={setScore}\n                        giveUp={giveUp}\n                        modal={modal}\n                        setModal={setModal}\n                        bestScoreDay={bestScoreDay}\n                        success={success}\n                        endGame={endGame}\n                        playSound={playSound}\n                        ambiantSoundPlay={ambiantSoundPlay}\n                        ambiantEnabled={ambiantEnabled}\n                        soundEnabled={soundEnabled}\n                        setSoundEnabled={setSoundEnabled}\n                    />;\n        } else if (tab === 2) {\n            return (<Help lang={props.lang} setTab={setTab} />);\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <ScrollView style={styles.view} contentContainerStyle={{alignItems: 'center'}}>\n            { printPage() }\n        </ScrollView>\n    );\n};","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\nimport Double from '../components/activities/Double';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return <Double lang={lang} setPage={setPage} personId={personId} />;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n        /* {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        }, */\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nimport { Audio } from 'expo-av';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n\n    useEffect( () => {\n        Audio.setIsEnabledAsync(true);\n    }, [])\n\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    scoreRow: {\n        flex: 1,\n        height: 180,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreRowSimon: {\n        flex: 1,\n        height: 250,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreHeading: {\n        fontSize: 18,\n        color: '#2089dc',\n        fontWeight: 'bold',\n        margin: 5\n    },\n    NoScore: {\n        color: 'grey',\n        fontStyle: 'italic',\n        marginTop: 45,\n        marginLeft: 45\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\nimport { Badge } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport { ScoreRatio } from '../../../../components/activities/Quiz/utils/scoreFunc';\nimport * as API from '../../../../data/quizApi';\n\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nexport default function QuizScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [quizScore, setQuizScore] = useState([]);\n\n    useEffect( () => {\n        API.get(props.personId).then((data) => {\n            const arr = [];\n            for (let i = 0; i < data.length; i++) {\n                const el = data[i];\n                arr.push({score: ScoreRatio(el.content, props.personId), name: el.name});\n            }\n            setQuizScore(arr);\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (quizScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            return quizScore.map( (el,i) => {\n                return (\n                    <View style={{marginHorizontal: 15}} key={i}>\n                        <View style={{zIndex: 20}}>\n                            <Badge\n                                value={el.name}\n                                textStyle={{textAlign: 'center', zIndex: 20}}\n                                badgeStyle={{position:'absolute', paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 100, zIndex: 100}}\n                                titleStyle={{zIndex: 20}}\n                            />\n                        </View>\n                        <View style={{zIndex: 1}}>\n                            <CircularProgress\n                                value={el.score}\n                                textStyle={{marginBottom: -10}}\n                                title={ActivitiesLang[props.lang].Success}\n                                valueSuffix={'%'}\n                                titleStyle={{marginBottom: 10}}\n                                initialValue={0}\n                                delay={500}\n                                activeStrokeColor={'#2089dc'}\n                                radius={65}\n                                inActiveStrokeColor={'#9b59b6'}\n                                inActiveStrokeOpacity={0.5}\n                                inActiveStrokeWidth={6}\n                                activeStrokeWidth={12}\n                            />\n                        </View>\n                    </View>\n                );\n            });\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRow} horizontal={true}>\n            <View>\n                <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].QuizScore}</Text>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} /> :\n                    <ScrollView horizontal={true}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/simonApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function SimonScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [simonScore, setSimonScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setSimonScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (simonScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = simonScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].SimonScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/doubleApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function DoubleScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [doubleScore, setDoubleScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setDoubleScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (doubleScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = doubleScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].DoubleScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React from 'react';\nimport { ScrollView } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\n\nimport QuizScore from './QuizScore';\nimport SimonScore from './SimonScore';\nimport DoubleScore from './DoubleScore';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <QuizScore lang={props.lang} personId={props.personId} />\n            <DoubleScore lang={props.lang} personId={props.personId} />\n            <SimonScore lang={props.lang} personId={props.personId} />\n        </ScrollView>\n    );\n}\n","import React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport { Platform } from 'react-native';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    \n    const navigate = useNavigate();\n\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: Platform.OS == 'ios' ? 100 : 60, color: '#3B8EFF', backgroundColor: '#355c7d' }],\n                tabBarLabelStyle: [{ color: 'white', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} personId={props.personId} /> }\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        fullname={props?.fullname}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                        setPerson={props.setPerson}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { Platform } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        paddingBottom: 10,\n        width: 100+'%',\n        height: hp('17%'),\n        backgroundColor: '#355c7d'\n    },\n    topLottie: {\n        marginTop: 13,\n        width: 60,\n        height: undefined,\n        marginBottom: Platform.OS === 'ios' ? 35 : 15,\n        backgroundColor: '#355c7d'\n    },\n    bgLottie: {\n        width: wp('100%'),\n        opacity: Platform.OS === 'ios' ? 0.8 : 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: wp('100%'),\n        height: hp('100%'),\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: '#355c7d'\n    },\n    heading: {\n        fontSize: 20,\n        color: 'white',\n        marginTop: 0,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%'\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport TopImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/selection');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/selection', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/selection', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TopImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={state?.username}\n                        fullname={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setPerson={setPerson}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\nimport React from 'react';\n\nimport { Text } from 'react-native'\nimport App from './App';\n\nText.defaultProps = Text.defaultProps || {};\nText.defaultProps.allowFontScaling = false\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig, reset } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport SelectionMenu from './pages/SelectionMenu';\nimport Activities from './pages/Activities';\nimport Home from './pages/Home';\nimport Tutorial from './pages/Tutorial';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [lang, setLang] = useState('fr');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        // reset();\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    useEffect( () => {\n        let local = Localization.locale?.split('-')[0] || 'fr';\n        setLang(['en', 'fr'].includes(local) ? local : 'fr');\n        console.log('- Imported config file -');\n    }, [config]);\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                    setLang={setLang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/tutorial\"\n                            element={\n                                <Tutorial\n                                    lang={lang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={<Home lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/selection\"\n                            element={\n                                <SelectionMenu\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}