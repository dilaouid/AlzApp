{"version":3,"sources":["assets/img/activities/trophy.gif","assets/img/activities/help/question_mark.gif","assets/img/interface/profile.jpg","assets/img/activities/sad.gif","assets/sound/global/applause.mp3","assets/sound/global/you_lose.mp3","assets/sound/simon/green.mp3","assets/img/alzheimapp_logo.png","assets/img/username/chooseusername.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/tutorial/swipe-right.gif","assets/img/selection/loading_brain.gif","assets/img/selection/addedUser.gif","assets/img/activities/brain.gif","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/quiz/logo.png","assets/img/activities/quiz/success.gif","assets/img/activities/double/logo.png","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","assets/img/activities/quiz/thinking.gif","assets/sound/double/ambiant.mp3","assets/sound/double/success.mp3","assets/sound/double/fail.mp3","assets/sound/double/play.mp3","assets/sound/double/next.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","language/home/index.js","pages/Home/styles.js","pages/Home/index.js","pages/ChooseUsername/styles.js","pages/ChooseUsername/index.js","components/utils/Lottie.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","components/utils/HomeOrTutorial.js","language/selection/index.js","components/selection/Rows.js","components/selection/styles.js","components/selection/PersonCreation/Success.js","data/dictaphoneApi.js","data/simonApi.js","data/quizApi.js","utils/helpers.js","data/personApi.js","components/selection/PersonCreation/Form.js","components/selection/PersonCreation/CreatePerson.js","pages/SelectionMenu/styles.js","pages/SelectionMenu/index.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/Help.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/utils/quizFunc.js","components/activities/Quiz/Creation/QuestionList.js","components/activities/Quiz/utils/scoreFunc.js","components/activities/Quiz/QuizList.js","components/activities/Quiz/ViewQuizList.js","components/activities/Quiz/SuccessContent.js","components/activities/Quiz/Creation/FormQuizContent.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Creation/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/Help.js","components/activities/Quiz/index.js","language/activities/double/index.js","components/activities/Double/styles.js","data/doubleApi.js","components/activities/Double/Help.js","components/activities/Double/Menu.js","components/activities/Double/subs/helpers.js","components/activities/Double/subs/Card.js","components/activities/Double/Play.js","components/activities/Double/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/QuizScore/index.js","pages/Activities/Score/SimonScore/index.js","pages/Activities/Score/DoubleScore/index.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","Select","Import","Introduction","Source","License","Language","StyleSheet","create","container","height","backgroundColor","alignItems","header","marginTop","textAlign","logo","width","menu","flex","marginBottom","button","color","justifyContent","buttonContainer","borderRadius","copyleft","fontSize","fontStyle","Home","props","navigate","useNavigate","View","styles","Image","source","AlzheimApp","resizeMode","ScrollView","title","HomeLang","buttonStyle","titleStyle","containerStyle","icon","name","type","size","marginRight","marginLeft","raised","onPress","state","iconContainerStyle","setLang","prev","Linking","openURL","wrapper","alignContent","heading","marginHorizontal","description","textInput","borderColor","paddingHorizontal","shadowOpacity","shadowRadius","shadowOffset","elevation","image","buttonText","paddingTop","slide","padding","viewrow","flexDirection","flexWrap","useState","input","setInput","isLoading","setIsLoading","loadPage","setLoadPage","confirmed","setConfirmed","redirect","setRedirect","setUsername","useEffect","res","catch","console","log","backHandler","BackHandler","addEventListener","remove","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","value","placeholder","InterfaceLang","maxLength","onChangeText","e","TouchableOpacity","activeOpacity","trim","response","parseUsername","ActivityIndicator","animating","Lottie","Platform","OS","LottieStyle","LottieSource","loop","hasOwnProperty","autoPlay","ImageSource","ImageStyle","Loading","LoadingImage","slideOdd","titleOdd","textOdd","paddingBottom","borderWidth","Tutorial","showsButtons","showsPagination","StepOne","SwipeImage","position","opacity","StepTwo","StepThree","StepFour","StepFive","StepSixth","to","component","Config","HomeOrTutorial","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","TouchableScale","default","mod","index","componentProps","Component","key","id","bottomDivider","picture","uri","DefaultProfilePicture","rounded","Content","Title","fullname","Subtitle","Chevron","rightButton","minHeight","imageSuccess","leftButton","view","alignSelf","marginVertical","btnImport","btnSave","profilePicture","successPageTitle","Success","SuccessImage","edit","close","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","error","createQuizContent","el","uuidv4","success","failed","includes","fileType","uploadQuizFile","path","FileSystem","from","updateScore","quizId","contentId","_id","quiz","contentIndex","content","findIndex","scoreIndex","pushErrors","errors","field","msg","randomNumber","min","max","Math","floor","random","person","Object","keys","upd","$set","Form","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","encoding","fsRead","setImage","leftIcon","label","errorStyle","renderErrorMessage","errorMessage","inputStyle","setFullname","setDescription","cb","Person","intermediates","imgName","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","topImage","zIndex","boldtext","subtitle","overflow","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","searchBar","searchInputStyle","SelectionMenu","search","setSearch","setIndex","SelectionMenuLang","btnText","setBtnTxt","active","setActive","swiper","useRef","useLocation","Audio","setIsEnabledAsync","regex","RegExp","$regex","list","LoadingBrain","idx","current","scrollBy","SafeAreaView","ref","scrollEnabled","pagingEnabled","onIndexChanged","setTimeout","inputContainerStyle","map","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","QuizScore","SimonScore","DoubleScore","NoScore","Global","BestScoreByDay","ReturnList","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","deletePerson","SimonDB","removeAsync","DictaphoneDB","deleted","ActivitiesLang","Alert","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","isPlaying","setIsPlaying","progress","setProgress","Sound","sound","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","playAsync","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","unloadAsync","positionMillis","playableDurationMillis","variant","animation","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","getURI","folder","record","DictaphoneLang","Date","created","deleteRecord","goBack","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","createAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","clr","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","Head","RulesHead","TriesHead","Rules","TriesExplain","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","viewHelpPage","leaveButtonHelpPage","helpHead","helpStepHead","textTransform","helpStep","helpQuestionMark","Menu","SimonLogo","SimonLang","setTab","Game","start","setStart","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","dailyScoreBeaten","globalScoreBeaten","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","disabled","QuestionMark","tab","pos","Create","GoBack","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","GiveUpQuizTitle","GiveUpQuiz","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","EditedQuiz","QuizListRedirection","selectedQuizz","quizName","Questions","SuccessTitle","FailedTitle","answers","join","SuccessQuizTitle","SuccessQuiz","fail","FailQuizTitle","FailQuiz","SaveContent","AddContent","SureCancelEdition","CustomHead","Custom","answersText","leaveButtonPlay","createButton","overlayDescriptionReference","ScrollViewSuccess","modalTitle","modalDescription","quizTitleInputContainer","quizTitleInput","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","QuizLogo","QuizLang","printFile","clearFile","pauseSound","playSound","QuestionList","quizEdit","newContent","quizEdition","Number","isInteger","questionId","tmp","setNewContent","setQuizEdit","setReload","reload","setEditedQuiz","contentList","setContent","pickOutQuestion","setEditContent","question","ScoreRatio","filter","parseInt","total","toFixed","QuizList","ViewQuizList","SuccessContent","FormQuizContent","answer","setAnswer","contentContainerStyle","setFileType","setFilename","setUri","DocumentPicker","mimeType","flexShrink","setQuestion","toLowerCase","setAnswers","addAnswer","badgeStyle","pickOutAnswer","ViewQuiz","newQuestion","setNewQuestion","editContent","editedQuiz","saveQuiz","concat","editedFile","buttonTop","mode","saveContent","pushContent","viewPage","CreateQuiz","createQuestion","setCreateQuestion","setName","modalConfirmation","setModalConfirmation","undefined","substring","ThinkingImage","quizLength","pickRandomQuizz","ThinkingLottie","setPlay","setCurrent","setFail","arr","j","shuffle","TrophyLottie","SadLottie","openAlertResultQuestion","SadImage","setMediaType","answerTrimedLowercase","answerQuestion","play","setQuiz","setRandom","rand","randomArrayElement","exclude","randNumber","RemaningTries","Reinit","TitleGiveUp","SureToGiveUp","BestDayScore","ScoreHead","ScoreHelp","aspectRatio","RectoCard","PlayingCard","VersoCard","IconCard","viewGame","buttonViewPlay","playButtons","getBestScore","insertScore","DoubleLang","DoubleLogo","ambiantEnabled","ambiantSoundPlay","soundEnabled","setSoundEnabled","ambiant","generateRandomPair","colors","icons","indexColor","indexIcon","Card","cardStyles","inPlay","inFound","show","ReturnCard","found","setFound","setShow","currentPlay","indexGame","playing","currentGameLength","nFound","setScore","prevScore","prevTries","endGame","bestScoreDay","failOverlay","element","giveUp","newModel","Double","setBestScoreDay","setAmbiant","setAmbiantEnabled","bestDayScore","prevEnable","choosenSound","returnComponent","page","ActivitiesList","iconPosition","scoreRow","scoreRowSimon","scoreHeading","margin","quizScore","setQuizScore","horizontal","textStyle","valueSuffix","activeStrokeColor","radius","inActiveStrokeColor","inActiveStrokeOpacity","inActiveStrokeWidth","activeStrokeWidth","simonScore","setSimonScore","btnIndex","setBtnIndex","buttons","TotalScore","selectedIndex","global","days","item","highestToLowest","b","labels","datasets","fromZero","showValuesOnTopOfBars","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","printScore","doubleScore","setDoubleScore","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","unmountOnBlur","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","setPerson","BgSource","navTheme","DefaultTheme","background","BackgroundImage","NavigationContainer","theme","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact"],"mappings":"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","file":"static/js/app.5ac1ad50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/question_mark.c1494184.gif\";","module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sad.bfdab12f.gif\";","module.exports = __webpack_public_path__ + \"static/media/applause.bfbba08b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/you_lose.c6b6ef1b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/alzheimapp_logo.e07c8c32.png\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.ede08671.png\";","module.exports = __webpack_public_path__ + \"static/media/2.b87932e3.png\";","module.exports = __webpack_public_path__ + \"static/media/3.3ed4e762.png\";","module.exports = __webpack_public_path__ + \"static/media/4.80535fcd.png\";","module.exports = __webpack_public_path__ + \"static/media/5.da0bedf3.png\";","module.exports = __webpack_public_path__ + \"static/media/6.7911d645.png\";","module.exports = __webpack_public_path__ + \"static/media/swipe-right.6dde9c7c.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading_brain.ef5884d9.gif\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/brain.70fc8c58.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.097ce51b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.348cd96d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.5d28b463.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.acbb69fd.png\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e82f415e.gif\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.e46e92e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.83357dfb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fail.60814d28.mp3\";","module.exports = __webpack_public_path__ + \"static/media/play.25c902a7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.c7b1e976.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n}\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n}\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n}\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n}\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n}\n\nexport function reset() {\n    return AsyncStorage.clear();\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retourner sur le formulaire',\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet requise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? C'est possible, le partage est réalisable entre deux appareils par {0} !\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can share data between two devices with {0} technology!\",\n                boldText: ['Bluetooth'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer {0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Select: \"Sélection des personnes\",\n        Import: \"Importer un profil\",\n        Introduction: \"Introduction\",\n        Source: \"Accès au code source\",\n        License: \"Code sous licence GPL v3.\\nCréation originale par Diyaeddine LAOUID.\",\n        Language: \"Changer la langue\"\n    },\n    en: {\n        Select: \"Select a person\",\n        Import: \"Import a profil\",\n        Introduction: \"Introduction\",\n        Source: \"Source code on GitHub\",\n        License: \"Licensed GPL v3 source code.\\nOriginally created by Diyaeddine LAOUID.\",\n        Language: \"Change language\"\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        height: 100 + '%',\n        backgroundColor: '#355c7d',\n        alignItems: 'center'\n    },\n    header: {\n        marginTop: 30,\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    logo: {\n        width: 180,\n        height: 180\n    },\n    menu: {\n        marginTop: 30,\n        flex: 1,\n        marginBottom: 20\n    },\n    button: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'white',\n        color: '#355c7d',\n        justifyContent: 'flex-start'\n    },\n    buttonContainer: {\n        borderRadius: 25,\n        alignItems: 'center',\n        marginBottom: 20\n    },\n    copyleft: {\n        marginTop: 10 + '%',\n        fontSize: 11,\n        color: 'white',\n        textAlign: 'center',\n        fontStyle: 'italic'\n    }\n});\n","import React from 'react';\nimport {\n    View,\n    ScrollView,\n    Image,\n    Linking\n} from 'react-native';\n\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as HomeLang } from '../../language/home';\nimport AlzheimApp from '../../assets/img/alzheimapp_logo.png';\n\nimport styles from './styles';\n\nexport default function Home(props) { \n    const navigate = useNavigate();\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Image source={AlzheimApp} style={styles.logo} resizeMode={'cover'} />\n            </View>\n            <ScrollView style={styles.menu}>\n                <Button\n                    title={HomeLang[props.lang].Select}\n                    buttonStyle={styles.button}\n                    titleStyle={{ color: '#355c7d', textAlign: 'center' }}\n                    containerStyle={styles.buttonContainer}\n                    icon={\n                        <Icon\n                            name={'person-outline'}\n                            type={'ionicon'}\n                            color={'#355c7d'}\n                            size={15}\n                            style={{ marginRight: 20, marginLeft: 10 }}\n                        />\n                    }\n                    raised\n                    onPress={() => navigate('/selection', {\n                        state: { username: props.username, lang: props.lang }\n                    })}\n                />\n                <Button\n                    title={HomeLang[props.lang].Import}\n                    buttonStyle={styles.button}\n                    titleStyle={{ color: '#355c7d' }}\n                    containerStyle={styles.buttonContainer}\n                    iconContainerStyle={{ marginRight: 50 }}\n                    icon={\n                        <Icon\n                            name={'person-add-outline'}\n                            type={'ionicon'}\n                            color={'#355c7d'}\n                            size={15}\n                            style={{ marginRight: 20, marginLeft: 10 }}\n                        />\n                    }\n                    raised\n                />\n                <Button\n                    title={HomeLang[props.lang].Language}\n                    buttonStyle={styles.button}\n                    titleStyle={{ color: '#355c7d' }}\n                    containerStyle={styles.buttonContainer}\n                    iconContainerStyle={{ marginRight: 50 }}\n                    icon={\n                        <Icon\n                            name={'world-o'}\n                            type={'fontisto'}\n                            color={'#355c7d'}\n                            size={15}\n                            style={{ marginRight: 20, marginLeft: 10 }}\n                        />\n                    }\n                    onPress={() => props.setLang(prev => prev == 'fr' ? 'en' : 'fr')}\n                    raised\n                />\n                <Button\n                    title={HomeLang[props.lang].Introduction}\n                    buttonStyle={styles.button}\n                    titleStyle={{ color: '#355c7d' }}\n                    containerStyle={[styles.buttonContainer, {marginBottom: 20}]}\n                    iconContainerStyle={{ marginRight: 50 }}\n                    icon={\n                        <Icon\n                            name={'book-outline'}\n                            type={'ionicon'}\n                            color={'#355c7d'}\n                            size={15}\n                            style={{ marginRight: 20, marginLeft: 10 }}\n                        />\n                    }\n                    raised\n                    onPress={() => navigate('/tutorial') }\n                />\n                <Button\n                    title={HomeLang[props.lang].Source}\n                    buttonStyle={styles.button}\n                    titleStyle={{ color: '#355c7d' }}\n                    containerStyle={styles.buttonContainer}\n                    iconContainerStyle={{ marginRight: 50 }}\n                    icon={\n                        <Icon\n                            name={'logo-github'}\n                            type={'ionicon'}\n                            color={'#355c7d'}\n                            size={15}\n                            style={{ marginRight: 20, marginLeft: 10 }}\n                        />\n                    }\n                    raised\n                    onPress={() => Linking.openURL('https://github.com/dilaouid/AlzheimApp')}\n                />\n                <Text style={styles.copyleft} >{HomeLang[props.lang].License}</Text>\n            </ScrollView>\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 40,\n        borderColor: 'gray',\n        borderRadius: 20,\n        paddingHorizontal: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        elevation: 2,\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n    },\n    buttonText: {\n        paddingTop: 10,\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    TouchableOpacity,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername, SawTutorial } from '../../data/configApi';\nimport * as Config from '../../data/configApi';\n\nimport Home from '../Home';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [loadPage, setLoadPage] = useState(true);\n    const [confirmed, setConfirmed] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const [username, setUsername] = useState();\n\n    useEffect(() => {\n        Config.getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    setUsername(res[0].username);\n                    setRedirect(true);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (props.username?.length > 0)\n            navigate('/home', {\n                state: { username: props.username }\n            });\n        setLoadPage(false);\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            setUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (redirect)\n        return <Home lang={props.lang} username={username} />\n\n    if (loadPage)\n        return <View style={styles.container}></View>\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <TouchableOpacity\n                        style={styles.button}\n                        activeOpacity={0.5}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                    >\n                        <Text style={styles.buttonText}>\n                            {' '}\n                            {isLoading ? (\n                                <ActivityIndicator\n                                    color=\"white\"\n                                    size=\"small\"\n                                    animating={true}\n                                />\n                            ) : (\n                                'OK'\n                            )}\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        );\n    } else {\n        return <Home lang={props.lang} />;\n    }\n}\n","import React from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    slideOdd: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#355c7d',\n    },\n    title: {\n        color: 'black',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center',\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center',\n    },\n    titleOdd: {\n        color: 'white',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center',\n    },\n    textOdd: {\n        color: 'white',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center',\n    },\n    image: {\n        flex: 3,\n        width: 100 + '%',\n        height: 400,\n    },\n    buttonContainer: {\n        flex: 2,\n        marginTop: -40,\n    },\n    button: {\n        marginTop: 10,\n        paddingTop: 15,\n        paddingBottom: 15,\n        marginLeft: 30,\n        marginRight: 30,\n        backgroundColor: '#6396c0',\n        borderRadius: 10,\n        borderColor: 'white',\n        borderWidth: 1\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        fontWeight: 'bold'\n    },\n});\n","import React from 'react';\nimport { Text, View, Image, TouchableOpacity } from 'react-native';\n\nimport { Link } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport SwipeImage from '../../assets/img/tutorial/swipe-right.gif';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport Lottie from '../../components/utils/Lottie';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\n\nexport default function Tutorial(props) {\n    const LottieSource = require('../../assets/lottie/swipe-right.json');\n\n    return (\n        <>\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                    <Lottie\n                        LottieSource={LottieSource}\n                        ImageSource={SwipeImage}\n                        LottieStyle={{\n                            position: 'absolute',\n                            height: 80,\n                            marginTop: 280,\n                            marginLeft: 80,\n                            opacity: 0.8,\n                        }}\n                        ImageStyle={{\n                            position: 'absolute',\n                            height: 80,\n                            marginTop: 280,\n                            marginLeft: 80,\n                            opacity: 0.8,\n                        }}\n                    />\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Link\n                            to=\"/username\"\n                            component={TouchableOpacity}\n                            style={styles.button}\n                            onPress={(e) => {\n                                Config.SawTutorial(true);\n                            }}\n                            activeOpacity={0.5}\n                        >\n                            <Text style={styles.buttonText}>\n                                {' '}\n                                {TutorialLang[props.lang].LastStepButton}{' '}\n                            </Text>\n                        </Link>\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} />;\n    }\n    return <Home lang={props.lang} username={props.username} setLang={props.setLang} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to produce today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport { View, Text, Platform } from 'react-native';\nimport { Button, Image } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/selection/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/selection/addedUser.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <Button\n                title={InterfaceLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nconst createQuizContent = async (personId, el) => {\n    el.id = uuidv4();\n    el.score = [{personId: personId, success: 0, failed: 0}];\n    if (['audio', 'image'].includes(el.fileType)) {\n        await uploadQuizFile(el);\n    }\n};\n\nconst uploadQuizFile = async (el) => {\n    const filename = `${uuidv4()}${el.fileType == 'audio' ? '.m4a' : '.png'}`;\n    const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n    await FileSystem.copyAsync({\n        from: el.uri,\n        to: `${path}${filename}`\n    });\n    await FileSystem.deleteAsync(el.uri);\n    el.uri = `${path}${filename}`;\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        await createQuizContent(personId, el);\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport async function updateScore(personId, quizId, contentId, success) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    const contentIndex = quiz[0].content.findIndex(el => el.id == contentId );\n    const scoreIndex = quiz[0].content[contentIndex].score.findIndex(el => el.personId = personId);\n    if (success) quiz[0].content[contentIndex].score[scoreIndex].success++\n    else quiz[0].content[contentIndex].score[scoreIndex].failed++\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function deleteId(personId, quizId) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n};\n\nexport async function deleteQuestion(quizId, questionId) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    const content = quiz[0].content;\n    const contentIndex = content.findIndex(el => el.id == questionId );\n    if (['audio', 'image'].includes(content[contentIndex]))\n        await FileSystem.deleteAsync(content.uri);\n    quiz[0].content = content.splice(0, contentIndex);\n    return db.updateAsync({_id: quizId}, {...quiz[0]})\n};\n\nexport async function getById(quizId) {\n    return db.findAsync({ _id: quizId }, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n};\n\nexport async function saveQuiz(personId, quizId, content) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    if (!quiz) return;\n    for (let i = 0; i < content.length; i++) {\n        const el = content[i];\n        if (!el.id)\n            await createQuizContent(personId, el);\n        else if (el.id && el.editedFile) {\n            await uploadQuizFile(el);\n            delete el.editedFile;\n        }\n    }\n    quiz[0].content = content;\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function reset() {\n    return db.removeAsync({}, { multi: true });\n};\n","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nexport const randomArrayElement = (exclude, min, max) => {\n    randNumber = randomNumber(min, max);\n    if (randNumber == exclude)\n        return randomArrayElement(exclude, min, max);\n    return randNumber;\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\nimport { db as QuizDB } from './quizApi'\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return db.removeAsync({ _id: id });\n};\n\nexport async function reset() {\n    return FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(async res => {\n        await SimonDB.removeAsync({}, { multi: true });\n        await QuizDB.removeAsync({}, { multi: true });\n        await DictaphoneDB.removeAsync({}, { multi: true });\n        return db.removeAsync({}, { multi: true });\n    });\n};","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0)\n                personId = result._id;\n            await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${personId}`, {intermediates: true})\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    wrapper: {\n        marginTop: 100,\n        textAlign: 'center',\n        alignItems: 'center',\n    },\n    topImage: {\n        flex: 1,\n        width: 80,\n        marginTop: -270,\n    },\n    heading: {\n        marginTop: -190,\n        fontSize: 20,\n        zIndex: 2,\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: '#3B8EFF',\n    },\n    subtitle: {\n        textAlign: 'center',\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: 10,\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1,\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Text,\n    View,\n    Image,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    BackHandler,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB } from 'react-native-elements';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport LoadingBrain from '../../assets/img/selection/loading_brain.gif';\nimport { lang as SelectionMenuLang } from '../../language/selection';\nimport Rows from '../../components/selection/Rows';\nimport CreatePerson from '../../components/selection/PersonCreation/CreatePerson';\n\nimport * as Person from '../../data/personApi';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function SelectionMenu(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        SelectionMenuLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const swiper = useRef(null);\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n\n    useEffect(() => {\n        Audio.setIsEnabledAsync(false);\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - index, true);\n    };\n\n    const changeIndex = (idx) => {\n        setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                setBtnTxt(SelectionMenuLang[lang].AddAPerson);\n            } else if (idx === 1) {\n                setBtnTxt(SelectionMenuLang[lang].ReturnToList);\n            }\n            setActive(true);\n        }, 400);\n    };\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 305,\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home') }\n            />\n            <View style={styles.wrapper}>\n                <Image\n                    source={LoadingBrain}\n                    resizeMode=\"contain\"\n                    style={styles.topImage}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[lang].Hello(username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (active === false) {\n                            return;\n                        }\n                        setActive(false);\n                        setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={SelectionMenuLang[lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    setSearch(e);\n                                }}\n                                value={search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {persons && persons.length > 0 ? (\n                                printRows(persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={persons}\n                                setPersons={setPersons}\n                                lang={lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        Home: 'Accueil',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n        QuizScore: \"Score des quiz\",\n        SimonScore: \"Score du Simon\",\n        DoubleScore: \"Score du jeu des pairs\",\n        NoScore: \"Aucun score enregistré pour cette activité...\",\n        Success: 'réussite',\n        Global: \"Vue d'ensemble\",\n        BestScoreByDay: 'Meilleur score du jour',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        Home: 'Home',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n        QuizScore: \"Quiz Score\",\n        SimonScore: \"Simon Score\",\n        DoubleScore: \"Double Memory Score\",\n        NoScore: \"No score registered for this activity...\",\n        Success: 'success',\n        Global: \"Global view\",\n        BestScoreByDay: 'Best score by day',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#5EA1E4',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\n\nimport { ScrollView, Alert, View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/selection/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\n\nimport styles from './styles';\nimport Form from '../../../components/selection/PersonCreation/Form';\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname(props.person.fullname);\n        setUriPreview(props.person.picture);\n        setImage('');\n        setDescription(props.person.description);\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/selection');\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.username),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: 'bluetooth',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ShareProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/selection');\n                        }}\n                    />\n                </ScrollView>\n            ) : (\n                <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => setEdit(false)}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </ScrollView>\n            )}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync();\n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const goBack = async () => {\n        await recording?.stopAndUnloadAsync();\n        stopPlayingSounds();\n        props.setPage(0);\n    }\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            el.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                    <Button\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'caret-back-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        buttonStyle={styles.recordButton}\n                        title={{}}\n                        titleStyle={styles.titleButton}\n                        onPress={() => goBack()}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <View style={styles.actionButtonsView}>\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n                <Button\n                    containerStyle={styles.actionButtons}\n                    icon={{\n                        name: 'caret-back-outline',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={{}}\n                    titleStyle={styles.titleButton}\n                    onPress={() => goBack()}\n                />\n                </View>\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n\n\n\n\n        // Help section\n        Head: \"Le Simon, comment ça marche ?\",\n        RulesHead: \"Les règles\",\n        TriesHead: \"Les essais\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu Simon est un {0} de forme circulaire comportant quatre gros boutons de couleurs différentes: rouge, vert, jaune et bleu.\\n\\nLe jeu {1} une des quatres couleurs et {2} toujours associé à cette couleur. Le joueur doit alors {3}.\\n\\nLe jeu {4}, puis {5} une nouvelle couleur. Le jour doit reproduire cette nouvelle séquence. Chaque fois que le joueur reproduit correctement la séquence, le jeu ajoute une nouvelle couleur.`,\n                boldText: ['jeu de mémoire', 'éclaire', 'produit un son', \"appuyer sur la touche de la couleur qui vient de s'allumer\", 'répète la même couleur et le même son', 'ajoute'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois que vous ratez une séquence, vous {0}. Au cours d'une partie, vous avez le droit à seulement {1}.\\n\\nUne fois les quatre erreurs faites, ou alors lorsque vous {2}, votre score est compatibilisé en fonction du nombre de touches dans la séquence actuelle.\\n\\nChaque jour, {3}.`,\n                boldText: ['perdez un essai', 'quatre erreurs', 'abandonnez la partie en cours', 'votre score journalier est remit à zéro'],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n\n\n\n\n        // Help section\n        Head: `The Simon, how does it works?`,\n        RulesHead: \"The rules\",\n        TriesHead: \"The tries\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The Simon is a circular shaped {0} with four different colored buttons: red, green, yellow and blue.\\n\\nThe game {1} one of the four colors and {2} always associated to this color. The player shall {3}.\\n\\nThe game {4}, then {5} another color. The player will have to reproduces this sequence. Each time the player successfully reproduces the sequence, the game adds another color in this sequence.`,\n                boldText: ['memory game', 'lighten', 'produces a sound', \"press the colored button which has just turned on\", 'repeat the same color with the same sound', 'add'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `Each time you fail a sequence, you {0}. In a game, you are allowed up to {1}.\\n\\nOnce the four fails made, or when you {2}, you will have the number of elements in the current sequence saved as your score.\\n\\nEach day, {3}.`,\n                boldText: ['lose a try', 'four maximum fails', 'give up the current game', 'your daily score is reset to zero'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        paddingTop: 20,\n        flex: 1,\n        alignItems: 'center'\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        // flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        //flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    // Help section\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .4,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate, dailyScore < order.length - 1, bestScore < order.length - 1);\n        setCanPlay(false);\n        setSuccess(true);\n        const path = dailyScore < order.length - 1 ? require(`../../../assets/sound/global/applause.mp3`) : require(`../../../assets/sound/global/you_lose.mp3`);\n        const { sound } = await Audio.Sound.createAsync(path);\n        props.setSound(sound);\n        sound.playAsync();\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            <Overlay\n                visible={success}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => setSuccess(false)}\n                ModalComponent={Modal}\n            >\n                {scoreBeaten ? successOverlay() : failOverlay()}\n                <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            retryGame();\n                        }}\n                        title={SimonLang[props.lang].Retry}\n                        containerStyle={{\n                            borderRadius: 13,\n                            marginRight: 10,\n                        }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setTab(0);\n                        }}\n                        title={SimonLang[props.lang].Exit}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React from 'react';\nimport { View, ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView>\n                <Button\n                    title={SimonLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{SimonLang[props.lang].Head}</Text>\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].Rules()}</Text>\n\n                \n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].TriesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].TriesExplain()}</Text>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\nimport Help from './Help';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr, pos) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: i == pos ? color : '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        Cancel: 'Annuler',\n        GoBack: \"Oui, j'annule l'édition du quiz\",\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Abandonner le quiz\",\n        GiveUpQuiz: \"Êtes-vous sûr de vouloir abandonner ce quiz? Le score restera enregistré.\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        EditedQuiz: \"Quiz modifié avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Bien joué !! 😄\",\n        Success: \"Bien joué ! C'est la bonne réponse !! Vous pouvez maintenant passer à la suite !\",\n        FailedTitle: \"Dommage... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Dommage, mais ce n'était pas la bonne réponse ! Les réponses possibles étaient: ${answersText}.`\n        },\n        SuccessQuizTitle: \"Haut la main !\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Fantastique !! Vous avez réussi ce quiz ! Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Dommage... Vous avez raté ce quiz ! ... Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Sauvegarder le quiz',\n        SaveContent: \"Sauvegarder la question\",\n        AddContent: \"Ajouter la question\",\n        SureCancelEdition: \"Êtes-vous sûr de bien vouloir abandonner l'édition de ce quiz? Vous ne pourrez pas récupérer vos modifications.\",\n\n        // Help page related\n        Head: 'Le quiz, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        CustomHead: \"Personnalisation\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Les règles du quiz sont basiques: il y a des questions {0}, et le joueur doit y répondre. Il peut y avoir {1} réponses possibles, une bonne réponse et c'est un point ajouté au score.\\n\\nIl n'y a pas de perte de points suite à une mauvaise réponse.`,\n                boldText: [\"facultativement accompagnées d'une image ou d'un son\", \"plusieurs\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `Il n'y a pas de quiz par défaut. C'est à vous d'en {0} et de les {1} à votre guise !\\nPour cela, vous devez vous rendre dans la partie \"{2}\".\\n\\nVous aurez là la liste des quiz que vous avez préalablement crée. Si vous n'en avez encore créé aucun, façonnez votre premier quiz avec le bouton \"{3}\".\\n\\nIci vous pourrez ajouter des question avec le bouton \"{4}\". Il vous est demandé {5} (facultatif), qui correspond à un son ou une image pour illustrer votre question.\\n\\nEnsuite, vous devez {6}. Ce sera cette question qui sera ensuite demandée au joueur.\\n\\nEt enfin, {7}. Une fois une réponse valide renseignée, cliquez sur le symbole {8} à côté, et votre réponse est ajoutée à la liste des réponses valides à la question. Vous pouvez en avoir 10 maximum.\\n\\nSi vous avez fait une erreur sur une des réponses, {9} pour la retirer de la liste.\\n\\nUne fois tous les éléments de la question renseignées, cliquez sur \"{10}\" au dessus pour enregistrer la question et retourner à la liste des questions précédemment crées. Ajoutez-en autant que vous voulez pour un quiz.\\n\\nVous pouvez également {11}.\\n\\nUne fois le quiz complet, cliquez sur \"{12}\", et voilà ! Renseignez le nom de ce quiz et c'est terminé, le quiz est désormais jouable !`,\n                boldText: [\"créer\",\n                    \"personnaliser\",\n                    \"Voir les quiz\",\n                    \"Créer un quiz\",\n                    \"Ajouter une question\",\n                    \"d'importer un fichier de référence\",\n                    \"renseigner la question\",\n                    \"ajouter les réponses éventuelles\",\n                    \"( + )\",\n                    \"cliquez simplement dessus\",\n                    \"Valider\",\n                    \"cliquer sur une question pour la modifier\",\n                    \"Terminer la création\"\n                ],\n            });\n        }\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizzes',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        Cancel: 'Cancel',\n        GoBack: 'Yes, I want to go back',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'of success',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Submit\",\n        GiveUpQuizTitle: \"Give up\",\n        GiveUpQuiz: \"Are you sure to give up this quiz? The score will be saved.\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        EditedQuiz: \"Quiz successfuly edited!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Well played!! 😄\",\n        Success: \"Well played! That's the good answer!! You can now go to the next question!\",\n        FailedTitle: \"Oops... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Oops, that's not a valid answer... the valid answer${answers.length > 0 ? 's were' : ' was'} : ${answersText}.`\n        },\n        SuccessQuizTitle: \"Easy peasy!\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Congratulations!! You won this quiz! Your score is for {0} good answer(s) for {1} mistake!',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: \"It's alright... You failed this quiz!... Your score is for {0} good answer(s) for {1} mistake!\",\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Save the quiz',\n        SaveContent: \"Save the question\",\n        AddContent: \"Add the question\",\n        SureCancelEdition: \"Are you sure to cancel this quiz edition? Your modification would not be saved\",\n\n        // Help page related\n        Head: 'The quiz, how does it works?',\n        RulesHead: \"The rules\",\n        CustomHead: \"Customization\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `This is a basic quiz game: there are questions {1}, and the player must answer them. There can be {1} answers, one correct answer and it's a point added to the score.\\n\\nThere is no loss of points for a wrong answer.`,\n                boldText: [\"optionally accompanied by an image or a sound\", \"several possible\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `There are no default quizzes. It is up to you to {0} and {1} them as you wish!\\nTo do this, you must go to the \"{2}\" section.\\nThere you will see the list of quizzes that you have already created. If you haven't created any yet, create your first quiz with the \"{3}\" button.\\n\\nHere you can add questions with the \"{4}\" button. You are asked to {5} (optional), which is a sound or image file to illustrate your question.\\n\\nThen you have to {6}. This question will be asked to the player.\\n\\nAnd finally, {7}. Once you have entered a valid answer, click on the {8} symbol next to it, and your answer would be added to the list of the valid answers to the question. You can have a maximum of 10 possible answers.\\n\\nIf you made a mistake on one of the answers, {9} to remove it from the list.\\n\\nOnce you have filled in all the elements of the question, click \"{10}\" above to save the question and return to the list of questions. Add as many as you want to this quiz.\\n\\nYou can also {11}.\\n\\nOnce the quiz is completed, click \"{12}\" and that's it! Fill in the name of this quiz and it's done, the quiz is now playable!`,\n                boldText: [\"create\",\n                    \"customize\",\n                    \"View quizzes\",\n                    \"Create a quiz\",\n                    \"Add a question\",\n                    \"import a reference file\",\n                    \"fill in the question\",\n                    \"add the possible answers\",\n                    \"( + )\",\n                    \"simply click on it\",\n                    \"Submit\",\n                    \"click on a question to edit it\",\n                    \"Complete the quiz creation\"\n                ],\n            });\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: 235,\n        marginTop: 20,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: 235,\n        marginTop: 10,\n        backgroundColor: 'blue',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: 30,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    modalDescription: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: 290,\n        marginTop: 10\n    },\n    quizTitleInput: {\n        fontSize: 15\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 50\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        width: 250\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: 250,\n        height: 250\n    },\n    gameQuestion: {\n        fontSize: 25,\n        marginTop: 10,\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey'\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15\n    },\n\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n        height: 120 + '%',\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image, ActivityIndicator } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            <Button\n                title={props.isLoading ? <ActivityIndicator color={'blue'} size={'small'} /> : QuizLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n                disabled={props.quiz.length === 0}\n            />\n\n            <Button\n                title={QuizLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import {\n    View,\n    Image\n} from 'react-native';\nimport { Icon, FAB, Avatar } from 'react-native-elements';\nimport { Audio } from 'expo-av';\n\nexport const printFile = (fileType, uri, clearFile, isPlaying, pauseSound, setIsPlaying, sound, setSound) => {\n    if (fileType === 'image') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Image source={{uri: uri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n            </View>\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 100, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Icon onPress={() => isPlaying ? pauseSound() : playSound(setIsPlaying, sound, setSound, uri) } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30, zIndex: 2}} />\n            </View>\n        );\n    }\n};\n\nexport const playSound = async (setIsPlaying, sound, setSound, uri) => {\n    setIsPlaying(true);\n    await Audio.setAudioModeAsync({\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n    });\n    const getSoundStatus = await sound?.getStatusAsync();\n    if (getSoundStatus?.isLoaded === false) {\n        await sound.loadAsync({ uri: uri });\n        setSound(sound);\n    }\n    await sound.playAsync();\n    sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n        if (playbackStatus.didJustFinish) {\n            await sound.unloadAsync();\n            setIsPlaying(false);\n        }\n    });\n};\n\nexport const pickCorrectIcon = (fileType, uri) => {\n    if (fileType === 'image') {\n        return (\n            <Avatar\n                source={{ uri: uri }}\n                rounded\n                size={'medium'}\n                containerStyle={{marginHorizontal: 8}}\n            />\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <Icon\n                raised\n                name={'musical-notes-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    } else {\n        return (\n            <Icon\n                raised\n                name={'text-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    }\n};","import React, { useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nimport { pickCorrectIcon } from '../utils/quizFunc';\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n\n    const length = props.quizEdit?.content?.length + props.newContent?.length;\n\n    const pickOutQuestion = () => {\n        if (length <= 2 && props.quizEdition) return;\n        if (props.quizEdition === true) {\n            if (Number.isInteger(props.questionId)) {\n                // if the questionId is an integer, it means it has not\n                // been added to the api yet, so it's an index of the\n                // newContent array passed in the props from the ViewQuiz Component\n\n                const index = props.questionId - props.quizEdit?.content?.length;\n                const tmp = props.newContent;\n                tmp.splice(index, 1);\n                // take out the new content from the newContent state in the\n                // parent component\n                props.setNewContent([...tmp]);\n            } else {\n                // todo not get by api but update quizedit state\n                // update api only when saving quiz\n                const index = props.quizEdit.content.findIndex(el => el.id == props.questionId );\n                const tmp = props.quizEdit;\n                tmp.content.splice(index, 1);\n                props.setQuizEdit(tmp);\n                props.setReload(!props.reload)\n                props.setEditedQuiz(true);\n            }\n        } else {\n            const tmp = props.quizEdition ? props.content : props.contentList;\n            tmp.splice(props.index, 1)\n            props.setContent([...tmp]);\n        }\n        setModal(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{ marginRight: 10 }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={{ fontWeight: 'bold' }}\n                    onPress={() => pickOutQuestion() }\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { props.setEditContent(props.questionId) }} >\n                { pickCorrectIcon(props.content.fileType, props.content.uri) }\n                <ListItem.Content>\n                    <ListItem.Title>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon disabled={props.quizEdition == true && length <= 2} reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","export function ScoreRatio (content, personId) {\n    var success = 0;\n    var fail = 0;\n    content.map( (el, i) => {\n        const score = el.score.filter( (el) => el.personId == personId );\n        score.map( (el, i) => {\n            success += parseInt(el.success);\n            fail += parseInt(el.failed);\n        });\n    });\n    const total = success + fail;\n    if (total == 0)\n        return 0;\n    const score = ((success / total) * 100).toFixed(2);\n    return score;\n};","import React from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport { ScoreRatio } from './utils/scoreFunc';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n\n    return (\n        <ListItem {...componentProps} onPress={() => {\n                props.setEdit(true);\n                props.setQuizEdit(props.quiz);\n            }}>\n            <ListItem.Content>\n                <ListItem.Title>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    { ScoreRatio(props.quiz.content, props.personId) }{'% '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Text,\n    ScrollView,\n} from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport QuizList from './QuizList';\nimport styles from './styles';\n\nimport * as API from '../../../data/quizApi';\n\nexport default function ViewQuizList(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <ScrollView>\n            {props.loading ? (\n                <ActivityIndicator\n                    color={'blue'}\n                    size={'small'}\n                    style={styles.loading}\n                />\n            ) : props.quiz?.length > 0 ? (\n                props.quiz?.map((el, i) => {\n                    return (\n                        <QuizList\n                            index={i}\n                            key={el._id}\n                            quiz={el}\n                            lang={props.lang}\n                            deleteId={deleteId}\n                            personId={props.personId}\n                            setEdit={props.setEdit}\n                            setQuizEdit={props.setQuizEdit}\n                        />\n                    );\n                })\n            ) : (\n                <Text style={styles.nothingYet}>\n                    {QuizLang[props.lang].NothingYet}\n                </Text>\n            )}\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/activities/quiz/success.gif';\n\nimport styles from './styles';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge, FAB } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContent(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <ScrollView contentContainerStyle={styles.ScrollView}>\n                { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                <Button\n                    title={QuizLang[props.lang].ImportFile}\n                    buttonStyle={{ borderRadius: 15 }}\n                    onPress={pickFile}\n                />\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].ReferenceFile}\n                </Text>\n                <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                    <Input\n                        value={props.question}\n                        inputStyle={{fontSize: 14}}\n                        containerStyle={{marginBottom: 50}}\n                        placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                        onChangeText={(e) => props.setQuestion(e)}\n                    />\n                    <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                    <Input\n                        placeholder={QuizLang[props.lang].AddAnswer}\n                        inputStyle={{fontSize: 14}}\n                        value={answer}\n                        onChangeText={(e) => setAnswer(e)}\n                    />\n                    <Button\n                        icon={\n                            <Icon\n                                name={'add-circle'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={18}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => addAnswer()}\n                        disabled={props.answers.length >= 10}\n                    />\n                    </View>\n                </View>\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].WhatIsAnswer}\n                </Text>\n                <View style={styles.badgesView}>\n                    {props.answers.map( (el, i) => {\n                        return(\n                            <Badge\n                                key={i}\n                                value={el}\n                                badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                onPress={() => pickOutAnswer(i)}\n                            />\n                        )\n                    })}\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    SafeAreaView,\n    ScrollView,\n    Alert,\n    Modal,\n    Text\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay } from 'react-native-elements';\n\nimport QuestionList from './Creation/QuestionList';\nimport ViewQuizList from './ViewQuizList';\n\nimport * as API from '../../../data/quizApi';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport FormQuizContent from './Creation/FormQuizContent';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n    // if the user is editing or not an existing quiz\n    const [edit, setEdit] = useState(false);\n\n    // if the user want to add a question to an existing quiz\n    const [newQuestion, setNewQuestion] = useState(false);\n\n    // if the user want to edit an existing question to an existing quiz\n    const [editContent, setEditContent] = useState();\n\n    // the existing quiz to edit\n    const [quizEdit, setQuizEdit] = useState();\n\n    // the new content to add in an existing quiz\n    const [newContent, setNewContent] = useState([]);\n\n    // check if something has been edited\n    const [editedQuiz, setEditedQuiz] = useState(false);\n\n    // open the modal of going back without saving confirmation\n    const [modal, setModal] = useState(false);\n\n    // the states for the quiz edition (add / edit question)\n    const [question, setQuestion] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const push = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setNewContent([...newContent, push]);\n        setEditedQuiz(true);\n        setSuccess(true);\n    };\n\n    const saveContent = () => {\n        let content;\n        let index;\n        if (Number.isInteger(editContent)) {\n            // edit newContent array\n            content = newContent[editContent - quizEdit?.content?.length];\n        } else {\n            // edit quizEdit array\n\n            // for already in api content -- think of reuploading the file\n            // if there's a new one, or to delete it\n            index = quizEdit.content.findIndex(el => el.id == editContent);\n            content = quizEdit.content[index];\n            if (fileType != content.fileType || uri != content.uri)\n                content.editedFile = true;\n        }\n        content.filename= filename;\n        content.fileType = fileType;\n        content.uri = uri;\n        content.answers = answers;\n        content.question = question;\n        setEditedQuiz(true);\n        setSuccess(true);\n        if (Number.isInteger(editContent)) {\n            if (newContent.length == 1)\n                setNewContent([content]);\n            else\n                setNewContent([...content]);\n        } else {\n            quizEdit.content[index] = content;\n            setQuizEdit(quizEdit);\n        }\n    };\n\n    // clear the states before edition or creation of a content\n    const clearState = () => {\n        setAnswers([]);\n        setQuestion();\n        setFileType();\n        setFilename();\n        setUri();\n        setSound(new Audio.Sound());\n    };\n\n    // Save the edited quiz\n    const saveQuiz = () => {\n        if (!editedQuiz) return;\n        const content = quizEdit.content.concat(newContent);\n        API.saveQuiz(props.personId, quizEdit._id, content).then((data) => {\n            return Alert.alert(\n                QuizLang[props.lang].EditedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            props.setReload(!props.reload);\n                            setNewContent([]);\n                            goBack();\n                        },\n                    }\n                ]\n            );\n        });\n    }\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const viewPage = () => {\n        if (editContent && !newQuestion) {\n            if (success) setSuccess(false);\n            let content;\n            if (Number.isInteger(editContent)) {\n                content = newContent[editContent - quizEdit?.content?.length];\n            } else {\n                const index = quizEdit.content.findIndex(el => el.id == editContent);\n                content = quizEdit.content[index];\n            }\n            if (!content) return;\n            setFilename(content.filename);\n            setFileType(content.fileType);\n            setUri(content.uri);\n            setQuestion(content.question);\n            setAnswers([...content.answers]);\n            setNewQuestion(true);\n        } else if (newQuestion) { // if the user wants to set a new question for quiz edition\n            return (<FormQuizContent\n                        lang={props.lang}\n                        setAnswers={setAnswers}\n                        setFileType={setFileType}\n                        setQuestion={setQuestion}\n                        setUri={setUri}\n                        setFilename={setFilename}\n                        setSuccess={setSuccess}\n                        setSound={setSound}\n                        setIsPlaying={setIsPlaying}\n                        pauseSound={pauseSound}\n                        uri={uri}\n                        filename={filename}\n                        answers={answers}\n                        fileType={fileType}\n                        question={question}\n                        success={success}\n                        sound={sound}\n                        isPlaying={isPlaying}\n                />);\n        } else if (edit && !newQuestion) {\n             // if the user want to see all the question for the quiz edition\n            return (quizEdit.content)?.concat(newContent)?.map((el, i) => {\n                return (<QuestionList\n                    index={i}\n                    key={i}\n                    id={quizEdit._id || 0}\n                    quizEdit={quizEdit}\n                    newContent={newContent}\n                    content={el}\n                    lang={props.lang}\n                    questionId={el.id || i}\n                    quizEdition={true}\n                    reload={props.reload}\n                    setReload={props.setReload}\n                    setEditedQuiz={setEditedQuiz}\n                    setEditContent={setEditContent}\n                    setQuizEdit={setQuizEdit}\n                    setNewContent={setNewContent}\n                />);\n            })\n        } else {\n             // if the user want to see all the existing quiz for the quiz edition\n            return (<ViewQuizList\n                quiz={props.quiz}\n                loading={props.loading}\n                lang={props.lang}\n                personId={props.personId}\n                setEdit={setEdit}\n                setQuizEdit={setQuizEdit}\n                setReload={props.setReload}\n            />);\n        }\n    };\n\n    const goBack = () => {\n\n        if (!success) setSuccess(false);\n\n        if ( (editedQuiz && !newQuestion) || newContent.length > 0) {\n            setModal(true);\n            return;\n        }\n\n        if (editContent) {\n            clearState();\n            setEditContent();\n            setNewQuestion(false);\n        } else if (newQuestion)\n            setNewQuestion(false);\n        else if (edit) {\n            setEditedQuiz(false);\n            setEdit(false);\n        } else\n            props.setTab(0);\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return saveContent();\n        } else if (newQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].AddContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return pushContent();\n        } else if (edit) {\n            // save the quiz button\n            if (mode == 'title') return QuizLang[props.lang].Save;\n            else if (mode == 'disabled') return !(editedQuiz);\n            else if (mode == 'onpress') return saveQuiz();\n        } else {\n            // create a quiz button\n            if (mode == 'title') return QuizLang[props.lang].Create;\n            else if (mode == 'disabled') false;\n            else if (mode == 'onpress') return props.setTab(4);\n        }\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => setModal(false)}\n                    ModalComponent={Modal}\n                >\n                    <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                    <View style={{ flexDirection: 'row' }}>\n                        <Button\n                            title={QuizLang[props.lang].Cancel}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{ marginRight: 10 }}\n                            onPress={() => setModal(false)}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].GoBack}\n                            buttonStyle={{ fontWeight: 'bold' }}\n                            onPress={() => {\n                                setEditedQuiz(false);\n                                setEditContent();\n                                setEdit(false);\n                                setNewContent([]);\n                                setModal(false);\n                            } }\n                        />\n                    </View>\n                </Overlay>\n\n\n                <Button\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={edit ? 'save-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        buttonTop('onpress')\n                    }}\n                    disabled={ buttonTop('disabled') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => goBack() }\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                {\n                    edit && !newQuestion && !editContent ?\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setNewQuestion(true) }\n                    /> : <></>\n                }\n                <ScrollView style={{marginBottom: 40}}>\n                { viewPage() }\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContent from './FormQuizContent';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\nimport { Audio } from 'expo-av';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n    const [modalConfirmation, setModalConfirmation] = useState(false);\n\n    const [editContent, setEditContent] = useState();\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name.substring(0, 23),\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    // Save an existing question\n    const saveContent = () => {\n        content[editContent].fileType = fileType;\n        content[editContent].filename = filename;\n        content[editContent].uri = uri;\n        content[editContent].question = question;\n        content[editContent].answers = answers;\n        setContent([...content]);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        if (isPlaying) setIsPlaying(false);\n    };\n\n    const clearState = () => {\n        setAnswers([]);\n        setFileType();\n        setFilename();\n        setUri();\n        setQuestion();\n        setSuccess(false);\n    };\n\n    const printQuestionList = () => {\n        if (content.length === 0) {\n            return (<Text style={styles.nothingYet}>\n                {QuizLang[props.lang].NoQuestionYet}\n            </Text>);\n        } else {\n            return content?.map((el, i) => {\n                return (\n                    <QuestionList\n                        index={i}\n                        key={i}\n                        id={i}\n                        content={el}\n                        lang={props.lang}\n                        setContent={setContent}\n                        setEditContent={setEditContent}\n                        questionId={i}\n                        contentList={content}\n                    />\n                );\n            });\n        }\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent !== undefined) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); return saveContent(); }\n        } else if (createQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].OK;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); setModal(false); return pushContent(); }\n        } else {\n            if (mode == 'title') return QuizLang[props.lang].Complete;\n            else if (mode == 'disabled') return !(content.length > 0);\n            else if (mode == 'onpress') { return setModal(true);  }\n        }\n    };\n\n    const printPage = () => {\n        if (editContent !== undefined && !createQuestion) {\n            if (success) setSuccess(false);\n            setAnswers(content[editContent].answers);\n            setFileType(content[editContent].fileType);\n            setFilename(content[editContent].filename);\n            setUri(content[editContent].uri);\n            setQuestion(content[editContent].question);\n            setCreateQuestion(true);\n        }\n        if (createQuestion) { // if the user is creating a new question\n            return <FormQuizContent\n                /* Form to create a quiz */\n                lang={props.lang}\n                setAnswers={setAnswers}\n                setFileType={setFileType}\n                setQuestion={setQuestion}\n                setUri={setUri}\n                setFilename={setFilename}\n                setSuccess={setSuccess}\n                setSound={setSound}\n                setIsPlaying={setIsPlaying}\n                pauseSound={pauseSound}\n                uri={uri}\n                filename={filename}\n                answers={answers}\n                fileType={fileType}\n                question={question}\n                success={success}\n                sound={sound}\n                isPlaying={isPlaying}\n            />\n        } else {\n            return <SafeAreaView style={styles.safeArea}>\n                <Button\n                    title={QuizLang[props.lang].AddQuestion}\n                    icon={\n                        <Icon\n                            name={'add-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => setCreateQuestion(true)}\n                />\n                <ScrollView style={{marginBottom: 40}}>\n                    { props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : printQuestionList() }\n                </ScrollView>    \n            </SafeAreaView>\n        }\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button containerStyle={{ marginTop: 10, width: 40 }} title={{}} icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    } disabled={name?.length < 3 || name.length > 23 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            {/* Confirmation give up quiz creation */}\n            <Overlay\n                visible={modalConfirmation}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => setModalConfirmation(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={QuizLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={() => setModalConfirmation(false)}\n                    />\n                    <Button\n                        title={QuizLang[props.lang].GoBack}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={() => {\n                            setModalConfirmation(false);\n                            props.setTab(2);\n                        } }\n                    />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ buttonTop('disabled') }\n                    onPress={ () => buttonTop('onpress') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearState();\n                        pauseSound();\n                        if (createQuestion)\n                            setCreateQuestion(!createQuestion);\n                        else if (content.length == 0) props.setTab(2);\n                        else setModalConfirmation(true)\n                    }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            { printPage() }\n        </>\n    );\n}\n","import React from 'react';\nimport { Text, Button, Icon, FAB } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif');\n    return (\n    <>\n        { props.quizLength > 1 ? <FAB\n            style={{marginTop: 140, position: 'absolute', zIndex: 10}}\n            containerStyle={{marginLeft: 120}}\n            size=\"small\"\n            icon={{name: 'repeat-sharp', type: 'ionicon', color:'white' }}\n            onPress={() => props.pickRandomQuizz()}\n        /> : <></> }\n        <Lottie LottieSource={ThinkingLottie} ImageSource={ThinkingImage} LottieStyle={{marginTop: -25, height: 250, marginBottom: -30}} />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButton}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            buttonStyle={{ backgroundColor: 'red' }}\n            containerStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, Alert, View, Modal } from 'react-native';\nimport { Text, Image, Input, Button, Icon, Overlay } from 'react-native-elements';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../../assets/img/activities/sad.gif';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport Lottie from '../../../utils/Lottie';\nimport { Audio } from 'expo-av';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n    const [modal, setModal] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const [success, setSuccess] = useState(0);\n    const [fail, setFail] = useState(0);\n    const [confetti, setConfetti] = useState(false);\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const TrophyLottie = require('../../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../../assets/lottie/sad.json');\n\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const stopSound = async () => {\n        await pauseSound();\n        setSound(new Audio.Sound());\n        await sound?.unloadAsync();\n    }\n\n    const playSound = async () => {\n        setIsPlaying(true);\n        await Audio.setAudioModeAsync({\n            staysActiveInBackground: true,\n            shouldDuckAndroid: true,\n        });\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus?.isLoaded === false) {\n            await sound.loadAsync({ uri: game[current].uri });\n            setSound(sound);\n        }\n        await sound.playAsync();\n        sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n            if (playbackStatus.didJustFinish) {\n                await sound.unloadAsync();\n                setIsPlaying(false);\n            }\n        });\n    };\n\n    const setMediaType = () => {\n        if (!game[current]) return;\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <Icon onPress={() => isPlaying ? pauseSound() : playSound() } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30}} />\n            default:\n                return <></>;\n        }\n    };\n\n    const openAlertResultQuestion = (result) => {\n        return (\n            Alert.alert(\n                result ? QuizLang[props.lang].SuccessTitle : QuizLang[props.lang].FailedTitle,\n                result ? QuizLang[props.lang].Success : QuizLang[props.lang].Failed(game[current].answers),\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: async () => {\n                            if (current + 1 <= game.length - 1)\n                                setCurrent(current + 1);\n                            else {\n                                const path = success >= fail ? require(`../../../../assets/sound/global/applause.mp3`) : require(`../../../../assets/sound/global/you_lose.mp3`);\n                                if (success >= fail) setConfetti(true);\n                                const { sound } = await Audio.Sound.createAsync(path);\n                                setSound(sound);\n                                sound.playAsync();\n                                setModal(true);\n                            }\n                        },\n                    }\n                ]\n            )\n        )\n    };\n\n    const answerQuestion = async () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        stopSound();\n        setAnswer('');\n        const result = game[current].answers.includes(answerTrimedLowercase);\n        if (result === false) {\n            // increment the fail and update the API\n            setFail(fail + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, false);\n        } else {\n            // increment the success and update the API\n            setSuccess(success + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, true)\n        }\n        openAlertResultQuestion(result);\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                {confetti && success >= fail ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n                )}\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => props.setTab(0)}\n                    ModalComponent={Modal}\n                >\n                    {success >= fail ? \n                        <>\n                            <Lottie LottieSource={TrophyLottie} ImageSource={TrophyImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} loop={false} />\n                            <Text style={{color:'blue', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].SuccessQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].SuccessQuiz(fail, success)}</Text>\n                        </>\n                    :\n                        <>\n                            <Lottie LottieSource={SadLottie} ImageSource={SadImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} />\n                            <Text style={{color:'red', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].FailQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].FailQuiz(fail, success)}</Text>\n                        </>\n                    }\n                    <Button title={QuizLang[props.lang].Leave} onPress={() => props.setTab(0)} containerStyle={styles.leaveButton} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </Overlay>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button buttonStyle={styles.buttonQuizGameOK} title={QuizLang[props.lang].OK} onPress={() => { answerQuestion() }} />\n                </View>\n            </>\n        }\n    </>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\n// This component is mounted when the user clicks on 'Play' in the main quiz menu\nexport default function Play(props) {\n    const [play, setPlay] = useState(false);\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quizId={props.quiz._id}\n                personId={props.personId}\n                quiz={props.quiz.content}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n                quizLength={props.quizLength}\n            />\n        }\n    </View>);\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{QuizLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Rules()}</Text>\n\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].CustomHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Custom()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler, Alert } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber, randomArrayElement } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Creation/CreateQuiz';\nimport Play from './Play';\nimport Help from './Help';\n\nimport * as API from '../../../data/quizApi';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1) {\n                    Alert.alert(\n                        QuizLang[props.lang].GiveUpQuizTitle,\n                        QuizLang[props.lang].GiveUpQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    setTab(0);\n                                }\n                            },\n                        ]\n                    )\n                }\n                else setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            let rand = randomArrayElement(random, 0, quiz.length - 1);\n            setRandom(rand);\n        }\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    isLoading={isLoading}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                quizLength={quiz.length}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    setReload={setReload}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return <View style={styles.view}>{printPage()}</View>;\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Essai${tries > 1 ? 's' : ''} restant${tries > 1 ? 's' : ''}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Score actuel: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Commencer\",\n        GiveUp: \"Abandonner\",\n        Reinit: \"Nouveau modèle\",\n        TitleGiveUp: \"Abandonner la partie\",\n        SureToGiveUp: \"Êtes-vous sûr(e) de vouloir abandonner la partie? Votre score sera enregistré.\",\n        Congratulations: 'Félicitations !!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: \"Recommencer\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'Le jeu des pairs, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu des pairs est assez connu et classique. Lorsque vous commencerez la partie, vous aurez un {0}. Cliquez alors sur le bouton \"{1}\" sur le bas de l’écran pour retourner les cartes face verso.\\n\\nVous devrez alors {2}. Par exemple, si vous cliquez sur une carte rouge, vous devrez cliquer sur l’autre carte rouge ensuite.\\n\\nPlus vous grimpez dans le score, plus le nombre de paires s’ajoutent au schéma. Il peut y avoir jusqu’à {3} au total.`,\n                boldText: [\"schéma de plusieurs paires de cartes face recto\", \"Commencer\", \"retourner les paires l'une après l’autre\", \"6 paires\"],\n            });\n        },\n        ScoreHead: \"Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois qu’un schéma est complété (c'est-à-dire que toutes les cartes ont été retournées), {0} et passez à un schéma suivant, {1}.\\n\\nLes points peuvent vous servir à avoir un joli score, mais aussi à recréer un nouveau schéma si vous l’avez complètement oublié. A chaque re-création d’un schéma, {2}. Et vous ne pouvez pas recréer un schéma s’il ne vous reste {3}.`,\n                boldText: [\"vous gagnez un point\", \"potentiellement plus difficile\", \"vous perdez un point\", \"qu’un essai pour le schéma actuel\"],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'How does it work',\n        Leave: 'Back',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Remaning tr${tries > 1 ? 'ies' : 'y'}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Actual score: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Start\",\n        GiveUp: \"Give up\",\n        Reinit: \"New model\",\n        TitleGiveUp: \"Give up the game\",\n        SureToGiveUp: \"Are you sure to give up this party? Your score will be saved.\",\n        Congratulations: 'Congratulations!!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        SoBad: 'So sad...',\n        ScoreNotBeated: 'Your daily score has not been beaten... But you can retry!',\n        Retry: \"Retry\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Best score made today: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'The double memory, how does it works?',\n        RulesHead: \"The rules\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The game of peers (or double memory) is quite familiar and classic. When you start the game, you will have a {0}. Then click on the \"{1}\" button at the bottom of the screen to turn the cards face up.\\n\\nFor example, if you click on a red card, you will have to click on the other red card next.\\n\\nThere can be up to {3} in total.`,\n                boldText: [\"pattern of several pairs of cards face up\", \"Start\", \"turn over the pairs one after the other\", \"6 pairs\"],\n            });\n        },\n        ScoreHead: \"The score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `Each time a pattern is completed (i.e., all the cards have been turned over), {0} and move on to the next pattern, {1}.\\n\\nThe points can be used to get a nice score, but they can also be used to recreate a new pattern if you've completely forgotten about it. Each time you re-create a pattern, {2}. And you can't recreate a pattern if you don't have {3} left.`,\n                boldText: [\"you earn a point\", \"potentially more challenging\", \"you lose a point\", \"than a try for the current pattern\"],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        height: 100 + '%',\n        paddingBottom: 40,\n        flex: 1,\n    },\n    logo: {\n        width: 120,\n        height: undefined,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n        resizeMode: \"center\",\n        aspectRatio: 1\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n        marginBottom: 20\n    },\n    RectoCard: {\n        width: 80,\n        height: 80,\n        backgroundColor: '#C3C3CF',\n        borderRadius: 20,\n        borderColor: '#858593',\n        borderWidth: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    PlayingCard: {\n        width: 80,\n        height: 80,\n        borderRadius: 20,\n        borderColor: '#68FF5C',\n        borderWidth: 5,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    VersoCard: {\n        width: 80,\n        height: 80,\n        borderRadius: 20,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    IconCard: {\n        marginTop: 23\n    },\n    viewGame: {\n        marginTop: 20,\n        width: 300,\n        height: 370,\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    buttonViewPlay: {\n        flexDirection: 'row',\n        width: 100 + '%',\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: 10\n    },\n    playButtons: {\n        alignContent: 'center',\n        textAlign: 'center',\n        paddingHorizontal: 30,\n        borderRadius: 10,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        paddingTop: 20,\n        width: 100 + '%',\n        height: 120 + '%',\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DoubleSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={DoubleLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{DoubleLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].Rules()}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].ScoreHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].ScoreHelp()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React from 'react';\nimport { Image, View } from 'react-native';\nimport { Button, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport DoubleLogo from '../../../assets/img/activities/double/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={DoubleLogo} style={styles.logo} resizeMode={'cover'} />\n\n            <Button\n                title={DoubleLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={DoubleLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <View>\n\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: -50,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                        type: 'ionicon',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.ambiantSoundPlay() }\n            />\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 20,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.soundEnabled ? 'sound' : 'sound-mute',\n                        type: 'entypo',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.setSoundEnabled(prev => !prev) }\n            />\n            </View>\n\n            <Button\n                title={DoubleLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => {\n                    props.ambiant.unloadAsync();\n                    props.setPage(null);\n                }}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}","const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};\n\nexport const generateRandomPair = (length) => {\n    const colors = [\n        '#791414',\n        '#143479',\n        '#791462',\n        '#147920',\n        '#797714',\n        '#14AB9D'\n    ];\n    const icons = [\n        'airplane',\n        'boat',\n        'bulb',\n        'color-palette',\n        'earth',\n        'gift',\n        'happy',\n        'heart-circle',\n        'restaurant',\n        'ribbon'\n    ]\n    var arr = [];\n    for (let i = 0; i < length / 2; i++) {\n        var indexColor = Math.floor(Math.random() * colors.length);\n        var indexIcon = Math.floor(Math.random() * icons.length);\n        arr.push({ color: colors[indexColor], icon: icons[indexIcon] }, { color: colors[indexColor], icon: icons[indexIcon] });\n        colors.splice(indexColor, 1);\n        icons.splice(indexIcon, 1);\n    }\n    arr = shuffle(arr);\n    for (let i = 0; i < arr.length; i++) {\n        const el = arr[i];\n        el.idx = i\n    }\n\n    return (arr);\n};","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements';\n\nimport styles from '../styles';\n\nexport default function Card(props) {\n    var cardStyles;\n    if (props.inPlay) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.PlayingCard]];\n    else if (props.inFound || props.show) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.VersoCard]];\n    else cardStyles = styles.RectoCard\n\n    const icon = !props.inFound && !props.inPlay && !props.show ? 'help-circle-outline' : props.icon;\n\n    return (\n        <>\n            <TouchableOpacity style={ cardStyles } onPress={() => {\n                if (!props.inPlay && !props.inFound) props.ReturnCard(props.index);\n            }}>\n                <Icon\n                    name={icon}\n                    size={props.inFound || props.show || props.inPlay ? 30 : 24}\n                    color={props.inFound || props.show || props.inPlay ? 'white' : 'grey'}\n                    type=\"ionicon\"\n                    style={styles.IconCard}\n                />\n            </TouchableOpacity>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { View, Text, Modal } from 'react-native';\n\nimport { Button, Overlay, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../assets/img/activities/sad.gif';\n\nimport Lottie from '../../utils/Lottie';\n\nimport styles from './styles';\n\nimport { generateRandomPair } from './subs/helpers';\n\nimport Card from './subs/Card';\n\nexport default function Play(props) {\n    const [game, setGame] = useState([...generateRandomPair(4)]); // the current map game\n    const [found, setFound] = useState([]);\n    const [tries, setTries] = useState(3);\n    const [play, setPlay] = useState([]); // the current play of the player, an array with two values max, corresponding to the cards the player played\n    const [show, setShow] = useState(true);\n    const [confetti, setConfetti] = useState(false);\n    const [pause, setPause] = useState(false);\n\n    const TrophyLottie = require('../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../assets/lottie/sad.json');\n\n    const setLengthGame = () => {\n        if (props.score <= 8)\n            return 4;\n        else if (props.score <= 15)\n            return 6;\n        else if (props.score <= 30)\n            return 8;\n        else if (props.score <= 45)\n            return 10;\n        else\n            return 12;\n    }\n\n    // Exemple game element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null },\n            { idx: 2, color: '#ffffff', icon: null },\n            { idx: 3, color: '#ferdnc', icon: null }\n        ]\n    */\n\n        // each play, we push the current card to the play state, and check if the first element exists in the\n        // game state, and if the second element is the same as the first one, if so => success for a round, and push\n        // this pair in the found state. If fail => clear the play && found states\n\n    // Exemple play element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 2, color: '#ffffff', icon: null }\n        ] // this is a successful array\n\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null }\n        ] // this is a fail array\n    */\n\n    const failOverlay = () => {\n        if (props.modal == false) return;\n        return (\n            <>\n                <Lottie\n                    LottieSource={SadLottie}\n                    ImageSource={SadImage}\n                    autoplay={true}\n                    loop={true}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const successOverlay = () => {\n        if (!confetti) setConfetti(true);\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].BestScoreToday(props.bestScoreDay)}\n                </Text>\n                <Lottie\n                    LottieSource={TrophyLottie}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n    \n    const newModel = () => {\n        if (props.score == 0) return;\n        const currentGameLength = game.length;\n        props.setScore(prevScore => prevScore - 1);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(currentGameLength)]);\n    };\n\n    const printButton = () => {\n        if (show) {\n            return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={DoubleLang[props.lang].Start} onPress={() => setShow(false) } buttonStyle={styles.playButtons} />\n            <Button title={DoubleLang[props.lang].Leave} onPress={() => props.giveUp() } buttonStyle={[styles.playButtons, , {backgroundColor: 'red', marginLeft: 10}]} />\n            </View>);\n        } else {\n            return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={DoubleLang[props.lang].Reinit} buttonStyle={[styles.playButtons, {backgroundColor: 'green'}]} onPress={() => newModel() } disabled={props.score === 0 || tries <= 1} />\n                <Button title={DoubleLang[props.lang].GiveUp} buttonStyle={[styles.playButtons, {backgroundColor: 'red', marginLeft: 10}] } onPress={() => props.giveUp() } />\n            </View>);\n        }\n    };\n    \n    const ReturnCard = (key) => {\n        if (pause || show) return;\n        const currentPlay = play;\n        const indexGame = game[key];\n        const playing = [...currentPlay, indexGame];\n        if (playing.length == 2) {\n            // check if same card or return all and lose a try\n            if (playing[0].color === playing[1].color && playing[0].icon === playing[1].icon) {\n                const currentGameLength = game.length;\n                const nFound = [...found, playing[0], playing[1]];\n                if (nFound.length == currentGameLength) {\n                    props.playSound('next');\n                    props.setScore(prevScore => prevScore + 1);\n                    setShow(true);\n                    setTries(3);\n                    setGame([...generateRandomPair(setLengthGame())]);\n                    setFound([]);\n                } else {\n                    props.playSound('success');\n                    setFound(nFound);\n                }\n                setPlay([]);\n            } else {\n                setPlay(playing);\n                props.playSound('fail');\n                setPause(true);\n                setTimeout(() => {\n                    if (tries != 0) setTries(prevTries => prevTries - 1);\n                    if (tries === 0)\n                        props.endGame();\n                    else {\n                        setPlay([]);\n                        setFound([]);\n                    }\n                    setPause(false);\n                }, 1000);\n            }\n        } else {\n            setPlay(playing);\n            props.playSound('play');\n        }\n    };\n\n    const printCards = () => {\n        return game.map( (el, i) => {\n            var inFound = false;\n            var inPlay = false;\n            if (found.find(element => element.idx === i )) inFound = true;\n            else if (play.find(element => element.idx === i )) inPlay = true;\n            return (<Card show={show} key={i} index={i} inFound={inFound} inPlay={inPlay} backgroundColor={el.color} icon={el.icon} ReturnCard={ReturnCard} />);\n        });\n    };\n\n    const newGame = () => {\n        if (confetti) setConfetti(false);\n        props.setModal(false);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(4)]);\n    };\n\n    return (\n        <>\n            <View>\n                <FAB\n                    color='#2089dc'\n                    style={{\n                        position: 'absolute',\n                        marginLeft: 130,\n                        marginTop: 390\n                    }}\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.ambiantSoundPlay() }\n                />\n                <FAB\n                    color='#2089dc'\n                    style={{\n                        position: 'absolute',\n                        marginLeft: 85,\n                        marginTop: 390\n                    }}\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.soundEnabled ? 'sound' : 'sound-mute',\n                            type: 'entypo',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.setSoundEnabled(prev => !prev) }\n                />\n            </View>\n            {confetti ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n            )}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                { props.success && props.modal ? successOverlay() : failOverlay() }\n                <View style={{flexDirection: 'row', marginTop: 20}}>\n                    <Button title={DoubleLang[props.lang].Retry} onPress={() => newGame()} buttonStyle={{marginRight: 10}} icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n\n                    <Button title={DoubleLang[props.lang].Leave} onPress={() => { \n                        if (confetti) setConfetti(false);\n                        props.setModal(false);\n                        props.setTab(0);\n                    }} buttonStyle={{backgroundColor: 'red'}} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </View>\n            </Overlay>\n            <View style={styles.viewGame}>\n                { printCards() }\n            </View>\n            <View style={{alignItems: 'center', width: 100 + '%', marginTop: -10}}>\n                <Text>{DoubleLang[props.lang].Score(props.score)}</Text>\n                <Text>{DoubleLang[props.lang].BestDayScore(props.bestScoreDay)}</Text>\n                <Text>{DoubleLang[props.lang].RemaningTries(tries)}</Text>\n                { printButton() }\n            </View>\n        </>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport {\n    Text,\n    BackHandler,\n    ScrollView,\n    Alert\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport styles from './styles';\n\nimport * as API from '../../../data/doubleApi';\n\nimport Help from './Help';\nimport Menu from './Menu';\nimport Play from './Play';\n\nconst currentDate = new Date().toLocaleDateString('fr-FR');\n\nexport default function Double(props) {\n    const [tab, setTab] = useState(0);\n    const [score, setScore] = useState(0);\n    const [bestScoreDay, setBestScoreDay] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [ambiant, setAmbiant] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n    const [soundEnabled, setSoundEnabled] = useState(true);\n    const [ambiantEnabled, setAmbiantEnabled] = useState(true);\n\n    useEffect( async () => {\n        // API.clear();\n\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by MCOCHET - check his soundcloud here: https://soundcloud.com/mcochet\n            require(`../../../assets/sound/double/ambiant.mp3`)\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n\n        API.getScoreDay(props.personId, currentDate).then((data) => {\n            if (data.length > 0) setBestScoreDay(data[0].score);\n        });\n\n        API.getBestScore(props.personId).then((data) => {\n            if (data.length > 0) setBestScore(data[0].score);\n        });\n\n    }, []);\n\n    useEffect(() => {\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1 && score > 0) {  \n                    giveUp()\n                    return ;\n                }\n                setTab(0);\n            } else {\n                ambiant.unloadAsync();\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, ambiant]);\n\n    const endGame = async () => {\n        setModal(true);\n        let bestDayScore = false;\n        let bestScore = false;\n        if (score > bestScoreDay) { \n            playSound('applause');\n            setSuccess(true);\n            setBestScoreDay(score);\n            bestDayScore = true;\n            if (score > bestScore) {\n                bestScore = true;\n                setBestScore(score);\n            }\n        } else {\n            playSound('lose');\n            setSuccess(false);\n        }\n        await API.insertScore(props.personId, score, currentDate, bestDayScore, bestScore);\n        setScore(0);\n    };\n\n    const ambiantSoundPlay = () => {\n        if (ambiantEnabled) ambiant.pauseAsync();\n        else ambiant.playAsync();\n        setAmbiantEnabled(prevEnable => !prevEnable);\n    };\n    \n    const giveUp = () => {\n        if (score === 0) setTab(0);\n        else return Alert.alert(\n            DoubleLang[props.lang].TitleGiveUp,\n            DoubleLang[props.lang].SureToGiveUp,\n            [\n                {\n                    text: DoubleLang[props.lang].Leave,\n                    onPress: () => { null },\n                    style: 'cancel'\n                },\n                {\n                    text: DoubleLang[props.lang].GiveUp,\n                    onPress: () => {\n                        endGame();\n                    }\n                },\n            ]\n        )\n    };\n\n    const playSound = async (type) => {\n        if (!soundEnabled && !['applause', 'lose'].includes(type)) return;\n        if (sound) sound?.unloadAsync();\n        let choosenSound;\n        switch (type) {\n            case \"success\":\n                choosenSound = require(`../../../assets/sound/double/success.mp3`);\n                break;\n            case \"fail\":\n                choosenSound = require(`../../../assets/sound/double/fail.mp3`);\n                break;\n            case \"play\":\n                choosenSound = require(`../../../assets/sound/double/play.mp3`);\n                break;\n            case \"next\":\n                choosenSound = require(`../../../assets/sound/double/next.mp3`);\n                break;\n            case \"applause\":\n                choosenSound = require(`../../../assets/sound/global/applause.mp3`);\n                break;\n            case \"lose\":\n                choosenSound = require(`../../../assets/sound/global/you_lose.mp3`);\n                break;\n            default:\n                break;\n        }\n        const { sound } = await Audio.Sound.createAsync(choosenSound);\n        setSound(sound);\n        sound.playAsync();\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    ambiant={ambiant}\n                    setSoundEnabled={setSoundEnabled}\n                    soundEnabled={soundEnabled}\n                    ambiantEnabled={ambiantEnabled}\n                    ambiantSoundPlay={ambiantSoundPlay}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                        lang={props.lang}\n                        setTab={setTab}\n                        score={score}\n                        setScore={setScore}\n                        giveUp={giveUp}\n                        modal={modal}\n                        setModal={setModal}\n                        bestScoreDay={bestScoreDay}\n                        success={success}\n                        endGame={endGame}\n                        playSound={playSound}\n                        ambiantSoundPlay={ambiantSoundPlay}\n                        ambiantEnabled={ambiantEnabled}\n                        soundEnabled={soundEnabled}\n                        setSoundEnabled={setSoundEnabled}\n                    />;\n        } else if (tab === 2) {\n            return (<Help lang={props.lang} setTab={setTab} />);\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <ScrollView style={styles.view} contentContainerStyle={{alignItems: 'center'}}>\n            { printPage() }\n        </ScrollView>\n    );\n};","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\nimport Double from '../components/activities/Double';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return <Double lang={lang} setPage={setPage} personId={personId} />;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        },\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nimport { Audio } from 'expo-av';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n\n    useEffect( () => {\n        Audio.setIsEnabledAsync(true);\n    }, [])\n\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    scoreRow: {\n        flex: 1,\n        height: 180,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreRowSimon: {\n        flex: 1,\n        height: 250,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreHeading: {\n        fontSize: 18,\n        color: '#2089dc',\n        fontWeight: 'bold',\n        margin: 5\n    },\n    NoScore: {\n        color: 'grey',\n        fontStyle: 'italic',\n        marginTop: 45,\n        marginLeft: 45\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\nimport { Badge } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport { ScoreRatio } from '../../../../components/activities/Quiz/utils/scoreFunc';\nimport * as API from '../../../../data/quizApi';\n\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nexport default function QuizScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [quizScore, setQuizScore] = useState([]);\n\n    useEffect( () => {\n        API.get(props.personId).then((data) => {\n            const arr = [];\n            for (let i = 0; i < data.length; i++) {\n                const el = data[i];\n                arr.push({score: ScoreRatio(el.content, props.personId), name: el.name});\n            }\n            setQuizScore(arr);\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (quizScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            return quizScore.map( (el,i) => {\n                return (\n                    <View style={{marginHorizontal: 15}} key={i}>\n                        <Badge\n                            value={el.name}\n                            textStyle={{textAlign: 'center'}}\n                            badgeStyle={{position:'absolute', paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 100, zIndex: 3}}\n                        />\n                        <CircularProgress\n                            value={el.score}\n                            textStyle={{marginBottom: -10}}\n                            title={ActivitiesLang[props.lang].Success}\n                            valueSuffix={'%'}\n                            titleStyle={{marginBottom: 10}}\n\n                            activeStrokeColor={'#2089dc'}\n                            radius={65}\n                            inActiveStrokeColor={'#9b59b6'}\n                            inActiveStrokeOpacity={0.5}\n                            inActiveStrokeWidth={6}\n                            activeStrokeWidth={12}\n                        />\n                    </View>\n                );\n            });\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRow} horizontal={true}>\n            <View>\n                <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].QuizScore}</Text>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} /> :\n                    <ScrollView horizontal={true}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/simonApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function SimonScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [simonScore, setSimonScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setSimonScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (simonScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = simonScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].SimonScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/doubleApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function DoubleScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [doubleScore, setDoubleScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setDoubleScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (doubleScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = doubleScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].DoubleScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React from 'react';\nimport { ScrollView } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\n\nimport QuizScore from './QuizScore';\nimport SimonScore from './SimonScore';\nimport DoubleScore from './DoubleScore';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <QuizScore lang={props.lang} personId={props.personId} />\n            <DoubleScore lang={props.lang} personId={props.personId} />\n            <SimonScore lang={props.lang} personId={props.personId} />\n        </ScrollView>\n    );\n}\n","import React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    \n    const navigate = useNavigate();\n\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: 60, color: '#3B8EFF' }],\n                tabBarLabelStyle: [{ color: '#3B8EFF', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#3B8EFF'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#3B8EFF'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} personId={props.personId} /> }\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'#3B8EFF'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        marginBottom: 20,\n        width: 100 + '%',\n        backgroundColor: 'white',\n    },\n    topLottie: {\n        marginTop: -20,\n        width: 200,\n        height: 200,\n        marginBottom: -90,\n    },\n    bgLottie: {\n        width: 100 + '%',\n        opacity: 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: 100 + '%',\n        height: 100 + '%',\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: 'white',\n    },\n    heading: {\n        fontSize: 24,\n        color: '#3B8EFF',\n        marginTop: 10,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport SuccessImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/selection');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/selection', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/selection', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={SuccessImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig, reset } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport SelectionMenu from './pages/SelectionMenu';\nimport Activities from './pages/Activities';\nimport Home from './pages/Home';\nimport Tutorial from './pages/Tutorial';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [lang, setLang] = useState('fr');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        // reset();\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    useEffect( () => {\n        let local = Localization.locale?.split('-')[0] || 'fr';\n        setLang(['en', 'fr'].includes(local) ? local : 'fr');\n        console.log('- Imported config file -');\n    }, [config]);\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                    setLang={setLang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/tutorial\"\n                            element={\n                                <Tutorial\n                                    lang={lang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={<Home lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} username={config?.username} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/selection\"\n                            element={\n                                <SelectionMenu\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}