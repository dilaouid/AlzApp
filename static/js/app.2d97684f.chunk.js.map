{"version":3,"sources":["assets/img/activities/trophy.gif","assets/img/activities/help/question_mark.gif","assets/img/activities/brain.gif","assets/img/interface/profile.jpg","assets/img/activities/sad.gif","assets/sound/global/applause.mp3","assets/sound/global/you_lose.mp3","assets/sound/simon/green.mp3","assets/img/alzheimapp_logo.png","assets/img/username/chooseusername.gif","assets/img/loading.gif","assets/img/tutorial/1.png","assets/img/tutorial/2.png","assets/img/tutorial/3.png","assets/img/tutorial/4.png","assets/img/tutorial/5.png","assets/img/tutorial/6.png","assets/img/tutorial/swipe-right.gif","assets/img/selection/addedUser.gif","assets/img/activities/bg.gif","assets/img/activities/simon/logo.png","assets/img/activities/quiz/logo.png","assets/img/activities/quiz/success.gif","assets/img/activities/double/logo.png","assets/sound/simon/red.mp3","assets/sound/simon/yellow.mp3","assets/img/activities/quiz/thinking.gif","assets/sound/double/ambiant.mp3","assets/sound/double/success.mp3","assets/sound/double/fail.mp3","assets/sound/double/play.mp3","assets/sound/double/next.mp3","data/configApi.js","language/interface/index.js","language/tutorial/index.js","language/home/index.js","pages/Home/styles.js","pages/Home/Menu.js","utils/dilacrypt.js","data/dictaphoneApi.js","data/simonApi.js","data/quizApi.js","data/doubleApi.js","utils/helpers.js","data/personApi.js","utils/share.js","pages/Home/ImportData.js","pages/Home/index.js","pages/ChooseUsername/styles.js","pages/ChooseUsername/index.js","components/utils/Lottie.js","components/utils/Loading.js","pages/Tutorial/styles.js","pages/Tutorial/index.js","components/utils/HomeOrTutorial.js","language/selection/index.js","components/selection/Rows.js","components/selection/styles.js","components/selection/PersonCreation/Success.js","components/selection/PersonCreation/Form.js","components/selection/PersonCreation/CreatePerson.js","pages/SelectionMenu/styles.js","pages/SelectionMenu/index.js","language/activities/index.js","pages/Activities/Settings/styles.js","pages/Activities/Settings/index.js","language/activities/dictaphone/index.js","components/activities/Dictaphone/Rows.js","components/activities/Dictaphone/styles.js","components/activities/Dictaphone/index.js","language/activities/simon/index.js","components/activities/Simon/styles.js","components/activities/Simon/Menu.js","components/activities/Simon/Game.js","components/activities/Simon/Help.js","components/activities/Simon/index.js","language/activities/quiz/index.js","components/activities/Quiz/styles.js","components/activities/Quiz/Menu.js","components/activities/Quiz/utils/quizFunc.js","components/activities/Quiz/Creation/QuestionList.js","components/activities/Quiz/utils/scoreFunc.js","components/activities/Quiz/QuizList.js","components/activities/Quiz/ViewQuizList.js","components/activities/Quiz/SuccessContent.js","components/activities/Quiz/Creation/FormQuizContent.js","components/activities/Quiz/ViewQuiz.js","components/activities/Quiz/Creation/CreateQuiz.js","components/activities/Quiz/Play/Menu.js","components/activities/Quiz/Play/Game.js","components/activities/Quiz/utils/gameFunc.js","components/activities/Quiz/Play/index.js","components/activities/Quiz/Help.js","components/activities/Quiz/index.js","language/activities/double/index.js","components/activities/Double/styles.js","components/activities/Double/Help.js","components/activities/Double/Menu.js","components/activities/Double/subs/helpers.js","components/activities/Double/subs/Card.js","components/activities/Double/Play.js","components/activities/Double/index.js","data/activities.js","pages/Activities/Activities/styles.js","pages/Activities/Activities/index.js","pages/Activities/Score/styles.js","pages/Activities/Score/QuizScore/index.js","pages/Activities/Score/SimonScore/index.js","pages/Activities/Score/DoubleScore/index.js","pages/Activities/Score/index.js","pages/Activities/Tabs.js","pages/Activities/styles.js","pages/Activities/index.js","webpack:///./index.js?41f5","App.js"],"names":["module","exports","db","require","filename","storage","AsyncStorage","autoload","SawTutorial","bool","updateAsync","hasSeenTutorial","$exists","getConfig","a","async","findAsync","username","err","docs","length","insertAsync","then","resp","lang","fr","YourUsername","ImportImage","FullName","SetFullName","Description","SetDescription","RequiredField","LimitExceededField","limit","Save","CreatedPerson","EditedPerson","ReturnToForm","Yes","No","AreYouSure","DeletePerson","GlobalLoading","en","applyBoldStyle","text","numberOfItemsAdded","result","sentence","split","boldText","forEach","i","splice","Text","style","fontWeight","Step1Header","Step1Content","Step2Header","Step2Content","Step3Header","Step3Content","Step4Header","Step4Content","Step5Header","Step5Content","LastStepHeader","LastStepButton","ChooseUsername","WhatIsUsername","Select","Import","Introduction","Source","License","Language","Step1","Step2","Step3","Step4","Step5","Step6","Step7","Step8","Step9","Step10","Step11","Step12","Step13","Step14","InvalidFile","InvalidPersonFile","IncorrectPersonFile","ErrorChekingPerson","InvalidActivitiesLength","InvalidQuizData","InvalidLogData","InvalidDoubleData","InvalidSimonData","StyleSheet","create","container","height","backgroundColor","alignItems","header","marginTop","textAlign","logo","width","menu","flex","marginBottom","button","color","justifyContent","buttonContainer","borderRadius","copyleft","fontSize","fontStyle","ErrorMessage","marginHorizontal","Menu","props","navigate","useNavigate","ScrollView","styles","title","HomeLang","buttonStyle","titleStyle","containerStyle","icon","name","type","size","marginRight","marginLeft","raised","onPress","state","setLang","iconContainerStyle","DocumentPicker","multiple","e","setImportFile","uri","prev","Linking","openURL","encrypt","string","key","encryptedString","j","String","fromCharCode","charCodeAt","get","personId","find","sort","date","exec","datas","getScoreDay","score","data","console","error","createQuizContent","el","id","uuidv4","success","failed","includes","fileType","uploadQuizFile","path","FileSystem","from","to","updateScore","quizId","contentId","_id","quiz","contentIndex","content","findIndex","scoreIndex","getBestScore","insertScore","dailyScoreBeaten","globalScoreBeaten","pushErrors","errors","field","msg","hasOwnProperty","randomNumber","min","max","Math","floor","random","person","fullname","trim","description","Object","keys","picture","edit","upd","$set","catch","log","isValidDate","d","n","Date","isNaN","fileToBase64","encoding","formatQuiz","formatLog","scoreVerification","checkPersonInformations","checkPersonExists","personAPI","checkQuiz","quizKeys","contentKeys","k","l","answers","question","foundInScore","checkDouble","double","checkSimon","simon","checkDictaphone","dictaphone","importPerson","exists","intermediates","importQuiz","res","filePath","quizAPI","quizFindAsync","importDouble","doubleAPI","importSimon","simonAPI","importLog","dictaphoneAPI","writeDataFile","fileUri","exportPerson","personFind","personData","simonData","doubleData","quizData","dictaphoneData","JSON","stringify","activities","dilacrypt","ImportData","useState","step","setStep","setError","useEffect","importFile","parsed","parseJSON","dataImport","found","CannotCreatePerson","inputString","parse","stepStyle","idx","clr","display","alignContent","map","ActivityIndicator","Home","useLocation","View","Image","source","AlzheimApp","resizeMode","wrapper","heading","textInput","borderColor","paddingHorizontal","shadowOpacity","shadowRadius","shadowOffset","elevation","image","buttonText","paddingTop","slide","padding","viewrow","flexDirection","flexWrap","input","setInput","isLoading","setIsLoading","loadPage","setLoadPage","confirmed","setConfirmed","redirect","setRedirect","setUsername","backHandler","BackHandler","addEventListener","remove","parseUsername","insertUsername","response","ChooseUsernameGIF","TutorialLang","TextInput","underlineColorAndroid","value","placeholder","InterfaceLang","maxLength","onChangeText","TouchableOpacity","activeOpacity","animating","Lottie","Platform","OS","LottieStyle","LottieSource","loop","autoPlay","ImageSource","ImageStyle","Loading","LoadingImage","slideOdd","titleOdd","textOdd","paddingBottom","borderWidth","Tutorial","showsButtons","showsPagination","StepOne","SwipeImage","position","opacity","StepTwo","StepThree","StepFour","StepFive","StepSixth","component","Config","s","HomeOrTutorial","Hello","WhatsUp","AddAPerson","Edit","Delete","ReturnToList","NobodyYet","WrongFullname","Search","Rows","TouchableScale","default","mod","index","componentProps","Component","bottomDivider","DefaultProfilePicture","rounded","Content","Title","Subtitle","Chevron","rightButton","minHeight","imageSuccess","leftButton","view","alignSelf","marginVertical","btnImport","btnSave","profilePicture","successPageTitle","Success","SuccessImage","close","Form","fullnameError","setFullnameError","descriptionError","setDescriptionError","uriPreview","defaultProfilPicture","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","alert","setUriPreview","fsRead","setImage","leftIcon","label","errorStyle","renderErrorMessage","errorMessage","inputStyle","setFullname","setDescription","cb","Person","imgName","addPerson","persons","setFullnameHeader","scs","confirm","iconRight","CreatePerson","setSuccess","compProps","setPersons","zIndex","topBanner","topImage","boldtext","subtitle","overflow","viewList","borderBottomColor","borderBottomWidth","safeContainer","nobodyYet","searchBar","searchInputStyle","SelectionMenu","search","setSearch","setIndex","SelectionMenuLang","btnText","setBtnTxt","active","setActive","swiper","useRef","Audio","setIsEnabledAsync","regex","RegExp","$regex","list","LoadingBrain","current","scrollBy","SafeAreaView","ref","scrollEnabled","pagingEnabled","onIndexChanged","setTimeout","inputContainerStyle","Activities","Score","Settings","ChangeProfile","ShareProfile","DeleteProfile","ResetAccount","Simon","DoubleMemory","Dictaphone","Quiz","SuggestedActivities","Back","QuizScore","SimonScore","DoubleScore","NoScore","Global","BestScoreByDay","ExportedProfile","ReturnList","buttonStyleReturn","buttonStyleDelete","buttonStyleBack","buttonStyleDebug","setEdit","load","setLoad","deletePerson","SimonDB","removeAsync","DictaphoneDB","DoubleDB","QuizDB","deleted","ActivitiesLang","Sharing","disabled","Alert","Start","Pause","Stop","Continue","Untitled","ChooseTitle","PleaseChooseATitle","Cancel","Placeholder","DeleteTrack","SureDeleteTrack","NothingYet","isPlaying","setIsPlaying","progress","setProgress","Sound","sound","setSound","playingSounds","pauseAsync","pauseAll","setAudioModeAsync","staysActiveInBackground","shouldDuckAndroid","getStatusAsync","getSoundStatus","isLoaded","loadAsync","setPlayingSounds","playAsync","setOnPlaybackStatusUpdate","playbackStatus","didJustFinish","unloadAsync","positionMillis","playableDurationMillis","variant","animation","duration","reverse","deleteId","recordButton","titleButton","actionButtonsView","actionButtons","safeArea","loading","nothingYet","divider","overlay","paddingVertical","overlayTitle","overlayDescription","overlayInput","recording","setRecording","records","setRecords","setTitle","modal","setModal","setDeleteId","pause","setPause","stopRecording","stopAndUnloadAsync","API","stopPlayingSounds","setPage","saveRecord","getURI","folder","record","DictaphoneLang","created","deleteRecord","goBack","visible","overlayStyle","onBackdropPress","ModalComponent","Modal","startAsync","requestPermissionsAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","createAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","toLocaleDateString","toLocaleTimeString","Play","Help","Leave","ToGiveUp","BestScore","bestScore","DailyScore","dailyScore","YourTurn","WaitNSee","Failed","NiceHit","Tries","tries","BestScoreToday","Progress","order","game","Congratulations","SoBad","ScoreNotBeated","Retry","Exit","GiveUp","TimeToStop","Head","RulesHead","TriesHead","Rules","TriesExplain","leaveButton","SimonButtonWeb","SimonButton","SimonLeftButton","SimonGreen","borderTopLeftRadius","SimonRed","borderTopRightRadius","SimonYellow","borderBottomLeftRadius","SimonBlue","borderBottomEndRadius","clickedButton","headerOverlay","textOverlay","viewHelpPage","leaveButtonHelpPage","helpHead","helpStepHead","textTransform","helpStep","helpQuestionMark","SimonLogo","SimonLang","setTab","Game","start","setStart","setFailed","canPlay","setCanPlay","setLoading","setTries","round","setOrder","buttonClicked","setButtonClicked","setBestScore","setDailyScore","niceHit","setNiceHit","confetti","setConfetti","Array","setGame","scoreBeaten","setScoreBeaten","currentDate","SimonButtonStyle","playButtonDemo","pickCorrectSound","Promise","resolve","reject","playBackStatus","playButton","playedGame","push","time","failRound","successRound","completeGame","fadeOut","autoStart","fallSpeed","count","origin","x","y","TrophyImage","autoplay","onStartShouldSetResponder","onResponderGrant","QuestionMark","tab","pos","Create","GoBack","NoQuestionYet","SuccessfulRatio","AddQuestion","Complete","ImportFile","ReferenceFile","WhatIsTheQuestion","AddAnswer","WhatIsAnswer","OK","GiveUpQuizTitle","GiveUpQuiz","CreatedQuestion","EditedQuestion","PossibleAnswers","DeleteQuiz","SureDeleteQuiz","SureDeleteQuestion","CompleteQuizTitleHeader","CompleteQuizTitle","QuizTitle","CreatedQuiz","EditedQuiz","QuizListRedirection","selectedQuizz","quizName","Questions","SuccessTitle","FailedTitle","join","SuccessQuizTitle","SuccessQuiz","fail","FailQuizTitle","FailQuiz","SaveContent","AddContent","SureCancelEdition","CustomHead","Custom","answersText","leaveButtonPlay","createButton","overlayDescriptionReference","ScrollViewSuccess","modalTitle","modalDescription","quizTitleInputContainer","quizTitleInput","badgesView","quizzTitle","topMediaQuestion","gameQuestion","flexQuizGame","inputQuizGame","buttonQuizGameOK","QuizLogo","QuizLang","printFile","clearFile","pauseSound","playSound","QuestionList","quizEdit","newContent","quizEdition","Number","isInteger","questionId","tmp","setNewContent","setQuizEdit","setReload","reload","setEditedQuiz","contentList","setContent","pickOutQuestion","setEditContent","ScoreRatio","filter","parseInt","total","toFixed","QuizList","ViewQuizList","SuccessContent","FormQuizContent","answer","setAnswer","contentContainerStyle","setFileType","setFilename","setUri","mimeType","flexShrink","setQuestion","toLowerCase","setAnswers","addAnswer","badgeStyle","pickOutAnswer","ViewQuiz","newQuestion","setNewQuestion","editContent","editedQuiz","saveQuiz","concat","editedFile","buttonTop","mode","saveContent","pushContent","viewPage","CreateQuiz","createQuestion","setCreateQuestion","setName","modalConfirmation","setModalConfirmation","undefined","substring","ThinkingImage","quizLength","pickRandomQuizz","ThinkingLottie","setPlay","setCurrent","setFail","arr","shuffle","TrophyLottie","SadLottie","openAlertResultQuestion","SadImage","setMediaType","answerTrimedLowercase","answerQuestion","play","setQuiz","setRandom","rand","randomArrayElement","exclude","randNumber","RemaningTries","Reinit","TitleGiveUp","SureToGiveUp","BestDayScore","ScoreHead","ScoreHelp","hp","aspectRatio","RectoCard","wp","PlayingCard","VersoCard","IconCard","viewGame","buttonViewPlay","playButtons","DoubleLang","DoubleLogo","ambiantEnabled","ambiantSoundPlay","soundEnabled","setSoundEnabled","ambiant","generateRandomPair","colors","icons","indexColor","indexIcon","Card","cardStyles","inPlay","inFound","show","ReturnCard","setFound","setShow","currentPlay","indexGame","playing","currentGameLength","nFound","setScore","prevScore","prevTries","endGame","bestScoreDay","failOverlay","element","newModel","giveUp","Double","setBestScoreDay","setAmbiant","setAmbiantEnabled","isLooping","bestDayScore","prevEnable","choosenSound","returnComponent","page","ActivitiesList","iconPosition","scoreRow","scoreRowSimon","scoreHeading","margin","quizScore","setQuizScore","horizontal","textStyle","valueSuffix","initialValue","delay","activeStrokeColor","radius","inActiveStrokeColor","inActiveStrokeOpacity","inActiveStrokeWidth","activeStrokeWidth","simonScore","setSimonScore","btnIndex","setBtnIndex","buttons","TotalScore","selectedIndex","global","days","item","highestToLowest","b","labels","datasets","fromZero","showValuesOnTopOfBars","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","printScore","doubleScore","setDoubleScore","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","options","headerShown","tabBarIcon","focused","children","unmountOnBlur","topLottie","bgLottie","bgImage","tabViewItem","tabText","tabView","useParams","setPerson","BgSource","navTheme","DefaultTheme","background","TopImage","BackgroundImage","NavigationContainer","theme","registerRootComponent","config","setConfig","loadDataCallback","local","Localization","useCallback","fetchData","StatusBar","hidden","LangInterface","exact"],"mappings":"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","file":"static/js/app.2d97684f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trophy.04dc6604.gif\";","module.exports = __webpack_public_path__ + \"static/media/question_mark.c1494184.gif\";","module.exports = __webpack_public_path__ + \"static/media/brain.abdab59b.gif\";","module.exports = __webpack_public_path__ + \"static/media/profile.5d930b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sad.bfdab12f.gif\";","module.exports = __webpack_public_path__ + \"static/media/applause.bfbba08b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/you_lose.c6b6ef1b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/green.7a0722af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/alzheimapp_logo.e07c8c32.png\";","module.exports = __webpack_public_path__ + \"static/media/chooseusername.e9a02c29.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading.2460b043.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.ede08671.png\";","module.exports = __webpack_public_path__ + \"static/media/2.b87932e3.png\";","module.exports = __webpack_public_path__ + \"static/media/3.3ed4e762.png\";","module.exports = __webpack_public_path__ + \"static/media/4.80535fcd.png\";","module.exports = __webpack_public_path__ + \"static/media/5.da0bedf3.png\";","module.exports = __webpack_public_path__ + \"static/media/6.7911d645.png\";","module.exports = __webpack_public_path__ + \"static/media/swipe-right.6dde9c7c.gif\";","module.exports = __webpack_public_path__ + \"static/media/addedUser.8426bfb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.59f6204f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.097ce51b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.348cd96d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.5d28b463.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.acbb69fd.png\";","module.exports = __webpack_public_path__ + \"static/media/red.5974021a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.9aaea662.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.e82f415e.gif\";","module.exports = __webpack_public_path__ + \"static/media/ambiant.458ba883.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.83357dfb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fail.60814d28.mp3\";","module.exports = __webpack_public_path__ + \"static/media/play.25c902a7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.c7b1e976.mp3\";","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'ConfigSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function SawTutorial(bool) {\n    return db.updateAsync(\n        { hasSeenTutorial: { $exists: true } },\n        { hasSeenTutorial: bool }\n    );\n}\n\nexport async function setUsername(input) {\n    return db.updateAsync({ username: { $exists: true } }, { username: input });\n}\n\nexport async function getUsername() {\n    return db.findAsync({ username: { $exists: true } }, (err, docs) => {\n        return docs;\n    });\n}\n\nexport async function getConfig() {\n    // db.remove({});\n    // AsyncStorage.clear().then(() => console.log('Cleared'))\n    const username = await db\n        .findAsync({ username: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    username: '',\n                });\n                return null;\n            } else {\n                return docs[0].username;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.username || null;\n        });\n\n    const hasSeenTutorial = await db\n        .findAsync({ hasSeenTutorial: { $exists: true } }, (err, docs) => {\n            if (docs.length === 0) {\n                db.insertAsync({\n                    hasSeenTutorial: false,\n                });\n                return false;\n            } else {\n                return docs[0].hasSeenTutorial;\n            }\n        })\n        .then((resp) => {\n            return resp[0]?.hasSeenTutorial || false;\n        });\n    return { username, hasSeenTutorial };\n}\n\nexport function getPersons() {\n    return db.findAsync({ person: { $exists: true } });\n}\n\nexport function reset() {\n    return AsyncStorage.clear();\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // Input related\n        YourUsername: \"Votre nom d'utilisateur\",\n        ImportImage: 'Importer une image',\n        FullName: 'Nom complet',\n        SetFullName: 'Nom complet (2 à 25 caractères)',\n        Description: 'Description (facultatif)',\n        SetDescription: 'Courte description complémentaire',\n        RequiredField:\n            'Ce champs doit obligatoirement être correctement rempli',\n        LimitExceededField: (limit) => {\n            return `Ce champs ne peut pas dépasser ${limit} caractères`;\n        },\n        Save: 'Enregistrer',\n        CreatedPerson: 'La personne a bien été rajoutée à votre liste !',\n        EditedPerson: 'Le profil a été modifié avec succès !',\n        ReturnToForm: 'Retourner sur le formulaire',\n\n        // Modal related\n        Yes: 'Oui',\n        No: 'Non',\n        AreYouSure: 'En êtes vous sûr ?',\n        DeletePerson: (username) => {\n            return `Vous êtes sur le point de supprimer le profil de ${username}. Cette action est irréversible ! Tout les scores et enregistrements attachés à cette personne seront aussi effacés. Êtes-vous sûr(e) de vouloir continuer ?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application en cours de chargement...',\n    },\n    en: {\n        // Input related\n        YourUsername: 'Your username',\n        ImportImage: 'Import a picture',\n        FullName: 'Full name',\n        SetFullName: 'Set full name (between 2-25 characters)',\n        Description: 'Description (optional)',\n        SetDescription: 'Short complementary description',\n        RequiredField: 'This field is required',\n        LimitExceededField: (limit) => {\n            return `This field cannot exceed ${limit} characters`;\n        },\n        Save: 'Save',\n        CreatedPerson: 'The person has been successfully added to your list!',\n        EditedPerson: 'The profile has been successfully edited!',\n        ReturnToForm: 'Return to the form',\n\n        // Modal related\n        Yes: 'Yes',\n        No: 'No',\n        AreYouSure: 'Are you sure?',\n        DeletePerson: (username) => {\n            return `You are about to delete ${username}'s profile. This action cannot be undone. All the score and recording will also be deleted. Are you sure to continue?`;\n        },\n\n        // Loading related\n        GlobalLoading: 'Application loading...',\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        // First step of the tutorial\n        Step1Header: 'Bienvenue sur AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} est une application qui permet de réaliser un suivi et d'accompagner les personnes atteintes de la maladie d'Alzheimer avec différents jeux et exercices tout aussi ludiques les uns que les autres.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'Aucune connexion internet requise',\n        Step2Content:\n            \"Vos données ne sont pas sauvegardées sur des serveurs. Vos données vous appartenant, tout est stocké localement sur votre appareil. Même en mode avion, l'application fonctionnera normalement.\",\n\n        // Third step of the tutorial\n        Step3Header: 'Partagez le suivi',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Vous êtes une structure hospitalière ou une famille, et désirez partager le suivi d'une personne ? Il est possible {0} la donnée d'une personne et {1} dans un autre appareil !\",\n                boldText: [\"d'exporter\", \"d'importer\"],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% gratuit',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0}. Il n'y a pas de piège, seulement que l'accompagnement doit se faire gratuitement, la santé doit être accessible pour tous, sans aucun prix.\",\n                boldText: ['Entièrement gratuit, sans publicité'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% open source',\n        Step5Content:\n            \"Vous êtes développeur ? Le code de l'application est accessible par tous et pour tous ! Vous êtes libres d'y ajouter les modifications que vous souhaitez localement !\",\n\n        // Last step of the tutorial\n        LastStepHeader: 'Prêt(e) à commencer ?',\n        LastStepButton: 'PRÊT(E)',\n\n        ChooseUsername: \"Choisissez votre nom d'utilisateur\",\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Ce nom d'utilisateur correspond au nom de la personne qui s'occupe de la personne atteinte de l'Alzheimer (ou {0} en anglais), ou de votre nom si vous êtes vous même un jeune malade.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n    en: {\n        // First step of the tutorial\n        Step1Header: 'Welcome to AlzheimApp',\n        Step1Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"{0} is an application which would help you create a trace and to accompagny people with Alzheimer's disease with various games and exercices each just as fun as the next.\",\n                boldText: ['AlzheimApp'],\n            });\n        },\n\n        // Second step of the tutorial\n        Step2Header: 'No internet connection required',\n        Step2Content:\n            'Your data are not saved in a server. Your datas belongs to you, so everything is locally saved in your device. You can even use this application in airplane mode.',\n\n        // Third step of the tutorial\n        Step3Header: 'Share the follow-up',\n        Step3Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"Your are a hospital or a family, and wants to share the follow-up of a specific person? It's possible, you can {0} a person's data and {1} it in another device!\",\n                boldText: ['export', 'import'],\n            });\n        },\n\n        // Fourth step of the tutorial\n        Step4Header: '100% free',\n        Step4Content: () => {\n            return applyBoldStyle({\n                sentence:\n                    '{0}. There is no trap, just that the accompaniment must be free, because health must be accessible to all, at no cost.',\n                boldText: ['Completly free, without any ad'],\n            });\n        },\n\n        // Fifth step of the tutorial\n        Step5Header: '100% opensource',\n        Step5Content:\n            'You are a developer? The source code of the application is available for everyone! You are free to modify it locally or asks for merge requests..',\n\n        // Last step of the tutorial\n        LastStepHeader: 'Ready to start?',\n        LastStepButton: 'READY',\n\n        ChooseUsername: 'Choose your username',\n        WhatIsUsername: () => {\n            return applyBoldStyle({\n                sentence:\n                    \"This is the Alzheimer {0} username. If you are yourself diagnosed with the Alzheimer's disease, you can set your own name or username in this field.\",\n                boldText: ['Caregiver'],\n            });\n        },\n    },\n};\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Select: \"Sélection des personnes\",\n        Import: \"Importer un profil\",\n        Introduction: \"Introduction\",\n        Source: \"Accès au code source\",\n        License: \"Code sous licence GPL v3.\\nCréation originale par Diyaeddine LAOUID.\",\n        Language: \"Changer la langue\",\n        Step1: \"Vérification du format ... \",\n        Step2: \"Vérification du format de l'identité ... \",\n        Step3: \"Vérification d'une personne similaire ...\",\n        Step4: \"Vérification des activités ...\",\n        Step5: \"Vérification des quiz ...\",\n        Step6: \"Vérification des jeux des pairs ...\",\n        Step7: \"Vérification du Simon ...\",\n        Step8: \"Vérification du Journal vocal ...\",\n        Step9: \"Création de la personne ...\",\n        Step10: \"Création des quiz ...\",\n        Step11: \"Création des jeux des pairs ...\",\n        Step12: \"Création du Simon ...\",\n        Step13: \"Création du Dictaphone ...\",\n        Step14: \"L'importation s'est déroulée sans encombre! :-)\",\n        InvalidFile: \"Le fichier a été supprimé du cache\",\n        InvalidPersonFile: \"Le fichier importé est invalide !\",\n        IncorrectPersonFile: \"L'identité de la personne est mal saisie !\",\n        ErrorChekingPerson: \"Une erreur est survenue au moment de la vérification de la personne dans le système ...\",\n        InvalidActivitiesLength: \"Le nombre d'activités dans le tableau du fichier est beaucoup trop grand.\",\n        InvalidQuizData: \"Les données du quiz sont incorrectes ...\",\n        InvalidLogData: \"Les données du dictaphone sont incorrectes ...\",\n        InvalidDoubleData: \"Les données du jeu des pairs sont incorrectes ...\",\n        InvalidSimonData: \"Les données du Simon sont incorrectes ...\",\n        \n    },\n    en: {\n        Select: \"Select a person\",\n        Import: \"Import a profil\",\n        Introduction: \"Introduction\",\n        Source: \"Source code on GitHub\",\n        License: \"Licensed GPL v3 source code.\\nOriginally created by Diyaeddine LAOUID.\",\n        Language: \"Change language\",\n        Step1: \"Format checking ... \",\n        Step2: \"Identity format checking ... \",\n        Step3: \"Checking if person already registered ...\",\n        Step4: \"Activities length checking ...\",\n        Step5: \"Quiz checking ...\",\n        Step6: \"Double Memory checking ...\",\n        Step7: \"Simon checking ...\",\n        Step8: \"Journal log checking ...\",\n        Step9: \"Person creation ...\",\n        Step10: \"Quiz creation ...\",\n        Step11: \"Double Memory creation ...\",\n        Step12: \"Simon Memory creation ...\",\n        Step13: \"Journal log creation ...\",\n        Step14: \"The person has been successfully imported!\",\n        InvalidFile: \"The file has been deleted from the cache\",\n        InvalidPersonFile: \"The imported file is invalid!\",\n        IncorrectPersonFile: \"The format of the imported person is invalid!\",\n        ErrorChekingPerson: \"Error when checking if this person exists...\",\n        InvalidActivitiesLength: \"The activities length on the file array is too big\",\n        InvalidQuizData: \"The quiz datas are invalid...\",\n        InvalidLogData: \"The journal logs datas are invalid...\",\n        InvalidDoubleData: \"The double memory game datas are invalid...\",\n        InvalidSimonData: \"The Simon datas are invalid...\",\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        height: 100 + '%',\n        backgroundColor: '#355c7d',\n        alignItems: 'center'\n    },\n    header: {\n        marginTop: 10 + '%',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    logo: {\n        width: 130,\n        height: 130\n    },\n    menu: {\n        marginTop: 10 + '%',\n        flex: 1,\n        marginBottom: 20\n    },\n    button: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'white',\n        color: '#355c7d',\n        justifyContent: 'flex-start'\n    },\n    buttonContainer: {\n        borderRadius: 25,\n        alignItems: 'center',\n        marginBottom: 20\n    },\n    copyleft: {\n        marginTop: 10 + '%',\n        fontSize: 11,\n        color: 'white',\n        textAlign: 'center',\n        fontStyle: 'italic'\n    },\n    ErrorMessage: {\n        color: 'red',\n        fontWeight: 'bold',\n        textAlign:'center',\n        marginTop: 20,\n        marginHorizontal: 40\n    }\n});\n","import React from 'react';\nimport {\n    ScrollView,\n    Linking\n} from 'react-native';\n\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { useNavigate } from 'react-router-native';\nimport * as DocumentPicker from 'expo-document-picker';\n\nimport { lang as HomeLang } from '../../language/home';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    const navigate = useNavigate();\n\n    return (\n        <ScrollView style={styles.menu}>\n            <Button\n                title={HomeLang[props.lang].Select}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d', textAlign: 'center' }}\n                containerStyle={styles.buttonContainer}\n                icon={\n                    <Icon\n                        name={'person-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => navigate('/selection', {\n                    state: { username: props.username, lang: props.lang, setLang: props.setLang }\n                })}\n            />\n            <Button\n                title={HomeLang[props.lang].Import}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'person-add-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => {\n                    DocumentPicker.getDocumentAsync({multiple: false}).then( e => {\n                        props.setImportFile(e.uri);\n                    })\n                }}\n            />\n            <Button\n                title={HomeLang[props.lang].Language}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'world-o'}\n                        type={'fontisto'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                onPress={() => props.setLang(prev => prev == 'fr' ? 'en' : 'fr')}\n                raised\n            />\n            <Button\n                title={HomeLang[props.lang].Introduction}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={[styles.buttonContainer, {marginBottom: 20}]}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => navigate('/tutorial') }\n            />\n            <Button\n                title={HomeLang[props.lang].Source}\n                buttonStyle={styles.button}\n                titleStyle={{ color: '#355c7d' }}\n                containerStyle={styles.buttonContainer}\n                iconContainerStyle={{ marginRight: 50 }}\n                icon={\n                    <Icon\n                        name={'logo-github'}\n                        type={'ionicon'}\n                        color={'#355c7d'}\n                        size={15}\n                        style={{ marginRight: 20, marginLeft: 10 }}\n                    />\n                }\n                raised\n                onPress={() => Linking.openURL('https://github.com/dilaouid/AlzheimApp')}\n            />\n            <Text style={styles.copyleft} >{HomeLang[props.lang].License}</Text>\n        </ScrollView>\n    );\n}\n","export const encrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let encryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        encryptedString += String.fromCharCode( string.charCodeAt(i) - key.charCodeAt(j) - key.length );\n    }\n    return (encryptedString);\n};\n\nexport const decrypt = (string, key) => {\n    if (!key || !string) return (false)\n    let decryptedString = '';\n    let j = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (key.length === j) j = 0;\n        decryptedString += String.fromCharCode( string.charCodeAt(i) + key.charCodeAt(j) + key.length );\n    }\n    return (decryptedString);\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DictaphoneSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(record) {\n    return db.insertAsync({\n        name: record.name,\n        date: new Date(),\n        path: record.path,\n        personId: record.personId,\n    });\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, datas) => {\n            return datas;\n        });\n};\n\nexport async function del(personId, id) {\n    const data = await db\n        .find({ personId: personId, _id: id })\n        .exec((err, res) => {\n            return res;\n        });\n    if (data) {\n        await FileSystem.deleteAsync(data[0].path);\n    }\n    return db.removeAsync({ _id: id, personId: personId });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'SimonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n}\n\nexport function clear(personId) {\n    return db.removeAsync({ personId: personId }, { multi: true });\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Datastore = require('react-native-local-mongodb');\n\n/* ******************** ******************* ****************  ****************  **************** ///\n\n                                Please don't take this seriously, it's just a draft\n                            (but before i go and hit the road, i gotta know THE SCHEMA)\n                                     ------------------------------------------\n\n    quizs = [\n        {\n            _id: somerandomidofaquiz,\n            name: the_quiz_name, (string)\n            personId: [personIdNumber1, personIdNumber2, ...], (array of personId, so a quiz can be shared in the future)\n            content: [\n                {\n                    id: randomUuid, (string)\n                    type: 'text' | 'audio' | 'image', (the kind of imported file)\n                    uri: theFileUri, (the file uri if there's one)\n                    question: 'When can I see you again?',\n                    answers: [\n                        'where we can do this again',\n                        'i gotta know'\n                    ], (array of possible answers)\n                    score: [\n                        {\n                            personId: personIdNumber1,\n                            success: 12,\n                            failed: 3\n                        },\n                        {\n                            personId: personIdNumber2,\n                            success: 39,\n                            failed: 0\n                        },\n                    ]\n                }\n            ] (array of the questions)\n        }\n    ]\n\n                                (it's been fun but now i got to gooooo)\n/* ******************** ******************* ****************   ****************  **************** */\n\nexport const db = new Datastore({\n    filename: 'QuizSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nconst createQuizContent = async (personId, el) => {\n    el.id = uuidv4();\n    el.score = [{personId: personId, success: 0, failed: 0}];\n    if (['audio', 'image'].includes(el.fileType)) {\n        await uploadQuizFile(el);\n    }\n};\n\nconst uploadQuizFile = async (el) => {\n    const filename = `${uuidv4()}${el.fileType == 'audio' ? '.m4a' : '.png'}`;\n    const path = `${FileSystem.documentDirectory}quiz/${el.fileType}/`;\n    await FileSystem.copyAsync({\n        from: el.uri,\n        to: `${path}${filename}`\n    });\n    await FileSystem.deleteAsync(el.uri);\n    el.uri = `${path}${filename}`;\n};\n\nexport function get(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return data;\n        });\n}\n\nexport async function create(personId, quiz) {\n    if (!quiz.name || quiz.content?.length === 0) {\n        console.error('Please fill the required fields');\n        return null;\n    }\n    for (let i = 0; i < quiz.content.length; i++) {\n        const el = quiz.content[i];\n        await createQuizContent(personId, el);\n    }\n    return db.insertAsync({ ...quiz }, (err, result) => {\n        if (err) {\n            console.error(err);\n            return null;\n        } else {\n            return result;\n        }\n    });\n};\n\nexport async function updateScore(personId, quizId, contentId, success) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    const contentIndex = quiz[0].content.findIndex(el => el.id == contentId );\n    const scoreIndex = quiz[0].content[contentIndex].score.findIndex(el => el.personId = personId);\n    if (success) quiz[0].content[contentIndex].score[scoreIndex].success++\n    else quiz[0].content[contentIndex].score[scoreIndex].failed++\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function deleteId(personId, quizId) {\n    const quiz = await db.findAsync({ _id: quizId, personId: personId }, (err, data) => {\n        if (err) console.error(err);\n        return data;\n    });\n    for (let i = 0; i < quiz[0].content.length; i++) {\n        const el = quiz[0].content[i];\n        if (['audio', 'image'].includes(el.fileType))\n            await FileSystem.deleteAsync(el.uri);\n    }\n    return db.removeAsync({ _id: quizId, personId: personId });\n};\n\nexport async function deleteQuestion(quizId, questionId) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    const content = quiz[0].content;\n    const contentIndex = content.findIndex(el => el.id == questionId );\n    if (['audio', 'image'].includes(content[contentIndex]))\n        await FileSystem.deleteAsync(content.uri);\n    quiz[0].content = content.splice(0, contentIndex);\n    return db.updateAsync({_id: quizId}, {...quiz[0]})\n};\n\nexport async function getById(quizId) {\n    return db.findAsync({ _id: quizId }, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n};\n\nexport async function saveQuiz(personId, quizId, content) {\n    const quiz = await db.findAsync({ _id: quizId}, (err, data) => {\n        if (err) console.error('cannot find quiz:', err);\n        return (data);\n    });\n    if (!quiz) return;\n    for (let i = 0; i < content.length; i++) {\n        const el = content[i];\n        if (!el.id)\n            await createQuizContent(personId, el);\n        else if (el.id && el.editedFile) {\n            await uploadQuizFile(el);\n            delete el.editedFile;\n        }\n    }\n    quiz[0].content = content;\n    return db.updateAsync({_id: quizId}, {...quiz[0]});\n};\n\nexport async function reset() {\n    return db.removeAsync({}, { multi: true });\n};\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'DoubleSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function getBestScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScoreDay(personId, date) {\n    return db\n        .find({ personId: personId, date: date })\n        .sort({ score: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function getScore(personId) {\n    return db\n        .find({ personId: personId })\n        .sort({ date: -1 })\n        .exec((err, data) => {\n            if (err) {\n                console.error(err);\n            }\n            return (data);\n        });\n};\n\nexport function insertScore(personId, score, date, dailyScoreBeaten, globalScoreBeaten) {\n    return db.insertAsync({\n        personId: personId,\n        date: date,\n        score: score,\n        dailyScoreBeaten: dailyScoreBeaten,\n        globalScoreBeaten: globalScoreBeaten\n    });\n};\n\nexport function clear() {\n    return db.removeAsync({}, { multi: true });\n};","export const pushErrors = (errors, field, msg) => {\n    if (errors.hasOwnProperty(field)) {\n        errors[field] = msg;\n    } else {\n        errors[field] = msg;\n    }\n    return errors;\n};\n\nexport const randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nexport const randomArrayElement = (exclude, min, max) => {\n    randNumber = randomNumber(min, max);\n    if (randNumber == exclude)\n        return randomArrayElement(exclude, min, max);\n    return randNumber;\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as FileSystem from 'expo-file-system';\n\nimport { db as DictaphoneDB } from './dictaphoneApi';\nimport { db as SimonDB } from './simonApi';\nimport { db as QuizDB } from './quizApi'\nimport { db as DoubleDB } from './doubleApi';\n\nimport { pushErrors } from '../utils/helpers';\n\nconst Datastore = require('react-native-local-mongodb');\n\nexport const db = new Datastore({\n    filename: 'PersonSchema',\n    storage: AsyncStorage,\n    autoload: true,\n});\n\nexport function create(person) {\n    var err = [];\n    if (\n        !person?.fullname ||\n        person.fullname?.trim()?.length > 25 ||\n        person.fullname?.trim()?.length < 2\n    ) {\n        pushErrors(err, 'fullname', null);\n    }\n    if (person?.description && person.description?.trim()?.length > 100) {\n        pushErrors(err, 'description', null);\n    }\n    if (Object.keys(err).length > 0) {\n        return { success: false, data: err };\n    }\n    const data = {\n        fullname: person.fullname?.trim(),\n        description: person.description?.trim(),\n        picture: null,\n    };\n    return db.insertAsync({ ...data }, (err, result) => {\n        if (err) {\n            return { success: false, data: {} };\n        }\n        return {\n            success: true,\n            data: result,\n        };\n    });\n};\n\nexport function edit(id, upd) {\n    var data = {};\n    if (upd.hasOwnProperty('fullname')) {\n        data.fullname = upd.fullname?.trim();\n    }\n    if (upd.hasOwnProperty('description')) {\n        data.description = upd.description?.trim();\n    }\n    if (upd.hasOwnProperty('picture')) {\n        data.picture = upd.picture?.trim();\n    }\n    return db.updateAsync({ _id: id }, { $set: { ...data } }).catch((err) => {\n        console.log(err);\n    });\n};\n\nexport function get(name) {\n    const regex = new RegExp(name, 'i');\n    return db.findAsync({ fullname: { $regex: regex } });\n};\n\nexport function getById(id) {\n    return db.findAsync({ _id: id });\n};\n\nexport async function deleteById(id) {\n    await SimonDB.removeAsync({ personId: id });\n    await DictaphoneDB.removeAsync({ personId: id });\n    await DoubleDB.removeAsync({ personId: id });\n    await QuizDB.removeAsync({ personId: id });\n    await FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons/${id}`).catch(err => {\n        console.error('folder delete err:',err);\n    });\n    return db.removeAsync({ _id: id });\n};\n\nexport async function reset() {\n    return FileSystem.deleteAsync(`${FileSystem.documentDirectory}persons`).then(async res => {\n        await SimonDB.removeAsync({}, { multi: true });\n        await QuizDB.removeAsync({}, { multi: true });\n        await DictaphoneDB.removeAsync({}, { multi: true });\n        return db.removeAsync({}, { multi: true });\n    });\n};","/**\n * Model is like:\n * {\n *      personId: 'xxx',\n *      name: 'xxx',\n *      description: 'xxx',\n *      picture: 'b64' || null,\n *      activities: {\n *          quiz: [\n *              // all quizz contents //\n *          ],\n *          log: [\n *              // all logs contents\n *          ],\n *          double: [\n *              // all double contents\n *          ],\n *          simon: [\n *              // all simon score\n *          ]\n *      }\n * }\n */\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as dilacrypt from './dilacrypt';\n\nimport { db as personAPI } from '../data/personApi';\nimport { db as dictaphoneAPI } from '../data/dictaphoneApi';\nimport { db as simonAPI } from '../data/simonApi';\nimport { db as quizAPI } from '../data/quizApi';\nimport { db as doubleAPI } from '../data/doubleApi';\n\nconst isValidDate = (d) => {\n    let n = new Date(d);\n    return n instanceof Date && !isNaN(n);\n};\n\nconst fileToBase64 = async (uri) => {\n    return await FileSystem.readAsStringAsync(uri, {\n        encoding: 'base64',\n    });\n};\n\nconst formatQuiz = async (quiz) => {\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < el.content.length; j++) {\n            const e = el.content[j];\n            if (e.uri)\n                e.uri = await fileToBase64(e.uri);\n        }\n    }\n    return (quiz);\n};\n\nconst formatLog = async (log) => {\n    for (let i = 0; i < log.length; i++) {\n        const el = log[i];\n        el.path = await fileToBase64(el.path);\n    }\n    return (log);\n};\n\nconst scoreVerification = (el, personId) => {\n    if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n    if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    if (!el.hasOwnProperty('score') || typeof el.score !== 'number') return false;\n    if (!el.hasOwnProperty('dailyScoreBeaten') || typeof el.dailyScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('globalScoreBeaten') || typeof el.globalScoreBeaten !== 'boolean') return false;\n    if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n    return true;\n};\n\n\n\nexport const checkPersonInformations = (person) => {\n    const keys = ['_id', 'description', 'fullname', 'picture', 'activities'];\n    for (let i = 0; i < keys.length; i++) {\n        const el = keys[i];\n        if (person.hasOwnProperty(el) === false)\n            return false;\n    }\n    return true;\n};\n\nexport const checkPersonInformationsLength = (person) => {\n    return person.fullname.length <= 25 && person.description.length <= 100;\n};\n\nexport const checkPersonExists = async (personId) => {\n    return await personAPI.findAsync({ _id: personId });\n}\n\nexport const checkQuiz = async (quiz, personId) => {\n    const quizKeys = ['name', 'content', 'personId', '_id'];\n    const contentKeys = ['answers', 'question', 'id', 'score']\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        for (let j = 0; j < quizKeys.length; j++) {\n            const k = quizKeys[j];\n            if (el.hasOwnProperty(k) === false) return false;\n        }\n        for (let d = 0; d < el.content.length; d++) {\n            const content = el.content[d];\n            if (content.hasOwnProperty('uri') || content.hasOwnProperty('filename') || content.hasOwnProperty('fileType')) {\n                if (!content.hasOwnProperty('uri')) return false;\n                else if (!content.hasOwnProperty('filename')) return false;\n                else if (!content.hasOwnProperty('fileType')) return false;\n            }\n            for (let j = 0; j < contentKeys.length; j++) {\n                const l = contentKeys[j];\n                if (content.hasOwnProperty(l) === false) return false;\n            }\n            if (typeof content.answers !== 'object' || content.answers?.length === 0) return false;\n            if (typeof content.question !== 'string' || typeof content.question?.length > 23) return false;\n            if (typeof content.score !== 'object' || content.answers?.length === 0) return false;\n            let foundInScore = false\n            for (let n = 0; n < content.score.length; n++) {\n                const score = content.score[n];\n                if (score.personId === personId) foundInScore = true;\n                if (!score.hasOwnProperty('personId')) return false;\n                if (!score.hasOwnProperty('success') || typeof score.success !== 'number') return false;\n                if (!score.hasOwnProperty('failed') || typeof score.success !== 'number') return false;\n            }\n            if (!foundInScore) return false;\n        }\n    }\n    return true;\n};\n\nexport const checkDouble = (double, personId) => {\n    if (typeof double !== 'object') return false;\n    for (let i = 0; i < double.length; i++)\n        if (!scoreVerification(double[i], personId)) return false;\n    return true;\n};\n\nexport const checkSimon = (simon, personId) => {\n    if (typeof simon !== 'object') return false;\n    for (let i = 0; i < simon.length; i++)\n        if (!scoreVerification(simon[i], personId)) return false;\n    return true;\n};\n\nexport const checkDictaphone = (dictaphone, personId) => {\n    if (typeof dictaphone !== 'object') return false;\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        if (!el.hasOwnProperty('_id') || typeof el._id !== 'string') return false;\n        if (!el.hasOwnProperty('name') || typeof el.name !== 'string' || el.name.length < 2) return false;\n        if (!el.hasOwnProperty('path') || typeof el.path !== 'string' || el.path.length < 100) return false;\n        if (!el.hasOwnProperty('personId') || el.personId !== personId) return false;\n        if (!el.hasOwnProperty('date') || isValidDate(el.date) === false) return false;\n    }\n    return true;\n};\n\nexport const importPerson = async (person, exists) => {\n\n    if (exists === false) {\n        await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${person._id}`, {intermediates: true});\n    }\n\n    let picture = null;\n    if (person.picture) {\n        picture = uuidv4();\n        const path = `${FileSystem.documentDirectory}persons/${person._id}/pp`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        await FileSystem.writeAsStringAsync(path + `/${picture}.jpg`, person.picture, { encoding: 'base64' }).then(el => {\n            picture = path + `/${picture}.jpg`;\n        }).catch(err => {\n            picture = null;\n        });\n    }\n\n    if (exists === false)\n        return personAPI.insertAsync(\n            {\n                _id: person._id,\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        );\n    else\n        return personAPI.updateAsync({_id: person._id}, {\n            $set: {\n                picture: picture,\n                description: person?.description || null,\n                fullname: person.fullname\n            }\n        });\n};\n\nexport const importQuiz = async (quiz) => {\n    let res = true;\n    for (let i = 0; i < quiz.length; i++) {\n        const el = quiz[i];\n        const path = `${FileSystem.documentDirectory}persons/${el.personId}/quiz`;\n        await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n            console.log('[!] Directory already exists');\n        });\n        for (let j = 0; j < quiz[i].content.length; j++) {\n            const e = quiz[i].content[j];\n            if (e.hasOwnProperty('uri')) {\n                // Import and write file\n                let filename = uuidv4();\n                let filePath;\n                await FileSystem.writeAsStringAsync(path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`, e.uri, { encoding: 'base64' }).then(el => {\n                    filePath = path + `/${filename}.${e.fileType === 'image' ? 'jpg' : 'm4a'}`;\n                    filename = filePath;\n                    e.uri = filePath;\n                }).catch(err => {\n                    filename = null;\n                    e.uri = null;\n                });\n            }\n        }\n        const quizFindAsync = await quizAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        const quizExists = quizFindAsync.length > 0;\n        if (quizExists) {\n            await quizAPI.updateAsync( {_id: el._id}, {\n                $set: {\n                    name: el.name,\n                    content: el.content\n                }\n            }).catch(err => {\n                res = false;\n            })\n        } else {\n            await quizAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importDouble = async (double) => {\n    let res = true;\n    for (let i = 0; i < double.length; i++) {\n        const el = double[i];\n        const doubleExists = await doubleAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (doubleExists.length === 0) {\n            await doubleAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importSimon = async (simon) => {\n    let res = true;\n    for (let i = 0; i < simon.length; i++) {\n        const el = simon[i];\n        const simonExists = await simonAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (simonExists.length === 0) {\n            await simonAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const importLog = async (dictaphone, personId) => {\n    let res = true;\n    const path = `${FileSystem.documentDirectory}persons/${personId}/recordings`;\n    await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch(err => {\n        console.log('[!] Directory already exists');\n    });\n    for (let i = 0; i < dictaphone.length; i++) {\n        const el = dictaphone[i];\n        const logExists = await dictaphoneAPI.findAsync( {_id: el._id }, (err, docs) => {\n            if (err) res = false;\n            return docs;\n        });\n        if (logExists.length === 0) {\n            el.date = new Date(el.date);\n            let filename = uuidv4();\n            let filePath;\n            await FileSystem.writeAsStringAsync(path + `/${filename}.m4a`, el.path, { encoding: 'base64' }).then(e => {\n                filePath = path + `/${filename}.m4a`;\n                filename = filePath;\n                el.path = filePath;\n            }).catch(err => {\n                console.log(err);\n                filename = null;\n                el.path = null;\n            });\n            await dictaphoneAPI.insertAsync(el).catch(err => {\n                res = false;\n            });\n        }\n    }\n    return res;\n};\n\nexport const writeDataFile = async (fullname, content) => {\n    let fileUri = FileSystem.documentDirectory + `${fullname}.alz`;\n    return await FileSystem.writeAsStringAsync(fileUri, content).catch(err => {\n        console.log(err);\n    }).then( (e) => {\n        return (fileUri);\n    });\n};\n\nexport const exportPerson = async (personId, key) => {\n    const personFind = await personAPI.findAsync({ _id: personId });\n    if (!personFind) return ('PERSON_NOT_FOUND');\n    const person = personFind[0];\n    if (!person._id || !person.fullname) return ('INVALID_PERSON');\n    const personData = {\n        _id: person._id,\n        description: person.description,\n        fullname: person.fullname,\n        picture: person.picture ? await fileToBase64(person.picture) : null\n    };\n    const simonData = await simonAPI.findAsync({ personId: personId });\n    const doubleData = await doubleAPI.findAsync({ personId: personId });\n    const quiz = await quizAPI.findAsync({ personId: personId });\n    const quizData = quiz ? await formatQuiz(quiz) : []; // converting files into base64 here\n\n    const dictaphone = await dictaphoneAPI.findAsync({ personId: personId });\n    const dictaphoneData = dictaphone ? await formatLog(dictaphone) : []; // converting files into base64 here\n\n    const result = JSON.stringify({\n        _id: personData._id,\n        description: personData.description,\n        fullname: personData.fullname,\n        picture: personData.picture,\n        activities: {\n            quiz: quizData,\n            double: doubleData,\n            simon: simonData,\n            dictaphone: dictaphoneData\n        }\n    });\n    const uri = await writeDataFile(personData.fullname, key ? dilacrypt.encrypt(result, key) : result);\n    return (uri);\n};","import React, { useEffect, useState } from 'react';\nimport {\n    ActivityIndicator,\n    ScrollView\n} from 'react-native';\n\nimport { Text, Button } from 'react-native-elements';\n\nimport { lang as HomeLang } from '../../language/home';\nimport * as FileSystem from 'expo-file-system';\nimport * as dataImport from '../../utils/share'\n\nimport styles from './styles';\n\nexport default function ImportData(props) {\n    const [step, setStep] = useState(1);\n    const [error, setError] = useState();\n    \n    useEffect( async () => {\n        try {\n\n            // Import and check file data\n            const content = await FileSystem.readAsStringAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidFile;\n            });\n            const parsed = parseJSON(content);\n            if (!parsed) throw HomeLang[props.lang].InvalidPersonFile;\n            if (typeof parsed !== 'object' || !parsed._id)\n                throw HomeLang[props.lang].InvalidPersonFile;\n\n            // Checking the personal infos\n            setStep(2);\n            if (dataImport.checkPersonInformations(parsed) === false)\n                throw HomeLang[props.lang].InvalidPersonFile;\n            if (dataImport.checkPersonInformationsLength(parsed) === false)\n                throw HomeLang[props.lang].IncorrectPersonFile;\n\n            // Checking if this userId is registered in the local db\n            setStep(3);\n            const found = await dataImport.checkPersonExists(parsed._id);\n            \n            // Checking activities length\n            setStep(4);\n            if (parsed.activities.length > 4) throw HomeLang[props.lang].InvalidActivitiesLength;\n\n            // Checking quiz format\n            setStep(5);\n            if (await dataImport.checkQuiz(parsed.activities.quiz, parsed._id) === false) throw HomeLang[props.lang].InvalidQuizData;\n\n            // Checking double format\n            setStep(6);\n            if (await dataImport.checkDouble(parsed.activities.double, parsed._id) === false) throw HomeLang[props.lang].InvalidDoubleData;\n\n            // Checking simon format\n            setStep(7);\n            if (await dataImport.checkSimon(parsed.activities.simon, parsed._id) === false) throw HomeLang[props.lang].InvalidSimonData;\n      \n            // Checking dictaphone format\n            setStep(8);\n            if (await dataImport.checkDictaphone(parsed.activities.dictaphone, parsed._id) === false) throw HomeLang[props.lang].InvalidLogData;\n\n            // <! -------- Creation process starts ---------- !>\n\n            // Person creation\n            setStep(9);\n            dataImport.importPerson(parsed, found.length > 0).catch( (err) => {\n                throw HomeLang[props.lang].CannotCreatePerson;\n            });\n\n            // Quiz creation\n            setStep(10);\n            dataImport.importQuiz(parsed.activities.quiz).catch(err => {\n                throw HomeLang[props.lang].InvalidQuizData;\n            });\n\n            // Double creation\n            setStep(11);\n            dataImport.importDouble(parsed.activities.double).catch(err => {\n                throw HomeLang[props.lang].InvalidDoubleData;\n            });\n\n            // Simon creation\n            setStep(12);\n            dataImport.importSimon(parsed.activities.simon).catch(err => {\n                throw HomeLang[props.lang].InvalidSimonData;\n            });\n\n            // Journal log creation\n            setStep(13);\n            dataImport.importLog(parsed.activities.dictaphone, parsed._id).catch(err => {\n                throw HomeLang[props.lang].InvalidLogData;\n            });\n\n            // SUCCESS !!\n            setStep(14);\n\n            await FileSystem.deleteAsync(props.importFile).catch(e => {\n                throw HomeLang[props.lang].InvalidPersonFile;\n            });\n\n\n        } catch (e) {\n            setError(e);\n            return false;\n            // props.setImportFile(null);\n        }\n    }, [])\n\n    const parseJSON = (inputString) => {\n        if (inputString) {\n          try {\n            return JSON.parse(inputString);\n          } catch (e) {\n            return false;\n          }\n        }\n    };\n\n    const stepStyle = (idx) => {\n        let clr = idx === step ? 'white' : '#89ff91';\n        if (error && idx === step) clr = 'red';\n        if (step === 14) clr = '#89ff91';\n        return {\n            color: clr,\n            fontStyle: idx === step || error ? 'italic' : 'normal',\n            marginBottom: idx === 13 ? 30 : 0,\n            display: step >= idx ? 'flex' : 'none',\n            alignContent: 'center',\n            textAlign: 'center',\n            fontSize: idx === step ? 14 : 9\n        }\n    } \n\n    const printActivity = (idx) => {\n        if (idx === step && !error && step !== 14)\n            return <ActivityIndicator color={'white'} size={'small'} />\n        return <></>\n    };\n\n    return (\n        <ScrollView style={styles.menu}>\n            { [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14].map( (e, i) => {\n                return <Text key={i} style={ stepStyle(e) }> { HomeLang[props.lang]['Step' + e] } { printActivity(e) }</Text>\n            }) }\n            { error ? <Text style={styles.ErrorMessage}>{ error }</Text> :  <></> }\n            <Button containerStyle={{marginTop: 150}} title={'Go back'} onPress={() => props.setImportFile(null)}/>\n        </ScrollView>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    Image\n} from 'react-native';\n\nimport { Text } from 'react-native-elements';\n\nimport { useLocation } from 'react-router-native';\n\nimport AlzheimApp from '../../assets/img/alzheimapp_logo.png';\nimport Menu from './Menu'\nimport ImportData from './ImportData';\n\nimport styles from './styles';\n\nexport default function Home(props) {\n    const [importFile, setImportFile] = useState();\n    const state = useLocation()?.state;\n\n    const username = props.username || state?.username;\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Image source={AlzheimApp} style={styles.logo} resizeMode={'cover'} />\n            </View>\n            { importFile ?\n                <ImportData lang={props.lang} importFile={importFile} setImportFile={setImportFile} /> :\n                <Menu lang={props.lang} username={username} setLang={props.setLang} setImportFile={setImportFile} />\n            }\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        height: 200,\n        marginTop: 30,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n    heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'black',\n    },\n    description: {\n        fontSize: 15,\n        marginBottom: 20,\n        marginHorizontal: 25,\n        marginHorizontal: 40,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    textInput: {\n        height: 40,\n        borderColor: 'gray',\n        borderRadius: 20,\n        paddingHorizontal: 20,\n        color: 'black',\n        backgroundColor: 'white',\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        shadowOffset: {\n            height: 0,\n            width: 0,\n        },\n        elevation: 2,\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    buttonContainer: {\n        alignItems: 'stretch',\n        width: 100,\n    },\n    button: {\n        backgroundColor: 'rgba(40, 30, 255, 0.8)',\n        borderRadius: 10,\n        width: 80,\n        marginLeft: 10,\n    },\n    buttonText: {\n        paddingTop: 10,\n        color: 'white',\n        textAlign: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    viewrow: {\n        alignContent: 'center',\n        width: 100 + '%',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    TouchableOpacity,\n    Image,\n    BackHandler,\n} from 'react-native';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport { lang as InterfaceLang } from '../../language/interface';\nimport { setUsername as insertUsername, SawTutorial, getUsername } from '../../data/configApi';\n\nimport Home from '../Home';\n\nimport ChooseUsernameGIF from '../../assets/img/username/chooseusername.gif';\n\nimport styles from './styles';\n\nexport default function ChooseUsername(props) {\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [loadPage, setLoadPage] = useState(true);\n    const [confirmed, setConfirmed] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const [username, setUsername] = useState('');\n\n    useEffect(() => {\n        getUsername()\n            .then((res) => {\n                if (res[0]?.username) {\n                    setUsername(res[0].username);\n                    setRedirect(true);\n                }\n                setLoadPage(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoadPage(false);\n            });\n    }, []);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const backAction = () => {\n            return SawTutorial(false)\n                .then(() => {\n                    navigate('/');\n                    return true;\n                })\n                .catch((err) => {\n                    return false;\n                });\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const parseUsername = (input) => {\n        setIsLoading(true);\n        let username = input?.trim() || null;\n        if (username && username?.length >= 2 && username?.length < 11) {\n            insertUsername(username)\n                .then((response) => {\n                    setIsLoading(false);\n                    setInput(username);\n                    setUsername(username);\n                    setConfirmed(true);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    if (redirect)\n        return <Home lang={props.lang} username={username} setLang={props.setLang} />\n\n    if (loadPage)\n        return <View style={styles.container}></View>\n\n    if (!confirmed) {\n        return (\n            <View style={styles.container}>\n                <View style={styles.wrapper}>\n                    <Image\n                        source={ChooseUsernameGIF}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <Text style={styles.heading}>\n                    {TutorialLang[props.lang].ChooseUsername}\n                </Text>\n                <Text style={styles.description}>\n                    {TutorialLang[props.lang].WhatIsUsername()}\n                </Text>\n                <View style={styles.viewrow}>\n                    <TextInput\n                        underlineColorAndroid=\"transparent\"\n                        style={styles.textInput}\n                        value={input}\n                        placeholder={InterfaceLang[props.lang].YourUsername}\n                        maxLength={10}\n                        onChangeText={(e) => {\n                            setInput(e);\n                        }}\n                    />\n                    <TouchableOpacity\n                        style={styles.button}\n                        activeOpacity={0.5}\n                        onPress={(e) => {\n                            parseUsername(input);\n                        }}\n                    >\n                        <Text style={styles.buttonText}>\n                            {' '}\n                            {isLoading ? (\n                                <ActivityIndicator\n                                    color=\"white\"\n                                    size=\"small\"\n                                    animating={true}\n                                />\n                            ) : (\n                                'OK'\n                            )}\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        );\n    } else {\n        return <Home lang={props.lang} username={username} setLang={props.setLang} />;\n    }\n}\n","import React from 'react';\nimport LottieView from 'lottie-react-native';\nimport { Platform, Image } from 'react-native';\n\nconst Lottie = (props) => {\n    {\n        return Platform.OS !== 'web' ? (\n            <LottieView\n                style={props.LottieStyle}\n                source={props.LottieSource}\n                loop={props.hasOwnProperty('loop') ? props.loop : true}\n                autoPlay={\n                    props.hasOwnProperty('autoPlay') ? props.autoPlay : true\n                }\n                resizeMode=\"cover\"\n            />\n        ) : (\n            <Image source={props.ImageSource} style={props.ImageStyle} />\n        );\n    }\n};\n\nexport default Lottie;\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport LoadingImage from '../../assets/img/loading.gif';\n\nimport Lottie from './Lottie';\n\nconst Loading = (props) => {\n    const LottieSource = require('../../assets/img/loading.json');\n    const styles = { width: 200, marginTop: 100 };\n    return (\n        <View style={props.style}>\n            <Lottie\n                LottieSource={LottieSource}\n                LottieStyle={styles}\n                ImageStyle={styles}\n                ImageSource={LoadingImage}\n            />\n            <Text\n                style={{\n                    marginTop: 100,\n                    color: '#56BDC1',\n                    width: 150,\n                    textAlign: 'center',\n                }}\n            >\n                {props.text}\n            </Text>\n            <Text style={{ marginTop: 100 }}>\n                <ActivityIndicator\n                    color={'#246364'}\n                    size={'large'}\n                    style={{ marginTop: 10 }}\n                />\n            </Text>\n        </View>\n    );\n};\n\nexport default Loading;\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    wrapper: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    slide: {\n        flex: 1,\n        padding: 20,\n    },\n    slideOdd: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#355c7d',\n    },\n    title: {\n        color: 'black',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center',\n    },\n    text: {\n        color: 'black',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center',\n    },\n    titleOdd: {\n        color: 'white',\n        flex: 1,\n        fontSize: 22,\n        fontWeight: 'bold',\n        marginTop: -50,\n        textAlign: 'center',\n    },\n    textOdd: {\n        color: 'white',\n        fontSize: 15,\n        flex: 2,\n        marginTop: -40,\n        textAlign: 'center',\n    },\n    image: {\n        flex: 3,\n        width: 100 + '%',\n        height: 400,\n    },\n    buttonContainer: {\n        flex: 2,\n        marginTop: -40,\n    },\n    button: {\n        marginTop: 10,\n        paddingTop: 15,\n        paddingBottom: 15,\n        marginLeft: 30,\n        marginRight: 30,\n        backgroundColor: '#6396c0',\n        borderRadius: 10,\n        borderColor: 'white',\n        borderWidth: 1\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        fontWeight: 'bold'\n    },\n});\n","import React from 'react';\nimport { Text, View, Image, TouchableOpacity } from 'react-native';\n\nimport { Link } from 'react-router-native';\n\nimport StepOne from '../../assets/img/tutorial/1.png';\nimport StepTwo from '../../assets/img/tutorial/2.png';\nimport StepThree from '../../assets/img/tutorial/3.png';\nimport StepFour from '../../assets/img/tutorial/4.png';\nimport StepFive from '../../assets/img/tutorial/5.png';\nimport StepSixth from '../../assets/img/tutorial/6.png';\n\nimport SwipeImage from '../../assets/img/tutorial/swipe-right.gif';\n\nimport { lang as TutorialLang } from '../../language/tutorial';\nimport Lottie from '../../components/utils/Lottie';\n\nimport Swiper from 'react-native-swiper/src';\n\nimport styles from './styles';\nimport * as Config from '../../data/configApi';\n\nexport default function Tutorial(props) {\n    const LottieSource = require('../../assets/lottie/swipe-right.json');\n\n    return (\n        <>\n            <Swiper\n                style={styles.wrapper}\n                showsButtons={false}\n                showsPagination={true}\n                loop={false}\n            >\n                <View style={styles.slide}>\n                    <Image\n                        source={StepOne}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step1Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step1Content()}\n                    </Text>\n                    <Lottie\n                        LottieSource={LottieSource}\n                        ImageSource={SwipeImage}\n                        LottieStyle={{\n                            position: 'absolute',\n                            height: 80,\n                            marginTop: 280,\n                            marginLeft: 80,\n                            opacity: 0.8,\n                        }}\n                        ImageStyle={{\n                            position: 'absolute',\n                            height: 80,\n                            marginTop: 280,\n                            marginLeft: 80,\n                            opacity: 0.8,\n                        }}\n                    />\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepTwo}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step2Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step2Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepThree}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step3Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step3Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepFour}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].Step4Header}\n                    </Text>\n                    <Text style={styles.textOdd}>\n                        {TutorialLang[props.lang].Step4Content()}\n                    </Text>\n                </View>\n\n                <View style={styles.slide}>\n                    <Image\n                        source={StepFive}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.title}>\n                        {TutorialLang[props.lang].Step5Header}\n                    </Text>\n                    <Text style={styles.text}>\n                        {TutorialLang[props.lang].Step5Content}\n                    </Text>\n                </View>\n\n                <View style={styles.slideOdd}>\n                    <Image\n                        source={StepSixth}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                    <Text style={styles.titleOdd}>\n                        {TutorialLang[props.lang].LastStepHeader}\n                    </Text>\n                    <View style={styles.buttonContainer}>\n                        <Link\n                            to=\"/username\"\n                            component={TouchableOpacity}\n                            style={styles.button}\n                            onPress={(e) => {\n                                Config.SawTutorial(true);\n                            }}\n                            activeOpacity={0.5}s\n                            state={\n                                { setLang: props.setLang }\n                            }\n                        >\n                            <Text style={styles.buttonText}>\n                                {' '}\n                                {TutorialLang[props.lang].LastStepButton}{' '}\n                            </Text>\n                        </Link>\n                    </View>\n                </View>\n            </Swiper>\n        </>\n    );\n}\n","import React from 'react';\n\nimport Tutorial from '../../pages/Tutorial';\nimport ChooseUsername from '../../pages/ChooseUsername';\nimport Home from '../../pages/Home';\n\nconst HomeOrTutorial = (props) => {\n    if (!props?.hasSeenTutorial) {\n        return <Tutorial lang={props.lang} setLang={props.setLang} />;\n    }\n    if (!props?.username || props?.username?.length < 2) {\n        return <ChooseUsername lang={props.lang} setLang={props.setLang} />;\n    }\n    return <Home lang={props.lang} username={props.username} setLang={props.setLang} />;\n};\n\nexport default HomeOrTutorial;\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        WhatsUp: \"Que souhaitez-vous faire aujourd'hui ?\",\n        AddAPerson: 'Ajouter une personne',\n        Edit: 'Éditer',\n        Delete: 'Supprimer',\n        ReturnToList: 'Retour à la liste',\n        NobodyYet: 'La liste est vide (pour le moment...)',\n        WrongFullname:\n            'Le nom complet est obligatoire et doit contenir entre 2 et 25 caractères',\n        Search: 'Rechercher une personne',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        WhatsUp: 'What are you about to produce today?',\n        AddAPerson: 'Add a person',\n        Edit: 'Edit',\n        Delete: 'Delete',\n        ReturnToList: 'Return to the list',\n        NobodyYet: 'The list is empty (for the moment...)',\n        WrongFullname:\n            'The full name is required and must contains between 2 and 25 characters',\n        Search: 'Search a person',\n    },\n};\n","import React from 'react';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Platform } from 'react-native';\n\nimport DefaultProfilePicture from '../../assets/img/interface/profile.jpg';\nimport { useNavigate } from 'react-router-native';\n\nexport default function Rows(props) {\n    const navigate = useNavigate();\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props.id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props.id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={() => {\n                navigate(`/activities/${props.id}`, {\n                    state: {\n                        lang: props.lang ?? 'fr',\n                        username: props.username,\n                    },\n                });\n            }}\n        >\n            <Avatar\n                source={\n                    props?.picture\n                        ? { uri: props.picture }\n                        : DefaultProfilePicture\n                }\n                rounded\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.fullname}</ListItem.Title>\n                <ListItem.Subtitle>{props.description}</ListItem.Subtitle>\n            </ListItem.Content>\n            <ListItem.Chevron color=\"grey\" />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    rightButton: {\n        minHeight: '100%',\n        backgroundColor: 'red',\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    leftButton: {\n        minHeight: '100%',\n    },\n    view: {\n        alignItems: 'center',\n        alignSelf: 'center',\n        marginVertical: 20,\n        width: 100 + '%',\n    },\n    btnImport: {\n        borderRadius: 50,\n        width: 220,\n    },\n    btnSave: {\n        width: 290,\n    },\n    profilePicture: {\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        marginBottom: 10,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport { View, Text, Platform } from 'react-native';\nimport { Button, Image } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/selection/addedUser.gif';\n\nimport styles from '../styles';\n\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Success(props) {\n    const LottieSource = require('../../../assets/img/selection/addedUser.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? InterfaceLang[props.lang].CreatedPerson\n                    : InterfaceLang[props.lang].EditedPerson}\n            </Text>\n            <Button\n                title={InterfaceLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { Button, Divider, Icon, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport defaultProfilPicture from '../../../assets/img/interface/profile.jpg';\nimport styles from '../styles';\n\nimport * as Person from '../../../data/personApi';\nimport { lang as InterfaceLang } from '../../../language/interface';\n\nexport default function Form(props) {\n    const [fullnameError, setFullnameError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n\n    const confirm = async () => {\n        var personId = props.personId ?? 0;\n        const cb =\n            props.edit === true\n                ? Person.edit(props.personId, {\n                      fullname: props.fullname,\n                      description: props.description,\n                  })\n                : Person.create(\n                      {\n                          fullname: props.fullname,\n                          description: props.description,\n                      },\n                      props.lang\n                  );\n        const result = await cb;\n        if (result.success === false) {\n            if (result.hasOwnProperty('fullname')) {\n                setFullnameError(InterfaceLang[props?.lang].RequiredField);\n            }\n            if (result.hasOwnProperty('description')) {\n                setDescriptionError(\n                    InterfaceLang[props?.lang].LimitExceededField(100)\n                );\n            }\n            return false;\n        } else {\n            if (personId === 0)\n                personId = result._id;\n            await FileSystem.makeDirectoryAsync(`${FileSystem.documentDirectory}persons/${personId}`, {intermediates: true});\n            if (props.image?.length > 0) {\n                let imgName = uuidv4();\n                const path = `${FileSystem.documentDirectory}persons/${personId}/pp`;\n                await FileSystem.makeDirectoryAsync(path, {intermediates: true}).catch((err) => {\n                    console.log('directory already exists');\n                });\n                FileSystem.writeAsStringAsync(\n                    path + `/${imgName}.jpg`,\n                    props.image,\n                    {\n                        encoding: 'base64',\n                    }\n                )\n                    .then(() => {\n                        Person.edit(personId, {\n                            picture: path + `/${imgName}.jpg`,\n                        })\n                            .then((data) => {\n                                if (props.edit === false) {\n                                    result.picture = path + `/${imgName}.jpg`;\n                                    props.addPerson((persons) => [\n                                        ...persons,\n                                        result,\n                                    ]);\n                                } else {\n                                    props.setFullnameHeader(\n                                        props.fullname?.trim()\n                                    );\n                                }\n                                props.scs();\n                            })\n                            .catch((err) => {\n                                console.log('mongo err', err);\n                                return false;\n                            });\n                    })\n                    .catch((err) => {\n                        console.log('filesystem err:', err);\n                    });\n            } else {\n                if (props.edit === false) {\n                    props.addPerson((persons) => [...persons, result]);\n                } else {\n                    props.setFullnameHeader(props.fullname?.trim());\n                }\n                props.scs();\n            }\n        }\n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n\n        if (result.cancelled === true) {\n            return;\n        }\n\n        if (Platform.OS === 'web') {\n            alert('todo');\n        } else {\n            try {\n                let uri = result.uri;\n                props.setUriPreview(uri);\n                const fsRead = await FileSystem.readAsStringAsync(uri, {\n                    encoding: 'base64',\n                }).catch((err) => {\n                    console.log(err);\n                });\n                props.setImage(fsRead);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            <Image\n                source={\n                    props.uriPreview\n                        ? { uri: props.uriPreview }\n                        : defaultProfilPicture\n                }\n                style={styles.profilePicture}\n            />\n            <Button\n                title={InterfaceLang[props?.lang].ImportImage}\n                onPress={pickImage}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnImport}\n                icon={\n                    <Icon\n                        name=\"image\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Divider\n                style={{ width: 100 + '%', marginVertical: 20 }}\n                width={2}\n            />\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetFullName}\n                leftIcon={<Icon name=\"person\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].FullName}\n                errorStyle={{ color: 'red' }}\n                renderErrorMessage={true}\n                maxLength={25}\n                errorMessage={fullnameError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                value={props.fullname}\n                containerStyle={{ width: 300, marginTop: -10 }}\n                onChangeText={(e) => {\n                    props.setFullname(e);\n                }}\n            />\n\n            <Input\n                placeholder={InterfaceLang[props?.lang].SetDescription}\n                leftIcon={<Icon name=\"info\" size={24} color=\"grey\" />}\n                label={InterfaceLang[props?.lang].Description}\n                errorStyle={{ color: 'red' }}\n                maxLength={100}\n                renderErrorMessage={true}\n                errorMessage={descriptionError}\n                inputStyle={{ fontSize: 14, marginHorizontal: 10 }}\n                containerStyle={{ width: 300, marginBottom: 0 }}\n                value={props.description}\n                onChangeText={(e) => {\n                    props.setDescription(e);\n                }}\n            />\n\n            <Button\n                raised={true}\n                title={InterfaceLang[props?.lang].Save}\n                onPress={(e) => {\n                    confirm();\n                }}\n                titleStyle={{ fontSize: 15 }}\n                buttonStyle={styles.btnSave}\n                iconRight={true}\n                icon={\n                    <Icon\n                        name=\"save\"\n                        size={15}\n                        color=\"white\"\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </View>\n    );\n}\n","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from '../styles';\n\nimport Success from './Success';\nimport Form from './Form';\n\nexport default function CreatePerson(props) {\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState('');\n    const [uriPreview, setUriPreview] = useState();\n    const [description, setDescription] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname('');\n        setUriPreview('');\n        setImage('');\n        setDescription('');\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    return (\n        <View style={styles.view}>\n            {success ? (\n                <Success {...compProps} close={clear} edit={false} />\n            ) : (\n                <Form\n                    {...compProps}\n                    edit={false}\n                    persons={props.persons}\n                    addPerson={props.setPersons}\n                    scs={good}\n                />\n            )}\n        </View>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    container: {\n        flex: 1,\n        zIndex: 1,\n    },\n    wrapper: {\n        marginTop: 20,\n        textAlign: 'center',\n        alignItems: 'center',\n        zIndex: 1,\n    },\n    topBanner: {\n        backgroundColor:'#355c7d'\n    },\n    topImage: {\n        // flex: 1,\n        height: 70,\n        //marginTop: -10,\n    },\n    heading: {\n        marginTop: 10,\n        fontSize: 20,\n        zIndex: 2,\n        color: 'white'\n    },\n    boldtext: {\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    subtitle: {\n        textAlign: 'center',\n        color: 'white'\n    },\n    image: {\n        flex: 1,\n        width: 200,\n    },\n    button: {\n        backgroundColor: '#3B8EFF',\n        marginVertical: 25,\n        height: 40,\n        width: 500,\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: 10,\n    },\n    viewList: {\n        textAlign: 'center',\n        alignItems: 'center',\n        borderBottomColor: 'grey',\n        borderBottomWidth: 0.9,\n        overflow: 'hidden',\n    },\n    safeContainer: {\n        flex: 1,\n    },\n    nobodyYet: {\n        textAlign: 'center',\n        marginVertical: 60,\n        color: 'grey',\n        fontStyle: 'italic',\n    },\n    searchBar: {\n        marginBottom: -25,\n    },\n    searchInputStyle: {\n        textAlign: 'center',\n        color: '#495058',\n        fontSize: 15,\n    },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Text,\n    View,\n    Image,\n    TouchableOpacity,\n    SafeAreaView,\n    ScrollView,\n    ActivityIndicator,\n    BackHandler,\n} from 'react-native';\nimport Swiper from 'react-native-swiper/src';\nimport { Input, FAB } from 'react-native-elements';\nimport { useNavigate, useLocation } from 'react-router-native';\n\nimport LoadingBrain from '../../assets/img/activities/brain.gif';\nimport { lang as SelectionMenuLang } from '../../language/selection';\nimport Rows from '../../components/selection/Rows';\nimport CreatePerson from '../../components/selection/PersonCreation/CreatePerson';\n\nimport Lottie from '../../components/utils/Lottie';\n\nimport * as Person from '../../data/personApi';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function SelectionMenu(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [persons, setPersons] = useState();\n    const [search, setSearch] = useState();\n    const [index, setIndex] = useState(0);\n    const [btnText, setBtnTxt] = useState(\n        SelectionMenuLang[props.lang || lang].AddAPerson\n    );\n    const [active, setActive] = useState(true);\n\n    const swiper = useRef(null);\n    const state = useLocation()?.state;\n    const navigate = useNavigate();\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const username = state?.username || props.username;\n    const lang = state?.lang || props.lang;\n    const setLang = state?.setLang || props.setLang;\n\n    useEffect(() => {\n        Audio.setIsEnabledAsync(false);\n        if (!username || username?.trim()?.length < 2) {\n            navigate('/');\n        } else {\n            Person.get(search).then((data) => {\n                setPersons(data);\n                setIsLoading(false);\n            });\n        }\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            () => {\n                return true;\n            }\n        );\n        return () => backHandler.remove();\n    }, [search, username, navigate]);\n\n    const swipePage = (idx) => {\n        if (idx === -1) {\n            idx = 1;\n        }\n        swiper.current.scrollBy(idx - index, true);\n    };\n\n    const changeIndex = (idx) => {\n        setIndex(idx);\n        setTimeout(() => {\n            if (idx === 0) {\n                setBtnTxt(SelectionMenuLang[lang].AddAPerson);\n            } else if (idx === 1) {\n                setBtnTxt(SelectionMenuLang[lang].ReturnToList);\n            }\n            setActive(true);\n        }, 400);\n    };\n\n    const printRows = (list) => {\n        return list.map((el, i) => {\n            return (\n                <Rows\n                    index={i}\n                    key={el._id}\n                    username={username}\n                    id={el._id}\n                    fullname={el.fullname}\n                    description={el.description}\n                    picture={el.picture}\n                    lang={lang}\n                />\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <FAB\n                color='white'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 305,\n                    marginTop: 15,\n                    zIndex: 3\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: 'home-outline',\n                        type: 'ionicon',\n                        color:'#355c7d',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => navigate('/home', {\n                    state: { username: username, setLang: setLang }\n                }) }\n            />\n            <View style={styles.topBanner}>\n            <View style={styles.wrapper}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={LoadingBrain}\n                    LottieStyle={styles.topImage}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {SelectionMenuLang[lang].Hello(username)}\n                </Text>\n            </View>\n            <Text style={styles.subtitle}>{SelectionMenuLang[lang].WhatsUp}</Text>\n            <View style={styles.viewList}>\n                <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.4}\n                    onPress={(e) => {\n                        if (active === false) {\n                            return;\n                        }\n                        setActive(false);\n                        setBtnTxt(\n                            <ActivityIndicator color={'white'} size={'small'} />\n                        );\n                        swipePage(index - 1);\n                    }}\n                >\n                    <Text style={styles.buttonText}>{btnText}</Text>\n                </TouchableOpacity>\n            </View>\n            </View>\n            <SafeAreaView style={styles.safeContainer}>\n                {isLoading ? (\n                    <ActivityIndicator\n                        color={'blue'}\n                        style={{ marginTop: 70 }}\n                    />\n                ) : (\n                    <Swiper\n                        ref={swiper}\n                        showsButtons={false}\n                        scrollEnabled={false}\n                        loop\n                        pagingEnabled\n                        index={0}\n                        showsPagination={false}\n                        onIndexChanged={(e) => {\n                            changeIndex(e);\n                        }}\n                    >\n                        <ScrollView>\n                            <Input\n                                placeholder={SelectionMenuLang[lang].Search}\n                                inputContainerStyle={styles.searchBar}\n                                onChangeText={(e) => {\n                                    setSearch(e);\n                                }}\n                                value={search}\n                                inputStyle={styles.searchInputStyle}\n                            />\n                            {persons && persons.length > 0 ? (\n                                printRows(persons)\n                            ) : (\n                                <Text style={styles.nobodyYet}>\n                                    {SelectionMenuLang[lang].NobodyYet}\n                                </Text>\n                            )}\n                        </ScrollView>\n                        <ScrollView>\n                            <CreatePerson\n                                persons={persons}\n                                setPersons={setPersons}\n                                lang={lang}\n                            />\n                        </ScrollView>\n                        <ScrollView />\n                    </Swiper>\n                )}\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: 'white' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Bonjour {0} !',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activités',\n        Score: 'Score',\n        Settings: 'Paramètres',\n        Home: 'Accueil',\n        ChangeProfile: 'Modifier le profil',\n        ShareProfile: 'Partager le profil',\n        DeleteProfile: 'Supprimer le profil',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Jouer au Simon',\n        DoubleMemory: 'Jeu des pairs',\n        Dictaphone: 'Journal vocal',\n        Quiz: 'Jouer à un quiz',\n        SuggestedActivities: 'Activités suggérées',\n        Back: 'Retour à la sélection',\n        QuizScore: \"Score des quiz\",\n        SimonScore: \"Score du Simon\",\n        DoubleScore: \"Score du jeu des pairs\",\n        NoScore: \"Aucun score enregistré pour cette activité...\",\n        Success: 'réussite',\n        Global: \"Vue d'ensemble\",\n        BestScoreByDay: 'Meilleur score du jour',\n        ExportedProfile: 'Profil exporté',\n\n        ReturnList: 'Retour',\n    },\n    en: {\n        Hello: (username) => {\n            return applyBoldStyle({\n                sentence: 'Hello {0}!',\n                boldText: [username],\n            });\n        },\n        Activities: 'Activities',\n        Score: 'Score',\n        Settings: 'Settings',\n        Home: 'Home',\n        ChangeProfile: 'Change the profile',\n        ShareProfile: 'Share the profile',\n        DeleteProfile: 'Delete the profile',\n        ResetAccount: '(DEBUG) Reset ($[start])',\n        Simon: 'Play to Simon',\n        Dictaphone: 'Voice log',\n        Quiz: 'Start a quiz',\n        DoubleMemory: 'Double Memory',\n        SuggestedActivities: 'Suggested activities',\n        Back: 'Return to the selection',\n        QuizScore: \"Quiz Score\",\n        SimonScore: \"Simon Score\",\n        DoubleScore: \"Double Memory Score\",\n        NoScore: \"No score registered for this activity...\",\n        Success: 'success',\n        Global: \"Global view\",\n        BestScoreByDay: 'Best score by day',\n        ExportedProfile: 'Profile exported',\n\n        ReturnList: 'Return',\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleReturn: {\n        width: 200,\n        height: 40,\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleBack: {\n        width: 250,\n        height: 40\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState } from 'react';\n\nimport { ScrollView, Alert, View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Success from '../../../components/selection/PersonCreation/Success';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\nimport { lang as InterfaceLang } from '../../../language/interface';\nimport * as Person from '../../../data/personApi';\nimport { exportPerson } from '../../../utils/share';\nimport * as Sharing from 'expo-sharing';\n\nimport * as FileSystem from 'expo-file-system';\n\nimport styles from './styles';\nimport Form from '../../../components/selection/PersonCreation/Form';\nimport { ActivityIndicator } from 'react-native';\n\n\nexport default function Settings(props) {\n    const [edit, setEdit] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [image, setImage] = useState();\n    const [fullname, setFullname] = useState(props.person.fullname);\n    const [uriPreview, setUriPreview] = useState(props.person.picture);\n    const [description, setDescription] = useState(props.person.description);\n    const [load, setLoad] = useState(false);\n\n    const navigate = useNavigate();\n\n    const good = () => {\n        setSuccess(true);\n    };\n\n    const clear = () => {\n        setFullname(props.person.fullname);\n        setUriPreview(props.person.picture);\n        setImage('');\n        setDescription(props.person.description);\n        setSuccess(false);\n    };\n\n    const compProps = {\n        lang: props.lang,\n\n        fullname: fullname,\n        setFullname: setFullname,\n\n        image: image,\n        setImage: setImage,\n\n        uriPreview: uriPreview,\n        setUriPreview: setUriPreview,\n\n        description: description,\n        setDescription: setDescription,\n    };\n\n    const deletePerson = () => {\n        Person.deleteById(props.personId).then((deleted) => {\n            navigate('/selection');\n        });\n    };\n\n    const openModalDeleteProfile = () => {\n        return Alert.alert(\n            InterfaceLang[props.lang].AreYouSure,\n            InterfaceLang[props.lang].DeletePerson(props.username),\n            [\n                {\n                    text: InterfaceLang[props.lang].Yes,\n                    onPress: () => {\n                        deletePerson();\n                    },\n                },\n                {\n                    text: InterfaceLang[props.lang].No,\n                },\n            ]\n        );\n    };\n    return (\n        <View style={{ flex: 1 }}>\n            {edit === false ? (\n                <ScrollView style={{ flex: 1 }}>\n                    <Button\n                        icon={{\n                            name: 'user',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        onPress={() => {\n                            setEdit(true);\n                        }}\n                        title={ActivitiesLang[props.lang]?.ChangeProfile}\n                    />\n                    <Button\n                        icon={{\n                            name: load ? '' : 'share-alt',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={load ? <ActivityIndicator color={'white'} size={'small'} /> : ActivitiesLang[props.lang]?.ShareProfile}\n                        onPress={async () => {\n                            setLoad(true)\n                            console.log('[~] Pressing export button');\n                            console.log('[+] Exporting person...');\n                            const uri = await exportPerson(props.personId, null);\n                            console.log('[+] Exported person! uri is: ' + uri);\n                            Sharing.shareAsync(uri).then( async (e) => {\n                                await FileSystem.deleteAsync(uri);\n                                setLoad(false);\n                            });\n                        }}\n                        disabled={load}\n                    />\n                    <Button\n                        icon={{\n                            name: 'remove',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleDelete}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.DeleteProfile}\n                        onPress={() => {\n                            openModalDeleteProfile();\n                        }}\n                    />\n                    <Button\n                        icon={{\n                            name: 'caret-left',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleBack}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.Back}\n                        onPress={() => {\n                            navigate('/selection');\n                        }}\n                    />\n                </ScrollView>\n            ) : (\n                <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n                    <Button\n                        icon={{\n                            name: 'arrow-circle-o-up',\n                            type: 'font-awesome',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        iconContainerStyle={{ marginRight: 10 }}\n                        buttonStyle={styles.buttonStyleReturn}\n                        containerStyle={styles.containerStyle}\n                        title={ActivitiesLang[props.lang]?.ReturnList}\n                        onPress={() => setEdit(false)}\n                    />\n                    {success ? (\n                        <Success {...compProps} close={clear} edit={true} />\n                    ) : (\n                        <Form\n                            {...compProps}\n                            edit={true}\n                            persons={props.person}\n                            setFullnameHeader={props.setFullname}\n                            personId={props.personId}\n                            scs={good}\n                        />\n                    )}\n                </ScrollView>\n            )}\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Start: 'Enregistrer',\n        Pause: 'Pause',\n        Stop: 'Stop',\n        Continue: 'Continuer',\n        Untitled: 'Sans titre',\n        ChooseTitle: 'Choississez un titre',\n        PleaseChooseATitle: 'Merci de choisir un titre pour cet enregistrement',\n        Title: \"Nom de l'enregistrement\",\n        Cancel: 'Annuler',\n        Save: 'Sauvegarder',\n        Placeholder: 'Le nom de votre enregistrement (facultatif)',\n        DeleteTrack: \"Suppression de l'enregistrement\",\n        SureDeleteTrack:\n            'Êtes-vous sûr(e) de vouloir supprimer cet enregistrement ? Cette action est irréversible.',\n        Delete: 'Supprimer',\n        NothingYet: 'Aucun enregistrement réalisé',\n    },\n    en: {\n        Start: 'Start recording',\n        Pause: 'Pause recording',\n        Stop: 'Stop recording',\n        Continue: 'Continue recording',\n        Untitled: 'Untitled',\n        ChooseTitle: 'Choose a title',\n        PleaseChooseATitle: 'Please choose a title for this record',\n        Title: 'Record name',\n        Cancel: 'Cancel',\n        Save: 'Save',\n        Placeholder: 'The name of your record (optional)',\n        DeleteTrack: 'Delete the track',\n        SureDeleteTrack:\n            'Are you sure to delete this track ? This action cannot be undone.',\n        Delete: 'Delete',\n        NothingYet: 'No track recorded',\n    },\n};\n","import React, { useEffect, useState } from 'react';\nimport { ListItem, Icon, LinearProgress } from 'react-native-elements';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\n\nexport default function Rows(props) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    useEffect(() => {\n        setIsPlaying(false);\n    }, [props.playingSounds]);\n\n    const playTrack = async () => {\n        try {\n            await props.pauseAll();\n            await Audio.setAudioModeAsync({\n                staysActiveInBackground: true,\n                shouldDuckAndroid: true,\n            });\n            setIsPlaying(false);\n            const getSoundStatus = await sound?.getStatusAsync();\n            if (getSoundStatus?.isLoaded === false) {\n                await sound.loadAsync({ uri: props.path });\n                setSound(sound);\n                props.setPlayingSounds([...props.playingSounds, sound]);\n            } else {\n                props.setPlayingSounds([...props.playingSounds]);\n            }\n            await sound.playAsync();\n            sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n                if (playbackStatus.didJustFinish) {\n                    await sound.unloadAsync();\n                    setProgress(0);\n                    setIsPlaying(false);\n                } else if (\n                    playbackStatus.positionMillis /\n                        playbackStatus.playableDurationMillis <\n                    1\n                ) {\n                    setProgress(\n                        playbackStatus.positionMillis /\n                            playbackStatus.playableDurationMillis\n                    );\n                }\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const pauseTrack = async () => {\n        await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n    return (\n        <ListItem\n            {...componentProps}\n            onPress={isPlaying ? pauseTrack : playTrack}\n        >\n            <Icon\n                raised\n                name={isPlaying ? 'pause-circle' : 'play-circle-outline'}\n                type={'ionicon'}\n                color={'blue'}\n            />\n            <ListItem.Content>\n                <ListItem.Title>{props.title}</ListItem.Title>\n                <ListItem.Subtitle>{props.date}</ListItem.Subtitle>\n                <LinearProgress\n                    style={{ marginVertical: 10 }}\n                    value={progress}\n                    variant=\"determinate\"\n                    animation={{ duration: 0 }}\n                />\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={(e) => {\n                    props.deleteId(props._id);\n                }}\n            />\n        </ListItem>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginVertical: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    containerStyle: {\n        width: 40 + '%',\n    },\n    recordButton: {\n        backgroundColor: 'red',\n    },\n    titleButton: {\n        fontWeight: 'bold',\n    },\n    actionButtonsView: {\n        flexDirection: 'row',\n    },\n    actionButtons: {\n        marginHorizontal: 5,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%',\n    },\n    loading: {\n        alignContent: 'center',\n        marginTop: 30,\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    divider: {\n        width: 100 + '%',\n        marginTop: 20,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayTitle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 18,\n        marginVertical: 10,\n    },\n    overlayDescription: {\n        textAlign: 'center',\n        marginVertical: 10,\n        width: 160,\n    },\n    overlayInput: {\n        fontSize: 14,\n        marginHorizontal: 10,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    BackHandler,\n    ScrollView,\n    SafeAreaView,\n    ActivityIndicator,\n    Platform,\n    Modal,\n} from 'react-native';\n\nimport {\n    Button,\n    Divider,\n    Text,\n    Overlay,\n    Input,\n    Icon,\n} from 'react-native-elements';\nimport { Audio } from 'expo-av';\nimport { lang as DictaphoneLang } from '../../../language/activities/dictaphone';\n\nimport * as FileSystem from 'expo-file-system';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Rows from './Rows';\n\nimport * as API from '../../../data/dictaphoneApi';\n\nimport styles from './styles';\n\nexport default function Dictaphone(props) {\n    const [recording, setRecording] = useState();\n    const [records, setRecords] = useState([]);\n    const [title, setTitle] = useState();\n    const [playingSounds, setPlayingSounds] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [deleteId, setDeleteId] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [pause, setPause] = useState(false);\n\n    useEffect(() => {\n        // API.clear();\n\n        // Load all the tracks recorded by this person\n        API.get(props.personId).then((data) => {\n            setRecords(data);\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (recording) {\n                stopRecording();\n            }\n            if (playingSounds?.length > 0) {\n                stopPlayingSounds();\n            }\n            props.setPage(null);\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, [recording, playingSounds]);\n\n    async function startRecording() {\n        try {\n            await Audio.requestPermissionsAsync().then( () => {\n                console.log('[+] Permission granted!');\n            })\n            .catch(e => {\n                console.error(e);\n            });            \n            await Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                playsInSilentModeIOS: true,\n                staysActiveInBackground: true,\n            });\n            const { recording } = await Audio.Recording.createAsync(\n                Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\n            );\n            setRecording(recording);\n        } catch (err) {\n            console.error('Failed to start recording', err);\n        }\n    }\n\n    async function stopRecording() {\n        setPause(false);\n        await recording.stopAndUnloadAsync();\n        setModal(true); // Open the confirmation modal\n    }\n\n    async function pauseRecording() {\n        setPause(true);\n        await recording.pauseAsync();\n    }\n\n    async function continueRecording() {\n        setPause(false);\n        await recording.startAsync();\n    }\n\n    const saveRecord = async () => {\n        let path = recording.getURI();\n        if (Platform.OS !== 'web') {\n            const folder = `${FileSystem.documentDirectory}persons/${props.personId}/recordings`;\n            const filename = uuidv4();\n            await FileSystem.copyAsync({\n                from: path,\n                to: folder + `${filename}.m4a`\n            });\n            await FileSystem.deleteAsync(path);\n            path = folder + `${filename}.m4a`;\n        }\n        API.create({\n            name: title?.trim() || DictaphoneLang[props.lang].Untitled,\n            path: path,\n            personId: props.personId,\n        }).then((created) => {\n                setModal(false);\n                setTitle('');\n                setRecording(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Called in children component\n    const deleteRecord = () => {\n        API.del(props.personId, deleteId)\n            .then((data) => {\n                setDeleteId(0);\n                API.get(props.personId)\n                    .then((data) => {\n                        setRecords(data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const goBack = async () => {\n        if (recording) await recording?.stopAndUnloadAsync();\n        stopPlayingSounds();\n        props.setPage(0);\n    }\n\n    // Unload all sounds before the backhandler\n    const stopPlayingSounds = () => {\n        playingSounds.map((el, i) => {\n            if (el) el?.unloadAsync();\n        });\n    };\n\n    // Called in children component -- used for pause all tracks before playing a new one\n    const pauseAll = async () => {\n        if (playingSounds.length > 0) {\n            playingSounds?.map(async (el, i) => {\n                await el.pauseAsync().catch((err) => {\n                    console.log('(-) not loaded audio');\n                });\n            });\n        }\n    };\n\n    return (\n        <View style={styles.view}>\n            {/* Modal confirmation creation */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => saveRecord()}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].ChooseTitle}\n                </Text>\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].PleaseChooseATitle}\n                </Text>\n                <Input\n                    placeholder={DictaphoneLang[props.lang].Placeholder}\n                    leftIcon={\n                        <Icon\n                            name=\"musical-note\"\n                            size={24}\n                            color=\"grey\"\n                            type=\"ionicon\"\n                        />\n                    }\n                    label={DictaphoneLang[props.lang].Title}\n                    maxLength={25}\n                    inputStyle={styles.overlayInput}\n                    value={title}\n                    onChangeText={(e) => {\n                        setTitle(e);\n                    }}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={saveRecord}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Save}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={saveRecord}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Modal confirmation deletion */}\n            <Overlay\n                visible={deleteId !== 0}\n                overlayStyle={styles.overlay}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.overlayTitle}>\n                    {DictaphoneLang[props.lang].DeleteTrack}\n                </Text>\n                <Text style={styles.overlayDescription}>\n                    {DictaphoneLang[props.lang].SureDeleteTrack}\n                </Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={DictaphoneLang[props.lang].Cancel}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={(e) => {\n                            setDeleteId(0);\n                        }}\n                    />\n                    <Button\n                        title={DictaphoneLang[props.lang].Delete}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        onPress={(e) => {\n                            deleteRecord();\n                        }}\n                    />\n                </View>\n            </Overlay>\n\n            {recording ? (\n                // is recording\n                <View style={styles.actionButtonsView}>\n                    <Button\n                        title={\n                            pause\n                                ? DictaphoneLang[props.lang].Continue\n                                : DictaphoneLang[props.lang].Pause\n                        }\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: pause\n                                ? 'play-circle-outline'\n                                : 'pause-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={pause ? continueRecording : pauseRecording}\n                    />\n\n                    <Button\n                        title={DictaphoneLang[props.lang].Stop}\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'stop-circle-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        onPress={stopRecording}\n                    />\n                    <Button\n                        containerStyle={styles.actionButtons}\n                        icon={{\n                            name: 'caret-back-outline',\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        buttonStyle={styles.recordButton}\n                        title={{}}\n                        titleStyle={styles.titleButton}\n                        onPress={() => goBack()}\n                    />\n                </View>\n            ) : (\n                // Not recording\n                <View style={styles.actionButtonsView}>\n                <Button\n                    containerStyle={styles.containerStyle}\n                    icon={{\n                        name: 'mic-circle',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={DictaphoneLang[props.lang].Start}\n                    titleStyle={styles.titleButton}\n                    onPress={startRecording}\n                />\n                <Button\n                    containerStyle={styles.actionButtons}\n                    icon={{\n                        name: 'caret-back-outline',\n                        type: 'ionicon',\n                        size: 15,\n                        color: 'white',\n                    }}\n                    buttonStyle={styles.recordButton}\n                    title={{}}\n                    titleStyle={styles.titleButton}\n                    onPress={() => goBack()}\n                />\n                </View>\n            )}\n            <Divider style={styles.divider} width={2} />\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView style={{marginBottom: 40}}>\n                    {isLoading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'large'}\n                            style={styles.loading}\n                        />\n                    ) : records.length > 0 ? (\n                        records.map((el, i) => {\n                            return (\n                                <Rows\n                                    pauseAll={pauseAll}\n                                    playingSounds={playingSounds}\n                                    setPlayingSounds={setPlayingSounds}\n                                    deleteId={setDeleteId}\n                                    index={i}\n                                    key={el._id}\n                                    title={el.name}\n                                    _id={el._id}\n                                    date={`${el.date.toLocaleDateString(\n                                        'fr-FR'\n                                    )} ${el.date.toLocaleTimeString('fr-FR')}`}\n                                    path={el.path}\n                                />\n                            );\n                        })\n                    ) : (\n                        <Text style={styles.nothingYet}>\n                            {DictaphoneLang[props.lang].NothingYet}\n                        </Text>\n                    )}\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: color }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        AreYouSure: 'En êtes-vous sûr ?',\n        ToGiveUp:\n            'Si vous abandonnez la partie en cours, votre score sera enregistré, mais vous ne pourrez pas la continuer.',\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['A votre tour !'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Regardez attentivement...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Raté ! ...'],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Bien joué !!'],\n                },\n                'green'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Essai(s) restant(s): {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Coup(s) réalisé(s): ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Félicitations !!',\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: 'Recommencer',\n        Exit: 'Quitter le Simon',\n        GiveUp: 'Abandonner',\n        Start: 'Commencer une partie',\n        Cancel: 'Annuler',\n        TimeToStop: \"Oui, je m'arrête là\",\n\n\n\n\n        // Help section\n        Head: \"Le Simon, comment ça marche ?\",\n        RulesHead: \"Les règles\",\n        TriesHead: \"Les essais\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu Simon est un {0} de forme circulaire comportant quatre gros boutons de couleurs différentes: rouge, vert, jaune et bleu.\\n\\nLe jeu {1} une des quatres couleurs et {2} toujours associé à cette couleur. Le joueur doit alors {3}.\\n\\nLe jeu {4}, puis {5} une nouvelle couleur. Le jour doit reproduire cette nouvelle séquence. Chaque fois que le joueur reproduit correctement la séquence, le jeu ajoute une nouvelle couleur.`,\n                boldText: ['jeu de mémoire', 'éclaire', 'produit un son', \"appuyer sur la touche de la couleur qui vient de s'allumer\", 'répète la même couleur et le même son', 'ajoute'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois que vous ratez une séquence, vous {0}. Au cours d'une partie, vous avez le droit à seulement {1}.\\n\\nUne fois les quatre erreurs faites, ou alors lorsque vous {2}, votre score est compatibilisé en fonction du nombre de touches dans la séquence actuelle.\\n\\nChaque jour, {3}.`,\n                boldText: ['perdez un essai', 'quatre erreurs', 'abandonnez la partie en cours', 'votre score journalier est remit à zéro'],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'Help',\n        Leave: 'Go back',\n        AreYouSure: 'Are you sure?',\n        ToGiveUp:\n            \"If you give up, this game, your score will be saved, but you won't be able to continue this party.\",\n        BestScore: (bestScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score: {0}',\n                boldText: [bestScore],\n            });\n        },\n        DailyScore: (dailyScore) => {\n            return applyBoldStyle({\n                sentence: 'Best score today: {0}',\n                boldText: [dailyScore],\n            });\n        },\n        YourTurn: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Your turn!'],\n            });\n        },\n        WaitNSee: () => {\n            return applyBoldStyle({\n                sentence: '{0}',\n                boldText: ['Look carefully...'],\n            });\n        },\n        Failed: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Failed! ...'],\n                },\n                'red'\n            );\n        },\n        Tries: (tries) => {\n            return applyBoldStyle(\n                {\n                    sentence: 'Remaining tries: {0}',\n                    boldText: [tries],\n                },\n                'red'\n            );\n        },\n        NiceHit: () => {\n            return applyBoldStyle(\n                {\n                    sentence: '{0}',\n                    boldText: ['Well done!!'],\n                },\n                'green'\n            );\n        },\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        Progress: (order, game) => {\n            return applyBoldStyle({\n                sentence: `Progress: ${game} / {0}`,\n                boldText: [order],\n            });\n        },\n        Congratulations: 'Congratulations!!',\n        SoBad: 'So sad...',\n        ScoreNotBeated:\n            'Your daily score has not been beaten... But you can retry!',\n        Retry: 'Retry',\n        Exit: 'Exit',\n        GiveUp: 'Give up',\n        Start: 'Start a game',\n        Cancel: 'Cancel',\n        TimeToStop: 'Yes, I want to stop',\n\n\n\n\n        // Help section\n        Head: `The Simon, how does it works?`,\n        RulesHead: \"The rules\",\n        TriesHead: \"The tries\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The Simon is a circular shaped {0} with four different colored buttons: red, green, yellow and blue.\\n\\nThe game {1} one of the four colors and {2} always associated to this color. The player shall {3}.\\n\\nThe game {4}, then {5} another color. The player will have to reproduces this sequence. Each time the player successfully reproduces the sequence, the game adds another color in this sequence.`,\n                boldText: ['memory game', 'lighten', 'produces a sound', \"press the colored button which has just turned on\", 'repeat the same color with the same sound', 'add'],\n            });\n        },\n        TriesExplain: () => {\n            return applyBoldStyle({\n                sentence: `Each time you fail a sequence, you {0}. In a game, you are allowed up to {1}.\\n\\nOnce the four fails made, or when you {2}, you will have the number of elements in the current sequence saved as your score.\\n\\nEach day, {3}.`,\n                boldText: ['lose a try', 'four maximum fails', 'give up the current game', 'your daily score is reset to zero'],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        paddingTop: 20,\n        flex: 1,\n        alignItems: 'center'\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    SimonButtonWeb: {\n        // flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonButton: {\n        //flex: 1,\n        width: 125,\n        height: 125,\n        borderRadius: 10,\n        opacity: 0.5,\n    },\n    SimonLeftButton: {\n        marginLeft: 70,\n        marginRight: 10,\n    },\n    SimonGreen: {\n        borderTopLeftRadius: 60,\n        backgroundColor: '#009f3c',\n    },\n    SimonRed: {\n        marginRight: 70,\n        borderTopRightRadius: 60,\n        backgroundColor: '#df0024',\n    },\n    SimonYellow: {\n        marginLeft: 70,\n        marginRight: 10,\n        borderBottomLeftRadius: 60,\n        backgroundColor: '#f8f400',\n    },\n    SimonBlue: {\n        marginRight: 70,\n        borderBottomEndRadius: 60,\n        backgroundColor: '#00a8ec',\n    },\n    clickedButton: {\n        opacity: 1,\n        borderColor: '#ff8a00',\n        borderWidth: 2,\n    },\n    overlayStyle: {\n        padding: 40,\n        borderRadius: 25,\n        height: 300,\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    // Help section\n    viewHelpPage: {\n        marginTop: -20,\n        backgroundColor: 'white',\n        width: 100 + '%',\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .4,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport SimonLogo from '../../../assets/img/activities/simon/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={SimonLogo} style={styles.logo} />\n            <Button\n                title={SimonLang[props.lang].Play}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Help}\n                containerStyle={styles.button}\n                raised\n                onPress={(e) => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n            <Button\n                title={SimonLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                raised\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { Text, Button, Overlay } from 'react-native-elements';\nimport { lang as SimonLang } from '../../../language/activities/simon';\nimport { Audio } from 'expo-av';\n\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport Lottie from '../../utils/Lottie';\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\n\nimport * as API from '../../../data/simonApi';\n\nimport styles from './styles';\nimport { ActivityIndicator } from 'react-native-web';\n\nexport default function Game(props) {\n    const [start, setStart] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [canPlay, setCanPlay] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tries, setTries] = useState(4); // 3 tries at the beginning of the game\n    const [order, setOrder] = useState([Math.round(Math.random() * 3)]); // generate a random first order\n    const [success, setSuccess] = useState(false);\n    const [buttonClicked, setButtonClicked] = useState(-1);\n    const [bestScore, setBestScore] = useState(0);\n    const [dailyScore, setDailyScore] = useState(0);\n    const [niceHit, setNiceHit] = useState(false);\n    const [confetti, setConfetti] = useState(false);\n    const [game, setGame] = useState(new Array(0));\n\n    const [scoreBeaten, setScoreBeaten] = useState(false);\n\n    const LottieSource = require('../../../assets/lottie/trophy.json');\n    const currentDate = new Date().toLocaleDateString('fr-FR');\n\n    const SimonButtonStyle = Platform.OS == 'web' ? styles.SimonButtonWeb : styles.SimonButton;\n\n    useEffect(async () => {\n        // API.clear(props.personId);\n        if (start === false) {\n            setLoading(true);\n            API.getBestScore(props.personId).then((data) => {\n                if (data.length > 0) {\n                    setBestScore(data[0].score);\n                }\n            });\n            API.getScoreDay(props.personId, currentDate).then((data) => {\n                if (data.length > 0) {\n                    setDailyScore(data[0].score);\n                }\n            });\n            setLoading(false);\n        } else {\n            setNiceHit(false);\n            setCanPlay(false);\n            // If the game started, show a demo of the actions.\n            // The useEffect is launched when the game is launched\n            // or when the order is updated (at the end of a turn)\n            for (let i = 0; i < order.length; i++) {\n                if (!success) {\n                    await playButtonDemo(order[i]);\n                }\n            }\n            setCanPlay(true);\n        }\n    }, [start, order]);\n\n    const randomNumber = () => {\n        return Math.round(Math.random() * 3);\n    };\n\n    const pickCorrectSound = (idx) => {\n        switch (idx) {\n            case 0:\n                return require('../../../assets/sound/simon/green.mp3');\n            case 1:\n                return require('../../../assets/sound/simon/red.mp3');\n            case 2:\n                return require('../../../assets/sound/simon/yellow.mp3');\n            case 3:\n                return require('../../../assets/sound/simon/green.mp3');\n            default:\n                break;\n        }\n    };\n\n    const playButtonDemo = async (idx) => {\n        // Play a sound according to the idx and simulates a button pressure according to it\n        return new Promise(async (resolve, reject) => {\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n            setButtonClicked(idx);\n            await sound.playAsync().then(async (playBackStatus) => {\n                setTimeout(async () => {\n                    setButtonClicked(-1);\n                    await sound.unloadAsync();\n                    resolve(true);\n                }, playBackStatus.playableDurationMillis - 320);\n            });\n        });\n    };\n\n    const yourTurn = () => {\n        if (failed) {\n            return SimonLang[props.lang].Failed();\n        } else if (niceHit) {\n            return SimonLang[props.lang].NiceHit();\n        } else {\n            return SimonLang[props.lang].YourTurn();\n        }\n    };\n\n    const playButton = async (idx) => {\n        if (!canPlay) {\n            return;\n        }\n        if (game.length >= order.length) {\n            return;\n        }\n        if (idx >= 0 && idx <= 3) {\n            let playedGame = game;\n            playedGame.push(idx);\n            setGame(playedGame);\n\n            if (sound) {\n                await sound.unloadAsync();\n            }\n            setButtonClicked(idx);\n            const { sound } = await Audio.Sound.createAsync(\n                pickCorrectSound(idx)\n            );\n            props.setSound(sound);\n\n            var time = await sound.playAsync().then((data) => {\n                return data.playableDurationMillis;\n            });\n\n            // @todo manage each hit instead of just the last one\n\n            setTimeout(async () => {\n                await sound.unloadAsync();\n                setButtonClicked(-1);\n            }, time - 320);\n            if (game[game.length - 1] !== order[game.length - 1]) {\n                await failRound(time);\n            } else if (game.length === order.length) {\n                await successRound(time, sound);\n            }\n        }\n    };\n\n    const failRound = async (time) => {\n        setFailed(true);\n        setGame([]);\n        setCanPlay(false);\n        setTries(tries - 1);\n        if (tries > 1) {\n            setTimeout(async () => {\n                for (let i = 0; i < order.length; i++) {\n                    await playButtonDemo(order[i]);\n                }\n                setCanPlay(true);\n                setFailed(false);\n            }, time - 320);\n        } else {\n            completeGame();\n        }\n    };\n\n    const completeGame = async () => {\n        props.setModal(false);\n        await API.insertScore(props.personId, order.length - 1, currentDate, dailyScore < order.length - 1, bestScore < order.length - 1);\n        setCanPlay(false);\n        setSuccess(true);\n        const path = dailyScore < order.length - 1 ? require(`../../../assets/sound/global/applause.mp3`) : require(`../../../assets/sound/global/you_lose.mp3`);\n        const { sound } = await Audio.Sound.createAsync(path);\n        props.setSound(sound);\n        sound.playAsync();\n        if (dailyScore < order.length - 1) {\n            setScoreBeaten(true);\n        } else {\n            setScoreBeaten(false);\n        }\n    };\n\n    const successRound = async (time, sound) => {\n        setNiceHit(true);\n        setCanPlay(false);\n        setTimeout(async () => {\n            await sound.unloadAsync();\n            setOrder([...order, randomNumber()]);\n        }, time - 320);\n        setGame([]);\n    };\n\n    const successOverlay = () => {\n        if (!confetti) {\n            setConfetti(true);\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].BestScoreToday(order.length - 1)}\n                </Text>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n\n    const failOverlay = () => {\n        if (loading) {\n            return <ActivityIndicator />;\n        }\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const retryGame = () => {\n        setConfetti(false);\n        setSuccess(false);\n        setFailed(false);\n        setTries(4);\n        setOrder([randomNumber()]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                <ConfettiCannon\n                    fadeOut={true}\n                    autoStart={true}\n                    fallSpeed={6000}\n                    count={50}\n                    origin={{ x: -20, y: -35 }}\n                />\n            ) : (\n                <></>\n            )}\n\n            {/* Overlay modal end of the game */}\n            <Overlay\n                visible={success}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => setSuccess(false)}\n                ModalComponent={Modal}\n            >\n                {scoreBeaten ? successOverlay() : failOverlay()}\n                <View style={{ flexDirection: 'row', marginTop: 30 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            retryGame();\n                        }}\n                        title={SimonLang[props.lang].Retry}\n                        containerStyle={{\n                            borderRadius: 13,\n                            marginRight: 10,\n                        }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setTab(0);\n                        }}\n                        title={SimonLang[props.lang].Exit}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* Are you sure to exit - Overlay */}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlayStyle}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.headerOverlay}>\n                    {SimonLang[props.lang].AreYouSure}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {SimonLang[props.lang].ToGiveUp}\n                </Text>\n                <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                    <Button\n                        raised\n                        onPress={() => {\n                            props.setModal(false);\n                        }}\n                        title={SimonLang[props.lang].Cancel}\n                        containerStyle={{ borderRadius: 13, marginRight: 10 }}\n                    />\n                    <Button\n                        raised\n                        onPress={() => {\n                            completeGame();\n                        }}\n                        title={SimonLang[props.lang].TimeToStop}\n                        containerStyle={{ borderRadius: 13 }}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                    />\n                </View>\n            </Overlay>\n\n            {/* The first row of the Simon */}\n            <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonGreen,\n                        buttonClicked === 0 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(0)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonRed,\n                        buttonClicked === 1 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(1)}\n                />\n            </View>\n\n            {/* The second row of the Simon */}\n            <View style={{ flexDirection: 'row' }}>\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonLeftButton,\n                        styles.SimonYellow,\n                        buttonClicked === 2 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(2)}\n                />\n                <View\n                    style={[\n                        SimonButtonStyle,\n                        styles.SimonBlue,\n                        buttonClicked === 3 ? styles.clickedButton : '',\n                    ]}\n                    onStartShouldSetResponder={() => true}\n                    onResponderGrant={() => playButton(3)}\n                />\n            </View>\n\n            <View style={{ marginTop: 15 }}>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].BestScore(bestScore)}\n                </Text>\n                <Text style={{ textAlign: 'center' }}>\n                    {SimonLang[props.lang].DailyScore(dailyScore)}\n                </Text>\n                <Text style={{ textAlign: 'center', marginBottom: 15 }}>\n                    {SimonLang[props.lang].Tries(tries)}\n                </Text>\n                {start ? (\n                    <View\n                        style={{ alignContent: 'center', alignItems: 'center' }}\n                    >\n                        <Text style={{ textAlign: 'center', fontSize: 18 }}>\n                            {canPlay || failed\n                                ? yourTurn()\n                                : SimonLang[props.lang].WaitNSee()}\n                        </Text>\n                        <Text style={{ textAlign: 'center' }}>\n                            {SimonLang[props.lang].Progress(\n                                order.length,\n                                game.length\n                            )}\n                        </Text>\n                        <Button\n                            disabled={!canPlay}\n                            onPress={() => props.setModal(true)}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{\n                                marginTop: 20,\n                                width: 150,\n                                borderRadius: 15,\n                            }}\n                            raised\n                            title={SimonLang[props.lang].GiveUp}\n                        />\n                    </View>\n                ) : (\n                    <>\n                        <View\n                            flexDirection={'row'}\n                            style={{\n                                alignContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Button\n                                buttonStyle={{\n                                    marginRight: 10,\n                                    borderRadius: 13,\n                                }}\n                                title={SimonLang[props.lang].Start}\n                                onPress={() => setStart(true)}\n                            />\n                            <Button\n                                buttonStyle={{\n                                    borderRadius: 13,\n                                    backgroundColor: 'red',\n                                }}\n                                title={SimonLang[props.lang].Leave}\n                                onPress={() => props.setTab(0)}\n                            />\n                        </View>\n                    </>\n                )}\n            </View>\n        </>\n    );\n}\n","import React from 'react';\nimport { View, ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as SimonLang } from '../../../language/activities/simon';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView>\n                <Button\n                    title={SimonLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{SimonLang[props.lang].Head}</Text>\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].Rules()}</Text>\n\n                \n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {SimonLang[props.lang].TriesHead}\n                </Text>\n                <Text style={styles.helpStep}>{SimonLang[props.lang].TriesExplain()}</Text>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport { Audio } from 'expo-av';\n\n// Child Components\nimport Menu from './Menu';\nimport Game from './Game';\nimport Help from './Help';\n\nimport styles from './styles';\n\nexport default function Simon(props) {\n    const [tab, setTab] = useState(0);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        // API.clear(props.personId);\n        // BackHandler managment\n        const backAction = () => {\n            if (sound) {\n                sound.unloadAsync();\n            }\n            if (tab > 0) {\n                if (tab !== 1) {\n                    setTab(0);\n                } else {\n                    setModal(true);\n                }\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab]);\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                />\n            );\n        } else if (tab === 1) {\n            return (\n                <Game\n                    setTab={setTab}\n                    lang={props.lang}\n                    personId={props.personId}\n                    sound={sound}\n                    setSound={setSound}\n                    modal={modal}\n                    setModal={setModal}\n                />\n            );\n        } else if (tab === 2) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <>\n            <View style={styles.view}>{printPage()}</View>\n        </>\n    );\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text, clr, pos) => {\n    var color = '#3B8EFF';\n    if (clr === 'red') {\n        color = '#FF5755';\n    } else if (clr === 'green') {\n        color = '#459449';\n    }\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: i == pos ? color : '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        View: 'Voir les quiz',\n        Create: 'Créer un quiz',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        Cancel: 'Annuler',\n        GoBack: \"Oui, j'annule l'édition du quiz\",\n        NothingYet: 'Aucun quiz crée pour le moment.',\n        NoQuestionYet: 'Aucune question crée pour le moment.',\n        SuccessfulRatio: 'de réussite',\n        AddQuestion: 'Ajouter une question',\n        Complete: 'Terminer la création',\n        ImportFile: \"Importer un fichier de référence\",\n        ReferenceFile: \"Un fichier de référence est une image ou un fichier sonore que la personne visualisera pour répondre à la question demandée. Par exemple, la photo d'un frère ou d'une sœur, ou une musique, ...\",\n        WhatIsTheQuestion: \"Quelle est la question ?\",\n        AddAnswer: \"Ajouter une réponse\",\n        WhatIsAnswer: \"Vous pouvez renseigner plusieurs réponses. Une fois une réponse crée, cliquez sur le bouton (+) pour l'ajouter à la liste des réponses possibles. Vous pouvez ensuite cliquer sur cette réponse une fois ajoutée pour la supprimer.\",\n        OK: \"Valider\",\n        GiveUpQuizTitle: \"Abandonner le quiz\",\n        GiveUpQuiz: \"Êtes-vous sûr de vouloir abandonner ce quiz? Le score restera enregistré.\",\n        ReturnToForm: \"Retourner à l'édition de question\",\n        CreatedQuestion: \"La question a été crée avec succès !\",\n        EditedQuestion: \"La question a été éditée avec succès !\",\n        PossibleAnswers: \"réponse(s) possible(s)\",\n        DeleteQuiz: \"Supprimer un quiz\",\n        SureDeleteQuiz: \"Êtes-vous sûr(e) de vouloir supprimer ce quiz ? Cette action est irréversible.\",\n        SureDeleteQuestion: \"Êtes-vous sûr(e) de vouloir supprimer cette question ? Cette action est irréversible.\",\n        CompleteQuizTitleHeader: \"Créer un quiz\",\n        CompleteQuizTitle: \"Vous êtes sur le point de créer un nouveau quiz. Merci de lui attribuer un titre afin que vous puissez le retrouver plus rapidement.\",\n        QuizTitle: \"Nom du quiz\",\n        CreatedQuiz: \"Quiz crée avec succès !\",\n        EditedQuiz: \"Quiz modifié avec succès !\",\n        QuizListRedirection: \"Vous allez maintenant être redirigé à la liste des quiz.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'Le quiz sélectionné aléatoirement est: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Bien joué !! 😄\",\n        Success: \"Bien joué ! C'est la bonne réponse !! Vous pouvez maintenant passer à la suite !\",\n        FailedTitle: \"Dommage... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Dommage, mais ce n'était pas la bonne réponse ! Les réponses possibles étaient: ${answersText}.`\n        },\n        SuccessQuizTitle: \"Haut la main !\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Fantastique !! Vous avez réussi ce quiz ! Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Une autre fois ! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Dommage... Vous avez raté ce quiz ! ... Votre score est de {0} réussite(s) pour {1} erreur(s) !',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Sauvegarder le quiz',\n        SaveContent: \"Sauvegarder la question\",\n        AddContent: \"Ajouter la question\",\n        SureCancelEdition: \"Êtes-vous sûr de bien vouloir abandonner l'édition de ce quiz? Vous ne pourrez pas récupérer vos modifications.\",\n\n        // Help page related\n        Head: 'Le quiz, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        CustomHead: \"Personnalisation\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Les règles du quiz sont basiques: il y a des questions {0}, et le joueur doit y répondre. Il peut y avoir {1} réponses possibles, une bonne réponse et c'est un point ajouté au score.\\n\\nIl n'y a pas de perte de points suite à une mauvaise réponse.`,\n                boldText: [\"facultativement accompagnées d'une image ou d'un son\", \"plusieurs\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `Il n'y a pas de quiz par défaut. C'est à vous d'en {0} et de les {1} à votre guise !\\nPour cela, vous devez vous rendre dans la partie \"{2}\".\\n\\nVous aurez là la liste des quiz que vous avez préalablement crée. Si vous n'en avez encore créé aucun, façonnez votre premier quiz avec le bouton \"{3}\".\\n\\nIci vous pourrez ajouter des question avec le bouton \"{4}\". Il vous est demandé {5} (facultatif), qui correspond à un son ou une image pour illustrer votre question.\\n\\nEnsuite, vous devez {6}. Ce sera cette question qui sera ensuite demandée au joueur.\\n\\nEt enfin, {7}. Une fois une réponse valide renseignée, cliquez sur le symbole {8} à côté, et votre réponse est ajoutée à la liste des réponses valides à la question. Vous pouvez en avoir 10 maximum.\\n\\nSi vous avez fait une erreur sur une des réponses, {9} pour la retirer de la liste.\\n\\nUne fois tous les éléments de la question renseignées, cliquez sur \"{10}\" au dessus pour enregistrer la question et retourner à la liste des questions précédemment crées. Ajoutez-en autant que vous voulez pour un quiz.\\n\\nVous pouvez également {11}.\\n\\nUne fois le quiz complet, cliquez sur \"{12}\", et voilà ! Renseignez le nom de ce quiz et c'est terminé, le quiz est désormais jouable !`,\n                boldText: [\"créer\",\n                    \"personnaliser\",\n                    \"Voir les quiz\",\n                    \"Créer un quiz\",\n                    \"Ajouter une question\",\n                    \"d'importer un fichier de référence\",\n                    \"renseigner la question\",\n                    \"ajouter les réponses éventuelles\",\n                    \"( + )\",\n                    \"cliquez simplement dessus\",\n                    \"Valider\",\n                    \"cliquer sur une question pour la modifier\",\n                    \"Terminer la création\"\n                ],\n            });\n        }\n    },\n    en: {\n        Play: 'Play',\n        View: 'View quizzes',\n        Create: 'Create a quiz',\n        Help: 'How does it works',\n        Leave: 'Leave',\n        Cancel: 'Cancel',\n        GoBack: 'Yes, I want to go back',\n        NothingYet: 'No quiz has been created yet.',\n        NoQuestionYet: 'No question has been created yet.',\n        SuccessfulRatio: 'of success',\n        AddQuestion: 'Add a question',\n        Complete: 'Complete the quiz creation',\n        ImportFile: \"Import a reference file\",\n        ReferenceFile: \"A reference file is a picture or a sound the person will see/hear to answer the asked question. For instance, a sibling photo or a music, ...\",\n        WhatIsTheQuestion: \"What is the question?\",\n        AddAnswer: \"Add an answer\",\n        WhatIsAnswer: \"You can set up many answers. When you have done creating one, click on the (+) button. Once added, you can click on the answer in order to delete it.\",\n        OK: \"Submit\",\n        GiveUpQuizTitle: \"Give up\",\n        GiveUpQuiz: \"Are you sure to give up this quiz? The score will be saved.\",\n        ReturnToForm: \"Return to the question edition\",\n        CreatedQuestion: \"The question has been successfuly created!\",\n        EditedQuestion: \"The question has been successfuly edited!\",\n        PossibleAnswers: \"possible answer(s)\",\n        DeleteQuiz: \"Delete a quiz\",\n        SureDeleteQuiz: \"Are you sure to delete this quiz? This action cannot be undone.\",\n        SureDeleteQuestion: \"Are you sure to delete this question? This action cannot be undone.\",\n        CompleteQuizTitleHeader: \"Create a quiz\",\n        CompleteQuizTitle: \"You are about to complete the quiz creation. Please provide a title in order to help you find it easier later.\",\n        QuizTitle: \"Quiz title\",\n        CreatedQuiz: \"Quiz successfuly created!\",\n        EditedQuiz: \"Quiz successfuly edited!\",\n        QuizListRedirection: \"You will now be redirect to the quiz list.\",\n        selectedQuizz: (quizName) => {\n            return applyBoldStyle({\n                sentence: 'The randomly selected quiz is: {0}',\n                boldText: [quizName],\n            });\n        },\n        Questions: \"question(s)\",\n        SuccessTitle: \"Well played!! 😄\",\n        Success: \"Well played! That's the good answer!! You can now go to the next question!\",\n        FailedTitle: \"Oops... 😥\",\n        Failed: (answers) => {\n            let answersText = answers.join(', ');\n            return `Oops, that's not a valid answer... the valid answer${answers.length > 0 ? 's were' : ' was'} : ${answersText}.`\n        },\n        SuccessQuizTitle: \"Easy peasy!\",\n        SuccessQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: 'Congratulations!! You won this quiz! Your score is for {0} good answer(s) for {1} mistake!',\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        FailQuizTitle: \"Better next time! ...\",\n        FailQuiz: (fail, success) => {\n            return applyBoldStyle({\n                sentence: \"It's alright... You failed this quiz!... Your score is for {0} good answer(s) for {1} mistake!\",\n                boldText: [success, fail]\n            }, 'red', 1)\n        },\n        Save: 'Save the quiz',\n        SaveContent: \"Save the question\",\n        AddContent: \"Add the question\",\n        SureCancelEdition: \"Are you sure to cancel this quiz edition? Your modification would not be saved\",\n\n        // Help page related\n        Head: 'The quiz, how does it works?',\n        RulesHead: \"The rules\",\n        CustomHead: \"Customization\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `This is a basic quiz game: there are questions {1}, and the player must answer them. There can be {1} answers, one correct answer and it's a point added to the score.\\n\\nThere is no loss of points for a wrong answer.`,\n                boldText: [\"optionally accompanied by an image or a sound\", \"several possible\"],\n            });\n        },\n        Custom: () => {\n            return applyBoldStyle({\n                sentence: `There are no default quizzes. It is up to you to {0} and {1} them as you wish!\\nTo do this, you must go to the \"{2}\" section.\\nThere you will see the list of quizzes that you have already created. If you haven't created any yet, create your first quiz with the \"{3}\" button.\\n\\nHere you can add questions with the \"{4}\" button. You are asked to {5} (optional), which is a sound or image file to illustrate your question.\\n\\nThen you have to {6}. This question will be asked to the player.\\n\\nAnd finally, {7}. Once you have entered a valid answer, click on the {8} symbol next to it, and your answer would be added to the list of the valid answers to the question. You can have a maximum of 10 possible answers.\\n\\nIf you made a mistake on one of the answers, {9} to remove it from the list.\\n\\nOnce you have filled in all the elements of the question, click \"{10}\" above to save the question and return to the list of questions. Add as many as you want to this quiz.\\n\\nYou can also {11}.\\n\\nOnce the quiz is completed, click \"{12}\" and that's it! Fill in the name of this quiz and it's done, the quiz is now playable!`,\n                boldText: [\"create\",\n                    \"customize\",\n                    \"View quizzes\",\n                    \"Create a quiz\",\n                    \"Add a question\",\n                    \"import a reference file\",\n                    \"fill in the question\",\n                    \"add the possible answers\",\n                    \"( + )\",\n                    \"simply click on it\",\n                    \"Submit\",\n                    \"click on a question to edit it\",\n                    \"Complete the quiz creation\"\n                ],\n            });\n        }\n    },\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        marginTop: 20,\n        flex: 1,\n        alignItems: 'center',\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButtonPlay: {\n        width: 235,\n        marginTop: 20,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    playButton: {\n        width: 235,\n        marginTop: 10,\n        backgroundColor: 'blue',\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    createButton: {\n        width: 260,\n        borderRadius: 15,\n    },\n    safeArea: {\n        backgroundColor: 'white',\n        marginTop: 1,\n        marginBottom: 40,\n        height: 100 + '%',\n        width: 100 + '%'\n    },\n    nothingYet: {\n        textAlign: 'center',\n        color: 'gray',\n        marginTop: 30,\n    },\n    loading: {\n        marginTop: 30,\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    overlayDescriptionReference: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        marginVertical: 15\n    },\n    ScrollView: {\n        alignItems: 'center',\n        marginVertical: 30,\n        paddingBottom: 40\n    },\n    ScrollViewSuccess: {\n        alignItems: 'center',\n        marginVertical: -10,\n        paddingBottom: 40\n    },\n    imageSuccess: {\n        width: 300,\n        height: 300,\n    },\n    successPageTitle: {\n        alignSelf: 'center',\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 24,\n        color: '#788bff',\n        marginBottom: 10,\n    },\n    modal: {\n        borderRadius: 20,\n        paddingHorizontal: 30,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    modalTitle: {\n        marginBottom: 30,\n        width: 250,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    modalDescription: {\n        width: 250,\n        textAlign: 'center',\n        color: '#495058',\n        // marginVertical: 15\n    },\n    quizTitleInputContainer: {\n        width: 290,\n        marginTop: 10\n    },\n    quizTitleInput: {\n        fontSize: 15\n    },\n    badgesView: {\n        flexDirection: 'row',\n        justifyContent:'center',\n        flexWrap:'wrap',\n        alignItems:'center',\n        alignContent:'center',\n        marginBottom: 50\n    },\n    quizzTitle: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        width: 250\n    },\n    topMediaQuestion: {\n        borderRadius: 80,\n        width: 250,\n        height: 250\n    },\n    gameQuestion: {\n        fontSize: 25,\n        marginTop: 10,\n        fontWeight: 'bold',\n        color: '#788bff'\n    },\n    flexQuizGame: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 15,\n        alignContent:'center',\n        width: 70 + '%',\n        justifyContent: 'flex-start'\n    },\n    inputQuizGame: {\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderColor: 'grey',\n        borderWidth: 1,\n        paddingHorizontal: 20,\n        borderBottomWidth: 0,\n        color: 'grey'\n    },\n    buttonQuizGameOK: {\n        paddingHorizontal: 15,\n        borderRadius: 15\n    },\n\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        marginTop: -20,\n        width: 100 + '%',\n        textAlign: 'center'\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { Image, ActivityIndicator } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuizLogo from '../../../assets/img/activities/quiz/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={QuizLogo} style={styles.logo} />\n\n            <Button\n                title={props.isLoading ? <ActivityIndicator color={'blue'} size={'small'} /> : QuizLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n                disabled={props.quiz.length === 0}\n            />\n\n            <Button\n                title={QuizLang[props.lang].View}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'book-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(3)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={QuizLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => props.setPage(null)}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}\n","import {\n    View,\n    Image\n} from 'react-native';\nimport { Icon, FAB, Avatar } from 'react-native-elements';\nimport { Audio } from 'expo-av';\n\nexport const printFile = (fileType, uri, clearFile, isPlaying, pauseSound, setIsPlaying, sound, setSound) => {\n    if (fileType === 'image') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Image source={{uri: uri}} style={{width: 200, height: 200, borderRadius: 100, marginBottom: 30}} />\n            </View>\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <View>\n                <FAB\n                    color='red'\n                    style={{marginLeft: 100, position:'absolute', zIndex: 9}}\n                    size=\"small\"\n                    icon={{name: 'close-circle-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearFile();\n                    }}\n                />\n                <Icon onPress={() => isPlaying ? pauseSound() : playSound(setIsPlaying, sound, setSound, uri) } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30, zIndex: 2}} />\n            </View>\n        );\n    }\n};\n\nexport const playSound = async (setIsPlaying, sound, setSound, uri) => {\n    setIsPlaying(true);\n    await Audio.setAudioModeAsync({\n        staysActiveInBackground: true,\n        shouldDuckAndroid: true,\n    });\n    const getSoundStatus = await sound?.getStatusAsync();\n    if (getSoundStatus?.isLoaded === false) {\n        await sound.loadAsync({ uri: uri });\n        setSound(sound);\n    }\n    await sound.playAsync();\n    sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n        if (playbackStatus.didJustFinish) {\n            await sound.unloadAsync();\n            setIsPlaying(false);\n        }\n    });\n};\n\nexport const pickCorrectIcon = (fileType, uri) => {\n    if (fileType === 'image') {\n        return (\n            <Avatar\n                source={{ uri: uri }}\n                rounded\n                size={'medium'}\n                containerStyle={{marginHorizontal: 8}}\n            />\n        );\n    } else if (fileType === 'audio') {\n        return (\n            <Icon\n                raised\n                name={'musical-notes-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    } else {\n        return (\n            <Icon\n                raised\n                name={'text-outline'}\n                type={'ionicon'}\n                color={'#8F9EB0'}\n            />\n        );\n    }\n};","import React, { useState } from 'react'\nimport {\n    ListItem,\n    Icon,\n    Overlay,\n    Button\n} from 'react-native-elements';\nimport { Platform, Modal, View, Text } from 'react-native';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nimport { pickCorrectIcon } from '../utils/quizFunc';\n\nimport styles from '../styles';\n\nexport default function QuestionList(props) {\n    const [modal, setModal] = useState(false);\n\n    const length = props.quizEdit?.content?.length + props.newContent?.length;\n\n    const pickOutQuestion = () => {\n        if (length <= 2 && props.quizEdition) return;\n        if (props.quizEdition === true) {\n            if (Number.isInteger(props.questionId)) {\n                // if the questionId is an integer, it means it has not\n                // been added to the api yet, so it's an index of the\n                // newContent array passed in the props from the ViewQuiz Component\n\n                const index = props.questionId - props.quizEdit?.content?.length;\n                const tmp = props.newContent;\n                tmp.splice(index, 1);\n                // take out the new content from the newContent state in the\n                // parent component\n                props.setNewContent([...tmp]);\n            } else {\n                // todo not get by api but update quizedit state\n                // update api only when saving quiz\n                const index = props.quizEdit.content.findIndex(el => el.id == props.questionId );\n                const tmp = props.quizEdit;\n                tmp.content.splice(index, 1);\n                props.setQuizEdit(tmp);\n                props.setReload(!props.reload)\n                props.setEditedQuiz(true);\n            }\n        } else {\n            const tmp = props.quizEdition ? props.content : props.contentList;\n            tmp.splice(props.index, 1)\n            props.setContent([...tmp]);\n        }\n        setModal(false);\n    };\n\n    var TouchableScale = Platform.OS !== 'web' ? require('react-native-touchable-scale').default : null;\n    let mod = props.index % 2 == 0 ? {backgroundColor: 'white'} : {backgroundColor: '#f3f3f3'};\n    let componentProps = \n        Platform.OS !== 'web' ?\n            { Component:TouchableScale, key:props.index, bottomDivider:true, containerStyle:mod } :\n            { key: props.index, bottomDivider:true, containerStyle:mod };\n    return(\n        <>\n        <Overlay\n            visible={modal}\n            overlayStyle={styles.overlay}\n            onBackdropPress={() => setModal(false)}\n            ModalComponent={Modal}\n        >\n            <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureDeleteQuestion}</Text>\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={{ marginRight: 10 }}\n                    onPress={() => setModal(false)}\n                />\n                <Button\n                    title={QuizLang[props.lang].OK}\n                    buttonStyle={{ fontWeight: 'bold' }}\n                    onPress={() => pickOutQuestion() }\n                />\n            </View>\n        </Overlay>\n            <ListItem {...componentProps} onPress={() => { props.setEditContent(props.questionId) }} >\n                { pickCorrectIcon(props.content.fileType, props.content.uri) }\n                <ListItem.Content>\n                    <ListItem.Title>{props.content.question}</ListItem.Title>\n                    <ListItem.Subtitle>{props.content?.answers?.length || 1} {QuizLang[props.lang].PossibleAnswers}</ListItem.Subtitle>\n                </ListItem.Content>\n                <Icon disabled={props.quizEdition == true && length <= 2} reverse size={15} style={{backgroundColor:'red'}} name={'trash-outline'} type={'ionicon'} color={'red'} onPress={(e) => { setModal(true) }} />\n            </ListItem>\n        </>\n    )\n};","export function ScoreRatio (content, personId) {\n    var success = 0;\n    var fail = 0;\n    content.map( (el, i) => {\n        const score = el.score.filter( (el) => el.personId == personId );\n        score.map( (el, i) => {\n            success += parseInt(el.success);\n            fail += parseInt(el.failed);\n        });\n    });\n    const total = success + fail;\n    if (total == 0)\n        return 0;\n    const score = ((success / total) * 100).toFixed(2);\n    return score;\n};","import React from 'react';\nimport { ListItem, Icon } from 'react-native-elements';\nimport { Platform, Alert } from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport { ScoreRatio } from './utils/scoreFunc';\n\nexport default function QuizList(props) {\n    var TouchableScale =\n        Platform.OS !== 'web'\n            ? require('react-native-touchable-scale').default\n            : null;\n    let mod =\n        props.index % 2 === 0\n            ? { backgroundColor: 'white' }\n            : { backgroundColor: '#f3f3f3' };\n    let componentProps =\n        Platform.OS !== 'web'\n            ? {\n                  Component: TouchableScale,\n                  key: props._id,\n                  bottomDivider: true,\n                  containerStyle: mod,\n              }\n            : { key: props._id, bottomDivider: true, containerStyle: mod };\n\n    return (\n        <ListItem {...componentProps} onPress={() => {\n                props.setEdit(true);\n                props.setQuizEdit(props.quiz);\n            }}>\n            <ListItem.Content>\n                <ListItem.Title>{props.quiz.name}</ListItem.Title>\n                <ListItem.Subtitle>\n                    { ScoreRatio(props.quiz.content, props.personId) }{'% '}\n                    {QuizLang[props.lang].SuccessfulRatio}\n                </ListItem.Subtitle>\n                <ListItem.Subtitle>\n                    {props.quiz?.content?.length || 1}{' '}\n                    {QuizLang[props.lang].Questions}\n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Icon\n                reverse\n                size={15}\n                style={{ backgroundColor: 'red' }}\n                name={'trash-outline'}\n                type={'ionicon'}\n                color={'red'}\n                onPress={() => {\n                    return Alert.alert(\n                        QuizLang[props.lang].DeleteQuiz,\n                        QuizLang[props.lang].SureDeleteQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    props.deleteId(props.quiz._id);\n                                }\n                            },\n                        ]\n                    );\n                }}\n            />\n        </ListItem>\n    );\n}\n","import React from 'react';\nimport {\n    ActivityIndicator,\n    Text,\n    ScrollView,\n} from 'react-native';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport QuizList from './QuizList';\nimport styles from './styles';\n\nimport * as API from '../../../data/quizApi';\n\nexport default function ViewQuizList(props) {\n\n    const deleteId = (quizId) => {\n        API.deleteId(props.personId, quizId).then((data) => {\n            props.setReload(!props.reload);\n        });\n    };\n\n    return (\n        <ScrollView>\n            {props.loading ? (\n                <ActivityIndicator\n                    color={'blue'}\n                    size={'small'}\n                    style={styles.loading}\n                />\n            ) : props.quiz?.length > 0 ? (\n                props.quiz?.map((el, i) => {\n                    return (\n                        <QuizList\n                            index={i}\n                            key={el._id}\n                            quiz={el}\n                            lang={props.lang}\n                            deleteId={deleteId}\n                            personId={props.personId}\n                            setEdit={props.setEdit}\n                            setQuizEdit={props.setQuizEdit}\n                        />\n                    );\n                })\n            ) : (\n                <Text style={styles.nothingYet}>\n                    {QuizLang[props.lang].NothingYet}\n                </Text>\n            )}\n        </ScrollView>\n    );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport Lottie from '../../utils/Lottie';\n\nimport SuccessImage from '../../../assets/img/activities/quiz/success.gif';\n\nimport styles from './styles';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nexport default function SuccessContent(props) {\n    const LottieSource = require('../../../assets/lottie/success.json');\n\n    return (\n        <View>\n            <Lottie\n                LottieSource={LottieSource}\n                ImageSource={SuccessImage}\n                LottieStyle={styles.imageSuccess}\n                ImageStyle={styles.imageSuccess}\n                loop={false}\n                autoPlay={true}\n            />\n            <Text style={styles.successPageTitle}>\n                {props.edit === false\n                    ? QuizLang[props.lang].CreatedQuestion\n                    : QuizLang[props.lang].EditedQuestion}\n            </Text>\n            <Button\n                title={QuizLang[props.lang].ReturnToForm}\n                style={{ backgroundColor: 'grey' }}\n                onPress={(e) => {\n                    props.close();\n                }}\n            />\n        </View>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    SafeAreaView,\n} from 'react-native';\nimport { Button, Icon, Input, Badge, FAB } from 'react-native-elements';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { printFile } from '../utils/quizFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport SuccessContent from '../SuccessContent';\n\nimport styles from '../styles';\n\nexport default function FormQuizContent(props) {\n    const [answer, setAnswer] = useState();\n    \n    const addAnswer = () => {\n        if (!answer?.trim() || props.answers.length >= 10) {\n            return null;\n        } else if (props.answers?.includes(answer?.trim()?.toLowerCase()) === false) {\n            props.setAnswers([...props.answers, answer?.trim()?.toLowerCase()]);\n        }\n        setAnswer();\n    };\n\n    const pickOutAnswer = (i) => {\n        const tmp = props.answers;\n        tmp.splice(i, 1)\n        props.setAnswers([...tmp]);\n    };\n\n    const clearFile = () => {\n        props.setFileType();\n        props.setFilename();\n        props.setUri();\n    };\n\n    const pickFile = async () => {\n        if (Platform.OS === 'web') {\n            alert('todo');\n            return;\n        }\n\n        let result = await DocumentPicker.getDocumentAsync({type: ['image/*', 'audio/*']});\n        if (result.type === 'cancel') {\n            return;\n        }\n\n        props.setUri(result.uri);\n        props.setFileType(result.mimeType.split('/')[0]);\n        props.setFilename(result.name);\n    };\n\n    const close = () => {\n        props.setSuccess(false);\n    }\n\n    if (props.success) {\n        return (\n            <SafeAreaView style={styles.safeArea}>\n                <ScrollView contentContainerStyle={styles.ScrollViewSuccess}>\n                    <SuccessContent edit={false} lang={props.lang} close={close} />\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n\n    return (\n        <SafeAreaView style={styles.safeArea}>\n            <ScrollView contentContainerStyle={styles.ScrollView}>\n                { printFile(props.fileType, props.uri, clearFile, props.isPlaying, props.pauseSound, props.setIsPlaying, props.sound, props.setSound) }\n                <Button\n                    title={QuizLang[props.lang].ImportFile}\n                    buttonStyle={{ borderRadius: 15 }}\n                    onPress={pickFile}\n                />\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].ReferenceFile}\n                </Text>\n                <View style={{flexDirection: 'row', alignItems: 'center', marginHorizontal: 45, flexShrink: 1, flexWrap:'wrap'}}>\n                    <Input\n                        value={props.question}\n                        inputStyle={{fontSize: 14}}\n                        containerStyle={{marginBottom: 50}}\n                        placeholder={QuizLang[props.lang].WhatIsTheQuestion}\n                        onChangeText={(e) => props.setQuestion(e)}\n                    />\n                    <View style={{flexDirection: 'row', alignItems: 'center', flexShrink: 1, flexWrap:'nowrap', width: 90 + '%'}}>\n                    <Input\n                        placeholder={QuizLang[props.lang].AddAnswer}\n                        inputStyle={{fontSize: 14}}\n                        value={answer}\n                        onChangeText={(e) => setAnswer(e)}\n                    />\n                    <Button\n                        icon={\n                            <Icon\n                                name={'add-circle'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={18}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => addAnswer()}\n                        disabled={props.answers.length >= 10}\n                    />\n                    </View>\n                </View>\n                <Text style={styles.overlayDescriptionReference}>\n                    {QuizLang[props.lang].WhatIsAnswer}\n                </Text>\n                <View style={styles.badgesView}>\n                    {props.answers.map( (el, i) => {\n                        return(\n                            <Badge\n                                key={i}\n                                value={el}\n                                badgeStyle={{paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 4}}\n                                onPress={() => pickOutAnswer(i)}\n                            />\n                        )\n                    })}\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n};","import React, { useState } from 'react';\nimport {\n    View,\n    SafeAreaView,\n    ScrollView,\n    Alert,\n    Modal,\n    Text\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay } from 'react-native-elements';\n\nimport QuestionList from './Creation/QuestionList';\nimport ViewQuizList from './ViewQuizList';\n\nimport * as API from '../../../data/quizApi';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\nimport FormQuizContent from './Creation/FormQuizContent';\n\nimport { Audio } from 'expo-av';\n\nimport styles from './styles';\n\nexport default function ViewQuiz(props) {\n    // if the user is editing or not an existing quiz\n    const [edit, setEdit] = useState(false);\n\n    // if the user want to add a question to an existing quiz\n    const [newQuestion, setNewQuestion] = useState(false);\n\n    // if the user want to edit an existing question to an existing quiz\n    const [editContent, setEditContent] = useState();\n\n    // the existing quiz to edit\n    const [quizEdit, setQuizEdit] = useState();\n\n    // the new content to add in an existing quiz\n    const [newContent, setNewContent] = useState([]);\n\n    // check if something has been edited\n    const [editedQuiz, setEditedQuiz] = useState(false);\n\n    // open the modal of going back without saving confirmation\n    const [modal, setModal] = useState(false);\n\n    // the states for the quiz edition (add / edit question)\n    const [question, setQuestion] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const push = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setNewContent([...newContent, push]);\n        setEditedQuiz(true);\n        setSuccess(true);\n    };\n\n    const saveContent = () => {\n        let content;\n        let index;\n        if (Number.isInteger(editContent)) {\n            // edit newContent array\n            content = newContent[editContent - quizEdit?.content?.length];\n        } else {\n            // edit quizEdit array\n\n            // for already in api content -- think of reuploading the file\n            // if there's a new one, or to delete it\n            index = quizEdit.content.findIndex(el => el.id == editContent);\n            content = quizEdit.content[index];\n            if (fileType != content.fileType || uri != content.uri)\n                content.editedFile = true;\n        }\n        content.filename= filename;\n        content.fileType = fileType;\n        content.uri = uri;\n        content.answers = answers;\n        content.question = question;\n        setEditedQuiz(true);\n        setSuccess(true);\n        if (Number.isInteger(editContent)) {\n            if (newContent.length == 1)\n                setNewContent([content]);\n            else\n                setNewContent([...content]);\n        } else {\n            quizEdit.content[index] = content;\n            setQuizEdit(quizEdit);\n        }\n    };\n\n    // clear the states before edition or creation of a content\n    const clearState = () => {\n        setAnswers([]);\n        setQuestion();\n        setFileType();\n        setFilename();\n        setUri();\n        setSound(new Audio.Sound());\n    };\n\n    // Save the edited quiz\n    const saveQuiz = () => {\n        if (!editedQuiz) return;\n        const content = quizEdit.content.concat(newContent);\n        API.saveQuiz(props.personId, quizEdit._id, content).then((data) => {\n            return Alert.alert(\n                QuizLang[props.lang].EditedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            props.setReload(!props.reload);\n                            setNewContent([]);\n                            goBack();\n                        },\n                    }\n                ]\n            );\n        });\n    }\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const viewPage = () => {\n        if (editContent && !newQuestion) {\n            if (success) setSuccess(false);\n            let content;\n            if (Number.isInteger(editContent)) {\n                content = newContent[editContent - quizEdit?.content?.length];\n            } else {\n                const index = quizEdit.content.findIndex(el => el.id == editContent);\n                content = quizEdit.content[index];\n            }\n            if (!content) return;\n            setFilename(content.filename);\n            setFileType(content.fileType);\n            setUri(content.uri);\n            setQuestion(content.question);\n            setAnswers([...content.answers]);\n            setNewQuestion(true);\n        } else if (newQuestion) { // if the user wants to set a new question for quiz edition\n            return (<FormQuizContent\n                        lang={props.lang}\n                        setAnswers={setAnswers}\n                        setFileType={setFileType}\n                        setQuestion={setQuestion}\n                        setUri={setUri}\n                        setFilename={setFilename}\n                        setSuccess={setSuccess}\n                        setSound={setSound}\n                        setIsPlaying={setIsPlaying}\n                        pauseSound={pauseSound}\n                        uri={uri}\n                        filename={filename}\n                        answers={answers}\n                        fileType={fileType}\n                        question={question}\n                        success={success}\n                        sound={sound}\n                        isPlaying={isPlaying}\n                />);\n        } else if (edit && !newQuestion) {\n             // if the user want to see all the question for the quiz edition\n            return (quizEdit.content)?.concat(newContent)?.map((el, i) => {\n                return (<QuestionList\n                    index={i}\n                    key={i}\n                    id={quizEdit._id || 0}\n                    quizEdit={quizEdit}\n                    newContent={newContent}\n                    content={el}\n                    lang={props.lang}\n                    questionId={el.id || i}\n                    quizEdition={true}\n                    reload={props.reload}\n                    setReload={props.setReload}\n                    setEditedQuiz={setEditedQuiz}\n                    setEditContent={setEditContent}\n                    setQuizEdit={setQuizEdit}\n                    setNewContent={setNewContent}\n                />);\n            })\n        } else {\n             // if the user want to see all the existing quiz for the quiz edition\n            return (<ViewQuizList\n                quiz={props.quiz}\n                loading={props.loading}\n                lang={props.lang}\n                personId={props.personId}\n                setEdit={setEdit}\n                setQuizEdit={setQuizEdit}\n                setReload={props.setReload}\n            />);\n        }\n    };\n\n    const goBack = () => {\n\n        if (!success) setSuccess(false);\n\n        if ( (editedQuiz && !newQuestion) || newContent.length > 0) {\n            setModal(true);\n            return;\n        }\n\n        if (editContent) {\n            clearState();\n            setEditContent();\n            setNewQuestion(false);\n        } else if (newQuestion)\n            setNewQuestion(false);\n        else if (edit) {\n            setEditedQuiz(false);\n            setEdit(false);\n        } else\n            props.setTab(0);\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return saveContent();\n        } else if (newQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].AddContent;\n            else if (mode == 'disabled') return !(answers.length > 0 && question.length > 2);\n            else if (mode == 'onpress') return pushContent();\n        } else if (edit) {\n            // save the quiz button\n            if (mode == 'title') return QuizLang[props.lang].Save;\n            else if (mode == 'disabled') return !(editedQuiz);\n            else if (mode == 'onpress') return saveQuiz();\n        } else {\n            // create a quiz button\n            if (mode == 'title') return QuizLang[props.lang].Create;\n            else if (mode == 'disabled') false;\n            else if (mode == 'onpress') return props.setTab(4);\n        }\n    };\n\n    return (\n        <>\n            <View style={{ flexDirection: 'row' }}>\n\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => setModal(false)}\n                    ModalComponent={Modal}\n                >\n                    <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                    <View style={{ flexDirection: 'row' }}>\n                        <Button\n                            title={QuizLang[props.lang].Cancel}\n                            buttonStyle={{ backgroundColor: 'red' }}\n                            containerStyle={{ marginRight: 10 }}\n                            onPress={() => setModal(false)}\n                        />\n                        <Button\n                            title={QuizLang[props.lang].GoBack}\n                            buttonStyle={{ fontWeight: 'bold' }}\n                            onPress={() => {\n                                setEditedQuiz(false);\n                                setEditContent();\n                                setEdit(false);\n                                setNewContent([]);\n                                setModal(false);\n                            } }\n                        />\n                    </View>\n                </Overlay>\n\n\n                <Button\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={edit ? 'save-outline' : 'construct-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => {\n                        buttonTop('onpress')\n                    }}\n                    disabled={ buttonTop('disabled') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => goBack() }\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            <SafeAreaView style={styles.safeArea}>\n                {\n                    edit && !newQuestion && !editContent ?\n                    <Button\n                        title={QuizLang[props.lang].AddQuestion}\n                        icon={\n                            <Icon\n                                name={'add-circle-outline'}\n                                type={'ionicon'}\n                                color={'white'}\n                                size={15}\n                                style={{ marginHorizontal: 5 }}\n                            />\n                        }\n                        onPress={() => setNewQuestion(true) }\n                    /> : <></>\n                }\n                <ScrollView style={{marginBottom: 40}}>\n                { viewPage() }\n                </ScrollView>\n            </SafeAreaView>\n        </>\n    );\n}\n","import React, { useState } from 'react';\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    ScrollView,\n    SafeAreaView,\n    Modal,\n    Alert\n} from 'react-native';\nimport { Button, Icon, Divider, FAB, Overlay, Input } from 'react-native-elements';\n\nimport QuestionList from './QuestionList';\n\nimport FormQuizContent from './FormQuizContent';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\nimport { Audio } from 'expo-av';\n\nimport styles from '../styles';\n\nexport default function CreateQuiz(props) {\n    const [createQuestion, setCreateQuestion] = useState(false);\n    const [content, setContent] = useState([]);\n    const [name, setName] = useState('');\n    const [modal, setModal] = useState(false);\n    const [modalConfirmation, setModalConfirmation] = useState(false);\n\n    const [editContent, setEditContent] = useState();\n\n    // Related to the Create Content Component\n    const [uri, setUri] = useState();\n    const [filename, setFilename] = useState();\n    const [fileType, setFileType] = useState();\n    const [answers, setAnswers] = useState([]);\n    const [question, setQuestion] = useState();\n    const [success, setSuccess] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const createQuiz = () => {\n        API.create(props.personId, {\n            name: name.substring(0, 23),\n            content: content,\n            personId: props.personId\n        }).then(data => {\n            return Alert.alert(\n                QuizLang[props.lang].CreatedQuiz,\n                QuizLang[props.lang].QuizListRedirection,\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: () => {\n                            setModal(false);\n                            props.setTab(2);\n                        },\n                    }\n                ]\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    // Add a new question on the list\n    const pushContent = () => {\n        const newContent = {\n            uri: uri,\n            filename: filename,\n            answers: answers,\n            question: question,\n            fileType: fileType\n        };\n        // Clear the creation form\n        setFileType();\n        setUri();\n        setFilename();\n        setAnswers([]);\n        setQuestion();\n\n        setContent([...content, newContent]);\n        setSuccess(true);\n    };\n\n    // Save an existing question\n    const saveContent = () => {\n        content[editContent].fileType = fileType;\n        content[editContent].filename = filename;\n        content[editContent].uri = uri;\n        content[editContent].question = question;\n        content[editContent].answers = answers;\n        setContent([...content]);\n        setSuccess(true);\n    };\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        if (isPlaying) setIsPlaying(false);\n    };\n\n    const clearState = () => {\n        setAnswers([]);\n        setFileType();\n        setFilename();\n        setUri();\n        setQuestion();\n        setSuccess(false);\n    };\n\n    const printQuestionList = () => {\n        if (content.length === 0) {\n            return (<Text style={styles.nothingYet}>\n                {QuizLang[props.lang].NoQuestionYet}\n            </Text>);\n        } else {\n            return content?.map((el, i) => {\n                return (\n                    <QuestionList\n                        index={i}\n                        key={i}\n                        id={i}\n                        content={el}\n                        lang={props.lang}\n                        setContent={setContent}\n                        setEditContent={setEditContent}\n                        questionId={i}\n                        contentList={content}\n                    />\n                );\n            });\n        }\n    };\n\n    const buttonTop = (mode) => {\n        if (editContent !== undefined) {\n            // edit a question button\n            if (mode == 'title') return QuizLang[props.lang].SaveContent;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); return saveContent(); }\n        } else if (createQuestion) {\n            // add a question button\n            if (mode == 'title') return QuizLang[props.lang].OK;\n            else if (mode == 'disabled') return !(answers?.length > 0 && question.length > 2);\n            else if (mode == 'onpress') { pauseSound(); setModal(false); return pushContent(); }\n        } else {\n            if (mode == 'title') return QuizLang[props.lang].Complete;\n            else if (mode == 'disabled') return !(content.length > 0);\n            else if (mode == 'onpress') { return setModal(true);  }\n        }\n    };\n\n    const printPage = () => {\n        if (editContent !== undefined && !createQuestion) {\n            if (success) setSuccess(false);\n            setAnswers(content[editContent].answers);\n            setFileType(content[editContent].fileType);\n            setFilename(content[editContent].filename);\n            setUri(content[editContent].uri);\n            setQuestion(content[editContent].question);\n            setCreateQuestion(true);\n        }\n        if (createQuestion) { // if the user is creating a new question\n            return <FormQuizContent\n                /* Form to create a quiz */\n                lang={props.lang}\n                setAnswers={setAnswers}\n                setFileType={setFileType}\n                setQuestion={setQuestion}\n                setUri={setUri}\n                setFilename={setFilename}\n                setSuccess={setSuccess}\n                setSound={setSound}\n                setIsPlaying={setIsPlaying}\n                pauseSound={pauseSound}\n                uri={uri}\n                filename={filename}\n                answers={answers}\n                fileType={fileType}\n                question={question}\n                success={success}\n                sound={sound}\n                isPlaying={isPlaying}\n            />\n        } else {\n            return <SafeAreaView style={styles.safeArea}>\n                <Button\n                    title={QuizLang[props.lang].AddQuestion}\n                    icon={\n                        <Icon\n                            name={'add-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    onPress={() => setCreateQuestion(true)}\n                />\n                <ScrollView style={{marginBottom: 40}}>\n                    { props.loading ? (\n                        <ActivityIndicator\n                            color={'blue'}\n                            size={'small'}\n                            style={styles.loading}\n                        />\n                    ) : printQuestionList() }\n                </ScrollView>    \n            </SafeAreaView>\n        }\n    };\n\n    return (\n        <>\n            {/* Confirmation quiz creation (setting quiz name and complete creation) */}\n            <Overlay\n                visible={modal}\n                overlayStyle={styles.modal}\n                onBackdropPress={() => setModal(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={styles.modalTitle}>{QuizLang[props.lang].CompleteQuizTitleHeader}</Text>\n                <Text style={styles.modalDescription}>{QuizLang[props.lang].CompleteQuizTitle}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Input placeholder={QuizLang[props.lang].QuizTitle}\n                        containerStyle={styles.quizTitleInputContainer}\n                        inputStyle={styles.quizTitleInput}\n                        onChangeText={(e) => setName(e?.trim())}\n                    />\n                    <Button containerStyle={{ marginTop: 10, width: 40 }} title={{}} icon={\n                        <Icon\n                            name={'checkmark-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                        />\n                    } disabled={name?.length < 3 || name.length > 23 ? true : false} onPress={createQuiz} />\n                </View>\n            </Overlay>\n\n            {/* Confirmation give up quiz creation */}\n            <Overlay\n                visible={modalConfirmation}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => setModalConfirmation(false)}\n                ModalComponent={Modal}\n            >\n                <Text style={{marginBottom: 30, width: 250, textAlign: 'center'}}>{QuizLang[props.lang].SureCancelEdition}</Text>\n                <View style={{ flexDirection: 'row' }}>\n                    <Button\n                        title={QuizLang[props.lang].Cancel}\n                        buttonStyle={{ backgroundColor: 'red' }}\n                        containerStyle={{ marginRight: 10 }}\n                        onPress={() => setModalConfirmation(false)}\n                    />\n                    <Button\n                        title={QuizLang[props.lang].GoBack}\n                        buttonStyle={{ fontWeight: 'bold' }}\n                        onPress={() => {\n                            setModalConfirmation(false);\n                            props.setTab(2);\n                        } }\n                    />\n                </View>\n            </Overlay>\n\n            <View style={{ flexDirection: 'row' }}>\n                <Button\n                    /* Complete the quiz or question creation / edition */\n                    title={ buttonTop('title') }\n                    containerStyle={styles.createButton}\n                    icon={\n                        <Icon\n                            name={createQuestion ? 'save-outline' : 'checkmark-done-circle-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                    disabled={ buttonTop('disabled') }\n                    onPress={ () => buttonTop('onpress') }\n                />\n                <FAB\n                    color='red'\n                    style={{marginLeft: 20}}\n                    size=\"small\"\n                    icon={{name: 'caret-back-outline', type: 'ionicon', color:'white' }}\n                    onPress={() => {\n                        clearState();\n                        pauseSound();\n                        if (createQuestion)\n                            setCreateQuestion(!createQuestion);\n                        else if (content.length == 0) props.setTab(2);\n                        else setModalConfirmation(true)\n                    }}\n                />\n            </View>\n            <Divider\n                color={'grey'}\n                width={1}\n                style={{ width: 100 + '%', marginTop: 20 }}\n            />\n            { printPage() }\n        </>\n    );\n}\n","import React from 'react';\nimport { Text, Button, Icon, FAB } from 'react-native-elements';\n\nimport styles from '../styles';\nimport Lottie from '../../../utils/Lottie';\n\nimport ThinkingLottie from '../../../../assets/lottie/thinking.json';\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\n\nexport default function Menu(props) {\n    const ThinkingImage = require('../../../../assets/img/activities/quiz/thinking.gif');\n    return (\n    <>\n        { props.quizLength > 1 ? <FAB\n            style={{marginTop: 140, position: 'absolute', zIndex: 10}}\n            containerStyle={{marginLeft: 120}}\n            size=\"small\"\n            icon={{name: 'repeat-sharp', type: 'ionicon', color:'white' }}\n            onPress={() => props.pickRandomQuizz()}\n        /> : <></> }\n        <Lottie LottieSource={ThinkingLottie} ImageSource={ThinkingImage} LottieStyle={{marginTop: -25, height: 250, marginBottom: -30}} />\n        <Text style={styles.quizzTitle}>{QuizLang[props.lang].selectedQuizz(props.quiz.name)}</Text>\n        <Button\n            title={QuizLang[props.lang].Play}\n            containerStyle={styles.playButton}\n            onPress={() => props.setPlay(true)}\n            iconRight={true}\n            icon={\n                <Icon\n                    name={'caret-forward-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n        <Button\n            title={QuizLang[props.lang].Leave}\n            buttonStyle={{ backgroundColor: 'red' }}\n            containerStyle={styles.leaveButtonPlay}\n            onPress={() => props.setTab(0)}\n            icon={\n                <Icon\n                    name={'caret-back-outline'}\n                    type={'ionicon'}\n                    color={'white'}\n                    size={15}\n                    style={{ marginHorizontal: 5 }}\n                />\n            }\n        />\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, Alert, View, Modal } from 'react-native';\nimport { Text, Image, Input, Button, Icon, Overlay } from 'react-native-elements';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../../assets/img/activities/sad.gif';\n\nimport styles from '../styles';\n\nimport { shuffle } from '../utils/gameFunc';\n\nimport { lang as QuizLang } from '../../../../language/activities/quiz';\nimport * as API from '../../../../data/quizApi';\n\nimport Lottie from '../../../utils/Lottie';\nimport { Audio } from 'expo-av';\n\nexport default function Game(props) {\n    const [game, setGame] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [current, setCurrent] = useState(0);\n    const [answer, setAnswer] = useState();\n    const [modal, setModal] = useState(false);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n\n    const [success, setSuccess] = useState(0);\n    const [fail, setFail] = useState(0);\n    const [confetti, setConfetti] = useState(false);\n\n    useEffect( () => {\n        setGame(shuffle(props.quiz));\n        setLoading(false);\n    }, []);\n\n    const TrophyLottie = require('../../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../../assets/lottie/sad.json');\n\n\n    const pauseSound = async () => {\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus.isLoaded)\n            await sound.pauseAsync();\n        setIsPlaying(false);\n    };\n\n    const stopSound = async () => {\n        await pauseSound();\n        setSound(new Audio.Sound());\n        await sound?.unloadAsync();\n    }\n\n    const playSound = async () => {\n        setIsPlaying(true);\n        await Audio.setAudioModeAsync({\n            staysActiveInBackground: true,\n            shouldDuckAndroid: true,\n        });\n        const getSoundStatus = await sound?.getStatusAsync();\n        if (getSoundStatus?.isLoaded === false) {\n            await sound.loadAsync({ uri: game[current].uri });\n            setSound(sound);\n        }\n        await sound.playAsync();\n        sound.setOnPlaybackStatusUpdate(async (playbackStatus) => {\n            if (playbackStatus.didJustFinish) {\n                await sound.unloadAsync();\n                setIsPlaying(false);\n            }\n        });\n    };\n\n    const setMediaType = () => {\n        if (!game[current]) return;\n        switch (game[current].fileType) {\n            case 'image':\n                return <Image source={ {uri: game[current].uri } } style={styles.topMediaQuestion}  />\n            case 'audio':\n                return <Icon onPress={() => isPlaying ? pauseSound() : playSound() } raised size={50} name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"} color={'#246364'} type={\"ionicon\"} containerStyle={{marginBottom: 30}} />\n            default:\n                return <></>;\n        }\n    };\n\n    const openAlertResultQuestion = (result) => {\n        return (\n            Alert.alert(\n                result ? QuizLang[props.lang].SuccessTitle : QuizLang[props.lang].FailedTitle,\n                result ? QuizLang[props.lang].Success : QuizLang[props.lang].Failed(game[current].answers),\n                [\n                    {\n                        text: QuizLang[props.lang].OK,\n                        onPress: async () => {\n                            if (current + 1 <= game.length - 1)\n                                setCurrent(current + 1);\n                            else {\n                                const path = success >= fail ? require(`../../../../assets/sound/global/applause.mp3`) : require(`../../../../assets/sound/global/you_lose.mp3`);\n                                if (success >= fail) setConfetti(true);\n                                const { sound } = await Audio.Sound.createAsync(path);\n                                setSound(sound);\n                                sound.playAsync();\n                                setModal(true);\n                            }\n                        },\n                    }\n                ]\n            )\n        )\n    };\n\n    const answerQuestion = async () => {\n        const answerTrimedLowercase = answer?.trim()?.toLowerCase();\n        stopSound();\n        setAnswer('');\n        const result = game[current].answers.includes(answerTrimedLowercase);\n        if (result === false) {\n            // increment the fail and update the API\n            setFail(fail + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, false);\n        } else {\n            // increment the success and update the API\n            setSuccess(success + 1);\n            await API.updateScore(props.personId, props.quizId, game[current].id, true)\n        }\n        openAlertResultQuestion(result);\n    };\n\n    return (\n    <>\n        {loading ?\n            <ActivityIndicator size={'large'} style={{marginTop: 30}} color={'blue'} />\n               :\n            <>\n                {confetti && success >= fail ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n                )}\n                <Overlay\n                    visible={modal}\n                    overlayStyle={styles.overlay}\n                    onBackdropPress={() => props.setTab(0)}\n                    ModalComponent={Modal}\n                >\n                    {success >= fail ? \n                        <>\n                            <Lottie LottieSource={TrophyLottie} ImageSource={TrophyImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} loop={false} />\n                            <Text style={{color:'blue', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].SuccessQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].SuccessQuiz(fail, success)}</Text>\n                        </>\n                    :\n                        <>\n                            <Lottie LottieSource={SadLottie} ImageSource={SadImage} LottieStyle={{marginTop: -50, height: 120, marginBottom: -30}} />\n                            <Text style={{color:'red', textAlign: 'center', fontSize: 23, fontWeight: 'bold'}}>{QuizLang[props.lang].FailQuizTitle}</Text>\n                            <Text style={{textAlign: 'center', marginTop: 30, fontSize: 18}}>{QuizLang[props.lang].FailQuiz(fail, success)}</Text>\n                        </>\n                    }\n                    <Button title={QuizLang[props.lang].Leave} onPress={() => props.setTab(0)} containerStyle={styles.leaveButton} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </Overlay>\n                { setMediaType() }\n                <Text style={styles.gameQuestion}>{game[current].question}</Text>\n                <View style={styles.flexQuizGame}>\n                    <Input style={styles.inputQuizGame} onChangeText={(e) => { setAnswer(e); }} value={answer} />\n                    <Button buttonStyle={styles.buttonQuizGameOK} title={QuizLang[props.lang].OK} onPress={() => { answerQuestion() }} />\n                </View>\n            </>\n        }\n    </>);\n};","export const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};","import React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport styles from '../styles';\n\nimport Menu from './Menu';\nimport Game from './Game';\n\n// This component is mounted when the user clicks on 'Play' in the main quiz menu\nexport default function Play(props) {\n    const [play, setPlay] = useState(false);\n\n    return (\n    <View style={styles.view}>\n        { play ?\n            <Game \n                lang={props.lang}\n                quizId={props.quiz._id}\n                personId={props.personId}\n                quiz={props.quiz.content}\n                setTab={props.setTab}\n                setPlay={setPlay}\n            />\n            :\n            <Menu\n                lang={props.lang}\n                pickRandomQuizz={props.pickRandomQuizz}\n                quiz={props.quiz}\n                setTab={props.setTab}\n                setPlay={setPlay}\n                quizLength={props.quizLength}\n            />\n        }\n    </View>);\n};","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={QuizLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{QuizLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Rules()}</Text>\n\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {QuizLang[props.lang].CustomHead}\n                </Text>\n                <Text style={styles.helpStep}>{QuizLang[props.lang].Custom()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, BackHandler, Alert } from 'react-native';\nimport { Text } from 'react-native-elements';\n\nimport Menu from './Menu';\nimport { randomNumber, randomArrayElement } from '../../../utils/helpers';\n\n// Child components\nimport ViewQuiz from './ViewQuiz';\nimport CreateQuiz from './Creation/CreateQuiz';\nimport Play from './Play';\nimport Help from './Help';\n\nimport * as API from '../../../data/quizApi';\nimport { lang as QuizLang } from '../../../language/activities/quiz';\n\nimport styles from './styles';\n\nexport default function Quiz(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [tab, setTab] = useState(0);\n    const [quiz, setQuiz] = useState([]);\n    const [random, setRandom] = useState(0);\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        // API.reset();\n\n        API.get(props.personId).then((data) => {\n            if (data.length > 0) {\n                setQuiz(data);\n                setRandom(randomNumber(0, quiz.length - 1));\n            }\n            setIsLoading(false);\n        });\n\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1) {\n                    Alert.alert(\n                        QuizLang[props.lang].GiveUpQuizTitle,\n                        QuizLang[props.lang].GiveUpQuiz,\n                        [\n                            {\n                                text: QuizLang[props.lang].Leave,\n                                onPress: () => { null },\n                                style: 'cancel'\n                            },\n                            {\n                                text: QuizLang[props.lang].OK,\n                                onPress: () => {\n                                    setTab(0);\n                                }\n                            },\n                        ]\n                    )\n                }\n                else setTab(0);\n            } else {\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, reload]);\n\n    const pickRandomQuizz = () => {\n        if (quiz.length > 0) {\n            let rand = randomArrayElement(random, 0, quiz.length - 1);\n            setRandom(rand);\n        }\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    isLoading={isLoading}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                quiz={quiz[random]}\n                quizLength={quiz.length}\n                lang={props.lang}\n                personId={props.personId}\n                setTab={setTab}\n                pickRandomQuizz={pickRandomQuizz}\n            />;\n        } else if (tab === 2) {\n            return (\n                <ViewQuiz\n                    loading={isLoading}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    quiz={quiz}\n                    personId={props.personId}\n                    reload={reload}\n                    setReload={setReload}\n                />\n            );\n        } else if (tab === 3) {\n            return <Help lang={props.lang} setTab={setTab} />;\n        } else if (tab === 4) {\n            return (\n                <CreateQuiz\n                    personId={props.personId}\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    setReload={setReload}\n                />\n            );\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return <View style={styles.view}>{printPage()}</View>;\n}\n","import { Text } from 'react-native';\n\nconst applyBoldStyle = (text) => {\n    let numberOfItemsAdded = 0;\n    const result = text.sentence.split(/\\{\\d+\\}/);\n    text.boldText.forEach((boldText, i) =>\n        result.splice(\n            ++numberOfItemsAdded + i,\n            0,\n            <Text key={i} style={{ fontWeight: 'bold', color: '#3B8EFF' }}>\n                {boldText}\n            </Text>\n        )\n    );\n    return <Text>{result}</Text>;\n};\n\nexport const lang = {\n    fr: {\n        Play: 'Jouer',\n        Help: 'Comment ça marche',\n        Leave: 'Retour',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Essai${tries > 1 ? 's' : ''} restant${tries > 1 ? 's' : ''}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Score actuel: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Commencer \",\n        GiveUp: \"Abandonner\",\n        Reinit: \"Nouveau modèle\",\n        TitleGiveUp: \"Abandonner la partie\",\n        SureToGiveUp: \"Êtes-vous sûr(e) de vouloir abandonner la partie? Votre score sera enregistré.\",\n        Congratulations: 'Félicitations !!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'Vous venez de battre votre record du jour : {0} !',\n                boldText: [score],\n            });\n        },\n        SoBad: 'Dommage...',\n        ScoreNotBeated: \"Votre score du jour n'a pas été battu... Mais vous pouvez toujours recommencer !\",\n        Retry: \"Recommencer\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Meilleur score du jour: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'Le jeu des pairs, comment ça marche ?',\n        RulesHead: \"Les règles\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `Le jeu des pairs est assez connu et classique. Lorsque vous commencerez la partie, vous aurez un {0}. Cliquez alors sur le bouton \"{1}\" sur le bas de l’écran pour retourner les cartes face verso.\\n\\nVous devrez alors {2}. Par exemple, si vous cliquez sur une carte rouge, vous devrez cliquer sur l’autre carte rouge ensuite.\\n\\nPlus vous grimpez dans le score, plus le nombre de paires s’ajoutent au schéma. Il peut y avoir jusqu’à {3} au total.`,\n                boldText: [\"schéma de plusieurs paires de cartes face recto\", \"Commencer\", \"retourner les paires l'une après l’autre\", \"6 paires\"],\n            });\n        },\n        ScoreHead: \"Le score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `A chaque fois qu’un schéma est complété (c'est-à-dire que toutes les cartes ont été retournées), {0} et passez à un schéma suivant, {1}.\\n\\nLes points peuvent vous servir à avoir un joli score, mais aussi à recréer un nouveau schéma si vous l’avez complètement oublié. A chaque re-création d’un schéma, {2}. Et vous ne pouvez pas recréer un schéma s’il ne vous reste {3}.`,\n                boldText: [\"vous gagnez un point\", \"potentiellement plus difficile\", \"vous perdez un point\", \"qu’un essai pour le schéma actuel\"],\n            });\n        },\n    },\n    en: {\n        Play: 'Play',\n        Help: 'How does it work',\n        Leave: 'Back',\n        RemaningTries: (tries) => {\n            return applyBoldStyle({\n                sentence: `Remaning tr${tries > 1 ? 'ies' : 'y'}: {0}`,\n                boldText: [tries],\n            });\n        },\n        Score: (score) => {\n            return applyBoldStyle({\n                sentence: `Actual score: {0}`,\n                boldText: [score],\n            });\n        },\n        Start: \"Start \",\n        GiveUp: \"Give up\",\n        Reinit: \"New model\",\n        TitleGiveUp: \"Give up the game\",\n        SureToGiveUp: \"Are you sure to give up this party? Your score will be saved.\",\n        Congratulations: 'Congratulations!!',\n        BestScoreToday: (score) => {\n            return applyBoldStyle({\n                sentence: 'You did your day best score : {0}!',\n                boldText: [score],\n            });\n        },\n        SoBad: 'So sad...',\n        ScoreNotBeated: 'Your daily score has not been beaten... But you can retry!',\n        Retry: \"Retry\",\n        BestDayScore: (score) => {\n            return applyBoldStyle({\n                sentence: 'Best score made today: {0}',\n                boldText: [score],\n            });\n        },\n\n        // Help page related\n        Head: 'The double memory, how does it works?',\n        RulesHead: \"The rules\",\n        Rules: () => {\n            return applyBoldStyle({\n                sentence: `The game of peers (or double memory) is quite familiar and classic. When you start the game, you will have a {0}. Then click on the \"{1}\" button at the bottom of the screen to turn the cards face up.\\n\\nFor example, if you click on a red card, you will have to click on the other red card next.\\n\\nThere can be up to {3} in total.`,\n                boldText: [\"pattern of several pairs of cards face up\", \"Start\", \"turn over the pairs one after the other\", \"6 pairs\"],\n            });\n        },\n        ScoreHead: \"The score\",\n        ScoreHelp: () => {\n            return applyBoldStyle({\n                sentence: `Each time a pattern is completed (i.e., all the cards have been turned over), {0} and move on to the next pattern, {1}.\\n\\nThe points can be used to get a nice score, but they can also be used to recreate a new pattern if you've completely forgotten about it. Each time you re-create a pattern, {2}. And you can't recreate a pattern if you don't have {3} left.`,\n                boldText: [\"you earn a point\", \"potentially more challenging\", \"you lose a point\", \"than a try for the current pattern\"],\n            });\n        },\n    },\n};\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    view: {\n        height: hp('100%'),\n        paddingBottom: 40,\n        flex: 1\n    },\n    logo: {\n        width: 120,\n        height: undefined,\n        marginVertical: 20,\n        opacity: 0.8,\n        marginBottom: 40,\n        resizeMode: \"center\",\n        aspectRatio: 1\n    },\n    button: {\n        width: 235,\n        marginBottom: 25,\n        borderRadius: 10,\n        marginHorizontal: 5,\n    },\n    leaveButton: {\n        width: 235,\n        marginTop: 40,\n        backgroundColor: 'red',\n        borderRadius: 10,\n        marginHorizontal: 5,\n        marginBottom: 20\n    },\n    RectoCard: {\n        width: wp('21%'),\n        height: 0,\n        backgroundColor: '#C3C3CF',\n        borderRadius: 20,\n        borderColor: '#858593',\n        borderWidth: 1,\n        aspectRatio: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    PlayingCard: {\n        width: wp('21%'),\n        height: 0,\n        borderRadius: 20,\n        aspectRatio: 1,\n        borderColor: '#68FF5C',\n        borderWidth: 1,\n        opacity: .8,\n        marginHorizontal: 5,\n        marginVertical: 5\n    },\n    VersoCard: {\n        width: wp('21%'),\n        height: 0,\n        borderRadius: 20,\n        opacity: .8,\n        marginHorizontal: 5,\n        aspectRatio: 1,\n        marginVertical: 5\n    },\n    IconCard: {\n        marginTop: 23\n    },\n    viewGame: {\n        marginTop: 10,\n        width: wp('95%'),\n        height: hp('55%'),\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    buttonViewPlay: {\n        flexDirection: 'row',\n        width: wp('100%'),\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: 10\n    },\n    playButtons: {\n        alignContent: 'center',\n        textAlign: 'center',\n        paddingHorizontal: 30,\n        borderRadius: 10,\n        marginHorizontal: 5\n    },\n    overlay: {\n        borderRadius: 20,\n        paddingHorizontal: 45,\n        paddingVertical: 30,\n        alignItems: 'center',\n    },\n    headerOverlay: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    textOverlay: {\n        width: 190,\n        fontSize: 18,\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n\n\n    /// Help page related\n    viewHelpPage: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        paddingTop: 20,\n        width: wp('100%'),\n        paddingBottom: 20\n    },\n    leaveButtonHelpPage: {\n        width: 235,\n        backgroundColor: 'red',\n        alignSelf: 'center',\n        borderRadius: 10,\n        marginTop: 20,\n        marginHorizontal: 5,\n    },\n    helpHead: {\n        marginVertical: 25,\n        width: 250,\n        fontWeight: 'bold',\n        fontSize: 25,\n        textAlign: 'center',\n        color: '#4954FF',\n        alignSelf: 'center'\n    },\n    helpStepHead: {\n        marginBottom: 10,\n        fontWeight: 'bold',\n        fontSize: 20,\n        textAlign: 'left',\n        alignSelf: 'flex-start',\n        marginLeft: 20,\n        color: '#1C2068',\n        textTransform: 'uppercase'\n    },\n    helpStep: {\n        marginHorizontal: 25,\n        marginBottom: 40,\n        width: 290,\n    },\n    helpQuestionMark: {\n        position: 'absolute',\n        width: 450,\n        opacity: .3,\n        zIndex: -1\n    },\n});\n","import React from 'react';\nimport { ScrollView, SafeAreaView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport QuestionMark from '../../../assets/img/activities/help/question_mark.gif';\n\nimport Lottie from '../../utils/Lottie';\nimport styles from './styles';\n\nexport default function Help(props) {\n    const LottieSource = require('../../../assets/lottie/question_mark.json');\n    return (\n        <SafeAreaView style={styles.viewHelpPage}>\n            <ScrollView style={{width: 100+'%'}}>\n                <Button\n                    title={DoubleLang[props.lang].Leave}\n                    buttonStyle={{ backgroundColor: 'red' }}\n                    containerStyle={styles.leaveButtonHelpPage}\n                    raised\n                    onPress={() => props.setTab(0)}\n                    icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    }\n                />\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={QuestionMark}\n                    LottieStyle={styles.helpQuestionMark}\n                    ImageStyle={styles.helpQuestionMark}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.helpHead}>{DoubleLang[props.lang].Head}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].RulesHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].Rules()}</Text>\n\n                <Text style={styles.helpStepHead}>\n                    <Icon\n                        name={'school-outline'}\n                        type={'ionicon'}\n                        color={'black'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                    {DoubleLang[props.lang].ScoreHead}\n                </Text>\n                <Text style={styles.helpStep}>{DoubleLang[props.lang].ScoreHelp()}</Text>\n\n\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n","import React from 'react';\nimport { Image, View } from 'react-native';\nimport { Button, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport DoubleLogo from '../../../assets/img/activities/double/logo.png';\n\nimport styles from './styles';\n\nexport default function Menu(props) {\n    return (\n        <>\n            <Image source={DoubleLogo} style={styles.logo} resizeMode={'cover'} />\n\n            <Button\n                title={DoubleLang[props.lang].Play}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(1)}\n                icon={\n                    <Icon\n                        name={'play-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <Button\n                title={DoubleLang[props.lang].Help}\n                containerStyle={styles.button}\n                onPress={() => props.setTab(2)}\n                icon={\n                    <Icon\n                        name={'information-circle-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n\n            <View>\n\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: -50,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                        type: 'ionicon',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.ambiantSoundPlay() }\n            />\n            <FAB\n                color='#2089dc'\n                style={{\n                    position: 'absolute',\n                    marginLeft: 20,\n                    marginTop: -12\n                }}\n                size=\"small\"\n                icon={\n                    {\n                        name: props.soundEnabled ? 'sound' : 'sound-mute',\n                        type: 'entypo',\n                        color:'white',\n                        size: 15,\n                        style: {marginTop: 4}\n                    }\n                }\n                onPress={() => props.setSoundEnabled(prev => !prev) }\n            />\n            </View>\n\n            <Button\n                title={DoubleLang[props.lang].Leave}\n                buttonStyle={{ backgroundColor: 'red' }}\n                containerStyle={styles.leaveButton}\n                onPress={() => {\n                    props.ambiant.unloadAsync();\n                    props.setPage(null);\n                }}\n                icon={\n                    <Icon\n                        name={'caret-back-outline'}\n                        type={'ionicon'}\n                        color={'white'}\n                        size={15}\n                        style={{ marginHorizontal: 5 }}\n                    />\n                }\n            />\n        </>\n    );\n}","const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n};\n\nexport const generateRandomPair = (length) => {\n    const colors = [\n        '#791414',\n        '#143479',\n        '#791462',\n        '#147920',\n        '#797714',\n        '#14AB9D'\n    ];\n    const icons = [\n        'airplane',\n        'boat',\n        'bulb',\n        'color-palette',\n        'earth',\n        'gift',\n        'happy',\n        'heart-circle',\n        'restaurant',\n        'ribbon'\n    ]\n    var arr = [];\n    for (let i = 0; i < length / 2; i++) {\n        var indexColor = Math.floor(Math.random() * colors.length);\n        var indexIcon = Math.floor(Math.random() * icons.length);\n        arr.push({ color: colors[indexColor], icon: icons[indexIcon] }, { color: colors[indexColor], icon: icons[indexIcon] });\n        colors.splice(indexColor, 1);\n        icons.splice(indexIcon, 1);\n    }\n    arr = shuffle(arr);\n    for (let i = 0; i < arr.length; i++) {\n        const el = arr[i];\n        el.idx = i\n    }\n\n    return (arr);\n};","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements';\n\nimport styles from '../styles';\n\nexport default function Card(props) {\n    var cardStyles;\n    if (props.inPlay) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.PlayingCard]];\n    else if (props.inFound || props.show) cardStyles = [{backgroundColor: props.backgroundColor}, [styles.VersoCard]];\n    else cardStyles = styles.RectoCard\n\n    const icon = !props.inFound && !props.inPlay && !props.show ? 'help-circle-outline' : props.icon;\n\n    return (\n        <>\n            <TouchableOpacity style={ cardStyles } onPress={() => {\n                if (!props.inPlay && !props.inFound) props.ReturnCard(props.index);\n            }}>\n                <Icon\n                    name={icon}\n                    size={props.inFound || props.show || props.inPlay ? 30 : 24}\n                    color={props.inFound || props.show || props.inPlay ? 'white' : 'grey'}\n                    type=\"ionicon\"\n                    style={styles.IconCard}\n                />\n            </TouchableOpacity>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { View, Text, Modal } from 'react-native';\n\nimport { Button, Overlay, Icon, FAB } from 'react-native-elements';\n\nimport { lang as DoubleLang } from '../../../language/activities/double';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\nimport TrophyImage from '../../../assets/img/activities/trophy.gif';\nimport SadImage from '../../../assets/img/activities/sad.gif';\n\nimport Lottie from '../../utils/Lottie';\n\nimport styles from './styles';\n\nimport { generateRandomPair } from './subs/helpers';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nimport Card from './subs/Card';\n\nexport default function Play(props) {\n    const [game, setGame] = useState([...generateRandomPair(4)]); // the current map game\n    const [found, setFound] = useState([]);\n    const [tries, setTries] = useState(3);\n    const [play, setPlay] = useState([]); // the current play of the player, an array with two values max, corresponding to the cards the player played\n    const [show, setShow] = useState(true);\n    const [confetti, setConfetti] = useState(false);\n    const [pause, setPause] = useState(false);\n\n    const TrophyLottie = require('../../../assets/lottie/trophy.json');\n    const SadLottie = require('../../../assets/lottie/sad.json');\n\n    const setLengthGame = () => {\n        if (props.score <= 8)\n            return 4;\n        else if (props.score <= 15)\n            return 6;\n        else if (props.score <= 30)\n            return 8;\n        else if (props.score <= 45)\n            return 10;\n        else\n            return 12;\n    }\n\n    // Exemple game element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null },\n            { idx: 2, color: '#ffffff', icon: null },\n            { idx: 3, color: '#ferdnc', icon: null }\n        ]\n    */\n\n        // each play, we push the current card to the play state, and check if the first element exists in the\n        // game state, and if the second element is the same as the first one, if so => success for a round, and push\n        // this pair in the found state. If fail => clear the play && found states\n\n    // Exemple play element:\n    /*\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 2, color: '#ffffff', icon: null }\n        ] // this is a successful array\n\n        [\n            { idx: 0, color: '#ffffff', icon: null },\n            { idx: 1, color: '#ferdnc', icon: null }\n        ] // this is a fail array\n    */\n\n    const failOverlay = () => {\n        if (props.modal == false) return;\n        return (\n            <>\n                <Lottie\n                    LottieSource={SadLottie}\n                    ImageSource={SadImage}\n                    autoplay={true}\n                    loop={true}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].SoBad}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].ScoreNotBeated}\n                </Text>\n            </>\n        );\n    };\n\n    const successOverlay = () => {\n        if (!confetti) setConfetti(true);\n        return (\n            <>\n                <Text style={styles.headerOverlay}>\n                    {DoubleLang[props.lang].Congratulations}\n                </Text>\n                <Text style={styles.textOverlay}>\n                    {DoubleLang[props.lang].BestScoreToday(props.bestScoreDay)}\n                </Text>\n                <Lottie\n                    LottieSource={TrophyLottie}\n                    ImageSource={TrophyImage}\n                    autoplay={true}\n                    loop={false}\n                    LottieStyle={{ height: 60 }}\n                    ImageStyle={{ height: 60 }}\n                />\n            </>\n        );\n    };\n    \n    const newModel = () => {\n        if (props.score == 0) return;\n        const currentGameLength = game.length;\n        props.setScore(prevScore => prevScore - 1);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(currentGameLength)]);\n    };\n\n    const printButton = () => {\n        return (\n            <View style={styles.buttonViewPlay}>\n                <Button title={show ? DoubleLang[props.lang].Start : DoubleLang[props.lang].Reinit} onPress={() => { if (show) setShow(false); else newModel(); }} buttonStyle={[styles.playButtons, {backgroundColor: show ? '#208bdc' : 'green'}]} icon={\n                    <Icon\n                    name={show ? \"play\" : ''}\n                    size={18}\n                    color=\"white\"\n                    type=\"ionicon\"\n                />\n                } iconRight={true} disabled={!show && props.score === 0 || tries <= 1} />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.ambiantEnabled ? 'volume-high-outline' : 'volume-mute-outline',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.ambiantSoundPlay() }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='#2089dc'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: props.soundEnabled ? 'sound' : 'sound-mute',\n                            type: 'entypo',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.setSoundEnabled(prev => !prev) }\n                    style={{marginHorizontal: 5}}\n                />\n                <FAB\n                    color='red'\n                    size=\"small\"\n                    icon={\n                        {\n                            name: 'caret-back',\n                            type: 'ionicon',\n                            color:'white',\n                            size: 15,\n                            style: {marginTop: 4}\n                        }\n                    }\n                    onPress={() => props.giveUp() }\n                    style={{marginHorizontal: 5}}\n                />\n            </View>);\n    };\n    \n    const ReturnCard = (key) => {\n        if (pause || show) return;\n        const currentPlay = play;\n        const indexGame = game[key];\n        const playing = [...currentPlay, indexGame];\n        if (playing.length == 2) {\n            // check if same card or return all and lose a try\n            if (playing[0].color === playing[1].color && playing[0].icon === playing[1].icon) {\n                const currentGameLength = game.length;\n                const nFound = [...found, playing[0], playing[1]];\n                if (nFound.length == currentGameLength) {\n                    props.playSound('next');\n                    props.setScore(prevScore => prevScore + 1);\n                    setShow(true);\n                    setTries(3);\n                    setGame([...generateRandomPair(setLengthGame())]);\n                    setFound([]);\n                } else {\n                    props.playSound('success');\n                    setFound(nFound);\n                }\n                setPlay([]);\n            } else {\n                setPlay(playing);\n                props.playSound('fail');\n                setPause(true);\n                setTimeout(() => {\n                    if (tries != 0) setTries(prevTries => prevTries - 1);\n                    if (tries === 0)\n                        props.endGame();\n                    else {\n                        setPlay([]);\n                        setFound([]);\n                    }\n                    setPause(false);\n                }, 1000);\n            }\n        } else {\n            setPlay(playing);\n            props.playSound('play');\n        }\n    };\n\n    const printCards = () => {\n        return game.map( (el, i) => {\n            var inFound = false;\n            var inPlay = false;\n            if (found.find(element => element.idx === i )) inFound = true;\n            else if (play.find(element => element.idx === i )) inPlay = true;\n            return (<Card show={show} key={i} index={i} inFound={inFound} inPlay={inPlay} backgroundColor={el.color} icon={el.icon} ReturnCard={ReturnCard} />);\n        });\n    };\n\n    const newGame = () => {\n        if (confetti) setConfetti(false);\n        props.setModal(false);\n        setShow(true);\n        setTries(3);\n        setFound([]);\n        setPlay([]);\n        setGame([...generateRandomPair(4)]);\n    };\n\n    return (\n        <>\n            {confetti ? (\n                    <ConfettiCannon\n                        fadeOut={true}\n                        autoStart={true}\n                        fallSpeed={6000}\n                        count={50}\n                        origin={{ x: -20, y: -35 }}\n                    />\n                ) : (\n                    <></>\n            )}\n            <Overlay\n                visible={props.modal}\n                overlayStyle={styles.overlay}\n                onBackdropPress={() => props.setModal(false)}\n                ModalComponent={Modal}\n            >\n                { props.success && props.modal ? successOverlay() : failOverlay() }\n                <View style={{flexDirection: 'row', marginTop: 20}}>\n                    <Button title={DoubleLang[props.lang].Retry} onPress={() => newGame()} buttonStyle={{marginRight: 10}} icon={\n                        <Icon\n                            name={'play-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n\n                    <Button title={DoubleLang[props.lang].Leave} onPress={() => { \n                        if (confetti) setConfetti(false);\n                        props.setModal(false);\n                        props.setTab(0);\n                    }} buttonStyle={{backgroundColor: 'red'}} icon={\n                        <Icon\n                            name={'caret-back-outline'}\n                            type={'ionicon'}\n                            color={'white'}\n                            size={15}\n                            style={{ marginHorizontal: 5 }}\n                        />\n                    } />\n                </View>\n            </Overlay>\n            <View style={styles.viewGame}>\n                { printCards() }\n            </View>\n            <View style={{alignItems: 'center', width: wp('100%'), marginTop: -10}}>\n                <Text>{DoubleLang[props.lang].Score(props.score)}</Text>\n                <Text>{DoubleLang[props.lang].BestDayScore(props.bestScoreDay)}</Text>\n                <Text>{DoubleLang[props.lang].RemaningTries(tries)}</Text>\n                { printButton() }\n            </View>\n        </>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport {\n    Text,\n    BackHandler,\n    ScrollView,\n    Alert\n} from 'react-native';\n\nimport { Audio } from 'expo-av';\nimport { lang as DoubleLang } from '../../../language/activities/double';\n\nimport styles from './styles';\n\nimport * as API from '../../../data/doubleApi';\n\nimport Help from './Help';\nimport Menu from './Menu';\nimport Play from './Play';\n\nconst currentDate = new Date().toLocaleDateString('fr-FR');\n\nexport default function Double(props) {\n    const [tab, setTab] = useState(0);\n    const [score, setScore] = useState(0);\n    const [bestScoreDay, setBestScoreDay] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [sound, setSound] = useState(new Audio.Sound());\n    const [ambiant, setAmbiant] = useState(new Audio.Sound());\n    const [success, setSuccess] = useState(false);\n    const [soundEnabled, setSoundEnabled] = useState(true);\n    const [ambiantEnabled, setAmbiantEnabled] = useState(true);\n\n    useEffect( async () => {\n        // API.clear();\n\n        const { sound } = await Audio.Sound.createAsync(\n            // Ambiant music produced by MCOCHET - check his soundcloud here: https://soundcloud.com/mcochet\n            require(`../../../assets/sound/double/ambiant.mp3`),\n            {\n                isLooping: true\n            }\n        );\n        setAmbiant(sound);\n        sound.playAsync();\n\n        API.getScoreDay(props.personId, currentDate).then((data) => {\n            if (data.length > 0) setBestScoreDay(data[0].score);\n        });\n\n        API.getBestScore(props.personId).then((data) => {\n            if (data.length > 0) setBestScore(data[0].score);\n        });\n\n    }, []);\n\n    useEffect(() => {\n        // BackHandler managment\n        const backAction = () => {\n            if (tab > 0) {\n                if (tab === 1 && score > 0) {  \n                    giveUp()\n                    return ;\n                }\n                setTab(0);\n            } else {\n                ambiant.unloadAsync();\n                props.setPage(null);\n            }\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => {\n            backHandler.remove();\n        };\n    }, [tab, ambiant]);\n\n    const endGame = async () => {\n        setModal(true);\n        let bestDayScore = false;\n        let bestScore = false;\n        if (score > bestScoreDay) { \n            playSound('applause');\n            setSuccess(true);\n            setBestScoreDay(score);\n            bestDayScore = true;\n            if (score > bestScore) {\n                bestScore = true;\n                setBestScore(score);\n            }\n        } else {\n            playSound('lose');\n            setSuccess(false);\n        }\n        await API.insertScore(props.personId, score, currentDate, bestDayScore, bestScore);\n        setScore(0);\n    };\n\n    const ambiantSoundPlay = () => {\n        if (ambiantEnabled) ambiant.pauseAsync();\n        else ambiant.playAsync();\n        setAmbiantEnabled(prevEnable => !prevEnable);\n    };\n    \n    const giveUp = () => {\n        if (score === 0) setTab(0);\n        else return Alert.alert(\n            DoubleLang[props.lang].TitleGiveUp,\n            DoubleLang[props.lang].SureToGiveUp,\n            [\n                {\n                    text: DoubleLang[props.lang].Leave,\n                    onPress: () => { null },\n                    style: 'cancel'\n                },\n                {\n                    text: DoubleLang[props.lang].GiveUp,\n                    onPress: () => {\n                        endGame();\n                    }\n                },\n            ]\n        )\n    };\n\n    const playSound = async (type) => {\n        if (!soundEnabled && !['applause', 'lose'].includes(type)) return;\n        if (sound) sound?.unloadAsync();\n        let choosenSound;\n        switch (type) {\n            case \"success\":\n                choosenSound = require(`../../../assets/sound/double/success.mp3`);\n                break;\n            case \"fail\":\n                choosenSound = require(`../../../assets/sound/double/fail.mp3`);\n                break;\n            case \"play\":\n                choosenSound = require(`../../../assets/sound/double/play.mp3`);\n                break;\n            case \"next\":\n                choosenSound = require(`../../../assets/sound/double/next.mp3`);\n                break;\n            case \"applause\":\n                choosenSound = require(`../../../assets/sound/global/applause.mp3`);\n                break;\n            case \"lose\":\n                choosenSound = require(`../../../assets/sound/global/you_lose.mp3`);\n                break;\n            default:\n                break;\n        }\n        const { sound } = await Audio.Sound.createAsync(choosenSound);\n        setSound(sound);\n        sound.playAsync();\n    };\n\n    const printPage = () => {\n        if (tab === 0) {\n            return (\n                <Menu\n                    setTab={setTab}\n                    lang={props.lang}\n                    setPage={props.setPage}\n                    ambiant={ambiant}\n                    setSoundEnabled={setSoundEnabled}\n                    soundEnabled={soundEnabled}\n                    ambiantEnabled={ambiantEnabled}\n                    ambiantSoundPlay={ambiantSoundPlay}\n                />\n            );\n        } else if (tab === 1) {\n            return <Play\n                        lang={props.lang}\n                        setTab={setTab}\n                        score={score}\n                        setScore={setScore}\n                        giveUp={giveUp}\n                        modal={modal}\n                        setModal={setModal}\n                        bestScoreDay={bestScoreDay}\n                        success={success}\n                        endGame={endGame}\n                        playSound={playSound}\n                        ambiantSoundPlay={ambiantSoundPlay}\n                        ambiantEnabled={ambiantEnabled}\n                        soundEnabled={soundEnabled}\n                        setSoundEnabled={setSoundEnabled}\n                    />;\n        } else if (tab === 2) {\n            return (<Help lang={props.lang} setTab={setTab} />);\n        } else {\n            return <Text>Invalid tab</Text>;\n        }\n    };\n\n    return (\n        <ScrollView style={styles.view} contentContainerStyle={{alignItems: 'center'}}>\n            { printPage() }\n        </ScrollView>\n    );\n};","import { lang as ActivitiesLang } from '../language/activities';\nimport Dictaphone from '../components/activities/Dictaphone';\nimport Simon from '../components/activities/Simon';\nimport Quiz from '../components/activities/Quiz';\nimport Double from '../components/activities/Double';\n\nexport default function Activities(lang, personId) {\n    return [\n        {\n            name: ActivitiesLang[lang]?.Quiz,\n            icon: 'help-circle-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Quiz lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.DoubleMemory,\n            icon: 'copy-outline',\n            returnComponent: (lang, setPage) => {\n                return <Double lang={lang} setPage={setPage} personId={personId} />;\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Simon,\n            icon: 'grid-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Simon lang={lang} setPage={setPage} personId={personId} />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.Dictaphone,\n            icon: 'mic-outline',\n            returnComponent: (lang, setPage) => {\n                return (\n                    <Dictaphone\n                        lang={lang}\n                        setPage={setPage}\n                        personId={personId}\n                    />\n                );\n            },\n        },\n        {\n            name: ActivitiesLang[lang]?.SuggestedActivities,\n            icon: 'color-palette-outline',\n            returnComponent: (lang, setPage) => {\n                return null;\n            },\n        },\n    ];\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    containerStyle: {\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    buttonStyle: {\n        width: 250,\n        height: 40,\n        justifyContent: 'flex-start',\n        backgroundColor: '#4d8abd'\n    },\n    buttonStyleDelete: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'red',\n    },\n    buttonStyleDebug: {\n        width: 250,\n        height: 40,\n        backgroundColor: 'orange',\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport ActivitiesList from '../../../data/activities';\n\nimport styles from './styles';\n\nimport { Audio } from 'expo-av';\n\nexport default function Activities(props) {\n    const [page, setPage] = useState();\n\n    useEffect( () => {\n        Audio.setIsEnabledAsync(true);\n    }, [])\n\n    return page ? (\n        page\n    ) : (\n        <ScrollView style={{ flex: 1 }}>\n            {ActivitiesList(props.lang || 'fr', props.personId).map((el, i) => {\n                return (\n                    <Button\n                        icon={{\n                            name: el.icon,\n                            type: 'ionicon',\n                            size: 15,\n                            color: 'white',\n                        }}\n                        key={i}\n                        iconPosition={'left'}\n                        iconContainerStyle={{ marginRight: 50 }}\n                        buttonStyle={styles.buttonStyle}\n                        containerStyle={styles.containerStyle}\n                        title={el.name}\n                        onPress={(e) => {\n                            setPage(\n                                el.returnComponent(props.lang || 'fr', setPage)\n                            );\n                        }}\n                    />\n                );\n            })}\n        </ScrollView>\n    );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    scoreRow: {\n        flex: 1,\n        height: 180,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreRowSimon: {\n        flex: 1,\n        height: 250,\n        backgroundColor: 'white',\n        marginVertical: 15,\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    scoreHeading: {\n        fontSize: 18,\n        color: '#2089dc',\n        fontWeight: 'bold',\n        margin: 5\n    },\n    NoScore: {\n        color: 'grey',\n        fontStyle: 'italic',\n        marginTop: 45,\n        marginLeft: 45\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\nimport { Badge } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport { ScoreRatio } from '../../../../components/activities/Quiz/utils/scoreFunc';\nimport * as API from '../../../../data/quizApi';\n\nimport CircularProgress from 'react-native-circular-progress-indicator';\n\nexport default function QuizScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [quizScore, setQuizScore] = useState([]);\n\n    useEffect( () => {\n        API.get(props.personId).then((data) => {\n            const arr = [];\n            for (let i = 0; i < data.length; i++) {\n                const el = data[i];\n                arr.push({score: ScoreRatio(el.content, props.personId), name: el.name});\n            }\n            setQuizScore(arr);\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (quizScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            return quizScore.map( (el,i) => {\n                return (\n                    <View style={{marginHorizontal: 15}} key={i}>\n                        <Badge\n                            value={el.name}\n                            textStyle={{textAlign: 'center'}}\n                            badgeStyle={{position:'absolute', paddingHorizontal: 15, height: 30, marginHorizontal: 10, marginVertical: 100, zIndex: 3}}\n                        />\n                        <CircularProgress\n                            value={el.score}\n                            textStyle={{marginBottom: -10}}\n                            title={ActivitiesLang[props.lang].Success}\n                            valueSuffix={'%'}\n                            titleStyle={{marginBottom: 10}}\n                            initialValue={0}\n                            \n                            delay={500}\n                            activeStrokeColor={'#2089dc'}\n                            radius={65}\n                            inActiveStrokeColor={'#9b59b6'}\n                            inActiveStrokeOpacity={0.5}\n                            inActiveStrokeWidth={6}\n                            activeStrokeWidth={12}\n                        />\n                    </View>\n                );\n            });\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRow} horizontal={true}>\n            <View>\n                <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].QuizScore}</Text>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} /> :\n                    <ScrollView horizontal={true}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/simonApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function SimonScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [simonScore, setSimonScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setSimonScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (simonScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = simonScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].SimonScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, ScrollView, Text, View } from 'react-native';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport { lang as ActivitiesLang } from '../../../../language/activities';\nimport styles from '../styles';\n\nimport * as API from '../../../../data/doubleApi';\nimport {\n    BarChart\n} from \"react-native-chart-kit\";\n\nexport default function DoubleScore(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [doubleScore, setDoubleScore] = useState([]);\n    const [btnIndex, setBtnIndex] = useState(0);\n\n    const buttons = [ActivitiesLang[props.lang].Global, ActivitiesLang[props.lang].BestScoreByDay]\n\n    useEffect( () => {\n        API.getScore(props.personId).then((result) => {\n            const TotalScore = result.filter( (el) => el.score > 0 );\n            setDoubleScore(TotalScore)\n            setIsLoading(false);\n        });\n    }, []);\n\n    const printScore = () => {\n        if (doubleScore.length === 0)\n            return (<Text style={styles.NoScore}>{ActivitiesLang[props.lang].NoScore}</Text>);\n        else {\n            const global = [];\n            const days = [];\n            const score = [];\n\n            const tmp = doubleScore.map(item => ({...item}));\n            if (btnIndex === 1) {\n                for (let i = 0; i < tmp.length; i++) {\n                    const el = tmp[i];\n                    if (days.includes(el.date) == false) {\n                        const d = tmp.map(item => ({...item}));\n                        const filtered = d.filter( (e) => e.date === el.date);\n                        let highestToLowest = filtered.sort((a, b) => b.score - a.score);\n                        days.push(el.date);\n                        score.push(highestToLowest[0].score)\n                    }\n                }\n            }\n            for (let i = 0; i < tmp.length; i++) {\n                let idx = global.length;\n                const el = tmp[i];\n                if (btnIndex === 0 && idx > 0 && global[idx - 1].date === el.date) {\n                    global[idx - 1].score += el.score;\n                } else if (btnIndex === 1 && idx > 0 && global[idx - 1].score < el.score && global[idx - 1].date === el.date) {\n                    global[idx - 1].score = el.score;\n                    tmp.splice(i, 0);\n                } else global.push(el);\n            }\n\n            if (btnIndex === 0) {\n                // ** Save for the global score\n                global.map( (el) => {\n                    score.push(el.score)\n                });\n                \n                global.map( (el) => {\n                    days.push(el.date);\n                });\n            }\n\n            const data = {\n                labels: days,\n                datasets: [\n                    {\n                        data: score\n                    }\n                ],\n            }\n            return (\n                <View style={{marginHorizontal: 15}} >\n                    <BarChart\n                        data={data}\n                        width={days.length * 130}\n                        height={200}\n                        fromZero={true}\n                        showValuesOnTopOfBars={true}\n                        chartConfig={{\n                            backgroundColor: \"#ffffff\",\n                            backgroundGradientFrom: \"#ffffff\",\n                            backgroundGradientTo: \"#ffffff\",\n                            decimalPlaces: 0,\n                            color: () => '#2089dc',\n                            labelColor: () => '#2089dc'\n                        }}\n                        style={{\n                            marginLeft: -30\n                        }}\n                    />\n                </View>\n            );\n        }\n    };\n\n    return (\n        <ScrollView style={styles.scoreRowSimon} horizontal={true}>\n            <View>\n                <View style={{flexDirection: 'row'}}>\n                    <Text style={styles.scoreHeading}>{ActivitiesLang[props.lang].DoubleScore}</Text>\n                    <ButtonGroup\n                        onPress={(idx) => setBtnIndex(idx) }\n                        selectedIndex={btnIndex}\n                        buttons={buttons}\n                        buttonStyle={{paddingHorizontal: 10}}\n                    />\n                </View>\n                { isLoading ? <ActivityIndicator size={'large'} color={'#2089dc'} style={{marginLeft: 150, marginTop: 80}} /> :\n                    <ScrollView horizontal={true} style={{marginTop: 0}}>\n                        { printScore() }\n                    </ScrollView>\n                }\n            </View>\n        </ScrollView>\n    );\n};","import React from 'react';\nimport { ScrollView } from 'react-native';\n\nimport { lang as ActivitiesLang } from '../../../language/activities';\n\nimport QuizScore from './QuizScore';\nimport SimonScore from './SimonScore';\nimport DoubleScore from './DoubleScore';\n\nexport default function Score(props) {\n    return (\n        <ScrollView style={{ flex: 1 }}>\n            <QuizScore lang={props.lang} personId={props.personId} />\n            <DoubleScore lang={props.lang} personId={props.personId} />\n            <SimonScore lang={props.lang} personId={props.personId} />\n        </ScrollView>\n    );\n}\n","import React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lang as ActivitiesLang } from '../../language/activities';\n\nimport { useNavigate } from 'react-router-native';\n\nimport { Icon } from 'react-native-elements';\n\nimport Settings from './Settings';\nimport Activities from './Activities';\nimport Score from './Score';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Tabs(props) {\n    \n    const navigate = useNavigate();\n\n    return (\n        <Tab.Navigator\n            screenOptions={{\n                tabBarStyle: [{ height: 60, color: '#3B8EFF', backgroundColor: '#355c7d' }],\n                tabBarLabelStyle: [{ color: 'white', marginBottom: 10 }],\n            }}\n        >\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`game-controller${\n                                    focused ? '' : '-outline'\n                                }`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Activities}\n                children={() => (\n                    <Activities lang={props.lang} personId={props.personId} />\n                )}\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`star${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Score}\n                children={() => <Score lang={props.lang} personId={props.personId} /> }\n            />\n            <Tab.Screen\n                options={{\n                    headerShown: false,\n                    unmountOnBlur: true,\n                    tabBarIcon: ({ focused }) => {\n                        return (\n                            <Icon\n                                type={'ionicon'}\n                                color={'white'}\n                                name={`settings${focused ? '' : '-outline'}`}\n                            />\n                        );\n                    },\n                }}\n                name={ActivitiesLang[props.lang]?.Settings}\n                children={(e) => (\n                    <Settings\n                        lang={props.lang}\n                        username={props?.username}\n                        person={props.person}\n                        personId={props.personId}\n                        setFullname={props.setFullname}\n                    />\n                )}\n            />\n        </Tab.Navigator>\n    );\n}\n","import { StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nexport default StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        alignContent: 'center',\n        paddingBottom: 10,\n        width: wp('100%'),\n        backgroundColor: '#355c7d'\n    },\n    topLottie: {\n        marginTop: 10,\n        width: 60,\n        height: undefined,\n        marginBottom: 15,\n        backgroundColor: '#355c7d'\n    },\n    bgLottie: {\n        width: wp('100%'),\n        opacity: 0.4,\n    },\n    bgImage: {\n        position: 'absolute',\n        width: wp('100%'),\n        height: hp('100%'),\n        opacity: 0.4,\n    },\n    topImage: {\n        marginTop: -40,\n        width: 200,\n        height: 200,\n        marginBottom: -70,\n        backgroundColor: '#355c7d'\n    },\n    heading: {\n        fontSize: 20,\n        color: 'white',\n        marginTop: 0,\n        zIndex: 2,\n    },\n    divider: {\n        marginRight: 20,\n        width: 100 + '%',\n    },\n    tabViewItem: {\n        flex: 1,\n        width: 100 + '%',\n    },\n    tabText: {\n        fontSize: 10,\n    },\n    tabView: {\n        alignItems: 'center',\n        alignContent: 'center',\n        width: 100 + '%'\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, BackHandler, ActivityIndicator } from 'react-native';\nimport { Text, Divider } from 'react-native-elements';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-native';\n\nimport TopImage from '../../assets/img/activities/brain.gif';\nimport BackgroundImage from '../../assets/img/activities/bg.gif';\nimport { lang as ActivitiesLang } from '../../language/activities';\nimport Lottie from '../../components/utils/Lottie';\nimport * as Person from '../../data/personApi';\nimport Tabs from './Tabs';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n\nimport styles from './styles';\n\nexport default function Activities() {\n    const [personId, setPersonId] = useState(useParams('id') || '0');\n    const [person, setPerson] = useState();\n    const [fullname, setFullname] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const navigate = useNavigate();\n    const state = useLocation()?.state;\n    const lang = state?.lang || 'fr';\n\n    const LottieSource = require('../../assets/img/activities/brain.json');\n    const BgSource = require('../../assets/lottie/bg_activities.json');\n\n    useEffect(() => {\n        Person.getById(personId.id)\n            .then((result) => {\n                if (!result || result?.length === 0) {\n                    navigate('/selection');\n                }\n                setPerson(result[0]);\n                setFullname(result[0]?.fullname);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                navigate('/selection', {\n                    state: { username: state?.username, lang: lang },\n                });\n            });\n        const backAction = () => {\n            navigate('/selection', {\n                state: { username: state?.username, lang: lang },\n            });\n            return true;\n        };\n        const backHandler = BackHandler.addEventListener(\n            'hardwareBackPress',\n            backAction\n        );\n        return () => backHandler.remove();\n    }, []);\n\n    const navTheme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            background: 'transparent',\n        },\n    };\n\n    if (isLoading) {\n        return (\n            <ActivityIndicator\n                color={'blue'}\n                size={'large'}\n                style={{ marginTop: 250 }}\n            />\n        );\n    }\n    return (\n        <>\n            <View style={styles.container}>\n                <Lottie\n                    LottieSource={LottieSource}\n                    ImageSource={TopImage}\n                    LottieStyle={styles.topLottie}\n                    ImageStyle={styles.topImage}\n                    loop={true}\n                    autoPlay={true}\n                />\n                <Text style={styles.heading}>\n                    {ActivitiesLang[lang]?.Hello(fullname) || null}\n                </Text>\n            </View>\n            <Divider color={'grey'} width={1} style={styles.divider} />\n\n            <View style={{ flex: 1 }}>\n                <View style={{ flex: 1, position: 'absolute' }}>\n                    <Lottie\n                        LottieSource={BgSource}\n                        ImageSource={BackgroundImage}\n                        LottieStyle={styles.bgLottie}\n                        ImageStyle={styles.bgImage}\n                        loop={true}\n                        autoPlay={true}\n                    />\n                </View>\n                <NavigationContainer theme={navTheme} style={{ padding: 400 }}>\n                    <Tabs\n                        lang={lang}\n                        username={person?.fullname}\n                        personId={personId.id}\n                        person={person}\n                        setFullname={setFullname}\n                    />\n                </NavigationContainer>\n            </View>\n        </>\n    );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { View } from 'react-native';\n\nimport * as Localization from 'expo-localization';\nimport { getConfig, reset } from './data/configApi';\nimport { lang as LangInterface } from './language/interface';\n\nimport ChooseUsername from './pages/ChooseUsername';\nimport Loading from './components/utils/Loading';\n\nimport HomeOrTutorial from './components/utils/HomeOrTutorial';\nimport SelectionMenu from './pages/SelectionMenu';\nimport Activities from './pages/Activities';\nimport Home from './pages/Home';\nimport Tutorial from './pages/Tutorial';\n\nexport default function App() {\n    const [config, setConfig] = useState();\n    const [lang, setLang] = useState('fr');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        // reset();\n        loadDataCallback();\n    }, [loadDataCallback]);\n\n    useEffect( () => {\n        let local = Localization.locale?.split('-')[0] || 'fr';\n        setLang(['en', 'fr'].includes(local) ? local : 'fr');\n        console.log('- Imported config file -');\n    }, [config]);\n\n    const loadDataCallback = useCallback(async () => {\n        try {\n            fetchData();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    const fetchData = async () => {\n        getConfig().then((resp) => {\n            setConfig(resp);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar hidden={true} />\n            {isLoading ? (\n                <Loading\n                    style={{ flex: 1, alignItems: 'center' }}\n                    text={LangInterface[lang]?.GlobalLoading}\n                />\n            ) : (\n                <NativeRouter>\n                    <Routes>\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                <HomeOrTutorial\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                    setLang={setLang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/tutorial\"\n                            element={\n                                <Tutorial\n                                    lang={lang}\n                                />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n                            element={<Home lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/username\"\n                            element={<ChooseUsername lang={lang} username={config?.username} setLang={setLang} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/selection\"\n                            element={\n                                <SelectionMenu\n                                    hasSeenTutorial={config?.hasSeenTutorial}\n                                    lang={lang}\n                                    username={config?.username}\n                                />\n                            }\n                        />\n                        <Route\n                            path=\"/activities/:id\"\n                            element={<Activities />}\n                        />\n                    </Routes>\n                </NativeRouter>\n            )}\n        </View>\n    );\n}\n"],"sourceRoot":""}